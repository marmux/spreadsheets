<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/researchgroup/darts/uppaal/flat-1_2.dtd'>
<nta>
<declaration>//Variables
const int numberOfChains = 159;
const int numberOfTasks = 300;
const int numberOfMachines = 2;
const int maxDependencies = 6;
const int longestChain = 5;
const int globalChainSize[numberOfChains] = {4,2,5,3,3,4,5,1,3,3,2,5,4,3,2,3,3,2,2,5,3,2,2,2,3,1,2,3,1,3,3,2,1,1,2,2,2,1,2,4,4,2,5,3,3,2,2,4,2,2,3,3,2,1,3,2,1,1,2,1,2,2,1,2,2,2,2,2,1,4,1,1,4,1,1,3,1,4,1,2,3,2,1,2,1,2,3,3,3,1,2,1,1,2,2,1,1,1,2,1,2,1,3,1,1,1,1,2,2,1,1,1,1,2,2,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,2,1,1,1,1,2,1,2,1,1,1,2,1,1,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1};
const int globalChains[numberOfChains][longestChain] = {
{0,51,150,299,-1},
{1,148,-1,-1,-1},
{2,93,115,131,276},
{3,71,186,-1,-1},
{4,21,104,-1,-1},
{5,42,116,140,-1},
{6,57,69,192,214},
{7,-1,-1,-1,-1},
{8,130,252,-1,-1},
{9,155,224,-1,-1},
{10,68,-1,-1,-1},
{11,64,122,279,292},
{12,70,142,274,-1},
{13,53,137,-1,-1},
{14,250,-1,-1,-1},
{15,95,280,-1,-1},
{16,253,275,-1,-1},
{17,72,-1,-1,-1},
{18,206,-1,-1,-1},
{19,84,259,294,298},
{20,164,295,-1,-1},
{22,240,-1,-1,-1},
{23,80,-1,-1,-1},
{24,247,-1,-1,-1},
{25,31,198,-1,-1},
{26,-1,-1,-1,-1},
{27,172,-1,-1,-1},
{28,169,273,-1,-1},
{29,-1,-1,-1,-1},
{30,111,271,-1,-1},
{32,141,272,-1,-1},
{33,112,-1,-1,-1},
{34,-1,-1,-1,-1},
{35,-1,-1,-1,-1},
{36,269,-1,-1,-1},
{37,175,-1,-1,-1},
{38,207,-1,-1,-1},
{39,-1,-1,-1,-1},
{40,290,-1,-1,-1},
{41,49,152,289,-1},
{43,117,151,183,-1},
{44,225,-1,-1,-1},
{45,66,86,232,266},
{46,153,248,-1,-1},
{47,107,181,-1,-1},
{48,264,-1,-1,-1},
{50,204,-1,-1,-1},
{52,179,185,226,-1},
{54,201,-1,-1,-1},
{55,127,-1,-1,-1},
{56,203,243,-1,-1},
{58,197,218,-1,-1},
{59,283,-1,-1,-1},
{60,-1,-1,-1,-1},
{61,221,277,-1,-1},
{62,178,-1,-1,-1},
{63,-1,-1,-1,-1},
{65,-1,-1,-1,-1},
{67,229,-1,-1,-1},
{73,-1,-1,-1,-1},
{74,120,-1,-1,-1},
{75,188,-1,-1,-1},
{76,-1,-1,-1,-1},
{77,238,-1,-1,-1},
{78,257,-1,-1,-1},
{79,236,-1,-1,-1},
{81,182,-1,-1,-1},
{82,195,-1,-1,-1},
{83,-1,-1,-1,-1},
{85,100,157,251,-1},
{87,-1,-1,-1,-1},
{88,-1,-1,-1,-1},
{89,134,166,263,-1},
{90,-1,-1,-1,-1},
{91,-1,-1,-1,-1},
{92,132,213,-1,-1},
{94,-1,-1,-1,-1},
{96,99,139,234,-1},
{97,-1,-1,-1,-1},
{98,297,-1,-1,-1},
{101,102,216,-1,-1},
{103,144,-1,-1,-1},
{105,-1,-1,-1,-1},
{106,244,-1,-1,-1},
{108,-1,-1,-1,-1},
{109,196,-1,-1,-1},
{110,180,254,-1,-1},
{113,208,281,-1,-1},
{114,174,287,-1,-1},
{118,-1,-1,-1,-1},
{119,245,-1,-1,-1},
{121,-1,-1,-1,-1},
{123,-1,-1,-1,-1},
{124,228,-1,-1,-1},
{125,219,-1,-1,-1},
{126,-1,-1,-1,-1},
{128,-1,-1,-1,-1},
{129,-1,-1,-1,-1},
{133,202,-1,-1,-1},
{135,-1,-1,-1,-1},
{136,187,-1,-1,-1},
{138,-1,-1,-1,-1},
{143,158,235,-1,-1},
{145,-1,-1,-1,-1},
{146,-1,-1,-1,-1},
{147,-1,-1,-1,-1},
{149,-1,-1,-1,-1},
{154,278,-1,-1,-1},
{156,163,-1,-1,-1},
{159,-1,-1,-1,-1},
{160,-1,-1,-1,-1},
{161,-1,-1,-1,-1},
{162,-1,-1,-1,-1},
{165,268,-1,-1,-1},
{167,222,-1,-1,-1},
{168,-1,-1,-1,-1},
{170,-1,-1,-1,-1},
{171,-1,-1,-1,-1},
{173,-1,-1,-1,-1},
{176,-1,-1,-1,-1},
{177,-1,-1,-1,-1},
{184,270,-1,-1,-1},
{189,-1,-1,-1,-1},
{190,-1,-1,-1,-1},
{191,-1,-1,-1,-1},
{193,-1,-1,-1,-1},
{194,-1,-1,-1,-1},
{199,-1,-1,-1,-1},
{200,-1,-1,-1,-1},
{205,-1,-1,-1,-1},
{209,242,-1,-1,-1},
{210,-1,-1,-1,-1},
{211,-1,-1,-1,-1},
{212,-1,-1,-1,-1},
{215,-1,-1,-1,-1},
{217,260,-1,-1,-1},
{220,-1,-1,-1,-1},
{223,296,-1,-1,-1},
{227,-1,-1,-1,-1},
{230,-1,-1,-1,-1},
{231,-1,-1,-1,-1},
{233,282,-1,-1,-1},
{237,-1,-1,-1,-1},
{239,-1,-1,-1,-1},
{241,288,-1,-1,-1},
{246,-1,-1,-1,-1},
{249,-1,-1,-1,-1},
{255,-1,-1,-1,-1},
{256,-1,-1,-1,-1},
{258,-1,-1,-1,-1},
{261,-1,-1,-1,-1},
{262,-1,-1,-1,-1},
{265,-1,-1,-1,-1},
{267,-1,-1,-1,-1},
{284,-1,-1,-1,-1},
{285,-1,-1,-1,-1},
{286,-1,-1,-1,-1},
{291,-1,-1,-1,-1},
{293,-1,-1,-1,-1}};
int chainDuration[numberOfChains] = {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1};
int durations[numberOfTasks] = {16,2,5,3,5,10,3,10,8,10,1,3,2,6,2,2,16,9,8,3,7,6,12,1,2,5,1,1,7,4,5,2,1,3,6,11,2,3,6,5,1,4,4,8,2,5,6,4,17,13,13,6,2,9,3,3,3,6,2,11,1,2,4,7,2,1,5,2,2,4,12,1,1,10,11,1,2,2,1,6,6,3,4,8,6,6,15,2,5,2,6,7,3,2,4,1,1,5,3,16,4,10,14,5,6,5,3,11,1,4,3,19,37,6,4,15,2,3,1,1,7,3,11,14,1,1,2,3,4,20,10,5,5,4,1,1,1,1,4,12,8,8,7,6,4,2,13,2,4,1,5,1,12,16,2,8,4,5,5,14,4,9,9,3,10,3,4,5,1,2,6,2,2,8,3,1,8,5,14,10,3,1,5,2,4,5,14,4,4,20,17,4,2,1,1,6,9,1,14,8,9,12,3,2,8,2,6,6,9,10,2,2,10,11,6,4,5,1,9,3,4,6,3,7,12,12,1,4,7,1,3,5,2,1,1,3,2,8,15,7,1,4,5,1,2,2,1,3,1,5,6,3,5,3,21,2,6,25,6,8,4,2,7,16,2,4,3,2,1,6,2,8,8,12,28,6,11,1,1,4,1,13,1,3,12,6,2,7,1,2,7,1,2,3,10,1,5,1,4,4};
const int dependencies[numberOfTasks][maxDependencies] = {
{-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1},
{4,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1},
{25,26,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1},
{5,26,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1},
{41,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1},
{0,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1},
{13,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1},
{19,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1},
{6,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1},
{11,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1},
{45,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1},
{10,30,-1,-1,-1,-1},
{52,57,-1,-1,-1,-1},
{12,32,-1,-1,-1,-1},
{3,-1,-1,-1,-1,-1},
{17,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1},
{23,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1},
{11,19,26,-1,-1,-1},
{-1,-1,-1,-1,-1,-1},
{66,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1},
{3,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1},
{37,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1},
{2,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1},
{15,62,-1,-1,-1,-1},
{9,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1},
{96,-1,-1,-1,-1,-1},
{85,-1,-1,-1,-1,-1},
{31,-1,-1,-1,-1,-1},
{101,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1},
{21,29,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1},
{10,47,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1},
{62,-1,-1,-1,-1,-1},
{30,-1,-1,-1,-1,-1},
{33,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1},
{93,-1,-1,-1,-1,-1},
{42,-1,-1,-1,-1,-1},
{43,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1},
{74,-1,-1,-1,-1,-1},
{74,-1,-1,-1,-1,-1},
{23,64,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1},
{55,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1},
{8,-1,-1,-1,-1,-1},
{115,-1,-1,-1,-1,-1},
{85,92,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1},
{89,-1,-1,-1,-1,-1},
{55,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1},
{53,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1},
{36,99,-1,-1,-1,-1},
{42,116,-1,-1,-1,-1},
{32,54,100,-1,-1,-1},
{65,70,99,-1,-1,-1},
{25,-1,-1,-1,-1,-1},
{103,126,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1},
{1,115,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1},
{10,13,51,132,-1,-1},
{117,-1,-1,-1,-1,-1},
{49,56,-1,-1,-1,-1},
{25,46,108,146,-1,-1},
{-1,-1,-1,-1,-1,-1},
{9,57,139,-1,-1,-1},
{-1,-1,-1,-1,-1,-1},
{100,-1,-1,-1,-1,-1},
{143,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1},
{0,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1},
{158,-1,-1,-1,-1,-1},
{156,-1,-1,-1,-1,-1},
{13,20,162,-1,-1,-1},
{-1,-1,-1,-1,-1,-1},
{134,141,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1},
{23,28,134,-1,-1,-1},
{-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1},
{27,134,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1},
{114,-1,-1,-1,-1,-1},
{5,37,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1},
{8,62,-1,-1,-1,-1},
{52,178,-1,-1,-1,-1},
{74,110,-1,-1,-1,-1},
{76,107,-1,-1,-1,-1},
{19,81,93,-1,-1,-1},
{47,75,151,-1,-1,-1},
{-1,-1,-1,-1,-1,-1},
{179,-1,-1,-1,-1,-1},
{66,71,-1,-1,-1,-1},
{136,138,-1,-1,-1,-1},
{75,106,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1},
{141,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1},
{69,76,114,-1,-1,-1},
{-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1},
{37,47,82,89,-1,-1},
{109,146,-1,-1,-1,-1},
{58,69,-1,-1,-1,-1},
{19,31,-1,-1,-1,-1},
{36,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1},
{9,54,-1,-1,-1,-1},
{133,-1,-1,-1,-1,-1},
{56,145,199,-1,-1,-1},
{19,50,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1},
{18,42,-1,-1,-1,-1},
{38,-1,-1,-1,-1,-1},
{113,174,205,-1,-1,-1},
{3,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1},
{42,-1,-1,-1,-1,-1},
{132,-1,-1,-1,-1,-1},
{64,192,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1},
{102,144,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1},
{47,197,-1,-1,-1,-1},
{6,125,211,-1,-1,-1},
{-1,-1,-1,-1,-1,-1},
{50,61,87,-1,-1,-1},
{167,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1},
{101,155,-1,-1,-1,-1},
{44,212,-1,-1,-1,-1},
{185,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1},
{124,-1,-1,-1,-1,-1},
{62,67,151,-1,-1,-1},
{101,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1},
{61,86,151,-1,-1,-1},
{114,-1,-1,-1,-1,-1},
{5,139,144,-1,-1,-1},
{62,158,-1,-1,-1,-1},
{41,79,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1},
{77,-1,-1,-1,-1,-1},
{89,-1,-1,-1,-1,-1},
{22,175,193,202,-1,-1},
{-1,-1,-1,-1,-1,-1},
{69,209,-1,-1,-1,-1},
{146,203,-1,-1,-1,-1},
{106,-1,-1,-1,-1,-1},
{119,146,162,-1,-1,-1},
{32,-1,-1,-1,-1,-1},
{24,133,191,-1,-1,-1},
{110,153,217,-1,-1,-1},
{-1,-1,-1,-1,-1,-1},
{14,-1,-1,-1,-1,-1},
{15,157,174,-1,-1,-1},
{73,78,130,-1,-1,-1},
{16,112,-1,-1,-1,-1},
{180,-1,-1,-1,-1,-1},
{2,-1,-1,-1,-1,-1},
{5,-1,-1,-1,-1,-1},
{78,241,-1,-1,-1,-1},
{133,-1,-1,-1,-1,-1},
{84,196,-1,-1,-1,-1},
{217,-1,-1,-1,-1,-1},
{12,28,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1},
{43,166,-1,-1,-1,-1},
{48,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1},
{51,232,-1,-1,-1,-1},
{151,-1,-1,-1,-1,-1},
{99,139,165,194,-1,-1},
{23,36,89,-1,-1,-1},
{37,64,184,-1,-1,-1},
{111,-1,-1,-1,-1,-1},
{0,141,187,212,-1,-1},
{62,95,169,-1,-1,-1},
{142,-1,-1,-1,-1,-1},
{45,86,184,253,-1,-1},
{72,131,142,143,166,176},
{221,-1,-1,-1,-1,-1},
{101,154,-1,-1,-1,-1},
{122,270,-1,-1,-1,-1},
{95,96,116,-1,-1,-1},
{15,177,208,-1,-1,-1},
{233,-1,-1,-1,-1,-1},
{59,-1,-1,-1,-1,-1},
{86,-1,-1,-1,-1,-1},
{96,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1},
{110,174,-1,-1,-1,-1},
{18,241,-1,-1,-1,-1},
{51,129,152,-1,-1,-1},
{40,205,-1,-1,-1,-1},
{24,-1,-1,-1,-1,-1},
{239,279,282,286,-1,-1},
{233,-1,-1,-1,-1,-1},
{259,-1,-1,-1,-1,-1},
{57,164,210,260,-1,-1},
{223,-1,-1,-1,-1,-1},
{98,-1,-1,-1,-1,-1},
{24,294,-1,-1,-1,-1},
{150,271,276,-1,-1,-1}};


int availableMachines = numberOfMachines;

// Typedefs
typedef int[0, numberOfChains - 1] chainId_t;

// Ints and Arrays
int numberOfChainsDone = 0;
int tasksDone[numberOfTasks];
bool runnableChains[numberOfChains];
bool assignmentChoice[numberOfChains];

// Channels
broadcast chan startMachines;
broadcast chan chainMachineChan[numberOfChains];
broadcast chan activateChains;</declaration>
	<template>
		<name x="5" y="5">Composer</name>
		<declaration>// Place local declarations here.
clock time;</declaration>
		<location id="id0" x="-102" y="-255">
			<name x="-112" y="-289">Init</name>
			<label kind="invariant" x="-246" y="-238">numberOfChainsDone &lt;= numberOfChains</label> 
 <label kind="exponentialrate" x="-112" y="-221">0</label>
		</location>
		<location id="id1" x="331" y="-255">
			<name x="321" y="-289">Done</name>
		</location>
		<init ref="id0"/>
		<transition>
			<source ref="id0"/>
			<target ref="id1"/>
			<label kind="guard" x="-17" y="-289">numberOfChainsDone &gt;= numberOfChains</label>
		</transition>
	</template>
	<template>
		<name>Chain</name>
		<parameter>const chainId_t cid</parameter>
		<declaration>clock x;
const int chainSize = globalChainSize[cid];
int index = 0;

bool AllDependenciesDone()
{
    bool dependenciesDone = 1;
    int i;
    for (i = 0; i &lt; maxDependencies; i++)
    {
        int value = dependencies[globalChains[cid][index]][i];
        if (value == -1)
            return dependenciesDone;

        dependenciesDone &amp;= tasksDone[value];
    }
    return dependenciesDone;
}</declaration>
		<location id="id2" x="-68" y="-238">
			<name x="-78" y="-272">Idle</name>
			<label kind="exponentialrate" x="-51" y="-255">3</label>
		</location>
		<location id="id3" x="-76" y="51">
			<name x="-102" y="68">Running</name>
			<label kind="invariant" x="-178" y="85">x &lt;= durations[globalChains[cid][index]]</label>
		</location>
		<location id="id4" x="-450" y="-238">
			<name x="-460" y="-272">Done</name>
		</location>
		<init ref="id2"/>
		<transition controllable="false">
			<source ref="id2"/>
			<target ref="id4"/>
			<label kind="guard" x="-399" y="-280">index &gt;= chainSize &amp;&amp;
x &gt;= durations[globalChains[cid][index - 1]]</label>
			<label kind="assignment" x="-399" y="-238">numberOfChainsDone++</label>
		</transition>
		<transition controllable="false">
			<source ref="id3"/>
			<target ref="id2"/>
			<label kind="guard" x="-450" y="-127">x &gt;= durations[globalChains[cid][index]]</label>
			<label kind="assignment" x="-450" y="-110">availableMachines++,
tasksDone[globalChains[cid][index]] = 1,
index++</label>
			<nail x="-161" y="-85"/>
		</transition>
		<transition>
			<source ref="id2"/>
			<target ref="id3"/>
			<label kind="guard" x="34" y="-127">index &lt; chainSize &amp;&amp;
availableMachines &gt; 0 &amp;&amp; AllDependenciesDone()</label>
			<label kind="assignment" x="34" y="-85">availableMachines--,
x = 0</label>
			<nail x="17" y="-85"/>
		</transition>
	</template>
	<system>// Place template instantiations here.

// List one or more processes to be composed into a system.
system Composer, Chain;
    </system>
	<queries>
		<query>
			<formula>strategy TimeSchedule = minE (Composer.time) [&lt;=57] : &lt;&gt;Composer.Done</formula>
			<comment></comment>
		</query>
		<query>
			<formula>inf{Composer.Done} : Composer.time</formula>
			<comment></comment>
		</query>
		<query>
			<formula>A&lt;&gt; Composer.Done</formula>
			<comment></comment>
		</query>
		<query>
			<formula>E&lt;&gt; Composer.Done</formula>
			<comment></comment>
		</query>
	</queries>
</nta>
