<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/researchgroup/darts/uppaal/flat-1_2.dtd'>
<nta>
<declaration>//Variables
const int numberOfChains = 20;
const int numberOfTasks = 50;
const int numberOfMachines = 16;
const int maxDependencies = 8;
const int longestChain = 5;
const int globalChainSize[numberOfChains] = {5,4,4,5,2,4,3,2,3,1,2,3,2,1,2,1,2,2,1,1};
const int globalChains[numberOfChains][longestChain] = {
{0,13,29,35,46},
{1,31,40,44,-1},
{2,27,38,48,-1},
{3,10,26,36,47},
{4,23,-1,-1,-1},
{5,16,21,41,-1},
{6,25,43,-1,-1},
{7,45,-1,-1,-1},
{8,32,37,-1,-1},
{9,-1,-1,-1,-1},
{11,39,-1,-1,-1},
{12,24,42,-1,-1},
{14,30,-1,-1,-1},
{15,-1,-1,-1,-1},
{17,49,-1,-1,-1},
{18,-1,-1,-1,-1},
{19,34,-1,-1,-1},
{20,33,-1,-1,-1},
{22,-1,-1,-1,-1},
{28,-1,-1,-1,-1}};
int chainDuration[numberOfChains] = {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1};
int durations[numberOfTasks] = {11,4,11,12,8,10,9,14,12,7,7,8,10,11,10,12,14,8,3,11,10,9,13,15,8,8,10,14,12,11,3,13,8,11,8,9,8,12,17,12,7,14,10,12,7,9,8,13,13,7};
const int dependencies[numberOfTasks][maxDependencies] = {
{-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1},
{5,-1,-1,-1,-1,-1,-1,-1},
{3,4,-1,-1,-1,-1,-1,-1},
{2,7,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1},
{0,4,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1},
{7,-1,-1,-1,-1,-1,-1,-1},
{0,5,8,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1},
{3,7,-1,-1,-1,-1,-1,-1},
{5,-1,-1,-1,-1,-1,-1,-1},
{2,-1,-1,-1,-1,-1,-1,-1},
{4,11,14,15,16,-1,-1,-1},
{5,10,17,-1,-1,-1,-1,-1},
{4,7,10,15,20,-1,-1,-1},
{12,15,16,20,-1,-1,-1,-1},
{4,6,10,11,15,18,-1,-1},
{1,4,5,9,10,11,16,-1},
{1,2,7,8,10,16,17,-1},
{6,-1,-1,-1,-1,-1,-1,-1},
{13,17,-1,-1,-1,-1,-1,-1},
{0,4,14,15,-1,-1,-1,-1},
{1,3,13,14,19,-1,-1,-1},
{5,6,8,9,12,-1,-1,-1},
{20,-1,-1,-1,-1,-1,-1,-1},
{13,19,-1,-1,-1,-1,-1,-1},
{2,4,13,15,22,27,29,-1},
{0,16,21,26,-1,-1,-1,-1},
{15,16,32,-1,-1,-1,-1,-1},
{6,9,12,24,27,-1,-1,-1},
{8,11,18,24,26,27,-1,-1},
{4,10,17,18,19,28,31,34},
{11,20,21,22,27,32,33,-1},
{18,24,34,-1,-1,-1,-1,-1},
{9,20,22,25,28,-1,-1,-1},
{3,7,13,16,24,32,40,-1},
{7,13,16,20,24,33,-1,-1},
{4,5,6,10,35,37,38,42},
{5,7,8,19,30,36,39,41},
{1,9,14,22,32,38,39,-1},
{8,13,17,19,40,-1,-1,-1}};


int availableMachines = numberOfMachines;

// Typedefs
typedef int[0, numberOfChains - 1] chainId_t;

// Ints and Arrays
int numberOfChainsDone = 0;
int tasksDone[numberOfTasks];
bool runnableChains[numberOfChains];
bool assignmentChoice[numberOfChains];

// Channels
broadcast chan startMachines;
broadcast chan chainMachineChan[numberOfChains];
broadcast chan activateChains;</declaration>
	<template>
		<name x="5" y="5">Composer</name>
		<declaration>// Place local declarations here.
clock time;</declaration>
		<location id="id0" x="-102" y="-255">
			<name x="-112" y="-289">Init</name>
			<label kind="invariant" x="-246" y="-238">numberOfChainsDone &lt;= numberOfChains</label> 
 <label kind="exponentialrate" x="-112" y="-221">0</label>
		</location>
		<location id="id1" x="331" y="-255">
			<name x="321" y="-289">Done</name>
		</location>
		<init ref="id0"/>
		<transition>
			<source ref="id0"/>
			<target ref="id1"/>
			<label kind="guard" x="-17" y="-289">numberOfChainsDone &gt;= numberOfChains</label>
		</transition>
	</template>
	<template>
		<name>Chain</name>
		<parameter>const chainId_t cid</parameter>
		<declaration>clock x;
const int chainSize = globalChainSize[cid];
int index = 0;

bool AllDependenciesDone()
{
    bool dependenciesDone = 1;
    int i;
    for (i = 0; i &lt; maxDependencies; i++)
    {
        int value = dependencies[globalChains[cid][index]][i];
        if (value == -1)
            return dependenciesDone;

        dependenciesDone &amp;= tasksDone[value];
    }
    return dependenciesDone;
}</declaration>
		<location id="id2" x="-68" y="-238">
			<name x="-78" y="-272">Idle</name>
			<label kind="exponentialrate" x="-51" y="-255">3</label>
		</location>
		<location id="id3" x="-76" y="51">
			<name x="-102" y="68">Running</name>
			<label kind="invariant" x="-178" y="85">x &lt;= durations[globalChains[cid][index]]</label>
		</location>
		<location id="id4" x="-450" y="-238">
			<name x="-460" y="-272">Done</name>
		</location>
		<init ref="id2"/>
		<transition controllable="false">
			<source ref="id2"/>
			<target ref="id4"/>
			<label kind="guard" x="-399" y="-280">index &gt;= chainSize &amp;&amp;
x &gt;= durations[globalChains[cid][index - 1]]</label>
			<label kind="assignment" x="-399" y="-238">numberOfChainsDone++</label>
		</transition>
		<transition controllable="false">
			<source ref="id3"/>
			<target ref="id2"/>
			<label kind="guard" x="-450" y="-127">x &gt;= durations[globalChains[cid][index]]</label>
			<label kind="assignment" x="-450" y="-110">availableMachines++,
tasksDone[globalChains[cid][index]] = 1,
index++</label>
			<nail x="-161" y="-85"/>
		</transition>
		<transition>
			<source ref="id2"/>
			<target ref="id3"/>
			<label kind="guard" x="34" y="-127">index &lt; chainSize &amp;&amp;
availableMachines &gt; 0 &amp;&amp; AllDependenciesDone()</label>
			<label kind="assignment" x="34" y="-85">availableMachines--,
x = 0</label>
			<nail x="17" y="-85"/>
		</transition>
	</template>
	<system>// Place template instantiations here.

// List one or more processes to be composed into a system.
system Composer, Chain;
    </system>
	<queries>
		<query>
			<formula>strategy TimeSchedule = minE (Composer.time) [&lt;=57] : &lt;&gt;Composer.Done</formula>
			<comment></comment>
		</query>
		<query>
			<formula>inf{Composer.Done} : Composer.time</formula>
			<comment></comment>
		</query>
		<query>
			<formula>A&lt;&gt; Composer.Done</formula>
			<comment></comment>
		</query>
		<query>
			<formula>E&lt;&gt; Composer.Done</formula>
			<comment></comment>
		</query>
	</queries>
</nta>
