<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/researchgroup/darts/uppaal/flat-1_2.dtd'>
<nta>
<declaration>//Variables
const int numberOfChains = 36;
const int numberOfTasks = 100;
const int numberOfMachines = 9;
const int maxDependencies = 21;
const int longestChain = 6;
const int globalChainSize[numberOfChains] = {5,5,2,2,3,3,3,3,4,4,2,6,2,3,4,3,2,6,2,2,5,3,3,2,2,3,2,2,3,2,1,1,2,1,1,1};
const int globalChains[numberOfChains][longestChain] = {
{0,13,37,86,93,-1},
{1,40,62,72,99,-1},
{2,95,-1,-1,-1,-1},
{3,97,-1,-1,-1,-1},
{4,83,90,-1,-1,-1},
{5,47,87,-1,-1,-1},
{6,51,79,-1,-1,-1},
{7,11,89,-1,-1,-1},
{8,57,68,91,-1,-1},
{9,53,73,96,-1,-1},
{10,77,-1,-1,-1,-1},
{12,42,61,65,70,76},
{14,92,-1,-1,-1,-1},
{15,16,98,-1,-1,-1},
{17,49,69,85,-1,-1},
{18,58,81,-1,-1,-1},
{19,80,-1,-1,-1,-1},
{20,33,39,64,75,82},
{21,84,-1,-1,-1,-1},
{22,67,-1,-1,-1,-1},
{23,45,56,88,94,-1},
{24,30,55,-1,-1,-1},
{25,46,71,-1,-1,-1},
{26,48,-1,-1,-1,-1},
{27,74,-1,-1,-1,-1},
{28,35,78,-1,-1,-1},
{29,60,-1,-1,-1,-1},
{31,66,-1,-1,-1,-1},
{32,34,54,-1,-1,-1},
{36,59,-1,-1,-1,-1},
{38,-1,-1,-1,-1,-1},
{41,-1,-1,-1,-1,-1},
{43,63,-1,-1,-1,-1},
{44,-1,-1,-1,-1,-1},
{50,-1,-1,-1,-1,-1},
{52,-1,-1,-1,-1,-1}};
int chainDuration[numberOfChains] = {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1};
int durations[numberOfTasks] = {6,11,11,11,9,10,7,9,11,14,11,4,15,8,13,12,8,9,12,18,14,7,5,12,4,11,7,8,5,9,9,9,10,11,9,11,12,13,11,9,10,14,10,13,8,12,10,5,13,5,9,13,12,7,12,10,16,13,9,11,17,10,11,12,11,16,18,8,11,13,11,11,10,13,11,8,13,11,12,13,8,9,14,11,12,7,11,7,10,15,6,16,11,14,13,9,11,6,14,10};
const int dependencies[numberOfTasks][maxDependencies] = {
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,4,5,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,3,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,7,10,14,15,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,10,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,11,13,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,3,10,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,9,14,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,10,14,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,8,14,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,26,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,5,11,19,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{14,15,16,19,23,25,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,4,16,18,24,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{10,17,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{14,21,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,8,9,14,16,20,21,22,23,25,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,24,25,29,32,33,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,4,11,20,21,27,28,31,32,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,3,17,24,33,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,11,12,13,17,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{23,25,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,4,10,14,15,27,28,32,33,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,3,4,5,9,10,22,24,26,30,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,4,20,21,29,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,10,12,13,17,18,24,28,32,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,2,15,25,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,11,12,13,20,28,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,9,10,13,21,23,24,28,32,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,3,7,14,16,21,25,27,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,3,5,13,16,26,28,32,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,8,19,20,22,26,32,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,8,9,10,14,17,19,28,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,15,20,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,6,8,11,25,26,35,47,48,50,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,5,10,15,24,28,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,4,7,9,16,47,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{11,21,22,26,29,34,37,47,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{19,25,30,45,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,8,12,15,27,28,36,45,48,50,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,8,16,19,36,40,41,48,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,8,12,17,18,25,31,33,39,44,45,46,49,-1,-1,-1,-1,-1,-1,-1,-1},
{2,10,26,36,37,47,49,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,23,27,28,29,37,42,45,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,10,11,17,19,25,27,40,42,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{13,36,39,40,51,52,53,59,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,4,9,18,21,28,43,57,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{9,23,31,39,46,47,52,58,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{9,10,13,18,25,35,44,53,61,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,16,22,29,31,37,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,3,15,21,22,34,36,37,38,46,52,58,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,11,14,18,25,32,37,42,43,45,52,57,61,-1,-1,-1,-1,-1,-1,-1,-1},
{9,13,14,21,24,25,28,38,47,49,53,59,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,10,25,41,42,44,46,49,50,51,56,63,65,-1,-1,-1,-1,-1,-1,-1,-1},
{8,17,24,26,32,34,42,43,46,52,59,63,64,-1,-1,-1,-1,-1,-1,-1,-1},
{0,9,10,13,19,20,21,25,34,38,44,48,49,53,54,56,61,62,64,65,-1},
{1,2,3,9,11,12,14,34,35,38,42,43,44,46,49,50,52,53,63,67,-1},
{8,9,20,23,27,28,29,35,50,52,57,61,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,6,20,29,30,33,46,47,50,56,64,66,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,4,27,29,42,62,70,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,4,10,11,12,20,23,25,27,44,55,60,63,66,69,70,-1,-1,-1,-1},
{3,15,19,24,27,35,38,43,52,63,72,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,12,16,32,35,36,40,43,49,51,58,62,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,10,19,20,33,34,42,52,60,74,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{10,14,18,19,20,25,29,40,41,43,51,58,60,70,-1,-1,-1,-1,-1,-1,-1},
{10,12,17,22,30,31,33,44,50,53,56,60,67,70,71,75,-1,-1,-1,-1,-1},
{2,3,4,8,11,13,15,18,19,22,51,56,57,61,69,73,-1,-1,-1,-1,-1},
{11,12,18,21,22,25,32,36,37,42,44,56,60,62,-1,-1,-1,-1,-1,-1,-1},
{3,10,17,20,21,23,30,36,44,62,66,69,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,10,12,18,35,37,38,43,50,63,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,4,12,21,22,40,47,55,58,62,63,64,67,-1,-1,-1,-1,-1,-1,-1,-1},
{9,23,26,34,39,41,53,54,56,64,66,71,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,6,9,11,14,17,24,35,41,45,47,48,51,56,64,-1,-1,-1,-1,-1,-1},
{24,29,31,32,35,38,48,53,61,68,71,83,84,88,-1,-1,-1,-1,-1,-1,-1},
{1,4,17,23,27,34,41,50,54,55,63,66,68,86,-1,-1,-1,-1,-1,-1,-1},
{10,11,14,20,33,34,47,51,71,72,74,75,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{13,14,25,26,30,37,38,54,56,57,66,67,68,73,74,78,86,-1,-1,-1,-1},
{1,15,24,34,36,62,63,65,86,88,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,4,5,7,12,16,20,29,37,38,39,40,43,52,61,63,68,73,81,84,88},
{8,9,12,28,29,30,31,48,53,57,59,60,70,73,76,77,81,84,88,-1,-1},
{2,3,5,6,23,34,39,42,45,51,55,56,61,63,67,72,81,86,-1,-1,-1},
{16,18,26,28,31,37,50,53,55,60,62,70,71,73,78,80,85,-1,-1,-1,-1},
{2,3,8,9,28,29,33,39,40,43,52,54,57,62,67,68,72,77,-1,-1,-1}};


int availableMachines = numberOfMachines;

// Typedefs
typedef int[0, numberOfChains - 1] chainId_t;

// Ints and Arrays
int numberOfChainsDone = 0;
int tasksDone[numberOfTasks];
bool runnableChains[numberOfChains];
bool assignmentChoice[numberOfChains];

// Channels
broadcast chan startMachines;
broadcast chan chainMachineChan[numberOfChains];
broadcast chan activateChains;</declaration>
	<template>
		<name x="5" y="5">Composer</name>
		<declaration>// Place local declarations here.
clock time;</declaration>
		<location id="id0" x="-102" y="-255">
			<name x="-112" y="-289">Init</name>
			<label kind="invariant" x="-246" y="-238">numberOfChainsDone &lt;= numberOfChains</label> 
 <label kind="exponentialrate" x="-112" y="-221">0</label>
		</location>
		<location id="id1" x="331" y="-255">
			<name x="321" y="-289">Done</name>
		</location>
		<init ref="id0"/>
		<transition>
			<source ref="id0"/>
			<target ref="id1"/>
			<label kind="guard" x="-17" y="-289">numberOfChainsDone &gt;= numberOfChains</label>
		</transition>
	</template>
	<template>
		<name>Chain</name>
		<parameter>const chainId_t cid</parameter>
		<declaration>clock x;
const int chainSize = globalChainSize[cid];
int index = 0;

bool AllDependenciesDone()
{
    bool dependenciesDone = 1;
    int i;
    for (i = 0; i &lt; maxDependencies; i++)
    {
        int value = dependencies[globalChains[cid][index]][i];
        if (value == -1)
            return dependenciesDone;

        dependenciesDone &amp;= tasksDone[value];
    }
    return dependenciesDone;
}</declaration>
		<location id="id2" x="-68" y="-238">
			<name x="-78" y="-272">Idle</name>
			<label kind="exponentialrate" x="-51" y="-255">3</label>
		</location>
		<location id="id3" x="-76" y="51">
			<name x="-102" y="68">Running</name>
			<label kind="invariant" x="-178" y="85">x &lt;= durations[globalChains[cid][index]]</label>
		</location>
		<location id="id4" x="-450" y="-238">
			<name x="-460" y="-272">Done</name>
		</location>
		<init ref="id2"/>
		<transition controllable="false">
			<source ref="id2"/>
			<target ref="id4"/>
			<label kind="guard" x="-399" y="-280">index &gt;= chainSize &amp;&amp;
x &gt;= durations[globalChains[cid][index - 1]]</label>
			<label kind="assignment" x="-399" y="-238">numberOfChainsDone++</label>
		</transition>
		<transition controllable="false">
			<source ref="id3"/>
			<target ref="id2"/>
			<label kind="guard" x="-450" y="-127">x &gt;= durations[globalChains[cid][index]]</label>
			<label kind="assignment" x="-450" y="-110">availableMachines++,
tasksDone[globalChains[cid][index]] = 1,
index++</label>
			<nail x="-161" y="-85"/>
		</transition>
		<transition>
			<source ref="id2"/>
			<target ref="id3"/>
			<label kind="guard" x="34" y="-127">index &lt; chainSize &amp;&amp;
availableMachines &gt; 0 &amp;&amp; AllDependenciesDone()</label>
			<label kind="assignment" x="34" y="-85">availableMachines--,
x = 0</label>
			<nail x="17" y="-85"/>
		</transition>
	</template>
	<system>// Place template instantiations here.

// List one or more processes to be composed into a system.
system Composer, Chain;
    </system>
	<queries>
		<query>
			<formula>strategy TimeSchedule = minE (Composer.time) [&lt;=57] : &lt;&gt;Composer.Done</formula>
			<comment></comment>
		</query>
		<query>
			<formula>inf{Composer.Done} : Composer.time</formula>
			<comment></comment>
		</query>
		<query>
			<formula>A&lt;&gt; Composer.Done</formula>
			<comment></comment>
		</query>
		<query>
			<formula>E&lt;&gt; Composer.Done</formula>
			<comment></comment>
		</query>
	</queries>
</nta>
