<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/researchgroup/darts/uppaal/flat-1_2.dtd'>
<nta>
<declaration>//Variables
const int numberOfChains = 32;
const int numberOfTasks = 100;
const int numberOfMachines = 10;
const int maxDependencies = 31;
const int longestChain = 7;
const int globalChainSize[numberOfChains] = {7,5,6,2,3,5,3,3,4,6,4,3,3,3,5,3,2,2,2,5,3,2,4,3,2,2,2,2,1,1,1,1};
const int globalChains[numberOfChains][longestChain] = {
{0,8,34,56,62,91,97},
{1,10,40,60,98,-1,-1},
{2,52,72,81,90,94,-1},
{3,99,-1,-1,-1,-1,-1},
{4,61,96,-1,-1,-1,-1},
{5,64,82,85,93,-1,-1},
{6,79,95,-1,-1,-1,-1},
{7,71,92,-1,-1,-1,-1},
{9,22,67,83,-1,-1,-1},
{11,32,41,50,59,87,-1},
{12,70,76,84,-1,-1,-1},
{13,47,89,-1,-1,-1,-1},
{14,68,88,-1,-1,-1,-1},
{15,78,86,-1,-1,-1,-1},
{16,46,53,58,77,-1,-1},
{17,57,65,-1,-1,-1,-1},
{18,80,-1,-1,-1,-1,-1},
{19,74,-1,-1,-1,-1,-1},
{20,75,-1,-1,-1,-1,-1},
{21,27,44,49,73,-1,-1},
{23,54,63,-1,-1,-1,-1},
{24,69,-1,-1,-1,-1,-1},
{25,38,51,66,-1,-1,-1},
{26,31,55,-1,-1,-1,-1},
{28,45,-1,-1,-1,-1,-1},
{29,42,-1,-1,-1,-1,-1},
{30,48,-1,-1,-1,-1,-1},
{33,39,-1,-1,-1,-1,-1},
{35,-1,-1,-1,-1,-1,-1},
{36,-1,-1,-1,-1,-1,-1},
{37,-1,-1,-1,-1,-1,-1},
{43,-1,-1,-1,-1,-1,-1}};
int chainDuration[numberOfChains] = {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1};
int durations[numberOfTasks] = {1,12,17,16,5,16,1,12,5,5,2,10,11,23,5,6,20,5,5,7,4,5,16,11,13,8,4,3,7,30,11,9,19,18,3,5,1,43,10,2,4,15,10,5,21,4,6,4,7,8,13,5,1,4,1,6,3,7,27,10,30,18,2,1,3,4,19,13,15,27,29,1,7,4,2,10,2,20,44,3,11,14,10,10,10,34,6,11,1,1,46,1,39,5,15,4,8,29,18,6};
const int dependencies[numberOfTasks][maxDependencies] = {
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,2,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,3,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,10,16,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,7,15,16,17,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,8,9,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,3,9,16,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,4,5,6,7,9,13,16,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,4,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,9,10,13,17,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,11,13,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,7,8,14,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,6,9,14,17,18,20,21,23,25,26,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,5,7,11,15,17,19,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,10,14,16,22,25,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,7,17,19,22,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,5,10,11,22,25,26,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,6,8,9,10,11,12,14,20,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,14,18,24,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,2,3,8,13,24,26,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,4,9,18,19,20,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,26,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,8,12,13,16,20,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{10,11,12,14,17,24,25,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,2,6,16,22,23,32,33,35,36,37,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,2,10,22,23,24,25,26,31,34,38,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,2,3,5,10,19,23,24,29,32,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,10,13,14,19,23,24,29,32,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,8,16,17,19,29,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,11,16,19,20,21,27,32,33,35,36,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,4,10,19,22,28,29,31,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,5,6,8,12,16,22,26,37,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,5,7,9,13,14,15,18,20,25,28,29,30,31,32,34,35,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,10,13,17,18,22,30,34,37,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,9,12,13,18,19,23,26,28,33,34,35,37,44,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,4,6,11,15,21,22,37,41,43,44,48,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,9,10,14,17,21,28,38,39,43,44,46,48,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,2,4,5,7,10,12,14,15,26,31,34,42,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,2,12,15,16,17,18,24,25,28,29,30,38,40,44,45,46,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,11,12,13,19,20,22,23,24,26,34,36,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,7,10,11,20,31,32,33,39,43,47,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,8,10,16,18,20,26,29,31,32,33,34,39,40,45,46,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,2,3,6,13,16,17,22,27,28,30,33,36,39,48,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,2,7,10,15,16,18,20,23,27,28,30,34,36,37,43,53,54,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,4,8,17,21,22,27,28,30,31,32,39,41,46,48,49,50,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,10,11,12,13,16,19,23,26,30,35,36,39,40,43,45,50,55,57,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,3,4,5,6,7,8,18,20,25,30,31,44,45,46,52,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,2,4,13,14,17,18,19,23,24,43,47,51,55,56,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,7,8,10,19,30,37,38,42,43,46,47,51,54,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,4,5,6,8,15,18,21,23,27,35,36,39,41,43,47,48,50,52,54,56,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,8,9,13,16,17,19,20,21,23,27,31,49,52,54,57,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,21,23,24,28,31,36,51,53,54,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,7,8,11,15,16,20,21,22,24,26,33,37,40,41,49,51,52,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,4,9,14,16,17,19,20,25,28,30,32,33,34,38,39,40,46,48,51,57,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,9,12,18,20,21,24,25,27,35,42,43,46,48,51,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,5,7,9,12,13,18,20,23,25,29,36,41,46,49,50,54,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,7,8,10,14,15,20,21,25,27,35,39,40,41,42,43,45,49,50,52,53,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,6,8,12,13,18,21,31,35,40,41,42,46,48,51,52,54,55,56,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{12,16,25,30,31,34,40,42,43,49,52,53,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,13,14,19,22,26,27,28,31,33,35,37,41,48,54,57,62,69,71,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,5,14,16,19,20,22,24,25,27,32,35,42,55,57,67,69,73,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{15,18,24,25,26,30,32,35,39,47,50,52,54,60,61,65,68,69,70,73,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,9,13,14,18,20,22,24,28,35,36,38,45,47,48,49,50,55,58,66,69,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,15,19,22,27,28,32,33,37,48,53,62,63,66,70,71,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,3,4,6,14,15,16,17,19,21,24,30,35,40,41,45,48,50,56,67,68,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,5,16,17,18,19,21,26,38,39,52,54,55,58,61,73,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,5,6,9,15,17,19,27,28,29,30,41,51,52,60,62,64,67,72,73,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,4,7,8,11,12,15,18,23,27,30,32,35,37,41,46,49,53,58,59,60,63,64,68,73,-1,-1,-1,-1,-1,-1},
{2,4,8,15,17,18,25,35,36,38,44,47,50,54,57,59,63,66,67,77,79,81,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,13,14,19,21,25,27,35,44,46,48,52,53,61,71,72,73,74,76,77,78,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,11,13,17,29,32,34,35,37,41,44,47,48,51,52,56,57,63,68,69,72,76,78,79,82,-1,-1,-1,-1,-1,-1},
{2,4,15,19,20,25,39,42,45,46,48,55,62,65,68,76,78,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,6,11,12,13,19,21,23,29,31,35,38,41,42,51,57,59,76,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,9,10,11,16,25,29,33,36,48,51,52,60,68,69,75,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{9,18,23,29,31,32,34,36,38,39,46,47,52,54,58,60,66,67,74,78,80,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,9,10,11,16,22,27,29,30,39,41,43,51,55,59,62,63,68,69,72,74,79,81,-1,-1,-1,-1,-1,-1,-1,-1},
{0,7,12,17,18,19,26,28,35,39,44,57,58,62,63,73,78,79,82,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,7,8,10,14,15,19,20,26,28,35,37,42,43,45,49,53,55,58,63,68,71,72,76,-1,-1,-1,-1,-1,-1,-1},
{4,9,14,15,16,18,19,20,25,26,29,32,35,37,41,47,51,52,56,60,65,68,69,71,74,77,78,81,82,85,-1},
{8,10,14,19,21,24,25,37,49,56,58,65,66,72,77,85,87,90,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,7,9,10,17,18,20,27,30,35,38,44,49,50,54,55,69,70,72,73,78,79,84,85,87,91,-1,-1,-1,-1,-1},
{10,15,16,18,20,23,28,34,38,39,44,53,55,61,65,72,73,78,79,84,89,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,4,5,6,8,9,15,20,21,22,29,31,33,36,41,45,48,58,59,60,61,62,66,69,71,74,79,80,81,86,91},
{0,1,9,10,14,17,18,21,23,28,30,36,37,39,41,43,45,49,54,55,60,64,66,68,79,88,-1,-1,-1,-1,-1},
{1,2,3,6,7,10,15,19,20,21,27,36,37,38,39,40,50,51,54,55,61,63,65,67,70,71,79,86,92,-1,-1}};


int availableMachines = numberOfMachines;

// Typedefs
typedef int[0, numberOfChains - 1] chainId_t;

// Ints and Arrays
int numberOfChainsDone = 0;
int tasksDone[numberOfTasks];
bool runnableChains[numberOfChains];
bool assignmentChoice[numberOfChains];

// Channels
broadcast chan startMachines;
broadcast chan chainMachineChan[numberOfChains];
broadcast chan activateChains;</declaration>
	<template>
		<name x="5" y="5">Composer</name>
		<declaration>// Place local declarations here.
clock time;</declaration>
		<location id="id0" x="-102" y="-255">
			<name x="-112" y="-289">Init</name>
			<label kind="invariant" x="-246" y="-238">numberOfChainsDone &lt;= numberOfChains</label> 
 <label kind="exponentialrate" x="-112" y="-221">0</label>
		</location>
		<location id="id1" x="331" y="-255">
			<name x="321" y="-289">Done</name>
		</location>
		<init ref="id0"/>
		<transition>
			<source ref="id0"/>
			<target ref="id1"/>
			<label kind="guard" x="-17" y="-289">numberOfChainsDone &gt;= numberOfChains</label>
		</transition>
	</template>
	<template>
		<name>Chain</name>
		<parameter>const chainId_t cid</parameter>
		<declaration>clock x;
const int chainSize = globalChainSize[cid];
int index = 0;

bool AllDependenciesDone()
{
    bool dependenciesDone = 1;
    int i;
    for (i = 0; i &lt; maxDependencies; i++)
    {
        int value = dependencies[globalChains[cid][index]][i];
        if (value == -1)
            return dependenciesDone;

        dependenciesDone &amp;= tasksDone[value];
    }
    return dependenciesDone;
}</declaration>
		<location id="id2" x="-68" y="-238">
			<name x="-78" y="-272">Idle</name>
			<label kind="exponentialrate" x="-51" y="-255">3</label>
		</location>
		<location id="id3" x="-76" y="51">
			<name x="-102" y="68">Running</name>
			<label kind="invariant" x="-178" y="85">x &lt;= durations[globalChains[cid][index]]</label>
		</location>
		<location id="id4" x="-450" y="-238">
			<name x="-460" y="-272">Done</name>
		</location>
		<init ref="id2"/>
		<transition controllable="false">
			<source ref="id2"/>
			<target ref="id4"/>
			<label kind="guard" x="-399" y="-280">index &gt;= chainSize &amp;&amp;
x &gt;= durations[globalChains[cid][index - 1]]</label>
			<label kind="assignment" x="-399" y="-238">numberOfChainsDone++</label>
		</transition>
		<transition controllable="false">
			<source ref="id3"/>
			<target ref="id2"/>
			<label kind="guard" x="-450" y="-127">x &gt;= durations[globalChains[cid][index]]</label>
			<label kind="assignment" x="-450" y="-110">availableMachines++,
tasksDone[globalChains[cid][index]] = 1,
index++</label>
			<nail x="-161" y="-85"/>
		</transition>
		<transition>
			<source ref="id2"/>
			<target ref="id3"/>
			<label kind="guard" x="34" y="-127">index &lt; chainSize &amp;&amp;
availableMachines &gt; 0 &amp;&amp; AllDependenciesDone()</label>
			<label kind="assignment" x="34" y="-85">availableMachines--,
x = 0</label>
			<nail x="17" y="-85"/>
		</transition>
	</template>
	<system>// Place template instantiations here.

// List one or more processes to be composed into a system.
system Composer, Chain;
    </system>
	<queries>
		<query>
			<formula>strategy TimeSchedule = minE (Composer.time) [&lt;=57] : &lt;&gt;Composer.Done</formula>
			<comment></comment>
		</query>
		<query>
			<formula>inf{Composer.Done} : Composer.time</formula>
			<comment></comment>
		</query>
		<query>
			<formula>A&lt;&gt; Composer.Done</formula>
			<comment></comment>
		</query>
		<query>
			<formula>E&lt;&gt; Composer.Done</formula>
			<comment></comment>
		</query>
	</queries>
</nta>
