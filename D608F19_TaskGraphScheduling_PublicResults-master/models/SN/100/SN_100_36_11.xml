<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/researchgroup/darts/uppaal/flat-1_2.dtd'>
<nta>
<declaration>//Variables
const int numberOfChains = 32;
const int numberOfTasks = 100;
const int numberOfMachines = 11;
const int maxDependencies = 23;
const int longestChain = 6;
const int globalChainSize[numberOfChains] = {6,3,3,4,3,2,4,3,4,5,3,3,4,5,3,4,5,3,2,4,2,3,3,2,1,3,3,3,2,1,2,2};
const int globalChains[numberOfChains][longestChain] = {
{0,13,35,63,65,76},
{1,73,94,-1,-1,-1},
{2,86,91,-1,-1,-1},
{3,56,82,87,-1,-1},
{4,89,95,-1,-1,-1},
{5,93,-1,-1,-1,-1},
{6,81,88,97,-1,-1},
{7,69,96,-1,-1,-1},
{8,67,80,99,-1,-1},
{9,38,71,85,90,-1},
{10,70,79,-1,-1,-1},
{11,39,78,-1,-1,-1},
{12,23,49,75,-1,-1},
{14,34,51,74,92,-1},
{15,55,98,-1,-1,-1},
{16,53,58,68,-1,-1},
{17,24,42,66,77,-1},
{18,45,84,-1,-1,-1},
{19,83,-1,-1,-1,-1},
{20,48,60,72,-1,-1},
{21,62,-1,-1,-1,-1},
{22,46,64,-1,-1,-1},
{25,41,57,-1,-1,-1},
{26,50,-1,-1,-1,-1},
{27,-1,-1,-1,-1,-1},
{28,32,47,-1,-1,-1},
{29,37,52,-1,-1,-1},
{30,43,44,-1,-1,-1},
{31,59,-1,-1,-1,-1},
{33,-1,-1,-1,-1,-1},
{36,54,-1,-1,-1,-1},
{40,61,-1,-1,-1,-1}};
int chainDuration[numberOfChains] = {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1};
int durations[numberOfTasks] = {5,13,12,16,8,19,4,2,12,20,3,14,8,8,2,16,20,9,5,14,6,12,17,15,7,1,8,7,3,14,10,13,4,8,8,15,20,2,6,14,11,10,15,2,5,9,2,10,10,20,4,2,16,1,9,4,13,18,11,16,18,4,19,15,18,15,8,13,14,16,12,6,1,15,13,18,11,14,2,18,18,15,3,15,1,3,12,8,10,1,5,6,1,4,19,16,3,2,18,6};
const int dependencies[numberOfTasks][maxDependencies] = {
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,5,10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,3,4,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,7,9,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{10,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,9,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,7,8,11,12,22,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,10,14,16,17,21,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{17,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,15,16,21,22,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,18,20,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,13,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,17,21,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{23,28,30,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,10,15,25,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,6,9,14,20,22,23,24,27,31,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,11,13,18,19,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{13,14,22,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,9,20,24,25,29,31,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,6,9,11,13,19,20,26,29,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,7,8,10,11,15,30,31,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,9,11,14,25,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,3,10,14,22,25,26,28,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,4,10,11,13,20,24,26,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,5,23,26,30,31,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,17,26,33,43,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,9,15,17,18,24,31,34,36,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,6,14,16,22,24,31,41,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{14,15,20,30,32,35,43,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,11,13,20,26,30,42,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,5,6,9,12,23,27,29,31,41,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,18,19,24,26,29,31,33,35,43,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,5,7,9,12,21,34,37,43,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,4,14,21,37,40,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,4,5,10,16,19,20,21,25,31,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{21,24,36,38,42,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,11,14,15,17,23,44,54,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,2,3,5,8,11,24,28,34,49,54,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,35,41,46,49,50,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{9,16,17,19,21,24,27,35,39,40,45,48,53,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{15,29,31,35,40,54,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,14,18,27,30,31,41,48,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{11,13,40,43,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,8,10,21,22,27,29,37,47,49,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,9,13,27,35,38,44,52,53,54,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,19,21,38,44,46,54,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{13,35,38,40,43,45,53,59,62,63,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,3,5,11,19,21,23,24,28,33,42,43,47,50,59,-1,-1,-1,-1,-1,-1,-1,-1},
{2,4,5,8,10,15,20,29,44,48,51,52,53,58,60,-1,-1,-1,-1,-1,-1,-1,-1},
{7,18,19,23,27,34,35,46,48,58,62,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,6,7,8,11,13,18,30,34,36,41,48,57,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,2,7,9,10,18,30,54,55,59,61,62,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,15,17,21,35,38,39,43,50,51,55,56,59,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,17,21,23,25,28,29,30,40,42,47,52,60,63,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,3,13,22,37,46,59,61,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,6,12,19,22,25,29,32,38,46,51,58,63,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,7,10,11,23,31,32,37,44,48,49,57,61,66,69,-1,-1,-1,-1,-1,-1,-1,-1},
{3,4,14,15,18,23,27,32,37,38,40,65,66,68,71,-1,-1,-1,-1,-1,-1,-1,-1},
{0,4,8,11,21,28,35,46,64,66,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,3,14,16,19,20,22,26,27,32,33,34,36,39,40,44,55,63,70,-1,-1,-1,-1},
{3,10,13,15,23,24,54,61,69,70,72,74,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,3,19,23,24,28,30,32,33,42,53,64,67,68,70,-1,-1,-1,-1,-1,-1,-1,-1},
{0,2,3,6,14,19,20,21,22,24,34,38,50,55,58,68,73,-1,-1,-1,-1,-1,-1},
{1,5,20,24,25,27,34,35,40,47,52,56,57,64,67,-1,-1,-1,-1,-1,-1,-1,-1},
{0,10,19,29,30,32,39,45,56,62,72,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,2,10,19,24,36,37,42,45,51,58,62,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,10,12,16,20,41,42,45,47,52,67,68,71,72,74,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,2,8,13,18,33,36,39,49,66,74,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{20,21,29,31,40,46,49,51,53,56,58,61,65,68,75,77,81,82,84,-1,-1,-1,-1},
{2,4,5,12,20,38,40,41,46,51,55,59,67,81,83,85,-1,-1,-1,-1,-1,-1,-1},
{3,4,5,6,14,24,27,32,35,36,41,42,43,46,52,55,63,70,72,81,-1,-1,-1},
{17,27,37,44,54,55,58,68,69,70,72,79,85,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,2,3,14,19,22,26,37,41,42,45,48,56,58,68,69,72,73,78,85,86,-1,-1},
{0,5,8,30,33,47,48,61,64,70,74,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,19,20,31,32,33,34,35,36,41,45,52,59,61,63,64,66,69,71,74,78,85,86},
{13,15,19,23,25,28,35,41,50,54,55,59,63,73,77,80,82,88,-1,-1,-1,-1,-1},
{7,8,12,17,19,21,28,30,35,43,47,58,80,85,89,90,-1,-1,-1,-1,-1,-1,-1},
{0,4,9,24,37,41,69,73,77,78,85,86,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,21,33,36,43,46,55,64,83,85,88,90,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{13,15,16,18,20,29,33,39,47,55,59,61,62,67,73,84,-1,-1,-1,-1,-1,-1,-1},
{4,6,10,14,18,26,34,37,42,51,58,75,80,84,-1,-1,-1,-1,-1,-1,-1,-1,-1}};


int availableMachines = numberOfMachines;

// Typedefs
typedef int[0, numberOfChains - 1] chainId_t;

// Ints and Arrays
int numberOfChainsDone = 0;
int tasksDone[numberOfTasks];
bool runnableChains[numberOfChains];
bool assignmentChoice[numberOfChains];

// Channels
broadcast chan startMachines;
broadcast chan chainMachineChan[numberOfChains];
broadcast chan activateChains;</declaration>
	<template>
		<name x="5" y="5">Composer</name>
		<declaration>// Place local declarations here.
clock time;</declaration>
		<location id="id0" x="-102" y="-255">
			<name x="-112" y="-289">Init</name>
			<label kind="invariant" x="-246" y="-238">numberOfChainsDone &lt;= numberOfChains</label> 
 <label kind="exponentialrate" x="-112" y="-221">0</label>
		</location>
		<location id="id1" x="331" y="-255">
			<name x="321" y="-289">Done</name>
		</location>
		<init ref="id0"/>
		<transition>
			<source ref="id0"/>
			<target ref="id1"/>
			<label kind="guard" x="-17" y="-289">numberOfChainsDone &gt;= numberOfChains</label>
		</transition>
	</template>
	<template>
		<name>Chain</name>
		<parameter>const chainId_t cid</parameter>
		<declaration>clock x;
const int chainSize = globalChainSize[cid];
int index = 0;

bool AllDependenciesDone()
{
    bool dependenciesDone = 1;
    int i;
    for (i = 0; i &lt; maxDependencies; i++)
    {
        int value = dependencies[globalChains[cid][index]][i];
        if (value == -1)
            return dependenciesDone;

        dependenciesDone &amp;= tasksDone[value];
    }
    return dependenciesDone;
}</declaration>
		<location id="id2" x="-68" y="-238">
			<name x="-78" y="-272">Idle</name>
			<label kind="exponentialrate" x="-51" y="-255">3</label>
		</location>
		<location id="id3" x="-76" y="51">
			<name x="-102" y="68">Running</name>
			<label kind="invariant" x="-178" y="85">x &lt;= durations[globalChains[cid][index]]</label>
		</location>
		<location id="id4" x="-450" y="-238">
			<name x="-460" y="-272">Done</name>
		</location>
		<init ref="id2"/>
		<transition controllable="false">
			<source ref="id2"/>
			<target ref="id4"/>
			<label kind="guard" x="-399" y="-280">index &gt;= chainSize &amp;&amp;
x &gt;= durations[globalChains[cid][index - 1]]</label>
			<label kind="assignment" x="-399" y="-238">numberOfChainsDone++</label>
		</transition>
		<transition controllable="false">
			<source ref="id3"/>
			<target ref="id2"/>
			<label kind="guard" x="-450" y="-127">x &gt;= durations[globalChains[cid][index]]</label>
			<label kind="assignment" x="-450" y="-110">availableMachines++,
tasksDone[globalChains[cid][index]] = 1,
index++</label>
			<nail x="-161" y="-85"/>
		</transition>
		<transition>
			<source ref="id2"/>
			<target ref="id3"/>
			<label kind="guard" x="34" y="-127">index &lt; chainSize &amp;&amp;
availableMachines &gt; 0 &amp;&amp; AllDependenciesDone()</label>
			<label kind="assignment" x="34" y="-85">availableMachines--,
x = 0</label>
			<nail x="17" y="-85"/>
		</transition>
	</template>
	<system>// Place template instantiations here.

// List one or more processes to be composed into a system.
system Composer, Chain;
    </system>
	<queries>
		<query>
			<formula>strategy TimeSchedule = minE (Composer.time) [&lt;=57] : &lt;&gt;Composer.Done</formula>
			<comment></comment>
		</query>
		<query>
			<formula>inf{Composer.Done} : Composer.time</formula>
			<comment></comment>
		</query>
		<query>
			<formula>A&lt;&gt; Composer.Done</formula>
			<comment></comment>
		</query>
		<query>
			<formula>E&lt;&gt; Composer.Done</formula>
			<comment></comment>
		</query>
	</queries>
</nta>
