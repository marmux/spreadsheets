<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/researchgroup/darts/uppaal/flat-1_2.dtd'>
<nta>
<declaration>//Variables
const int numberOfChains = 38;
const int numberOfTasks = 100;
const int numberOfMachines = 2;
const int maxDependencies = 16;
const int longestChain = 5;
const int globalChainSize[numberOfChains] = {5,5,3,4,2,5,3,3,3,2,3,4,3,3,2,3,3,2,2,2,2,4,2,3,3,2,2,1,2,2,1,3,1,2,3,3,1,1};
const int globalChains[numberOfChains][longestChain] = {
{0,35,39,78,87},
{1,60,72,76,92},
{2,79,97,-1,-1},
{3,18,55,88,-1},
{4,96,-1,-1,-1},
{5,26,51,57,98},
{6,80,93,-1,-1},
{7,40,83,-1,-1},
{8,50,95,-1,-1},
{9,81,-1,-1,-1},
{10,65,94,-1,-1},
{11,24,59,89,-1},
{12,66,75,-1,-1},
{13,38,82,-1,-1},
{14,69,-1,-1,-1},
{15,62,86,-1,-1},
{16,44,74,-1,-1},
{17,85,-1,-1,-1},
{19,67,-1,-1,-1},
{20,91,-1,-1,-1},
{21,68,-1,-1,-1},
{22,37,47,61,-1},
{23,73,-1,-1,-1},
{25,32,99,-1,-1},
{27,49,90,-1,-1},
{28,56,-1,-1,-1},
{29,70,-1,-1,-1},
{30,-1,-1,-1,-1},
{31,52,-1,-1,-1},
{33,71,-1,-1,-1},
{34,-1,-1,-1,-1},
{36,58,84,-1,-1},
{41,-1,-1,-1,-1},
{42,54,-1,-1,-1},
{43,53,63,-1,-1},
{45,64,77,-1,-1},
{46,-1,-1,-1,-1},
{48,-1,-1,-1,-1}};
int chainDuration[numberOfChains] = {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1};
int durations[numberOfTasks] = {9,14,14,13,7,11,9,12,15,7,15,7,9,12,12,8,9,6,8,12,12,10,13,10,10,10,9,9,12,10,12,8,6,10,14,9,17,6,11,7,12,10,13,9,7,10,10,10,6,14,10,11,6,7,13,7,11,15,10,10,13,15,11,18,12,11,10,13,9,8,12,16,15,17,11,12,10,13,11,9,7,10,6,8,10,15,13,7,13,9,10,11,7,11,8,11,11,8,11,10};
const int dependencies[numberOfTasks][maxDependencies] = {
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,13,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{9,11,12,18,21,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,13,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,5,11,19,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,9,16,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{18,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{18,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,26,27,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,4,13,21,25,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,14,17,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{14,24,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,4,13,20,22,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,4,11,23,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,6,10,18,22,25,28,30,-1,-1,-1,-1,-1,-1,-1,-1},
{4,8,11,13,16,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,17,19,22,30,35,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,7,15,18,30,32,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{25,27,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{16,35,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,7,12,25,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,5,8,16,31,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,20,25,26,35,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,13,23,33,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,8,19,26,34,37,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{20,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{13,20,27,30,40,41,43,45,-1,-1,-1,-1,-1,-1,-1,-1},
{2,6,8,17,26,29,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,18,26,29,30,34,38,44,-1,-1,-1,-1,-1,-1,-1,-1},
{24,31,36,38,45,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{15,22,31,43,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{11,28,42,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,3,4,18,30,34,42,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,13,28,35,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,4,8,12,13,14,26,29,31,51,53,56,-1,-1,-1,-1},
{6,22,36,42,46,50,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,7,15,24,26,42,44,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,9,41,45,50,52,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,11,16,23,35,43,47,49,-1,-1,-1,-1,-1,-1,-1,-1},
{0,6,13,15,19,20,23,29,30,49,-1,-1,-1,-1,-1,-1},
{35,53,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,9,23,33,45,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,8,10,51,54,58,60,63,-1,-1,-1,-1,-1,-1,-1,-1},
{0,4,12,17,27,53,59,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,19,26,31,46,49,51,56,60,-1,-1,-1,-1,-1,-1,-1},
{0,9,12,16,21,28,29,30,37,61,-1,-1,-1,-1,-1,-1},
{1,10,14,16,17,25,26,27,43,46,51,58,61,-1,-1,-1},
{11,24,29,57,63,64,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{9,23,26,33,36,38,49,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,11,35,38,50,55,60,61,63,-1,-1,-1,-1,-1,-1,-1},
{3,6,8,16,23,30,63,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,18,23,24,28,30,35,44,64,-1,-1,-1,-1,-1,-1,-1},
{13,17,25,35,48,56,59,66,70,-1,-1,-1,-1,-1,-1,-1},
{0,1,2,6,8,11,17,20,21,41,57,59,68,72,-1,-1},
{8,18,23,24,33,60,64,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{11,16,22,29,30,33,39,54,58,59,71,72,-1,-1,-1,-1},
{2,8,15,18,27,31,34,46,49,50,60,72,-1,-1,-1,-1},
{4,6,16,35,57,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,9,17,36,37,40,43,48,53,57,71,-1,-1,-1,-1,-1},
{2,19,38,43,50,53,69,70,72,73,74,-1,-1,-1,-1,-1},
{4,6,21,27,31,34,38,40,46,48,51,57,66,68,73,-1},
{2,29,38,58,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{17,20,25,33,34,38,39,42,47,56,61,66,-1,-1,-1,-1},
{1,36,40,43,47,48,51,62,-1,-1,-1,-1,-1,-1,-1,-1},
{3,7,9,21,40,43,47,49,59,64,77,78,-1,-1,-1,-1},
{1,3,12,17,18,25,26,38,44,50,55,85,-1,-1,-1,-1},
{2,7,10,29,31,40,46,47,49,53,54,58,59,63,74,77},
{7,9,21,39,41,47,49,71,-1,-1,-1,-1,-1,-1,-1,-1},
{14,20,27,31,32,35,43,48,50,52,59,60,68,70,-1,-1},
{4,10,26,34,45,64,69,74,76,-1,-1,-1,-1,-1,-1,-1},
{7,21,40,43,53,63,77,80,-1,-1,-1,-1,-1,-1,-1,-1},
{15,17,20,23,28,38,65,71,-1,-1,-1,-1,-1,-1,-1,-1},
{1,13,15,20,26,28,39,42,43,50,62,69,74,84,85,-1},
{4,7,18,20,23,30,35,41,47,50,66,67,71,85,-1,-1},
{15,23,60,63,66,77,79,81,-1,-1,-1,-1,-1,-1,-1,-1},
{1,7,8,10,18,29,37,42,46,47,50,57,70,72,82,-1},
{1,27,32,42,43,50,59,62,-1,-1,-1,-1,-1,-1,-1,-1}};


int availableMachines = numberOfMachines;

// Typedefs
typedef int[0, numberOfChains - 1] chainId_t;

// Ints and Arrays
int numberOfChainsDone = 0;
int tasksDone[numberOfTasks];
bool runnableChains[numberOfChains];
bool assignmentChoice[numberOfChains];

// Channels
broadcast chan startMachines;
broadcast chan chainMachineChan[numberOfChains];
broadcast chan activateChains;</declaration>
	<template>
		<name x="5" y="5">Composer</name>
		<declaration>// Place local declarations here.
clock time;</declaration>
		<location id="id0" x="-102" y="-255">
			<name x="-112" y="-289">Init</name>
			<label kind="invariant" x="-246" y="-238">numberOfChainsDone &lt;= numberOfChains</label> 
 <label kind="exponentialrate" x="-112" y="-221">0</label>
		</location>
		<location id="id1" x="331" y="-255">
			<name x="321" y="-289">Done</name>
		</location>
		<init ref="id0"/>
		<transition>
			<source ref="id0"/>
			<target ref="id1"/>
			<label kind="guard" x="-17" y="-289">numberOfChainsDone &gt;= numberOfChains</label>
		</transition>
	</template>
	<template>
		<name>Chain</name>
		<parameter>const chainId_t cid</parameter>
		<declaration>clock x;
const int chainSize = globalChainSize[cid];
int index = 0;

bool AllDependenciesDone()
{
    bool dependenciesDone = 1;
    int i;
    for (i = 0; i &lt; maxDependencies; i++)
    {
        int value = dependencies[globalChains[cid][index]][i];
        if (value == -1)
            return dependenciesDone;

        dependenciesDone &amp;= tasksDone[value];
    }
    return dependenciesDone;
}</declaration>
		<location id="id2" x="-68" y="-238">
			<name x="-78" y="-272">Idle</name>
			<label kind="exponentialrate" x="-51" y="-255">3</label>
		</location>
		<location id="id3" x="-76" y="51">
			<name x="-102" y="68">Running</name>
			<label kind="invariant" x="-178" y="85">x &lt;= durations[globalChains[cid][index]]</label>
		</location>
		<location id="id4" x="-450" y="-238">
			<name x="-460" y="-272">Done</name>
		</location>
		<init ref="id2"/>
		<transition controllable="false">
			<source ref="id2"/>
			<target ref="id4"/>
			<label kind="guard" x="-399" y="-280">index &gt;= chainSize &amp;&amp;
x &gt;= durations[globalChains[cid][index - 1]]</label>
			<label kind="assignment" x="-399" y="-238">numberOfChainsDone++</label>
		</transition>
		<transition controllable="false">
			<source ref="id3"/>
			<target ref="id2"/>
			<label kind="guard" x="-450" y="-127">x &gt;= durations[globalChains[cid][index]]</label>
			<label kind="assignment" x="-450" y="-110">availableMachines++,
tasksDone[globalChains[cid][index]] = 1,
index++</label>
			<nail x="-161" y="-85"/>
		</transition>
		<transition>
			<source ref="id2"/>
			<target ref="id3"/>
			<label kind="guard" x="34" y="-127">index &lt; chainSize &amp;&amp;
availableMachines &gt; 0 &amp;&amp; AllDependenciesDone()</label>
			<label kind="assignment" x="34" y="-85">availableMachines--,
x = 0</label>
			<nail x="17" y="-85"/>
		</transition>
	</template>
	<system>// Place template instantiations here.

// List one or more processes to be composed into a system.
system Composer, Chain;
    </system>
	<queries>
		<query>
			<formula>strategy TimeSchedule = minE (Composer.time) [&lt;=57] : &lt;&gt;Composer.Done</formula>
			<comment></comment>
		</query>
		<query>
			<formula>inf{Composer.Done} : Composer.time</formula>
			<comment></comment>
		</query>
		<query>
			<formula>A&lt;&gt; Composer.Done</formula>
			<comment></comment>
		</query>
		<query>
			<formula>E&lt;&gt; Composer.Done</formula>
			<comment></comment>
		</query>
	</queries>
</nta>
