<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/researchgroup/darts/uppaal/flat-1_2.dtd'>
<nta>
<declaration>//Variables
const int numberOfChains = 42;
const int numberOfTasks = 100;
const int numberOfMachines = 6;
const int maxDependencies = 11;
const int longestChain = 6;
const int globalChainSize[numberOfChains] = {4,6,4,2,3,3,2,6,4,1,3,4,1,5,1,2,3,4,3,1,2,1,3,3,3,3,2,1,2,1,1,3,2,2,2,1,1,1,1,1,1,1};
const int globalChains[numberOfChains][longestChain] = {
{0,18,62,95,-1,-1},
{1,7,44,52,72,82},
{2,36,77,83,-1,-1},
{3,87,-1,-1,-1,-1},
{4,56,91,-1,-1,-1},
{5,24,96,-1,-1,-1},
{6,60,-1,-1,-1,-1},
{8,28,55,61,76,86},
{9,26,71,80,-1,-1},
{10,-1,-1,-1,-1,-1},
{11,57,68,-1,-1,-1},
{12,17,48,67,-1,-1},
{13,-1,-1,-1,-1,-1},
{14,38,47,64,74,-1},
{15,-1,-1,-1,-1,-1},
{16,97,-1,-1,-1,-1},
{19,40,92,-1,-1,-1},
{20,39,45,89,-1,-1},
{21,85,99,-1,-1,-1},
{22,-1,-1,-1,-1,-1},
{23,46,-1,-1,-1,-1},
{25,-1,-1,-1,-1,-1},
{27,29,90,-1,-1,-1},
{30,93,98,-1,-1,-1},
{31,34,81,-1,-1,-1},
{32,37,73,-1,-1,-1},
{33,66,-1,-1,-1,-1},
{35,-1,-1,-1,-1,-1},
{41,70,-1,-1,-1,-1},
{42,-1,-1,-1,-1,-1},
{43,-1,-1,-1,-1,-1},
{49,59,69,-1,-1,-1},
{50,94,-1,-1,-1,-1},
{51,79,-1,-1,-1,-1},
{53,84,-1,-1,-1,-1},
{54,-1,-1,-1,-1,-1},
{58,-1,-1,-1,-1,-1},
{63,-1,-1,-1,-1,-1},
{65,-1,-1,-1,-1,-1},
{75,-1,-1,-1,-1,-1},
{78,-1,-1,-1,-1,-1},
{88,-1,-1,-1,-1,-1}};
int chainDuration[numberOfChains] = {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1};
int durations[numberOfTasks] = {2,11,1,6,7,1,4,12,3,1,4,3,1,3,8,6,4,5,2,3,6,2,7,17,3,2,5,1,4,10,11,1,1,5,1,15,3,3,9,13,1,11,3,1,1,1,1,5,2,2,1,3,3,3,15,5,2,1,4,18,2,9,2,1,11,1,13,5,2,6,3,9,2,3,1,1,3,3,2,12,1,11,1,5,5,7,6,1,10,7,4,1,4,5,1,3,3,1,2,4};
const int dependencies[numberOfTasks][maxDependencies] = {
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,12,16,-1,-1,-1,-1,-1,-1,-1,-1},
{0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,21,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,9,12,22,-1,-1,-1,-1,-1,-1,-1},
{5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,20,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{27,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{16,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{19,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,31,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{32,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,2,24,28,-1,-1,-1,-1,-1,-1,-1},
{6,32,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{14,26,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{20,25,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,9,19,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,14,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,7,13,24,38,-1,-1,-1,-1,-1,-1},
{12,22,39,-1,-1,-1,-1,-1,-1,-1,-1},
{11,23,26,42,-1,-1,-1,-1,-1,-1,-1},
{1,30,38,-1,-1,-1,-1,-1,-1,-1,-1},
{17,26,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,11,23,-1,-1,-1,-1,-1,-1,-1,-1},
{19,28,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{34,38,44,-1,-1,-1,-1,-1,-1,-1,-1},
{45,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{31,37,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{28,42,44,50,-1,-1,-1,-1,-1,-1,-1},
{4,21,34,-1,-1,-1,-1,-1,-1,-1,-1},
{4,11,22,28,37,-1,-1,-1,-1,-1,-1},
{24,41,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,37,49,-1,-1,-1,-1,-1,-1,-1,-1},
{6,9,13,19,45,48,51,56,-1,-1,-1},
{25,39,40,46,55,-1,-1,-1,-1,-1,-1},
{18,51,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{32,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{14,37,47,-1,-1,-1,-1,-1,-1,-1,-1},
{9,14,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{18,33,35,53,63,-1,-1,-1,-1,-1,-1},
{0,14,25,31,47,48,53,59,-1,-1,-1},
{22,23,24,46,57,64,-1,-1,-1,-1,-1},
{27,59,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{40,41,48,65,69,-1,-1,-1,-1,-1,-1},
{1,26,31,65,-1,-1,-1,-1,-1,-1,-1},
{31,44,46,52,-1,-1,-1,-1,-1,-1,-1},
{1,7,35,37,-1,-1,-1,-1,-1,-1,-1},
{31,58,64,-1,-1,-1,-1,-1,-1,-1,-1},
{17,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,12,49,61,-1,-1,-1,-1,-1,-1,-1},
{1,36,38,40,66,71,-1,-1,-1,-1,-1},
{34,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{38,51,53,-1,-1,-1,-1,-1,-1,-1,-1},
{20,48,58,71,73,-1,-1,-1,-1,-1,-1},
{21,26,34,65,-1,-1,-1,-1,-1,-1,-1},
{53,63,72,-1,-1,-1,-1,-1,-1,-1,-1},
{7,26,30,43,49,60,75,77,-1,-1,-1},
{19,53,55,76,-1,-1,-1,-1,-1,-1,-1},
{18,21,39,84,-1,-1,-1,-1,-1,-1,-1},
{16,24,61,68,76,-1,-1,-1,-1,-1,-1},
{3,27,29,50,57,65,77,-1,-1,-1,-1},
{40,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{23,36,45,72,84,-1,-1,-1,-1,-1,-1},
{29,81,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{17,37,44,46,49,53,55,56,59,76,77},
{26,27,40,47,49,-1,-1,-1,-1,-1,-1},
{26,30,56,84,-1,-1,-1,-1,-1,-1,-1},
{21,44,50,51,-1,-1,-1,-1,-1,-1,-1},
{1,7,11,17,20,58,62,89,-1,-1,-1},
{5,17,24,55,74,75,93,-1,-1,-1,-1},
{14,16,28,31,59,69,81,92,-1,-1,-1},
{73,93,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,23,37,63,73,85,-1,-1,-1,-1,-1}};


int availableMachines = numberOfMachines;

// Typedefs
typedef int[0, numberOfChains - 1] chainId_t;

// Ints and Arrays
int numberOfChainsDone = 0;
int tasksDone[numberOfTasks];
bool runnableChains[numberOfChains];
bool assignmentChoice[numberOfChains];

// Channels
broadcast chan startMachines;
broadcast chan chainMachineChan[numberOfChains];
broadcast chan activateChains;</declaration>
	<template>
		<name x="5" y="5">Composer</name>
		<declaration>// Place local declarations here.
clock time;</declaration>
		<location id="id0" x="-102" y="-255">
			<name x="-112" y="-289">Init</name>
			<label kind="invariant" x="-246" y="-238">numberOfChainsDone &lt;= numberOfChains</label> 
 <label kind="exponentialrate" x="-112" y="-221">0</label>
		</location>
		<location id="id1" x="331" y="-255">
			<name x="321" y="-289">Done</name>
		</location>
		<init ref="id0"/>
		<transition>
			<source ref="id0"/>
			<target ref="id1"/>
			<label kind="guard" x="-17" y="-289">numberOfChainsDone &gt;= numberOfChains</label>
		</transition>
	</template>
	<template>
		<name>Chain</name>
		<parameter>const chainId_t cid</parameter>
		<declaration>clock x;
const int chainSize = globalChainSize[cid];
int index = 0;

bool AllDependenciesDone()
{
    bool dependenciesDone = 1;
    int i;
    for (i = 0; i &lt; maxDependencies; i++)
    {
        int value = dependencies[globalChains[cid][index]][i];
        if (value == -1)
            return dependenciesDone;

        dependenciesDone &amp;= tasksDone[value];
    }
    return dependenciesDone;
}</declaration>
		<location id="id2" x="-68" y="-238">
			<name x="-78" y="-272">Idle</name>
			<label kind="exponentialrate" x="-51" y="-255">3</label>
		</location>
		<location id="id3" x="-76" y="51">
			<name x="-102" y="68">Running</name>
			<label kind="invariant" x="-178" y="85">x &lt;= durations[globalChains[cid][index]]</label>
		</location>
		<location id="id4" x="-450" y="-238">
			<name x="-460" y="-272">Done</name>
		</location>
		<init ref="id2"/>
		<transition controllable="false">
			<source ref="id2"/>
			<target ref="id4"/>
			<label kind="guard" x="-399" y="-280">index &gt;= chainSize &amp;&amp;
x &gt;= durations[globalChains[cid][index - 1]]</label>
			<label kind="assignment" x="-399" y="-238">numberOfChainsDone++</label>
		</transition>
		<transition controllable="false">
			<source ref="id3"/>
			<target ref="id2"/>
			<label kind="guard" x="-450" y="-127">x &gt;= durations[globalChains[cid][index]]</label>
			<label kind="assignment" x="-450" y="-110">availableMachines++,
tasksDone[globalChains[cid][index]] = 1,
index++</label>
			<nail x="-161" y="-85"/>
		</transition>
		<transition>
			<source ref="id2"/>
			<target ref="id3"/>
			<label kind="guard" x="34" y="-127">index &lt; chainSize &amp;&amp;
availableMachines &gt; 0 &amp;&amp; AllDependenciesDone()</label>
			<label kind="assignment" x="34" y="-85">availableMachines--,
x = 0</label>
			<nail x="17" y="-85"/>
		</transition>
	</template>
	<system>// Place template instantiations here.

// List one or more processes to be composed into a system.
system Composer, Chain;
    </system>
	<queries>
		<query>
			<formula>strategy TimeSchedule = minE (Composer.time) [&lt;=57] : &lt;&gt;Composer.Done</formula>
			<comment></comment>
		</query>
		<query>
			<formula>inf{Composer.Done} : Composer.time</formula>
			<comment></comment>
		</query>
		<query>
			<formula>A&lt;&gt; Composer.Done</formula>
			<comment></comment>
		</query>
		<query>
			<formula>E&lt;&gt; Composer.Done</formula>
			<comment></comment>
		</query>
	</queries>
</nta>
