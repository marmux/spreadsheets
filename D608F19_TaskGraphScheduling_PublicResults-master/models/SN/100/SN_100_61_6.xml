<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/researchgroup/darts/uppaal/flat-1_2.dtd'>
<nta>
<declaration>//Variables
const int numberOfChains = 27;
const int numberOfTasks = 100;
const int numberOfMachines = 6;
const int maxDependencies = 30;
const int longestChain = 10;
const int globalChainSize[numberOfChains] = {10,5,4,5,3,3,8,5,3,4,8,3,3,4,5,3,4,2,2,2,4,3,1,1,3,1,1};
const int globalChains[numberOfChains][longestChain] = {
{0,15,32,34,49,68,74,91,92,95},
{1,65,82,85,98,-1,-1,-1,-1,-1},
{2,75,94,97,-1,-1,-1,-1,-1,-1},
{3,45,80,87,99,-1,-1,-1,-1,-1},
{4,88,89,-1,-1,-1,-1,-1,-1,-1},
{5,90,96,-1,-1,-1,-1,-1,-1,-1},
{6,56,60,63,64,77,84,86,-1,-1},
{7,51,69,71,93,-1,-1,-1,-1,-1},
{8,79,81,-1,-1,-1,-1,-1,-1,-1},
{9,66,67,70,-1,-1,-1,-1,-1,-1},
{10,13,19,52,55,59,62,83,-1,-1},
{11,35,61,-1,-1,-1,-1,-1,-1,-1},
{12,42,73,-1,-1,-1,-1,-1,-1,-1},
{14,29,43,72,-1,-1,-1,-1,-1,-1},
{16,20,26,30,78,-1,-1,-1,-1,-1},
{17,57,76,-1,-1,-1,-1,-1,-1,-1},
{18,44,48,54,-1,-1,-1,-1,-1,-1},
{21,36,-1,-1,-1,-1,-1,-1,-1,-1},
{22,46,-1,-1,-1,-1,-1,-1,-1,-1},
{23,58,-1,-1,-1,-1,-1,-1,-1,-1},
{24,28,47,50,-1,-1,-1,-1,-1,-1},
{25,31,40,-1,-1,-1,-1,-1,-1,-1},
{27,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{33,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{37,38,41,-1,-1,-1,-1,-1,-1,-1},
{39,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{53,-1,-1,-1,-1,-1,-1,-1,-1,-1}};
int chainDuration[numberOfChains] = {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1};
int durations[numberOfTasks] = {7,10,9,3,3,8,9,9,1,7,6,2,4,1,5,7,5,6,2,8,4,3,6,7,1,8,5,8,7,5,4,4,5,2,5,9,10,5,4,8,6,7,5,4,9,7,9,9,1,7,8,5,6,3,6,8,5,1,10,5,4,9,5,8,2,1,8,3,10,5,1,9,4,6,4,8,7,6,3,5,6,1,4,1,8,1,6,6,9,10,6,5,5,4,2,3,10,9,3,9};
const int dependencies[numberOfTasks][maxDependencies] = {
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,3,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,4,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,4,5,6,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,2,7,8,9,10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,7,8,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,3,11,12,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,3,5,9,10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,2,14,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,4,8,10,12,13,14,17,18,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,10,11,12,13,15,16,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,5,9,16,17,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,6,8,10,15,18,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,8,21,22,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,14,15,19,20,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,8,9,14,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,4,5,6,12,16,18,19,20,21,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{9,18,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,5,10,13,16,19,20,24,25,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,11,12,14,18,19,21,27,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,7,10,11,13,16,26,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,4,11,18,20,24,25,30,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,3,5,10,14,15,18,29,30,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,8,12,13,15,24,29,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,3,4,12,15,17,20,22,32,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,5,8,11,19,21,24,31,32,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,3,13,16,18,21,24,27,28,35,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,3,16,22,23,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,2,4,8,11,16,24,37,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,7,10,15,23,29,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,13,19,22,23,29,30,31,37,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,3,4,5,9,35,38,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,3,8,11,12,13,14,18,27,32,36,41,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,3,6,9,11,13,26,29,36,41,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,2,13,16,17,18,19,27,28,32,39,40,41,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,2,3,4,11,19,22,29,35,40,43,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,5,8,10,11,17,22,24,31,38,43,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,14,28,31,33,35,37,39,40,44,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,4,10,11,17,22,24,25,28,31,34,39,40,44,45,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,6,8,9,14,15,20,22,24,27,29,33,34,35,38,39,42,44,45,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,7,10,15,20,25,32,37,39,42,43,47,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,4,7,13,14,23,32,35,38,39,44,49,50,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,4,6,11,12,13,14,16,17,19,20,22,23,26,28,34,35,37,44,50,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,12,19,32,37,38,45,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{10,14,18,19,23,24,33,47,48,51,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,4,6,9,11,18,19,20,32,41,42,43,52,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,2,4,6,12,15,25,35,41,44,46,50,51,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,9,17,19,20,22,25,27,28,31,32,35,41,43,45,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,5,10,16,23,26,28,31,32,37,38,47,52,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{13,14,17,22,23,24,30,42,47,52,55,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,4,7,11,13,21,26,33,43,44,45,49,56,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,6,8,27,33,34,35,36,38,40,46,49,52,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{9,13,17,19,31,34,36,37,38,45,46,53,54,57,58,59,61,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,5,7,9,11,13,16,17,19,20,21,28,36,38,47,49,53,54,56,57,60,61,-1,-1,-1,-1,-1,-1,-1,-1},
{2,4,5,20,21,35,38,43,45,47,50,54,56,57,59,63,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,3,12,13,17,25,27,28,29,34,36,40,44,45,47,61,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,2,7,8,9,11,24,27,48,56,58,64,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,11,15,16,23,26,30,38,43,44,47,48,53,54,57,58,59,60,61,66,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,3,7,10,14,17,23,24,29,30,32,34,40,44,46,48,49,58,59,60,61,62,63,-1,-1,-1,-1,-1,-1,-1},
{4,6,12,14,15,17,19,21,28,30,31,33,44,51,55,59,61,62,68,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,7,18,21,24,29,31,35,38,41,42,43,44,47,50,51,56,61,63,67,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,3,4,12,14,17,18,21,24,25,35,40,44,58,60,63,67,69,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,6,12,16,29,30,36,42,43,56,57,58,62,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,6,9,19,22,27,38,41,42,44,49,50,54,68,72,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,5,15,21,26,34,44,61,64,66,68,69,70,71,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,2,7,8,10,15,19,21,22,25,31,35,39,57,61,62,63,65,72,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,16,30,31,32,51,57,58,59,64,68,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,4,16,17,19,20,22,26,36,38,45,51,52,54,60,62,64,70,74,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{17,22,25,29,30,31,33,34,43,45,46,47,48,49,50,59,63,71,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,7,8,11,25,26,30,32,33,42,43,44,50,55,56,59,67,69,70,73,75,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,4,6,9,14,23,24,28,32,33,43,44,45,49,50,58,63,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,7,9,16,18,25,28,29,30,35,38,42,48,52,56,59,65,73,78,79,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,7,10,12,17,18,26,29,33,34,36,40,42,59,64,65,67,68,69,71,72,76,-1,-1,-1,-1,-1,-1,-1,-1},
{6,10,11,12,13,16,25,36,37,42,43,52,60,62,64,73,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,7,22,23,27,28,33,36,43,62,63,71,77,78,82,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,10,12,13,16,17,22,27,32,34,36,41,46,48,56,63,64,65,67,78,82,83,-1,-1,-1,-1,-1,-1,-1,-1},
{2,7,8,14,17,19,29,31,40,41,60,61,62,66,67,73,75,81,84,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,3,7,8,13,17,20,21,24,27,31,34,36,38,39,46,51,53,65,67,69,70,77,78,80,84,-1,-1,-1,-1},
{2,4,8,9,10,13,20,21,28,30,31,33,34,35,37,40,42,52,58,60,62,65,71,82,84,-1,-1,-1,-1,-1},
{1,4,10,17,30,47,51,54,62,64,65,70,74,76,82,88,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,14,16,23,26,27,33,36,39,41,51,55,56,65,71,76,77,82,86,87,88,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{12,14,17,21,22,23,34,40,49,54,68,69,72,74,77,79,80,87,89,90,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,21,24,25,26,32,35,37,47,53,64,65,67,70,76,77,83,86,87,91,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,5,12,23,25,28,37,41,43,44,46,56,58,60,64,70,71,72,85,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,4,22,24,25,26,27,28,32,51,56,63,66,67,69,72,75,78,83,87,89,-1,-1,-1,-1,-1,-1,-1,-1},
{2,5,18,19,27,34,41,44,47,49,50,55,63,65,73,74,79,92,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,4,8,9,11,12,14,15,17,24,25,26,29,30,32,33,35,37,38,39,41,42,48,51,54,67,71,76,82,90},
{0,4,6,7,9,14,15,20,23,29,36,40,46,48,62,66,67,69,82,84,94,96,-1,-1,-1,-1,-1,-1,-1,-1},
{5,6,7,8,10,17,20,23,26,31,32,35,42,43,54,55,61,63,66,68,69,72,77,80,84,85,86,87,92,93},
{0,8,12,15,23,31,44,48,55,56,59,63,66,67,70,74,76,87,88,90,92,-1,-1,-1,-1,-1,-1,-1,-1,-1}};


int availableMachines = numberOfMachines;

// Typedefs
typedef int[0, numberOfChains - 1] chainId_t;

// Ints and Arrays
int numberOfChainsDone = 0;
int tasksDone[numberOfTasks];
bool runnableChains[numberOfChains];
bool assignmentChoice[numberOfChains];

// Channels
broadcast chan startMachines;
broadcast chan chainMachineChan[numberOfChains];
broadcast chan activateChains;</declaration>
	<template>
		<name x="5" y="5">Composer</name>
		<declaration>// Place local declarations here.
clock time;</declaration>
		<location id="id0" x="-102" y="-255">
			<name x="-112" y="-289">Init</name>
			<label kind="invariant" x="-246" y="-238">numberOfChainsDone &lt;= numberOfChains</label> 
 <label kind="exponentialrate" x="-112" y="-221">0</label>
		</location>
		<location id="id1" x="331" y="-255">
			<name x="321" y="-289">Done</name>
		</location>
		<init ref="id0"/>
		<transition>
			<source ref="id0"/>
			<target ref="id1"/>
			<label kind="guard" x="-17" y="-289">numberOfChainsDone &gt;= numberOfChains</label>
		</transition>
	</template>
	<template>
		<name>Chain</name>
		<parameter>const chainId_t cid</parameter>
		<declaration>clock x;
const int chainSize = globalChainSize[cid];
int index = 0;

bool AllDependenciesDone()
{
    bool dependenciesDone = 1;
    int i;
    for (i = 0; i &lt; maxDependencies; i++)
    {
        int value = dependencies[globalChains[cid][index]][i];
        if (value == -1)
            return dependenciesDone;

        dependenciesDone &amp;= tasksDone[value];
    }
    return dependenciesDone;
}</declaration>
		<location id="id2" x="-68" y="-238">
			<name x="-78" y="-272">Idle</name>
			<label kind="exponentialrate" x="-51" y="-255">3</label>
		</location>
		<location id="id3" x="-76" y="51">
			<name x="-102" y="68">Running</name>
			<label kind="invariant" x="-178" y="85">x &lt;= durations[globalChains[cid][index]]</label>
		</location>
		<location id="id4" x="-450" y="-238">
			<name x="-460" y="-272">Done</name>
		</location>
		<init ref="id2"/>
		<transition controllable="false">
			<source ref="id2"/>
			<target ref="id4"/>
			<label kind="guard" x="-399" y="-280">index &gt;= chainSize &amp;&amp;
x &gt;= durations[globalChains[cid][index - 1]]</label>
			<label kind="assignment" x="-399" y="-238">numberOfChainsDone++</label>
		</transition>
		<transition controllable="false">
			<source ref="id3"/>
			<target ref="id2"/>
			<label kind="guard" x="-450" y="-127">x &gt;= durations[globalChains[cid][index]]</label>
			<label kind="assignment" x="-450" y="-110">availableMachines++,
tasksDone[globalChains[cid][index]] = 1,
index++</label>
			<nail x="-161" y="-85"/>
		</transition>
		<transition>
			<source ref="id2"/>
			<target ref="id3"/>
			<label kind="guard" x="34" y="-127">index &lt; chainSize &amp;&amp;
availableMachines &gt; 0 &amp;&amp; AllDependenciesDone()</label>
			<label kind="assignment" x="34" y="-85">availableMachines--,
x = 0</label>
			<nail x="17" y="-85"/>
		</transition>
	</template>
	<system>// Place template instantiations here.

// List one or more processes to be composed into a system.
system Composer, Chain;
    </system>
	<queries>
		<query>
			<formula>strategy TimeSchedule = minE (Composer.time) [&lt;=57] : &lt;&gt;Composer.Done</formula>
			<comment></comment>
		</query>
		<query>
			<formula>inf{Composer.Done} : Composer.time</formula>
			<comment></comment>
		</query>
		<query>
			<formula>A&lt;&gt; Composer.Done</formula>
			<comment></comment>
		</query>
		<query>
			<formula>E&lt;&gt; Composer.Done</formula>
			<comment></comment>
		</query>
	</queries>
</nta>
