<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/researchgroup/darts/uppaal/flat-1_2.dtd'>
<nta>
<declaration>//Variables
const int numberOfChains = 29;
const int numberOfTasks = 100;
const int numberOfMachines = 10;
const int maxDependencies = 25;
const int longestChain = 7;
const int globalChainSize[numberOfChains] = {5,7,2,4,3,7,2,2,6,3,5,4,5,5,5,5,4,4,4,2,2,3,2,1,1,3,1,1,2};
const int globalChains[numberOfChains][longestChain] = {
{0,18,22,89,92,-1,-1},
{1,28,40,70,80,95,98},
{2,94,-1,-1,-1,-1,-1},
{3,76,84,97,-1,-1,-1},
{4,56,90,-1,-1,-1,-1},
{5,68,71,81,82,87,93},
{6,85,-1,-1,-1,-1,-1},
{7,86,-1,-1,-1,-1,-1},
{8,69,74,77,83,88,-1},
{9,30,99,-1,-1,-1,-1},
{10,41,54,72,91,-1,-1},
{11,38,75,96,-1,-1,-1},
{12,36,44,57,79,-1,-1},
{13,31,66,67,73,-1,-1},
{14,20,47,51,65,-1,-1},
{15,55,60,61,78,-1,-1},
{16,48,50,58,-1,-1,-1},
{17,21,25,42,-1,-1,-1},
{19,37,43,53,-1,-1,-1},
{23,63,-1,-1,-1,-1,-1},
{24,45,-1,-1,-1,-1,-1},
{26,39,59,-1,-1,-1,-1},
{27,29,-1,-1,-1,-1,-1},
{32,-1,-1,-1,-1,-1,-1},
{33,-1,-1,-1,-1,-1,-1},
{34,52,64,-1,-1,-1,-1},
{35,-1,-1,-1,-1,-1,-1},
{46,-1,-1,-1,-1,-1,-1},
{49,62,-1,-1,-1,-1,-1}};
int chainDuration[numberOfChains] = {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1};
int durations[numberOfTasks] = {1,14,10,6,20,16,16,6,11,2,18,6,12,12,1,5,3,11,14,8,1,1,10,17,5,9,3,16,19,8,20,12,6,19,5,5,11,5,20,11,13,4,4,4,11,15,11,1,6,20,10,4,18,14,2,6,11,14,4,20,10,7,11,3,17,1,11,6,5,2,5,14,3,19,11,17,13,19,15,14,1,16,5,11,6,9,17,7,12,8,11,12,16,1,8,2,4,11,8,1};
const int dependencies[numberOfTasks][maxDependencies] = {
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,8,9,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,7,14,15,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,9,14,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,12,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,6,10,12,14,16,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,11,14,17,18,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,9,14,17,18,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,10,13,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,11,15,21,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,11,13,19,20,21,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{10,12,13,15,24,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,9,19,24,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,2,7,9,12,13,14,18,27,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,5,6,13,23,27,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,2,6,9,16,17,20,27,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,7,10,11,13,16,25,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,12,15,16,22,27,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,6,13,15,20,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,7,26,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,7,12,21,23,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,5,8,12,17,19,24,26,28,35,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,3,7,14,19,25,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,5,7,11,17,20,24,30,35,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,9,14,16,22,26,34,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,16,28,29,31,35,39,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,3,6,8,10,16,21,24,38,39,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,7,10,16,25,31,34,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,6,15,16,27,34,37,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,4,8,12,27,31,36,39,40,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,9,10,16,20,24,27,29,39,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,15,22,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{10,11,20,24,25,29,30,37,42,43,44,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,8,11,13,16,21,23,25,28,42,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,6,7,15,21,24,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,21,27,29,30,31,43,48,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,8,21,25,31,33,35,40,46,47,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,12,13,17,27,34,44,49,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,2,6,15,29,43,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,6,8,13,18,20,21,33,36,41,52,53,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,7,14,15,16,17,29,30,32,36,37,42,43,46,50,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,2,4,5,13,19,20,25,32,33,38,40,43,47,50,52,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,7,10,11,15,17,21,25,27,34,35,43,44,46,51,53,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,16,21,32,41,46,50,55,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{14,27,32,38,39,52,57,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{15,16,18,28,39,44,45,48,52,54,55,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{15,16,20,26,29,30,52,55,59,60,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{13,14,23,49,51,54,61,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{19,23,24,25,32,38,46,47,55,57,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,16,17,19,23,35,46,48,52,62,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,3,7,17,24,34,38,42,44,46,51,62,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,3,4,22,23,26,31,34,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{14,20,23,26,31,35,38,45,51,56,59,62,66,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,3,5,27,33,44,54,58,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,6,7,8,11,16,21,22,23,25,37,39,41,53,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,11,18,24,27,28,31,35,40,41,46,53,55,58,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{22,25,26,40,46,47,49,52,56,57,60,68,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,21,29,31,41,52,54,57,62,64,69,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{10,12,17,18,24,32,38,43,44,47,58,61,67,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,8,10,17,18,19,33,34,53,56,57,69,70,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,4,10,15,21,23,31,36,38,44,48,52,53,59,61,63,72,-1,-1,-1,-1,-1,-1,-1,-1},
{1,3,5,9,12,15,21,22,28,33,35,36,42,45,53,55,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,6,14,23,24,42,44,49,53,56,58,62,69,74,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{9,20,31,35,45,47,50,51,61,64,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{13,16,22,28,31,41,46,57,59,77,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,4,8,22,35,40,44,55,58,62,64,68,70,72,74,76,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,3,6,8,14,23,25,29,34,45,60,65,67,71,73,77,78,79,-1,-1,-1,-1,-1,-1,-1},
{3,16,24,28,37,48,49,50,54,65,72,81,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{10,13,31,33,34,48,49,50,53,54,61,62,64,68,70,72,77,81,-1,-1,-1,-1,-1,-1,-1},
{5,6,8,13,17,23,26,27,40,41,42,45,47,55,73,76,79,80,83,-1,-1,-1,-1,-1,-1},
{1,4,6,9,10,11,19,31,37,39,41,45,52,54,55,56,62,68,-1,-1,-1,-1,-1,-1,-1},
{0,7,21,24,25,26,32,33,35,36,38,41,42,50,57,63,67,72,76,77,78,79,80,82,-1},
{3,18,24,28,42,47,55,59,61,65,66,67,68,79,82,83,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{14,17,21,30,34,39,43,47,49,57,59,60,69,70,71,74,80,83,-1,-1,-1,-1,-1,-1,-1},
{0,2,5,6,16,18,22,27,34,38,39,51,53,60,62,68,71,83,-1,-1,-1,-1,-1,-1,-1},
{4,8,32,40,49,50,54,56,59,61,64,66,68,72,78,80,83,84,86,87,-1,-1,-1,-1,-1},
{4,6,20,23,33,37,63,72,73,74,80,89,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,10,13,14,16,17,18,20,24,31,39,41,46,50,53,54,57,64,75,77,86,87,88,89,90},
{11,14,18,20,23,28,29,35,42,43,48,52,55,66,67,69,79,82,83,87,-1,-1,-1,-1,-1},
{2,3,13,23,28,31,40,51,61,74,82,86,89,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,5,8,10,27,28,29,42,46,51,56,64,75,80,81,83,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{20,22,24,27,31,34,35,46,49,52,58,59,61,62,74,75,81,89,-1,-1,-1,-1,-1,-1,-1},
{1,3,7,15,21,22,23,24,30,33,43,53,64,65,74,78,82,84,85,-1,-1,-1,-1,-1,-1},
{0,1,6,20,21,35,42,53,58,60,66,93,95,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,3,10,11,18,30,31,41,43,53,54,58,60,61,63,65,72,73,74,-1,-1,-1,-1,-1,-1}};


int availableMachines = numberOfMachines;

// Typedefs
typedef int[0, numberOfChains - 1] chainId_t;

// Ints and Arrays
int numberOfChainsDone = 0;
int tasksDone[numberOfTasks];
bool runnableChains[numberOfChains];
bool assignmentChoice[numberOfChains];

// Channels
broadcast chan startMachines;
broadcast chan chainMachineChan[numberOfChains];
broadcast chan activateChains;</declaration>
	<template>
		<name x="5" y="5">Composer</name>
		<declaration>// Place local declarations here.
clock time;</declaration>
		<location id="id0" x="-102" y="-255">
			<name x="-112" y="-289">Init</name>
			<label kind="invariant" x="-246" y="-238">numberOfChainsDone &lt;= numberOfChains</label> 
 <label kind="exponentialrate" x="-112" y="-221">0</label>
		</location>
		<location id="id1" x="331" y="-255">
			<name x="321" y="-289">Done</name>
		</location>
		<init ref="id0"/>
		<transition>
			<source ref="id0"/>
			<target ref="id1"/>
			<label kind="guard" x="-17" y="-289">numberOfChainsDone &gt;= numberOfChains</label>
		</transition>
	</template>
	<template>
		<name>Chain</name>
		<parameter>const chainId_t cid</parameter>
		<declaration>clock x;
const int chainSize = globalChainSize[cid];
int index = 0;

bool AllDependenciesDone()
{
    bool dependenciesDone = 1;
    int i;
    for (i = 0; i &lt; maxDependencies; i++)
    {
        int value = dependencies[globalChains[cid][index]][i];
        if (value == -1)
            return dependenciesDone;

        dependenciesDone &amp;= tasksDone[value];
    }
    return dependenciesDone;
}</declaration>
		<location id="id2" x="-68" y="-238">
			<name x="-78" y="-272">Idle</name>
			<label kind="exponentialrate" x="-51" y="-255">3</label>
		</location>
		<location id="id3" x="-76" y="51">
			<name x="-102" y="68">Running</name>
			<label kind="invariant" x="-178" y="85">x &lt;= durations[globalChains[cid][index]]</label>
		</location>
		<location id="id4" x="-450" y="-238">
			<name x="-460" y="-272">Done</name>
		</location>
		<init ref="id2"/>
		<transition controllable="false">
			<source ref="id2"/>
			<target ref="id4"/>
			<label kind="guard" x="-399" y="-280">index &gt;= chainSize &amp;&amp;
x &gt;= durations[globalChains[cid][index - 1]]</label>
			<label kind="assignment" x="-399" y="-238">numberOfChainsDone++</label>
		</transition>
		<transition controllable="false">
			<source ref="id3"/>
			<target ref="id2"/>
			<label kind="guard" x="-450" y="-127">x &gt;= durations[globalChains[cid][index]]</label>
			<label kind="assignment" x="-450" y="-110">availableMachines++,
tasksDone[globalChains[cid][index]] = 1,
index++</label>
			<nail x="-161" y="-85"/>
		</transition>
		<transition>
			<source ref="id2"/>
			<target ref="id3"/>
			<label kind="guard" x="34" y="-127">index &lt; chainSize &amp;&amp;
availableMachines &gt; 0 &amp;&amp; AllDependenciesDone()</label>
			<label kind="assignment" x="34" y="-85">availableMachines--,
x = 0</label>
			<nail x="17" y="-85"/>
		</transition>
	</template>
	<system>// Place template instantiations here.

// List one or more processes to be composed into a system.
system Composer, Chain;
    </system>
	<queries>
		<query>
			<formula>strategy TimeSchedule = minE (Composer.time) [&lt;=57] : &lt;&gt;Composer.Done</formula>
			<comment></comment>
		</query>
		<query>
			<formula>inf{Composer.Done} : Composer.time</formula>
			<comment></comment>
		</query>
		<query>
			<formula>A&lt;&gt; Composer.Done</formula>
			<comment></comment>
		</query>
		<query>
			<formula>E&lt;&gt; Composer.Done</formula>
			<comment></comment>
		</query>
	</queries>
</nta>
