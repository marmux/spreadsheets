<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/researchgroup/darts/uppaal/flat-1_2.dtd'>
<nta>
<declaration>//Variables
const int numberOfChains = 31;
const int numberOfTasks = 100;
const int numberOfMachines = 8;
const int maxDependencies = 38;
const int longestChain = 7;
const int globalChainSize[numberOfChains] = {7,5,3,7,4,3,3,3,3,2,4,4,2,5,5,5,3,3,2,3,2,3,2,4,3,1,2,2,1,2,2};
const int globalChains[numberOfChains][longestChain] = {
{0,8,19,40,62,83,94},
{1,63,77,89,96,-1,-1},
{2,90,98,-1,-1,-1,-1},
{3,39,51,57,68,81,95},
{4,71,82,93,-1,-1,-1},
{5,66,91,-1,-1,-1,-1},
{6,74,92,-1,-1,-1,-1},
{7,73,97,-1,-1,-1,-1},
{9,88,99,-1,-1,-1,-1},
{10,87,-1,-1,-1,-1,-1},
{11,26,36,76,-1,-1,-1},
{12,45,58,70,-1,-1,-1},
{13,85,-1,-1,-1,-1,-1},
{14,59,61,78,86,-1,-1},
{15,21,38,67,72,-1,-1},
{16,25,46,64,84,-1,-1},
{17,44,75,-1,-1,-1,-1},
{18,56,79,-1,-1,-1,-1},
{20,80,-1,-1,-1,-1,-1},
{22,53,69,-1,-1,-1,-1},
{23,50,-1,-1,-1,-1,-1},
{24,52,65,-1,-1,-1,-1},
{27,47,-1,-1,-1,-1,-1},
{28,41,49,60,-1,-1,-1},
{29,37,43,-1,-1,-1,-1},
{30,-1,-1,-1,-1,-1,-1},
{31,48,-1,-1,-1,-1,-1},
{32,54,-1,-1,-1,-1,-1},
{33,-1,-1,-1,-1,-1,-1},
{34,42,-1,-1,-1,-1,-1},
{35,55,-1,-1,-1,-1,-1}};
int chainDuration[numberOfChains] = {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1};
int durations[numberOfTasks] = {13,1,7,3,9,9,3,16,7,3,6,1,5,21,8,23,4,22,11,8,18,14,3,3,7,4,4,2,5,5,1,4,6,1,2,4,2,5,2,5,14,6,1,2,3,5,5,2,7,1,11,7,4,9,13,21,10,5,8,1,1,10,7,5,12,9,3,2,4,5,29,5,10,1,1,4,7,1,2,22,3,3,3,21,8,26,11,6,18,1,3,5,3,3,27,5,5,11,7,8};
const int dependencies[numberOfTasks][maxDependencies] = {
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,2,3,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,2,3,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,3,5,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,2,4,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,8,9,12,14,15,16,17,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,5,8,10,11,12,17,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,2,7,9,10,11,12,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,4,5,6,7,10,11,12,13,15,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,3,7,8,16,17,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,5,6,7,8,12,16,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,2,5,7,8,10,11,13,14,17,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,2,5,6,8,10,12,13,14,16,17,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,2,5,7,8,9,10,11,12,14,17,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,8,10,11,12,14,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,4,5,6,8,10,11,16,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,3,4,5,12,13,14,15,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,6,9,12,14,15,17,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,3,7,10,11,13,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,10,11,12,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,2,5,7,9,14,15,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,5,7,8,9,10,14,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,3,4,5,7,10,11,13,14,17,20,22,25,26,29,30,34,35,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,5,14,15,16,17,19,22,24,25,28,29,30,31,32,34,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,5,6,8,9,13,14,16,17,21,23,24,25,26,27,28,29,31,32,34,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,2,3,5,8,11,13,17,20,21,22,25,26,28,30,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,6,8,17,19,21,22,28,29,30,31,33,35,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,2,3,8,15,16,18,23,24,25,27,28,30,33,35,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,2,3,4,6,11,13,18,23,26,29,31,34,35,36,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,7,10,11,16,18,19,21,28,29,33,36,37,39,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,2,3,6,7,11,13,16,17,22,29,30,33,35,36,38,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,9,10,11,12,16,19,20,22,23,29,30,31,35,36,38,39,40,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,4,7,9,10,14,20,22,24,25,30,31,33,36,39,40,41,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,3,5,9,10,11,13,16,23,25,27,30,32,34,35,37,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,4,6,7,11,15,16,17,24,25,26,31,37,40,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,5,7,10,14,16,19,20,21,24,27,32,35,38,41,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,5,7,10,12,14,17,20,21,23,24,28,30,31,32,38,39,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,2,3,4,7,9,11,12,13,16,17,19,20,21,27,29,32,39,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,4,6,7,8,17,18,20,21,23,24,35,39,40,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,6,7,12,13,16,18,22,26,28,29,31,39,40,41,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{9,17,18,19,22,27,32,33,34,36,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,5,7,12,13,14,17,20,21,24,34,35,38,41,51,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,8,12,13,17,18,20,24,26,27,28,30,32,36,40,44,45,47,48,50,52,53,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,3,4,5,6,7,8,14,15,16,18,19,20,21,24,25,27,37,39,40,45,46,51,53,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,4,6,7,12,14,16,20,25,27,28,29,30,31,33,34,36,39,45,47,50,51,53,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,7,9,10,14,16,18,19,20,22,26,27,30,32,33,35,36,37,39,41,42,45,47,52,53,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,7,13,17,18,35,37,41,42,43,49,51,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,5,6,10,12,15,17,20,27,28,31,35,38,39,40,41,48,51,54,59,60,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,2,3,6,8,15,19,21,22,27,30,36,37,40,41,42,48,49,51,53,54,55,60,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,3,4,5,6,8,18,24,25,27,29,30,34,35,40,41,42,44,45,54,56,57,58,59,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,3,5,6,10,19,20,24,29,30,31,33,38,42,45,46,50,55,60,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,12,13,15,20,21,22,24,28,30,31,32,34,35,42,43,45,49,52,54,55,56,57,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,3,4,5,7,16,17,22,23,24,25,26,27,28,30,32,37,39,40,42,45,46,47,50,51,52,53,56,58,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,6,10,13,14,15,24,26,28,29,33,37,38,42,49,51,52,54,55,58,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,3,5,14,17,22,26,29,30,31,32,33,39,40,44,45,48,49,50,52,53,57,59,60,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,4,10,11,18,21,22,24,29,32,33,42,43,47,48,50,51,53,54,55,58,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,4,9,13,14,16,20,21,22,26,28,32,36,37,39,43,44,45,49,53,55,56,58,59,61,63,65,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,2,3,4,7,10,12,14,15,29,30,31,35,38,39,47,48,49,50,51,52,55,60,61,62,64,65,66,67,69,-1,-1,-1,-1,-1,-1,-1,-1},
{1,7,8,16,19,21,31,33,36,38,39,42,43,46,47,52,56,57,65,67,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,2,5,6,7,8,10,14,21,23,29,33,36,39,41,42,45,47,48,50,52,54,56,58,59,66,67,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,4,5,6,9,10,11,12,15,16,19,21,22,23,25,26,27,28,29,38,39,45,48,51,53,56,60,63,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,6,13,14,19,22,28,29,32,34,37,38,44,45,47,51,52,56,61,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,9,10,13,16,17,18,21,26,27,31,33,34,36,37,40,41,43,45,48,49,51,54,56,60,61,62,64,68,69,-1,-1,-1,-1,-1,-1,-1,-1},
{1,3,5,6,8,9,15,16,17,19,23,26,27,35,39,48,55,56,58,59,62,63,65,66,67,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,6,10,12,14,15,16,22,26,27,28,38,39,40,41,42,43,46,47,48,57,61,66,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,4,11,12,14,16,17,19,20,21,22,23,24,29,41,47,53,56,57,65,68,69,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,2,3,4,16,20,21,22,23,24,25,27,30,32,33,35,40,41,43,44,45,56,57,60,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,3,5,8,12,19,21,26,27,43,46,47,52,54,56,57,58,60,66,67,68,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,4,7,8,10,11,17,18,21,22,25,29,32,33,36,37,38,42,56,58,62,63,66,67,70,71,74,75,78,79,81,-1,-1,-1,-1,-1,-1,-1},
{0,4,8,9,10,13,16,19,21,22,23,27,29,30,32,36,37,42,43,44,45,48,49,52,53,56,62,63,68,71,72,74,76,79,-1,-1,-1,-1},
{15,16,22,23,25,31,37,42,49,51,52,57,59,64,75,81,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,10,12,13,15,21,27,30,32,34,35,36,37,38,41,42,44,46,47,48,49,56,60,62,63,64,67,69,71,74,77,78,-1,-1,-1,-1,-1,-1},
{1,6,12,13,17,18,21,22,25,26,27,28,31,34,38,41,42,43,45,47,48,51,55,62,64,69,72,75,78,79,-1,-1,-1,-1,-1,-1,-1,-1},
{0,7,10,13,15,17,18,20,21,22,25,31,32,33,39,40,41,49,51,60,61,62,67,71,72,75,76,77,79,80,-1,-1,-1,-1,-1,-1,-1,-1},
{0,2,9,11,12,14,18,19,20,23,25,27,29,31,32,33,36,43,44,45,46,50,54,56,57,61,62,64,70,72,74,75,79,80,-1,-1,-1,-1},
{1,2,4,5,9,11,14,15,16,22,23,25,27,29,30,31,34,40,42,45,47,49,54,58,59,62,63,64,65,66,68,70,71,75,77,80,81,-1},
{1,2,3,6,7,8,10,12,13,14,15,16,17,21,25,28,29,30,31,36,37,39,41,44,46,48,53,56,62,63,69,74,-1,-1,-1,-1,-1,-1},
{3,6,8,12,16,20,22,28,29,32,47,55,62,64,65,66,67,68,69,74,77,78,79,80,83,85,88,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,10,11,12,15,16,17,24,29,31,33,34,35,38,41,42,51,54,55,56,57,58,60,62,64,66,70,72,74,80,81,84,87,-1,-1,-1,-1,-1},
{4,5,6,7,9,12,15,16,17,18,19,22,24,27,28,30,31,37,39,41,44,46,47,49,53,57,60,64,69,71,73,78,80,81,82,84,85,88},
{0,1,3,4,5,8,9,14,15,16,18,20,23,24,25,26,31,33,34,35,40,42,43,46,48,51,52,54,57,60,62,64,68,69,83,84,-1,-1},
{1,3,5,7,9,14,17,20,22,23,25,26,28,29,31,35,37,38,41,42,43,51,57,59,61,63,64,65,66,72,74,75,79,81,86,88,-1,-1},
{0,6,7,11,14,17,18,22,23,24,27,28,29,30,32,33,34,35,39,40,42,51,54,62,67,68,69,70,71,72,79,80,82,84,88,89,-1,-1},
{6,15,16,28,30,32,34,35,36,37,43,44,45,47,48,50,51,52,53,54,56,57,59,65,72,73,80,82,84,90,-1,-1,-1,-1,-1,-1,-1,-1},
{3,5,7,8,15,16,20,22,24,25,26,28,29,30,31,32,33,44,47,48,50,55,59,67,68,71,75,77,81,86,90,-1,-1,-1,-1,-1,-1,-1},
{10,15,18,19,20,22,23,27,28,30,34,35,36,41,42,43,44,52,53,60,62,63,64,65,66,67,68,69,70,75,85,86,88,89,-1,-1,-1,-1}};


int availableMachines = numberOfMachines;

// Typedefs
typedef int[0, numberOfChains - 1] chainId_t;

// Ints and Arrays
int numberOfChainsDone = 0;
int tasksDone[numberOfTasks];
bool runnableChains[numberOfChains];
bool assignmentChoice[numberOfChains];

// Channels
broadcast chan startMachines;
broadcast chan chainMachineChan[numberOfChains];
broadcast chan activateChains;</declaration>
	<template>
		<name x="5" y="5">Composer</name>
		<declaration>// Place local declarations here.
clock time;</declaration>
		<location id="id0" x="-102" y="-255">
			<name x="-112" y="-289">Init</name>
			<label kind="invariant" x="-246" y="-238">numberOfChainsDone &lt;= numberOfChains</label> 
 <label kind="exponentialrate" x="-112" y="-221">0</label>
		</location>
		<location id="id1" x="331" y="-255">
			<name x="321" y="-289">Done</name>
		</location>
		<init ref="id0"/>
		<transition>
			<source ref="id0"/>
			<target ref="id1"/>
			<label kind="guard" x="-17" y="-289">numberOfChainsDone &gt;= numberOfChains</label>
		</transition>
	</template>
	<template>
		<name>Chain</name>
		<parameter>const chainId_t cid</parameter>
		<declaration>clock x;
const int chainSize = globalChainSize[cid];
int index = 0;

bool AllDependenciesDone()
{
    bool dependenciesDone = 1;
    int i;
    for (i = 0; i &lt; maxDependencies; i++)
    {
        int value = dependencies[globalChains[cid][index]][i];
        if (value == -1)
            return dependenciesDone;

        dependenciesDone &amp;= tasksDone[value];
    }
    return dependenciesDone;
}</declaration>
		<location id="id2" x="-68" y="-238">
			<name x="-78" y="-272">Idle</name>
			<label kind="exponentialrate" x="-51" y="-255">3</label>
		</location>
		<location id="id3" x="-76" y="51">
			<name x="-102" y="68">Running</name>
			<label kind="invariant" x="-178" y="85">x &lt;= durations[globalChains[cid][index]]</label>
		</location>
		<location id="id4" x="-450" y="-238">
			<name x="-460" y="-272">Done</name>
		</location>
		<init ref="id2"/>
		<transition controllable="false">
			<source ref="id2"/>
			<target ref="id4"/>
			<label kind="guard" x="-399" y="-280">index &gt;= chainSize &amp;&amp;
x &gt;= durations[globalChains[cid][index - 1]]</label>
			<label kind="assignment" x="-399" y="-238">numberOfChainsDone++</label>
		</transition>
		<transition controllable="false">
			<source ref="id3"/>
			<target ref="id2"/>
			<label kind="guard" x="-450" y="-127">x &gt;= durations[globalChains[cid][index]]</label>
			<label kind="assignment" x="-450" y="-110">availableMachines++,
tasksDone[globalChains[cid][index]] = 1,
index++</label>
			<nail x="-161" y="-85"/>
		</transition>
		<transition>
			<source ref="id2"/>
			<target ref="id3"/>
			<label kind="guard" x="34" y="-127">index &lt; chainSize &amp;&amp;
availableMachines &gt; 0 &amp;&amp; AllDependenciesDone()</label>
			<label kind="assignment" x="34" y="-85">availableMachines--,
x = 0</label>
			<nail x="17" y="-85"/>
		</transition>
	</template>
	<system>// Place template instantiations here.

// List one or more processes to be composed into a system.
system Composer, Chain;
    </system>
	<queries>
		<query>
			<formula>strategy TimeSchedule = minE (Composer.time) [&lt;=57] : &lt;&gt;Composer.Done</formula>
			<comment></comment>
		</query>
		<query>
			<formula>inf{Composer.Done} : Composer.time</formula>
			<comment></comment>
		</query>
		<query>
			<formula>A&lt;&gt; Composer.Done</formula>
			<comment></comment>
		</query>
		<query>
			<formula>E&lt;&gt; Composer.Done</formula>
			<comment></comment>
		</query>
	</queries>
</nta>
