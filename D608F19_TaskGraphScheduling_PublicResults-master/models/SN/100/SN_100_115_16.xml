<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/researchgroup/darts/uppaal/flat-1_2.dtd'>
<nta>
<declaration>//Variables
const int numberOfChains = 36;
const int numberOfTasks = 100;
const int numberOfMachines = 16;
const int maxDependencies = 37;
const int longestChain = 8;
const int globalChainSize[numberOfChains] = {8,4,3,3,2,2,3,4,3,3,2,5,2,4,2,4,3,2,2,3,5,4,3,4,4,2,2,2,2,1,1,2,1,1,1,1};
const int globalChains[numberOfChains][longestChain] = {
{0,12,26,47,49,54,63,93},
{1,61,80,95,-1,-1,-1,-1},
{2,69,92,-1,-1,-1,-1,-1},
{3,82,96,-1,-1,-1,-1,-1},
{4,94,-1,-1,-1,-1,-1,-1},
{5,97,-1,-1,-1,-1,-1,-1},
{6,75,89,-1,-1,-1,-1,-1},
{7,53,79,90,-1,-1,-1,-1},
{8,29,98,-1,-1,-1,-1,-1},
{9,76,88,-1,-1,-1,-1,-1},
{10,99,-1,-1,-1,-1,-1,-1},
{11,33,73,83,91,-1,-1,-1},
{13,81,-1,-1,-1,-1,-1,-1},
{14,48,67,77,-1,-1,-1,-1},
{15,78,-1,-1,-1,-1,-1,-1},
{16,60,70,87,-1,-1,-1,-1},
{17,68,86,-1,-1,-1,-1,-1},
{18,65,-1,-1,-1,-1,-1,-1},
{19,85,-1,-1,-1,-1,-1,-1},
{20,64,84,-1,-1,-1,-1,-1},
{21,31,55,71,74,-1,-1,-1},
{22,51,59,62,-1,-1,-1,-1},
{23,38,66,-1,-1,-1,-1,-1},
{24,42,57,72,-1,-1,-1,-1},
{25,34,43,58,-1,-1,-1,-1},
{27,50,-1,-1,-1,-1,-1,-1},
{28,35,-1,-1,-1,-1,-1,-1},
{30,56,-1,-1,-1,-1,-1,-1},
{32,37,-1,-1,-1,-1,-1,-1},
{36,-1,-1,-1,-1,-1,-1,-1},
{39,-1,-1,-1,-1,-1,-1,-1},
{40,52,-1,-1,-1,-1,-1,-1},
{41,-1,-1,-1,-1,-1,-1,-1},
{44,-1,-1,-1,-1,-1,-1,-1},
{45,-1,-1,-1,-1,-1,-1,-1},
{46,-1,-1,-1,-1,-1,-1,-1}};
int chainDuration[numberOfChains] = {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1};
int durations[numberOfTasks] = {6,6,13,11,9,18,13,10,9,10,11,10,11,4,10,14,6,13,8,11,15,16,16,10,10,7,12,10,9,6,8,14,14,12,13,14,11,11,15,8,10,14,8,5,10,10,8,6,14,16,12,11,6,12,7,7,12,16,7,10,9,6,14,7,15,6,9,16,13,15,15,12,10,6,12,4,6,4,13,9,12,9,7,16,17,9,11,13,7,9,17,12,8,7,8,9,12,10,10,12};
const int dependencies[numberOfTasks][maxDependencies] = {
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,3,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,6,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,2,3,4,6,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,5,7,8,10,11,13,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,5,7,8,10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,5,6,10,12,13,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,8,10,11,14,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,10,13,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,2,6,8,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,11,14,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,2,9,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{9,10,12,13,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,6,7,9,11,14,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,2,5,7,9,14,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,2,6,11,12,13,14,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,4,13,14,15,17,18,20,21,23,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,5,12,17,18,21,22,23,24,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,2,3,5,6,7,8,9,11,12,16,19,22,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,3,4,5,6,9,15,17,21,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,5,6,7,10,12,13,14,16,17,19,21,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,13,15,18,21,26,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,3,5,8,9,10,11,17,18,19,23,24,26,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,2,5,11,13,14,15,20,21,22,23,25,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,6,13,14,16,22,25,26,27,28,29,31,32,34,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,2,3,4,19,20,21,26,28,29,34,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,3,5,11,15,20,21,22,29,30,31,32,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,2,4,7,8,13,14,19,20,21,23,25,29,32,33,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,4,6,8,12,16,17,19,22,26,27,29,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,5,21,23,25,28,30,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,5,6,8,10,13,14,15,19,21,24,32,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,3,4,7,10,11,15,18,20,22,24,26,28,30,31,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,5,7,8,10,12,16,19,21,22,27,33,34,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,8,9,10,11,12,19,27,33,34,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,2,3,9,10,16,21,28,32,33,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,3,4,10,11,15,17,18,20,29,34,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,2,8,12,15,19,20,21,25,26,28,29,30,33,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,4,8,10,11,12,13,14,16,17,22,29,33,34,37,38,41,42,43,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,2,3,4,5,7,9,10,12,17,20,21,23,24,27,28,29,30,34,35,36,39,42,47,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,2,4,6,8,9,13,16,17,25,26,27,28,31,38,40,41,45,46,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,2,6,8,10,11,12,15,18,20,21,22,23,24,25,27,33,34,35,36,37,41,43,45,46,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,5,6,14,16,17,19,22,26,30,32,40,46,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,3,4,5,6,7,8,9,11,15,16,18,19,23,26,31,32,35,37,39,40,43,47,50,51,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,2,3,7,10,11,12,15,17,18,20,26,28,29,37,38,40,41,42,43,49,50,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,4,7,10,11,15,17,20,21,22,23,24,28,31,32,33,35,36,38,40,45,46,47,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,3,4,6,7,13,18,19,23,30,31,36,37,41,44,45,46,52,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,3,6,7,10,13,14,15,16,23,24,27,28,32,36,40,41,42,43,48,50,52,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,4,5,7,11,22,23,26,30,33,37,39,43,48,51,52,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,3,4,9,10,15,17,20,22,24,32,34,36,37,42,43,46,48,49,51,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,4,5,12,13,14,15,16,20,24,25,30,32,35,38,39,40,41,42,47,48,49,51,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,5,7,9,11,14,19,23,27,29,30,32,36,38,41,42,43,44,46,47,49,52,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,2,11,13,17,22,23,24,25,27,28,31,35,36,39,41,43,44,48,53,54,57,59,61,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,3,4,9,10,11,12,15,18,19,20,23,30,31,32,33,37,38,42,43,44,47,51,54,56,57,58,59,60,61,-1,-1,-1,-1,-1,-1},
{8,9,10,13,14,17,18,20,23,27,28,31,34,35,36,46,48,49,53,54,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,4,8,12,13,14,15,16,17,18,21,23,29,30,31,38,39,41,42,44,48,57,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,2,5,7,10,12,17,18,23,24,25,28,29,30,32,35,37,38,41,48,50,53,57,58,59,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,8,9,10,13,14,18,19,22,23,27,32,33,34,37,46,47,48,49,50,60,61,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,5,10,14,15,17,19,21,23,25,26,29,31,35,36,37,39,43,48,49,54,56,60,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,3,4,10,11,12,15,17,23,25,26,28,29,30,31,36,38,41,44,49,51,53,54,55,58,59,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,2,8,9,10,14,17,19,23,29,36,37,39,42,44,45,48,50,52,53,54,55,56,58,60,61,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,3,5,7,10,12,14,15,19,21,27,33,37,38,39,41,43,45,52,55,56,57,58,60,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,4,9,13,14,18,22,29,31,35,40,41,42,43,44,45,50,51,52,56,57,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,5,6,7,10,13,17,18,19,20,21,23,24,26,28,33,37,38,42,43,49,50,54,56,57,58,59,60,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,2,5,7,10,18,27,29,30,33,36,37,38,42,43,45,46,51,56,57,62,67,68,71,73,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,2,3,4,5,6,15,16,22,26,29,30,31,32,33,36,37,43,44,45,47,51,62,71,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,3,7,9,13,15,16,17,25,26,27,28,29,31,32,35,36,37,39,40,43,44,49,50,52,53,56,59,64,65,67,69,70,73,-1,-1,-1},
{0,2,10,14,15,19,21,27,29,31,36,37,40,45,47,49,52,53,55,56,61,67,68,70,71,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,2,4,11,13,15,20,25,26,27,28,29,33,36,38,39,40,41,44,48,52,56,58,64,65,68,69,71,72,-1,-1,-1,-1,-1,-1,-1,-1},
{0,4,5,6,7,8,10,15,18,22,23,25,32,38,39,42,44,45,46,51,53,54,58,59,60,63,66,68,73,-1,-1,-1,-1,-1,-1,-1,-1},
{0,3,5,8,9,11,12,16,20,22,33,38,39,41,44,45,49,51,53,54,57,58,61,62,64,65,67,68,70,72,-1,-1,-1,-1,-1,-1,-1},
{1,6,7,8,11,12,13,14,17,23,24,32,34,40,41,42,52,54,57,58,61,62,67,69,70,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,2,3,4,12,16,18,23,25,29,32,38,40,42,43,45,50,51,52,54,55,56,59,60,62,71,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,8,11,12,19,21,22,27,28,29,30,32,33,37,38,42,48,49,52,55,61,63,64,65,67,70,71,73,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,4,12,13,14,17,18,24,25,31,34,36,37,38,39,40,43,44,46,48,52,53,55,58,59,60,62,64,68,-1,-1,-1,-1,-1,-1,-1,-1},
{2,5,14,16,17,18,19,22,24,31,35,37,40,44,46,49,51,52,53,58,61,62,63,67,72,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,7,9,18,35,36,37,41,44,46,47,49,50,51,53,54,58,60,62,66,67,68,69,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,4,5,7,10,12,16,19,21,25,27,35,36,37,38,42,44,45,47,54,56,67,70,72,82,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,8,9,11,13,15,16,17,18,20,21,29,30,31,35,36,39,41,51,52,57,60,65,69,71,72,73,75,76,79,84,-1,-1,-1,-1,-1,-1},
{5,13,15,17,19,21,23,27,29,33,38,40,47,49,50,54,57,58,59,60,62,65,67,68,69,70,71,73,75,77,78,82,83,-1,-1,-1,-1},
{0,4,5,10,15,17,18,20,24,27,32,33,35,36,37,40,41,44,45,46,48,52,55,56,59,63,65,68,73,78,79,86,-1,-1,-1,-1,-1},
{0,1,6,10,11,13,14,16,18,28,33,34,37,39,40,44,47,49,51,52,55,56,58,59,60,65,66,67,69,77,78,83,84,85,86,-1,-1},
{0,1,2,3,9,12,14,15,22,23,29,32,36,40,50,54,57,58,59,60,64,65,66,69,70,73,74,78,83,-1,-1,-1,-1,-1,-1,-1,-1},
{0,4,5,10,17,20,23,24,26,28,29,32,34,35,36,40,42,43,44,45,47,51,52,57,63,65,66,69,70,73,74,84,-1,-1,-1,-1,-1},
{0,3,4,5,6,7,8,9,10,11,17,19,20,22,24,25,30,31,34,39,42,43,44,46,47,49,50,59,65,71,73,77,78,80,81,82,-1},
{1,2,3,5,6,7,14,15,16,18,21,24,26,27,30,31,34,40,44,46,47,49,50,55,61,62,66,68,69,72,73,76,80,85,-1,-1,-1},
{1,3,5,8,9,11,12,15,23,24,30,31,32,34,35,44,48,51,52,61,63,66,67,68,73,77,80,81,82,83,-1,-1,-1,-1,-1,-1,-1},
{0,2,4,5,8,9,11,12,13,17,24,29,33,49,53,55,58,59,60,63,65,69,71,73,74,76,78,79,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,4,7,8,9,11,12,14,20,23,25,29,31,32,38,42,43,44,48,53,57,60,62,68,70,71,75,77,81,82,84,-1,-1,-1,-1,-1,-1},
{0,4,7,9,10,18,20,23,24,28,31,32,33,36,37,40,47,48,50,51,53,57,59,60,64,66,67,69,71,72,73,74,75,81,82,84,85}};


int availableMachines = numberOfMachines;

// Typedefs
typedef int[0, numberOfChains - 1] chainId_t;

// Ints and Arrays
int numberOfChainsDone = 0;
int tasksDone[numberOfTasks];
bool runnableChains[numberOfChains];
bool assignmentChoice[numberOfChains];

// Channels
broadcast chan startMachines;
broadcast chan chainMachineChan[numberOfChains];
broadcast chan activateChains;</declaration>
	<template>
		<name x="5" y="5">Composer</name>
		<declaration>// Place local declarations here.
clock time;</declaration>
		<location id="id0" x="-102" y="-255">
			<name x="-112" y="-289">Init</name>
			<label kind="invariant" x="-246" y="-238">numberOfChainsDone &lt;= numberOfChains</label> 
 <label kind="exponentialrate" x="-112" y="-221">0</label>
		</location>
		<location id="id1" x="331" y="-255">
			<name x="321" y="-289">Done</name>
		</location>
		<init ref="id0"/>
		<transition>
			<source ref="id0"/>
			<target ref="id1"/>
			<label kind="guard" x="-17" y="-289">numberOfChainsDone &gt;= numberOfChains</label>
		</transition>
	</template>
	<template>
		<name>Chain</name>
		<parameter>const chainId_t cid</parameter>
		<declaration>clock x;
const int chainSize = globalChainSize[cid];
int index = 0;

bool AllDependenciesDone()
{
    bool dependenciesDone = 1;
    int i;
    for (i = 0; i &lt; maxDependencies; i++)
    {
        int value = dependencies[globalChains[cid][index]][i];
        if (value == -1)
            return dependenciesDone;

        dependenciesDone &amp;= tasksDone[value];
    }
    return dependenciesDone;
}</declaration>
		<location id="id2" x="-68" y="-238">
			<name x="-78" y="-272">Idle</name>
			<label kind="exponentialrate" x="-51" y="-255">3</label>
		</location>
		<location id="id3" x="-76" y="51">
			<name x="-102" y="68">Running</name>
			<label kind="invariant" x="-178" y="85">x &lt;= durations[globalChains[cid][index]]</label>
		</location>
		<location id="id4" x="-450" y="-238">
			<name x="-460" y="-272">Done</name>
		</location>
		<init ref="id2"/>
		<transition controllable="false">
			<source ref="id2"/>
			<target ref="id4"/>
			<label kind="guard" x="-399" y="-280">index &gt;= chainSize &amp;&amp;
x &gt;= durations[globalChains[cid][index - 1]]</label>
			<label kind="assignment" x="-399" y="-238">numberOfChainsDone++</label>
		</transition>
		<transition controllable="false">
			<source ref="id3"/>
			<target ref="id2"/>
			<label kind="guard" x="-450" y="-127">x &gt;= durations[globalChains[cid][index]]</label>
			<label kind="assignment" x="-450" y="-110">availableMachines++,
tasksDone[globalChains[cid][index]] = 1,
index++</label>
			<nail x="-161" y="-85"/>
		</transition>
		<transition>
			<source ref="id2"/>
			<target ref="id3"/>
			<label kind="guard" x="34" y="-127">index &lt; chainSize &amp;&amp;
availableMachines &gt; 0 &amp;&amp; AllDependenciesDone()</label>
			<label kind="assignment" x="34" y="-85">availableMachines--,
x = 0</label>
			<nail x="17" y="-85"/>
		</transition>
	</template>
	<system>// Place template instantiations here.

// List one or more processes to be composed into a system.
system Composer, Chain;
    </system>
	<queries>
		<query>
			<formula>strategy TimeSchedule = minE (Composer.time) [&lt;=57] : &lt;&gt;Composer.Done</formula>
			<comment></comment>
		</query>
		<query>
			<formula>inf{Composer.Done} : Composer.time</formula>
			<comment></comment>
		</query>
		<query>
			<formula>A&lt;&gt; Composer.Done</formula>
			<comment></comment>
		</query>
		<query>
			<formula>E&lt;&gt; Composer.Done</formula>
			<comment></comment>
		</query>
	</queries>
</nta>
