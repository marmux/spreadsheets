<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/researchgroup/darts/uppaal/flat-1_2.dtd'>
<nta>
<declaration>//Variables
const int numberOfChains = 31;
const int numberOfTasks = 100;
const int numberOfMachines = 5;
const int maxDependencies = 18;
const int longestChain = 10;
const int globalChainSize[numberOfChains] = {7,10,2,4,3,7,4,3,4,4,3,3,2,4,2,7,3,3,3,4,1,1,2,3,2,3,1,1,1,2,1};
const int globalChains[numberOfChains][longestChain] = {
{0,4,16,47,61,83,99,-1,-1,-1},
{1,26,28,30,31,38,69,74,77,81},
{2,94,-1,-1,-1,-1,-1,-1,-1,-1},
{3,88,96,98,-1,-1,-1,-1,-1,-1},
{5,68,85,-1,-1,-1,-1,-1,-1,-1},
{6,11,48,62,63,67,89,-1,-1,-1},
{7,39,51,87,-1,-1,-1,-1,-1,-1},
{8,50,93,-1,-1,-1,-1,-1,-1,-1},
{9,29,71,86,-1,-1,-1,-1,-1,-1},
{10,66,75,84,-1,-1,-1,-1,-1,-1},
{12,24,95,-1,-1,-1,-1,-1,-1,-1},
{13,70,80,-1,-1,-1,-1,-1,-1,-1},
{14,73,-1,-1,-1,-1,-1,-1,-1,-1},
{15,42,91,92,-1,-1,-1,-1,-1,-1},
{17,76,-1,-1,-1,-1,-1,-1,-1,-1},
{18,27,37,44,56,58,72,-1,-1,-1},
{19,78,90,-1,-1,-1,-1,-1,-1,-1},
{20,54,79,-1,-1,-1,-1,-1,-1,-1},
{21,55,82,-1,-1,-1,-1,-1,-1,-1},
{22,43,59,97,-1,-1,-1,-1,-1,-1},
{23,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{25,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{32,64,-1,-1,-1,-1,-1,-1,-1,-1},
{33,36,60,-1,-1,-1,-1,-1,-1,-1},
{34,53,-1,-1,-1,-1,-1,-1,-1,-1},
{35,52,57,-1,-1,-1,-1,-1,-1,-1},
{40,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{41,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{45,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{46,49,-1,-1,-1,-1,-1,-1,-1,-1},
{65,-1,-1,-1,-1,-1,-1,-1,-1,-1}};
int chainDuration[numberOfChains] = {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1};
int durations[numberOfTasks] = {5,6,7,15,6,11,5,11,9,6,4,7,11,9,5,4,11,9,6,9,12,5,12,3,15,13,7,11,6,9,5,10,10,6,6,5,13,3,5,4,6,5,6,3,11,17,17,5,5,4,12,7,11,12,8,10,7,13,12,9,11,7,15,9,13,6,13,13,7,8,9,5,7,7,5,7,12,5,9,7,9,4,8,6,12,17,10,12,14,10,5,5,13,6,6,5,7,5,5,8};
const int dependencies[numberOfTasks][maxDependencies] = {
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,5,6,10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,5,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,12,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{12,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,12,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,13,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,7,9,19,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{10,19,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,3,6,12,15,21,23,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{14,17,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,11,12,21,23,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,10,15,18,20,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,3,7,8,10,12,14,16,24,26,-1,-1,-1,-1,-1,-1,-1,-1},
{5,7,9,11,19,20,24,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,9,10,24,25,26,28,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,18,20,28,30,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,19,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{13,27,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{18,32,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{9,16,32,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,7,14,21,33,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,18,24,27,32,34,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,2,3,29,30,31,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,6,7,19,21,23,26,32,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{9,17,34,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,19,21,24,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,6,13,15,18,19,21,38,40,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{9,16,18,21,22,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,8,13,21,24,34,37,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,7,8,18,21,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,4,9,10,14,16,21,39,44,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,5,11,26,34,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,4,26,32,43,46,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,7,8,12,15,22,31,32,42,44,-1,-1,-1,-1,-1,-1,-1,-1},
{2,15,28,39,42,50,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{14,35,44,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{14,21,28,34,46,48,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,14,20,23,25,26,39,41,52,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,13,20,21,24,38,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,22,23,33,37,44,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,16,18,38,43,52,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{10,12,24,43,49,50,56,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{16,18,21,28,31,41,43,56,57,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,21,27,29,36,37,56,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{10,13,16,17,20,25,26,37,47,54,-1,-1,-1,-1,-1,-1,-1,-1},
{5,14,17,21,24,30,33,38,48,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{30,38,55,57,58,59,60,62,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{12,14,19,32,43,46,47,54,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{11,12,36,37,39,47,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,10,14,17,20,21,24,26,36,45,56,62,-1,-1,-1,-1,-1,-1},
{5,8,11,23,32,44,46,49,51,58,61,63,-1,-1,-1,-1,-1,-1},
{0,1,2,5,6,18,21,25,27,35,39,40,53,59,60,66,-1,-1},
{3,6,23,30,33,38,47,51,52,57,67,-1,-1,-1,-1,-1,-1,-1},
{10,13,19,31,35,38,42,47,52,53,55,-1,-1,-1,-1,-1,-1,-1},
{2,9,21,22,29,30,34,42,62,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{21,32,33,35,44,46,58,65,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{13,14,22,25,31,39,57,60,65,67,-1,-1,-1,-1,-1,-1,-1,-1},
{1,41,47,59,63,69,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,6,30,33,37,58,66,70,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,7,15,17,43,47,60,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,11,24,28,42,46,51,52,55,58,62,68,69,72,74,75,-1,-1},
{0,2,5,17,19,21,29,36,40,55,59,-1,-1,-1,-1,-1,-1,-1},
{5,7,28,33,36,53,54,56,57,65,67,-1,-1,-1,-1,-1,-1,-1},
{34,39,45,51,65,70,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{14,15,17,21,31,35,48,70,77,79,80,-1,-1,-1,-1,-1,-1,-1},
{20,26,38,43,55,74,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,11,13,16,19,27,29,41,53,61,69,70,-1,-1,-1,-1,-1,-1},
{13,16,25,34,38,45,65,66,75,76,-1,-1,-1,-1,-1,-1,-1,-1},
{12,18,32,33,36,38,68,75,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,13,32,34,40,44,45,65,68,71,76,-1,-1,-1,-1,-1,-1,-1},
{11,21,22,24,27,30,32,33,46,51,52,56,63,73,-1,-1,-1,-1},
{3,5,6,26,38,41,48,52,55,62,64,67,70,79,83,84,86,-1},
{2,3,7,9,13,19,21,22,29,30,50,51,54,56,67,78,-1,-1},
{10,22,46,53,63,75,78,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,14,15,27,33,35,40,42,44,75,-1,-1,-1,-1,-1,-1,-1,-1},
{21,35,58,71,74,79,91,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{25,28,29,49,50,57,62,72,92,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,2,9,22,29,36,37,38,42,45,49,63,65,67,69,78,92,-1},
{1,9,17,24,30,32,49,69,72,79,-1,-1,-1,-1,-1,-1,-1,-1},
{13,23,33,37,76,88,95,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,19,25,45,59,62,64,65,83,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,5,9,15,16,17,19,22,41,48,56,60,71,75,96,-1,-1,-1},
{4,11,14,16,18,32,34,46,51,53,54,55,60,65,82,83,87,93}};


int availableMachines = numberOfMachines;

// Typedefs
typedef int[0, numberOfChains - 1] chainId_t;

// Ints and Arrays
int numberOfChainsDone = 0;
int tasksDone[numberOfTasks];
bool runnableChains[numberOfChains];
bool assignmentChoice[numberOfChains];

// Channels
broadcast chan startMachines;
broadcast chan chainMachineChan[numberOfChains];
broadcast chan activateChains;</declaration>
	<template>
		<name x="5" y="5">Composer</name>
		<declaration>// Place local declarations here.
clock time;</declaration>
		<location id="id0" x="-102" y="-255">
			<name x="-112" y="-289">Init</name>
			<label kind="invariant" x="-246" y="-238">numberOfChainsDone &lt;= numberOfChains</label> 
 <label kind="exponentialrate" x="-112" y="-221">0</label>
		</location>
		<location id="id1" x="331" y="-255">
			<name x="321" y="-289">Done</name>
		</location>
		<init ref="id0"/>
		<transition>
			<source ref="id0"/>
			<target ref="id1"/>
			<label kind="guard" x="-17" y="-289">numberOfChainsDone &gt;= numberOfChains</label>
		</transition>
	</template>
	<template>
		<name>Chain</name>
		<parameter>const chainId_t cid</parameter>
		<declaration>clock x;
const int chainSize = globalChainSize[cid];
int index = 0;

bool AllDependenciesDone()
{
    bool dependenciesDone = 1;
    int i;
    for (i = 0; i &lt; maxDependencies; i++)
    {
        int value = dependencies[globalChains[cid][index]][i];
        if (value == -1)
            return dependenciesDone;

        dependenciesDone &amp;= tasksDone[value];
    }
    return dependenciesDone;
}</declaration>
		<location id="id2" x="-68" y="-238">
			<name x="-78" y="-272">Idle</name>
			<label kind="exponentialrate" x="-51" y="-255">3</label>
		</location>
		<location id="id3" x="-76" y="51">
			<name x="-102" y="68">Running</name>
			<label kind="invariant" x="-178" y="85">x &lt;= durations[globalChains[cid][index]]</label>
		</location>
		<location id="id4" x="-450" y="-238">
			<name x="-460" y="-272">Done</name>
		</location>
		<init ref="id2"/>
		<transition controllable="false">
			<source ref="id2"/>
			<target ref="id4"/>
			<label kind="guard" x="-399" y="-280">index &gt;= chainSize &amp;&amp;
x &gt;= durations[globalChains[cid][index - 1]]</label>
			<label kind="assignment" x="-399" y="-238">numberOfChainsDone++</label>
		</transition>
		<transition controllable="false">
			<source ref="id3"/>
			<target ref="id2"/>
			<label kind="guard" x="-450" y="-127">x &gt;= durations[globalChains[cid][index]]</label>
			<label kind="assignment" x="-450" y="-110">availableMachines++,
tasksDone[globalChains[cid][index]] = 1,
index++</label>
			<nail x="-161" y="-85"/>
		</transition>
		<transition>
			<source ref="id2"/>
			<target ref="id3"/>
			<label kind="guard" x="34" y="-127">index &lt; chainSize &amp;&amp;
availableMachines &gt; 0 &amp;&amp; AllDependenciesDone()</label>
			<label kind="assignment" x="34" y="-85">availableMachines--,
x = 0</label>
			<nail x="17" y="-85"/>
		</transition>
	</template>
	<system>// Place template instantiations here.

// List one or more processes to be composed into a system.
system Composer, Chain;
    </system>
	<queries>
		<query>
			<formula>strategy TimeSchedule = minE (Composer.time) [&lt;=57] : &lt;&gt;Composer.Done</formula>
			<comment></comment>
		</query>
		<query>
			<formula>inf{Composer.Done} : Composer.time</formula>
			<comment></comment>
		</query>
		<query>
			<formula>A&lt;&gt; Composer.Done</formula>
			<comment></comment>
		</query>
		<query>
			<formula>E&lt;&gt; Composer.Done</formula>
			<comment></comment>
		</query>
	</queries>
</nta>
