<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/researchgroup/darts/uppaal/flat-1_2.dtd'>
<nta>
<declaration>//Variables
const int numberOfChains = 27;
const int numberOfTasks = 100;
const int numberOfMachines = 9;
const int maxDependencies = 23;
const int longestChain = 10;
const int globalChainSize[numberOfChains] = {4,10,3,5,5,6,4,4,5,5,3,4,3,3,4,3,3,2,5,5,2,2,2,3,2,1,2};
const int globalChains[numberOfChains][longestChain] = {
{0,2,29,91,-1,-1,-1,-1,-1,-1},
{1,21,43,48,59,66,82,89,94,95},
{3,79,99,-1,-1,-1,-1,-1,-1,-1},
{4,69,78,88,98,-1,-1,-1,-1,-1},
{5,45,60,67,77,-1,-1,-1,-1,-1},
{6,32,55,90,92,93,-1,-1,-1,-1},
{7,57,74,75,-1,-1,-1,-1,-1,-1},
{8,63,80,84,-1,-1,-1,-1,-1,-1},
{9,46,76,87,97,-1,-1,-1,-1,-1},
{10,39,56,64,72,-1,-1,-1,-1,-1},
{11,33,86,-1,-1,-1,-1,-1,-1,-1},
{12,34,42,85,-1,-1,-1,-1,-1,-1},
{13,26,96,-1,-1,-1,-1,-1,-1,-1},
{14,50,83,-1,-1,-1,-1,-1,-1,-1},
{15,47,73,81,-1,-1,-1,-1,-1,-1},
{16,54,71,-1,-1,-1,-1,-1,-1,-1},
{17,20,61,-1,-1,-1,-1,-1,-1,-1},
{18,49,-1,-1,-1,-1,-1,-1,-1,-1},
{19,38,58,68,70,-1,-1,-1,-1,-1},
{22,25,28,37,65,-1,-1,-1,-1,-1},
{23,53,-1,-1,-1,-1,-1,-1,-1,-1},
{24,52,-1,-1,-1,-1,-1,-1,-1,-1},
{27,44,-1,-1,-1,-1,-1,-1,-1,-1},
{30,51,62,-1,-1,-1,-1,-1,-1,-1},
{31,41,-1,-1,-1,-1,-1,-1,-1,-1},
{35,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{36,40,-1,-1,-1,-1,-1,-1,-1,-1}};
int chainDuration[numberOfChains] = {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1};
int durations[numberOfTasks] = {14,10,1,16,12,3,12,12,19,12,1,4,16,9,18,11,4,7,1,17,18,10,13,5,11,20,20,19,19,18,16,17,10,5,20,8,16,6,8,14,19,11,13,8,15,5,19,10,7,13,15,8,17,2,2,7,6,7,19,8,8,5,8,20,15,9,14,10,16,6,20,17,7,5,17,19,9,14,14,15,20,2,19,3,11,10,9,5,15,19,19,2,20,14,2,19,15,20,9,3};
const int dependencies[numberOfTasks][maxDependencies] = {
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,11,13,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,8,10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,11,15,16,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,6,10,15,18,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,6,8,12,17,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,19,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,7,12,13,14,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,18,21,22,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{13,15,16,17,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{11,12,13,16,22,23,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,7,8,9,13,18,22,23,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,9,11,14,16,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,7,9,14,25,26,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,2,3,4,5,7,9,16,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,12,16,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,10,16,18,26,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,5,6,7,9,15,17,24,27,31,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,4,9,11,17,19,26,32,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,3,6,12,30,33,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,12,23,33,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{21,24,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{10,28,29,34,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{19,26,31,36,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,9,10,21,22,24,34,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{15,16,17,36,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,8,16,31,34,35,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,6,10,11,32,34,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,4,16,21,26,29,31,34,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{17,23,26,27,29,33,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,3,5,6,11,12,15,18,19,20,24,28,36,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,6,8,9,11,19,28,34,39,41,43,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,6,10,11,15,35,37,38,45,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,5,13,16,21,35,38,39,43,45,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,6,11,18,21,26,30,35,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,13,14,15,29,34,39,44,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,4,30,38,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,9,11,24,26,31,40,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,9,22,23,25,34,44,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{9,12,15,16,20,21,23,28,32,43,51,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,4,15,17,18,29,30,32,42,49,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,2,15,20,22,24,32,33,38,39,42,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,2,3,7,23,24,25,26,34,41,42,47,52,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,25,38,39,47,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{14,21,35,36,39,40,43,46,48,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,3,7,16,32,45,51,54,57,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,7,11,12,20,22,25,28,37,41,54,57,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,12,13,15,42,51,60,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,4,7,8,20,21,36,37,41,44,50,56,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,13,14,19,23,25,27,30,35,40,42,47,49,56,59,60,61,-1,-1,-1,-1,-1,-1},
{3,23,28,35,37,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,5,6,8,10,15,20,27,33,38,40,46,50,59,60,-1,-1,-1,-1,-1,-1,-1},
{3,4,5,7,10,13,14,16,20,25,26,27,30,32,33,35,44,46,60,61,65,-1,-1},
{14,26,43,58,64,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,4,5,7,8,15,19,24,25,33,35,38,40,48,56,67,-1,-1,-1,-1,-1,-1},
{4,5,13,15,26,33,41,53,68,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,9,15,22,28,30,36,39,41,42,54,55,62,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,11,13,18,24,28,30,39,53,55,58,59,64,65,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,16,23,28,32,35,37,40,41,44,45,47,51,53,65,-1,-1,-1,-1,-1,-1,-1,-1},
{11,29,40,47,48,49,52,53,54,56,57,58,63,69,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{9,12,22,25,32,48,53,59,60,71,74,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{9,14,16,23,25,27,39,42,45,46,57,68,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,13,16,21,37,40,44,45,47,50,67,70,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,5,13,17,19,21,22,39,46,47,48,51,60,69,73,74,-1,-1,-1,-1,-1,-1,-1},
{3,8,10,21,26,33,41,43,46,54,59,64,71,73,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,11,18,28,30,32,33,34,36,41,48,51,53,56,62,63,64,-1,-1,-1,-1,-1,-1},
{12,19,28,33,43,52,64,73,79,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,4,21,33,42,45,54,55,60,65,66,71,73,74,77,81,-1,-1,-1,-1,-1,-1,-1},
{9,12,16,25,32,50,51,68,71,78,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,6,7,16,18,22,34,41,45,54,56,58,80,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{11,38,41,42,46,58,63,79,80,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,11,15,18,22,33,40,41,50,53,58,59,63,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{18,28,31,36,39,40,42,45,48,54,56,68,74,76,82,-1,-1,-1,-1,-1,-1,-1,-1},
{1,7,15,18,19,20,27,32,43,47,50,60,64,65,78,80,81,-1,-1,-1,-1,-1,-1},
{8,14,18,19,23,31,36,38,43,48,58,61,66,67,73,79,82,-1,-1,-1,-1,-1,-1},
{2,7,11,22,33,34,39,40,43,55,63,78,88,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,2,10,15,18,29,30,31,32,33,36,38,50,51,52,62,64,72,76,-1,-1,-1,-1},
{1,17,18,24,30,41,46,49,59,64,66,72,73,80,85,90,-1,-1,-1,-1,-1,-1,-1},
{0,16,18,35,39,40,44,58,65,76,78,80,81,92,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{10,15,22,31,37,48,53,56,59,63,66,67,68,70,73,79,86,89,90,-1,-1,-1,-1},
{1,3,9,10,15,24,26,42,44,47,54,58,60,63,71,74,77,78,80,81,89,90,94},
{5,8,12,14,19,24,26,28,33,37,50,52,54,62,82,-1,-1,-1,-1,-1,-1,-1,-1},
{11,12,17,22,23,29,36,37,41,53,56,70,76,87,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,3,5,7,12,19,20,21,26,43,56,58,62,64,65,70,72,75,81,88,96,-1,-1},
{4,19,21,34,35,36,46,50,52,63,73,74,75,77,79,82,83,86,94,-1,-1,-1,-1}};


int availableMachines = numberOfMachines;

// Typedefs
typedef int[0, numberOfChains - 1] chainId_t;

// Ints and Arrays
int numberOfChainsDone = 0;
int tasksDone[numberOfTasks];
bool runnableChains[numberOfChains];
bool assignmentChoice[numberOfChains];

// Channels
broadcast chan startMachines;
broadcast chan chainMachineChan[numberOfChains];
broadcast chan activateChains;</declaration>
	<template>
		<name x="5" y="5">Composer</name>
		<declaration>// Place local declarations here.
clock time;</declaration>
		<location id="id0" x="-102" y="-255">
			<name x="-112" y="-289">Init</name>
			<label kind="invariant" x="-246" y="-238">numberOfChainsDone &lt;= numberOfChains</label> 
 <label kind="exponentialrate" x="-112" y="-221">0</label>
		</location>
		<location id="id1" x="331" y="-255">
			<name x="321" y="-289">Done</name>
		</location>
		<init ref="id0"/>
		<transition>
			<source ref="id0"/>
			<target ref="id1"/>
			<label kind="guard" x="-17" y="-289">numberOfChainsDone &gt;= numberOfChains</label>
		</transition>
	</template>
	<template>
		<name>Chain</name>
		<parameter>const chainId_t cid</parameter>
		<declaration>clock x;
const int chainSize = globalChainSize[cid];
int index = 0;

bool AllDependenciesDone()
{
    bool dependenciesDone = 1;
    int i;
    for (i = 0; i &lt; maxDependencies; i++)
    {
        int value = dependencies[globalChains[cid][index]][i];
        if (value == -1)
            return dependenciesDone;

        dependenciesDone &amp;= tasksDone[value];
    }
    return dependenciesDone;
}</declaration>
		<location id="id2" x="-68" y="-238">
			<name x="-78" y="-272">Idle</name>
			<label kind="exponentialrate" x="-51" y="-255">3</label>
		</location>
		<location id="id3" x="-76" y="51">
			<name x="-102" y="68">Running</name>
			<label kind="invariant" x="-178" y="85">x &lt;= durations[globalChains[cid][index]]</label>
		</location>
		<location id="id4" x="-450" y="-238">
			<name x="-460" y="-272">Done</name>
		</location>
		<init ref="id2"/>
		<transition controllable="false">
			<source ref="id2"/>
			<target ref="id4"/>
			<label kind="guard" x="-399" y="-280">index &gt;= chainSize &amp;&amp;
x &gt;= durations[globalChains[cid][index - 1]]</label>
			<label kind="assignment" x="-399" y="-238">numberOfChainsDone++</label>
		</transition>
		<transition controllable="false">
			<source ref="id3"/>
			<target ref="id2"/>
			<label kind="guard" x="-450" y="-127">x &gt;= durations[globalChains[cid][index]]</label>
			<label kind="assignment" x="-450" y="-110">availableMachines++,
tasksDone[globalChains[cid][index]] = 1,
index++</label>
			<nail x="-161" y="-85"/>
		</transition>
		<transition>
			<source ref="id2"/>
			<target ref="id3"/>
			<label kind="guard" x="34" y="-127">index &lt; chainSize &amp;&amp;
availableMachines &gt; 0 &amp;&amp; AllDependenciesDone()</label>
			<label kind="assignment" x="34" y="-85">availableMachines--,
x = 0</label>
			<nail x="17" y="-85"/>
		</transition>
	</template>
	<system>// Place template instantiations here.

// List one or more processes to be composed into a system.
system Composer, Chain;
    </system>
	<queries>
		<query>
			<formula>strategy TimeSchedule = minE (Composer.time) [&lt;=57] : &lt;&gt;Composer.Done</formula>
			<comment></comment>
		</query>
		<query>
			<formula>inf{Composer.Done} : Composer.time</formula>
			<comment></comment>
		</query>
		<query>
			<formula>A&lt;&gt; Composer.Done</formula>
			<comment></comment>
		</query>
		<query>
			<formula>E&lt;&gt; Composer.Done</formula>
			<comment></comment>
		</query>
	</queries>
</nta>
