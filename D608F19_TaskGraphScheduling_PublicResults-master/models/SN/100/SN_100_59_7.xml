<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/researchgroup/darts/uppaal/flat-1_2.dtd'>
<nta>
<declaration>//Variables
const int numberOfChains = 36;
const int numberOfTasks = 100;
const int numberOfMachines = 7;
const int maxDependencies = 11;
const int longestChain = 7;
const int globalChainSize[numberOfChains] = {5,3,7,3,3,2,4,3,3,3,5,4,4,4,2,3,3,2,2,3,4,3,1,2,3,2,4,1,2,2,2,1,2,1,1,1};
const int globalChains[numberOfChains][longestChain] = {
{0,9,42,51,86,-1,-1},
{1,41,94,-1,-1,-1,-1},
{2,10,32,61,67,79,97},
{3,27,90,-1,-1,-1,-1},
{4,49,71,-1,-1,-1,-1},
{5,48,-1,-1,-1,-1,-1},
{6,22,73,91,-1,-1,-1},
{7,84,98,-1,-1,-1,-1},
{8,40,99,-1,-1,-1,-1},
{11,30,93,-1,-1,-1,-1},
{12,20,31,77,81,-1,-1},
{13,38,63,78,-1,-1,-1},
{14,70,87,92,-1,-1,-1},
{15,29,46,52,-1,-1,-1},
{16,65,-1,-1,-1,-1,-1},
{17,35,88,-1,-1,-1,-1},
{18,23,95,-1,-1,-1,-1},
{19,96,-1,-1,-1,-1,-1},
{21,53,-1,-1,-1,-1,-1},
{24,66,80,-1,-1,-1,-1},
{25,36,58,68,-1,-1,-1},
{26,44,72,-1,-1,-1,-1},
{28,-1,-1,-1,-1,-1,-1},
{33,69,-1,-1,-1,-1,-1},
{34,83,89,-1,-1,-1,-1},
{37,43,-1,-1,-1,-1,-1},
{39,45,60,74,-1,-1,-1},
{47,-1,-1,-1,-1,-1,-1},
{50,75,-1,-1,-1,-1,-1},
{54,76,-1,-1,-1,-1,-1},
{55,85,-1,-1,-1,-1,-1},
{56,-1,-1,-1,-1,-1,-1},
{57,59,-1,-1,-1,-1,-1},
{62,-1,-1,-1,-1,-1,-1},
{64,-1,-1,-1,-1,-1,-1},
{82,-1,-1,-1,-1,-1,-1}};
int chainDuration[numberOfChains] = {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1};
int durations[numberOfTasks] = {12,11,7,15,14,7,16,12,13,13,4,9,9,11,10,7,15,11,11,7,7,11,9,12,10,9,14,11,12,10,10,10,15,8,6,9,10,9,12,11,4,12,8,8,14,13,11,12,14,12,14,12,10,4,6,7,10,7,12,9,8,12,18,8,10,12,13,12,9,8,10,12,9,10,9,9,16,6,8,11,15,11,8,7,11,8,15,8,6,9,13,11,10,9,7,9,10,6,5,16};
const int dependencies[numberOfTasks][maxDependencies] = {
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,6,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{11,12,15,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,6,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,18,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,8,14,-1,-1,-1,-1,-1,-1,-1,-1},
{7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,3,15,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{15,19,22,-1,-1,-1,-1,-1,-1,-1,-1},
{6,11,22,-1,-1,-1,-1,-1,-1,-1,-1},
{12,16,18,20,25,-1,-1,-1,-1,-1,-1},
{9,10,12,-1,-1,-1,-1,-1,-1,-1,-1},
{6,11,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,27,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,17,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,18,25,-1,-1,-1,-1,-1,-1,-1,-1},
{1,10,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,11,13,23,-1,-1,-1,-1,-1,-1,-1},
{22,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,9,10,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,2,6,9,12,17,19,23,29,35},
{15,17,19,37,-1,-1,-1,-1,-1,-1,-1},
{3,26,28,38,-1,-1,-1,-1,-1,-1,-1},
{2,17,23,39,-1,-1,-1,-1,-1,-1,-1},
{2,6,23,29,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,5,6,10,18,31,-1,-1,-1,-1,-1},
{3,4,5,18,39,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{16,30,31,33,42,-1,-1,-1,-1,-1,-1},
{4,11,19,22,23,46,-1,-1,-1,-1,-1},
{21,23,32,43,-1,-1,-1,-1,-1,-1,-1},
{10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,30,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{16,27,30,-1,-1,-1,-1,-1,-1,-1,-1},
{23,25,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{13,33,36,-1,-1,-1,-1,-1,-1,-1,-1},
{37,50,57,-1,-1,-1,-1,-1,-1,-1,-1},
{1,30,35,45,-1,-1,-1,-1,-1,-1,-1},
{2,15,18,20,32,39,50,-1,-1,-1,-1},
{8,29,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{12,13,17,18,22,28,33,38,39,52,55},
{17,54,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{11,16,21,31,45,46,57,-1,-1,-1,-1},
{2,22,24,26,32,34,36,57,-1,-1,-1},
{2,13,21,26,27,50,56,61,64,-1,-1},
{13,43,58,59,60,66,-1,-1,-1,-1,-1},
{4,15,33,-1,-1,-1,-1,-1,-1,-1,-1},
{12,13,14,19,26,30,52,-1,-1,-1,-1},
{0,11,27,48,49,57,-1,-1,-1,-1,-1},
{21,44,62,-1,-1,-1,-1,-1,-1,-1,-1},
{9,12,22,29,32,35,38,46,49,-1,-1},
{26,56,60,-1,-1,-1,-1,-1,-1,-1,-1},
{8,16,32,50,59,61,64,-1,-1,-1,-1},
{13,20,22,54,-1,-1,-1,-1,-1,-1,-1},
{4,31,34,53,61,-1,-1,-1,-1,-1,-1},
{4,21,43,61,63,66,-1,-1,-1,-1,-1},
{10,43,45,46,67,-1,-1,-1,-1,-1,-1},
{22,25,56,58,61,66,76,-1,-1,-1,-1},
{2,3,26,38,77,-1,-1,-1,-1,-1,-1},
{34,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,34,36,-1,-1,-1,-1,-1,-1,-1,-1},
{3,7,8,27,29,34,43,54,63,-1,-1},
{16,45,55,-1,-1,-1,-1,-1,-1,-1,-1},
{1,11,31,34,51,-1,-1,-1,-1,-1,-1},
{6,18,34,52,66,70,74,-1,-1,-1,-1},
{5,6,14,25,31,35,55,76,-1,-1,-1},
{6,12,21,57,76,83,85,-1,-1,-1,-1},
{2,3,27,35,40,47,49,58,-1,-1,-1},
{23,38,68,70,73,74,80,-1,-1,-1,-1},
{20,33,70,87,-1,-1,-1,-1,-1,-1,-1},
{22,30,37,52,68,69,75,77,79,85,87},
{41,45,58,69,-1,-1,-1,-1,-1,-1,-1},
{3,7,19,22,23,37,46,68,69,-1,-1},
{1,13,14,19,20,45,75,-1,-1,-1,-1},
{3,10,11,29,34,41,54,79,80,85,-1},
{1,13,21,56,70,84,-1,-1,-1,-1,-1},
{24,25,26,30,32,40,82,-1,-1,-1,-1}};


int availableMachines = numberOfMachines;

// Typedefs
typedef int[0, numberOfChains - 1] chainId_t;

// Ints and Arrays
int numberOfChainsDone = 0;
int tasksDone[numberOfTasks];
bool runnableChains[numberOfChains];
bool assignmentChoice[numberOfChains];

// Channels
broadcast chan startMachines;
broadcast chan chainMachineChan[numberOfChains];
broadcast chan activateChains;</declaration>
	<template>
		<name x="5" y="5">Composer</name>
		<declaration>// Place local declarations here.
clock time;</declaration>
		<location id="id0" x="-102" y="-255">
			<name x="-112" y="-289">Init</name>
			<label kind="invariant" x="-246" y="-238">numberOfChainsDone &lt;= numberOfChains</label> 
 <label kind="exponentialrate" x="-112" y="-221">0</label>
		</location>
		<location id="id1" x="331" y="-255">
			<name x="321" y="-289">Done</name>
		</location>
		<init ref="id0"/>
		<transition>
			<source ref="id0"/>
			<target ref="id1"/>
			<label kind="guard" x="-17" y="-289">numberOfChainsDone &gt;= numberOfChains</label>
		</transition>
	</template>
	<template>
		<name>Chain</name>
		<parameter>const chainId_t cid</parameter>
		<declaration>clock x;
const int chainSize = globalChainSize[cid];
int index = 0;

bool AllDependenciesDone()
{
    bool dependenciesDone = 1;
    int i;
    for (i = 0; i &lt; maxDependencies; i++)
    {
        int value = dependencies[globalChains[cid][index]][i];
        if (value == -1)
            return dependenciesDone;

        dependenciesDone &amp;= tasksDone[value];
    }
    return dependenciesDone;
}</declaration>
		<location id="id2" x="-68" y="-238">
			<name x="-78" y="-272">Idle</name>
			<label kind="exponentialrate" x="-51" y="-255">3</label>
		</location>
		<location id="id3" x="-76" y="51">
			<name x="-102" y="68">Running</name>
			<label kind="invariant" x="-178" y="85">x &lt;= durations[globalChains[cid][index]]</label>
		</location>
		<location id="id4" x="-450" y="-238">
			<name x="-460" y="-272">Done</name>
		</location>
		<init ref="id2"/>
		<transition controllable="false">
			<source ref="id2"/>
			<target ref="id4"/>
			<label kind="guard" x="-399" y="-280">index &gt;= chainSize &amp;&amp;
x &gt;= durations[globalChains[cid][index - 1]]</label>
			<label kind="assignment" x="-399" y="-238">numberOfChainsDone++</label>
		</transition>
		<transition controllable="false">
			<source ref="id3"/>
			<target ref="id2"/>
			<label kind="guard" x="-450" y="-127">x &gt;= durations[globalChains[cid][index]]</label>
			<label kind="assignment" x="-450" y="-110">availableMachines++,
tasksDone[globalChains[cid][index]] = 1,
index++</label>
			<nail x="-161" y="-85"/>
		</transition>
		<transition>
			<source ref="id2"/>
			<target ref="id3"/>
			<label kind="guard" x="34" y="-127">index &lt; chainSize &amp;&amp;
availableMachines &gt; 0 &amp;&amp; AllDependenciesDone()</label>
			<label kind="assignment" x="34" y="-85">availableMachines--,
x = 0</label>
			<nail x="17" y="-85"/>
		</transition>
	</template>
	<system>// Place template instantiations here.

// List one or more processes to be composed into a system.
system Composer, Chain;
    </system>
	<queries>
		<query>
			<formula>strategy TimeSchedule = minE (Composer.time) [&lt;=57] : &lt;&gt;Composer.Done</formula>
			<comment></comment>
		</query>
		<query>
			<formula>inf{Composer.Done} : Composer.time</formula>
			<comment></comment>
		</query>
		<query>
			<formula>A&lt;&gt; Composer.Done</formula>
			<comment></comment>
		</query>
		<query>
			<formula>E&lt;&gt; Composer.Done</formula>
			<comment></comment>
		</query>
	</queries>
</nta>
