<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/researchgroup/darts/uppaal/flat-1_2.dtd'>
<nta>
<declaration>//Variables
const int numberOfChains = 33;
const int numberOfTasks = 100;
const int numberOfMachines = 2;
const int maxDependencies = 16;
const int longestChain = 6;
const int globalChainSize[numberOfChains] = {5,4,4,2,3,6,3,2,2,3,4,2,2,3,2,2,5,3,2,3,3,5,5,4,3,1,3,4,3,2,2,1,2};
const int globalChains[numberOfChains][longestChain] = {
{0,9,64,67,89,-1},
{1,43,59,91,-1,-1},
{2,45,73,94,-1,-1},
{3,99,-1,-1,-1,-1},
{4,76,84,-1,-1,-1},
{5,17,56,62,69,87},
{6,57,88,-1,-1,-1},
{7,85,-1,-1,-1,-1},
{8,77,-1,-1,-1,-1},
{10,79,96,-1,-1,-1},
{11,31,35,83,-1,-1},
{12,95,-1,-1,-1,-1},
{13,97,-1,-1,-1,-1},
{14,50,80,-1,-1,-1},
{15,82,-1,-1,-1,-1},
{16,81,-1,-1,-1,-1},
{18,53,63,71,92,-1},
{19,61,86,-1,-1,-1},
{20,46,-1,-1,-1,-1},
{21,44,72,-1,-1,-1},
{22,51,90,-1,-1,-1},
{23,54,58,78,93,-1},
{24,27,40,65,70,-1},
{25,41,55,74,-1,-1},
{26,42,66,-1,-1,-1},
{28,-1,-1,-1,-1,-1},
{29,37,98,-1,-1,-1},
{30,38,48,68,-1,-1},
{32,60,75,-1,-1,-1},
{33,47,-1,-1,-1,-1},
{34,49,-1,-1,-1,-1},
{36,-1,-1,-1,-1,-1},
{39,52,-1,-1,-1,-1}};
int chainDuration[numberOfChains] = {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1};
int durations[numberOfTasks] = {1,9,9,8,1,10,10,6,1,10,10,7,6,1,6,5,7,7,10,8,3,9,3,10,7,9,10,5,8,3,2,7,10,7,5,3,4,2,4,3,7,3,10,4,6,6,5,8,6,2,10,2,4,10,7,10,3,9,7,1,1,4,5,8,10,7,3,4,3,3,9,8,8,5,2,2,4,10,10,9,2,7,8,5,9,3,8,2,2,9,1,7,7,3,3,2,6,8,10,7};
const int dependencies[numberOfTasks][maxDependencies] = {
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,14,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,3,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,14,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,8,13,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,7,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,5,21,23,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{18,19,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,24,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,10,11,23,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{10,22,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,7,14,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,4,7,11,14,16,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,20,22,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,10,16,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,4,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,10,12,13,17,31,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,10,13,30,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,4,11,29,33,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,19,21,25,30,32,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{11,13,29,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,21,27,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,11,17,25,31,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,18,23,26,30,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,16,22,30,32,33,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,3,15,21,24,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,2,5,6,21,23,25,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,12,14,20,21,24,25,26,27,33,-1,-1,-1,-1,-1,-1},
{20,21,33,37,38,44,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{21,22,23,33,37,38,43,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,27,34,40,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{10,11,12,14,18,21,29,32,41,-1,-1,-1,-1,-1,-1,-1},
{6,11,22,23,31,32,36,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,10,27,37,39,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,2,16,18,33,35,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,3,16,20,23,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{30,33,41,52,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,5,17,18,22,24,34,35,37,38,40,43,48,54,-1,-1},
{3,6,8,17,20,38,43,54,-1,-1,-1,-1,-1,-1,-1,-1},
{12,26,32,45,48,49,51,52,54,-1,-1,-1,-1,-1,-1,-1},
{0,7,12,13,22,33,43,47,51,-1,-1,-1,-1,-1,-1,-1},
{2,8,18,22,30,32,36,38,52,-1,-1,-1,-1,-1,-1,-1},
{4,6,11,17,19,21,29,33,36,47,58,-1,-1,-1,-1,-1},
{5,7,33,35,39,41,45,53,56,-1,-1,-1,-1,-1,-1,-1},
{2,26,30,37,45,48,53,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,6,9,15,26,30,32,34,35,38,54,58,-1,-1,-1,-1},
{6,20,34,40,42,45,57,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,21,27,29,34,38,40,42,52,-1,-1,-1,-1,-1,-1,-1},
{8,12,16,24,28,33,47,51,59,64,-1,-1,-1,-1,-1,-1},
{12,25,48,51,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,5,9,13,16,18,36,40,50,52,54,62,-1,-1,-1,-1},
{4,6,13,28,30,32,34,36,48,52,65,-1,-1,-1,-1,-1},
{5,16,20,28,35,40,52,54,58,60,63,-1,-1,-1,-1,-1},
{10,19,24,36,44,63,64,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,10,12,15,26,29,30,41,45,51,64,66,-1,-1,-1,-1},
{21,25,26,40,52,53,55,64,66,-1,-1,-1,-1,-1,-1,-1},
{24,29,55,58,60,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,3,4,12,15,19,37,56,62,-1,-1,-1,-1,-1,-1,-1},
{1,2,6,8,13,39,40,44,50,54,61,-1,-1,-1,-1,-1},
{13,15,34,36,41,45,52,56,58,-1,-1,-1,-1,-1,-1,-1},
{1,10,13,27,37,45,49,57,-1,-1,-1,-1,-1,-1,-1,-1},
{4,8,10,20,23,24,50,57,65,-1,-1,-1,-1,-1,-1,-1},
{13,16,17,25,34,36,38,39,42,45,50,60,62,-1,-1,-1},
{7,10,13,15,16,17,26,30,36,40,-1,-1,-1,-1,-1,-1},
{17,18,22,35,37,50,54,56,60,62,63,64,-1,-1,-1,-1},
{4,10,13,24,29,36,43,51,62,63,66,69,74,76,-1,-1},
{1,4,5,7,26,28,33,36,66,79,-1,-1,-1,-1,-1,-1},
{0,7,19,36,41,43,61,66,68,70,76,-1,-1,-1,-1,-1},
{0,52,55,69,70,72,78,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,7,8,12,14,21,33,43,56,57,63,75,78,80,-1,-1},
{5,31,40,43,53,62,67,68,70,74,75,-1,-1,-1,-1,-1},
{6,21,40,44,45,51,52,54,70,75,-1,-1,-1,-1,-1,-1},
{17,28,53,59,60,75,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,5,7,8,20,34,44,70,71,-1,-1,-1,-1,-1,-1,-1},
{3,8,18,32,39,40,45,48,50,78,-1,-1,-1,-1,-1,-1},
{0,2,10,11,39,53,55,58,66,70,73,74,78,-1,-1,-1},
{2,10,11,12,20,37,38,41,53,68,82,-1,-1,-1,-1,-1},
{2,8,43,51,79,82,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,5,6,10,13,19,36,46,51,60,75,-1,-1,-1,-1,-1},
{0,19,30,37,44,61,78,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,6,13,14,21,22,33,42,43,56,58,66,67,75,76,83}};


int availableMachines = numberOfMachines;

// Typedefs
typedef int[0, numberOfChains - 1] chainId_t;

// Ints and Arrays
int numberOfChainsDone = 0;
int tasksDone[numberOfTasks];
bool runnableChains[numberOfChains];
bool assignmentChoice[numberOfChains];

// Channels
broadcast chan startMachines;
broadcast chan chainMachineChan[numberOfChains];
broadcast chan activateChains;</declaration>
	<template>
		<name x="5" y="5">Composer</name>
		<declaration>// Place local declarations here.
clock time;</declaration>
		<location id="id0" x="-102" y="-255">
			<name x="-112" y="-289">Init</name>
			<label kind="invariant" x="-246" y="-238">numberOfChainsDone &lt;= numberOfChains</label> 
 <label kind="exponentialrate" x="-112" y="-221">0</label>
		</location>
		<location id="id1" x="331" y="-255">
			<name x="321" y="-289">Done</name>
		</location>
		<init ref="id0"/>
		<transition>
			<source ref="id0"/>
			<target ref="id1"/>
			<label kind="guard" x="-17" y="-289">numberOfChainsDone &gt;= numberOfChains</label>
		</transition>
	</template>
	<template>
		<name>Chain</name>
		<parameter>const chainId_t cid</parameter>
		<declaration>clock x;
const int chainSize = globalChainSize[cid];
int index = 0;

bool AllDependenciesDone()
{
    bool dependenciesDone = 1;
    int i;
    for (i = 0; i &lt; maxDependencies; i++)
    {
        int value = dependencies[globalChains[cid][index]][i];
        if (value == -1)
            return dependenciesDone;

        dependenciesDone &amp;= tasksDone[value];
    }
    return dependenciesDone;
}</declaration>
		<location id="id2" x="-68" y="-238">
			<name x="-78" y="-272">Idle</name>
			<label kind="exponentialrate" x="-51" y="-255">3</label>
		</location>
		<location id="id3" x="-76" y="51">
			<name x="-102" y="68">Running</name>
			<label kind="invariant" x="-178" y="85">x &lt;= durations[globalChains[cid][index]]</label>
		</location>
		<location id="id4" x="-450" y="-238">
			<name x="-460" y="-272">Done</name>
		</location>
		<init ref="id2"/>
		<transition controllable="false">
			<source ref="id2"/>
			<target ref="id4"/>
			<label kind="guard" x="-399" y="-280">index &gt;= chainSize &amp;&amp;
x &gt;= durations[globalChains[cid][index - 1]]</label>
			<label kind="assignment" x="-399" y="-238">numberOfChainsDone++</label>
		</transition>
		<transition controllable="false">
			<source ref="id3"/>
			<target ref="id2"/>
			<label kind="guard" x="-450" y="-127">x &gt;= durations[globalChains[cid][index]]</label>
			<label kind="assignment" x="-450" y="-110">availableMachines++,
tasksDone[globalChains[cid][index]] = 1,
index++</label>
			<nail x="-161" y="-85"/>
		</transition>
		<transition>
			<source ref="id2"/>
			<target ref="id3"/>
			<label kind="guard" x="34" y="-127">index &lt; chainSize &amp;&amp;
availableMachines &gt; 0 &amp;&amp; AllDependenciesDone()</label>
			<label kind="assignment" x="34" y="-85">availableMachines--,
x = 0</label>
			<nail x="17" y="-85"/>
		</transition>
	</template>
	<system>// Place template instantiations here.

// List one or more processes to be composed into a system.
system Composer, Chain;
    </system>
	<queries>
		<query>
			<formula>strategy TimeSchedule = minE (Composer.time) [&lt;=57] : &lt;&gt;Composer.Done</formula>
			<comment></comment>
		</query>
		<query>
			<formula>inf{Composer.Done} : Composer.time</formula>
			<comment></comment>
		</query>
		<query>
			<formula>A&lt;&gt; Composer.Done</formula>
			<comment></comment>
		</query>
		<query>
			<formula>E&lt;&gt; Composer.Done</formula>
			<comment></comment>
		</query>
	</queries>
</nta>
