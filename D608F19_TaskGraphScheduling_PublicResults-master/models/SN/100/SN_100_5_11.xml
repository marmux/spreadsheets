<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/researchgroup/darts/uppaal/flat-1_2.dtd'>
<nta>
<declaration>//Variables
const int numberOfChains = 24;
const int numberOfTasks = 100;
const int numberOfMachines = 11;
const int maxDependencies = 25;
const int longestChain = 9;
const int globalChainSize[numberOfChains] = {9,4,7,4,5,6,4,5,3,9,3,3,5,5,7,4,2,3,3,3,2,1,2,1};
const int globalChains[numberOfChains][longestChain] = {
{0,1,59,68,69,70,85,91,95},
{2,80,92,93,-1,-1,-1,-1,-1},
{3,11,18,60,74,77,99,-1,-1},
{4,82,88,94,-1,-1,-1,-1,-1},
{5,31,65,73,97,-1,-1,-1,-1},
{6,61,78,84,86,98,-1,-1,-1},
{7,34,75,89,-1,-1,-1,-1,-1},
{8,56,71,83,96,-1,-1,-1,-1},
{9,58,90,-1,-1,-1,-1,-1,-1},
{10,14,49,53,55,66,79,81,87},
{12,54,64,-1,-1,-1,-1,-1,-1},
{13,62,63,-1,-1,-1,-1,-1,-1},
{15,32,33,40,52,-1,-1,-1,-1},
{16,19,25,30,39,-1,-1,-1,-1},
{17,24,41,42,46,57,72,-1,-1},
{20,48,50,67,-1,-1,-1,-1,-1},
{21,51,-1,-1,-1,-1,-1,-1,-1},
{22,36,38,-1,-1,-1,-1,-1,-1},
{23,26,76,-1,-1,-1,-1,-1,-1},
{27,43,47,-1,-1,-1,-1,-1,-1},
{28,44,-1,-1,-1,-1,-1,-1,-1},
{29,-1,-1,-1,-1,-1,-1,-1,-1},
{35,45,-1,-1,-1,-1,-1,-1,-1},
{37,-1,-1,-1,-1,-1,-1,-1,-1}};
int chainDuration[numberOfChains] = {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1};
int durations[numberOfTasks] = {6,15,7,16,19,2,14,4,8,4,14,1,12,19,6,20,10,8,10,5,5,13,14,3,7,6,7,18,13,1,4,13,13,9,4,20,5,12,16,19,17,1,18,11,1,2,5,7,3,5,1,14,10,13,12,16,4,15,16,17,5,17,7,13,2,9,18,9,11,14,17,1,11,18,13,18,9,6,4,10,11,8,2,14,20,1,4,10,19,10,19,19,13,20,17,3,11,7,6,19};
const int dependencies[numberOfTasks][maxDependencies] = {
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,2,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,3,5,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,4,12,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,2,4,9,10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,3,8,11,12,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,9,12,14,16,18,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,8,10,12,14,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{16,19,20,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,10,12,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,21,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,4,9,10,16,17,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,8,14,16,19,21,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,4,11,14,21,23,25,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,7,14,19,23,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{17,22,27,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,15,21,28,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,9,10,14,16,24,25,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,3,5,6,8,9,11,15,22,23,27,30,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{11,13,14,15,17,23,25,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,8,14,28,32,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,4,6,7,14,15,18,21,23,24,26,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,4,12,13,27,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,6,8,11,12,22,23,27,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,7,15,16,19,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,7,10,16,23,31,36,37,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,4,7,15,24,26,30,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,8,9,31,33,34,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{15,24,25,40,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,15,16,17,27,28,30,33,41,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{11,13,15,27,32,40,42,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{12,15,16,28,29,33,35,42,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,4,31,33,35,37,41,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,9,10,17,23,27,30,31,35,36,42,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{24,31,32,43,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{9,14,19,20,26,34,40,47,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,4,10,11,13,14,17,23,30,32,40,43,44,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,20,22,23,26,30,31,32,38,46,48,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,13,14,21,26,33,34,42,43,47,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,9,14,22,33,34,36,40,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,3,7,8,26,28,31,35,42,46,49,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,8,11,12,19,28,31,34,37,49,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,6,8,9,13,16,17,24,25,32,35,38,42,44,47,50,51,53,-1,-1,-1,-1,-1,-1,-1},
{2,5,6,7,8,18,21,25,35,38,40,41,42,45,46,47,48,51,52,55,-1,-1,-1,-1,-1},
{7,10,11,13,22,25,29,37,46,47,48,50,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,2,4,7,9,16,17,22,24,28,31,36,44,47,48,53,54,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,2,5,6,14,16,24,26,35,46,47,55,58,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,6,9,11,18,19,20,21,23,37,45,46,55,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,6,8,11,16,17,19,27,31,43,44,45,47,53,58,60,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,10,12,13,15,17,18,25,26,29,35,38,39,45,50,60,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,15,18,26,31,46,59,62,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,13,17,18,24,27,33,35,45,46,48,49,54,61,62,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,3,5,8,10,12,13,18,25,26,31,33,36,37,46,63,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,8,12,13,15,23,25,28,45,55,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{11,26,33,40,47,50,53,56,62,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,11,20,28,29,37,38,42,52,55,59,60,61,67,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,7,24,26,28,30,35,36,37,38,52,54,55,58,59,65,67,68,-1,-1,-1,-1,-1,-1,-1},
{5,8,15,28,32,33,34,38,39,41,42,45,58,60,69,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,7,8,14,18,20,33,39,41,47,53,56,60,62,63,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,17,19,22,28,41,44,50,51,57,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,22,24,28,34,43,44,45,46,53,60,65,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,8,9,11,13,14,17,21,24,28,29,30,31,33,34,39,45,47,52,60,63,66,67,69,-1},
{3,8,13,14,18,20,21,31,34,39,42,43,56,69,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,23,26,30,33,34,50,73,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{10,14,15,16,18,21,23,26,30,31,35,41,42,45,46,59,60,67,68,71,74,-1,-1,-1,-1},
{25,29,32,35,40,43,47,50,55,58,60,61,66,71,73,74,75,-1,-1,-1,-1,-1,-1,-1,-1},
{1,13,24,25,27,31,32,35,38,42,44,49,50,54,56,66,67,77,-1,-1,-1,-1,-1,-1,-1},
{0,2,11,12,13,29,31,34,39,49,51,55,56,59,66,67,73,-1,-1,-1,-1,-1,-1,-1,-1},
{13,29,38,51,53,61,63,64,73,77,79,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,10,13,28,31,39,49,52,59,60,61,66,72,73,75,78,80,-1,-1,-1,-1,-1,-1,-1,-1},
{2,4,9,20,21,30,32,33,35,41,44,48,54,59,66,67,68,71,-1,-1,-1,-1,-1,-1,-1},
{7,8,17,21,28,29,39,55,57,58,60,61,78,81,82,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,4,9,11,13,14,15,16,18,19,26,30,40,45,47,50,64,70,71,72,73,75,-1,-1,-1},
{1,8,16,21,22,29,32,38,41,51,59,65,74,75,84,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{14,19,29,32,44,52,56,72,80,81,82,84,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,16,21,23,24,29,30,33,35,36,38,39,44,45,50,53,57,60,61,62,70,72,78,82,-1},
{5,6,13,19,31,45,47,49,50,53,58,70,75,77,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,16,17,34,40,44,47,58,64,66,75,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,15,19,22,25,34,38,42,46,47,48,53,75,78,80,85,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,6,8,12,14,15,20,23,27,31,33,43,51,56,60,64,72,73,75,78,79,80,82,83,91},
{10,20,22,38,43,55,64,65,67,68,82,83,85,92,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,15,16,34,39,48,49,53,59,60,64,65,80,87,88,89,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{9,15,17,20,34,39,52,55,59,61,62,64,68,78,84,86,91,93,-1,-1,-1,-1,-1,-1,-1},
{13,15,22,24,27,29,32,47,71,83,85,87,88,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,16,20,33,42,46,48,73,74,75,77,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,5,12,13,15,20,24,29,33,34,39,42,44,50,53,56,57,66,74,86,90,92,-1,-1,-1},
{4,10,15,20,21,26,29,33,39,49,50,53,57,58,59,62,63,66,77,79,80,88,-1,-1,-1}};


int availableMachines = numberOfMachines;

// Typedefs
typedef int[0, numberOfChains - 1] chainId_t;

// Ints and Arrays
int numberOfChainsDone = 0;
int tasksDone[numberOfTasks];
bool runnableChains[numberOfChains];
bool assignmentChoice[numberOfChains];

// Channels
broadcast chan startMachines;
broadcast chan chainMachineChan[numberOfChains];
broadcast chan activateChains;</declaration>
	<template>
		<name x="5" y="5">Composer</name>
		<declaration>// Place local declarations here.
clock time;</declaration>
		<location id="id0" x="-102" y="-255">
			<name x="-112" y="-289">Init</name>
			<label kind="invariant" x="-246" y="-238">numberOfChainsDone &lt;= numberOfChains</label> 
 <label kind="exponentialrate" x="-112" y="-221">0</label>
		</location>
		<location id="id1" x="331" y="-255">
			<name x="321" y="-289">Done</name>
		</location>
		<init ref="id0"/>
		<transition>
			<source ref="id0"/>
			<target ref="id1"/>
			<label kind="guard" x="-17" y="-289">numberOfChainsDone &gt;= numberOfChains</label>
		</transition>
	</template>
	<template>
		<name>Chain</name>
		<parameter>const chainId_t cid</parameter>
		<declaration>clock x;
const int chainSize = globalChainSize[cid];
int index = 0;

bool AllDependenciesDone()
{
    bool dependenciesDone = 1;
    int i;
    for (i = 0; i &lt; maxDependencies; i++)
    {
        int value = dependencies[globalChains[cid][index]][i];
        if (value == -1)
            return dependenciesDone;

        dependenciesDone &amp;= tasksDone[value];
    }
    return dependenciesDone;
}</declaration>
		<location id="id2" x="-68" y="-238">
			<name x="-78" y="-272">Idle</name>
			<label kind="exponentialrate" x="-51" y="-255">3</label>
		</location>
		<location id="id3" x="-76" y="51">
			<name x="-102" y="68">Running</name>
			<label kind="invariant" x="-178" y="85">x &lt;= durations[globalChains[cid][index]]</label>
		</location>
		<location id="id4" x="-450" y="-238">
			<name x="-460" y="-272">Done</name>
		</location>
		<init ref="id2"/>
		<transition controllable="false">
			<source ref="id2"/>
			<target ref="id4"/>
			<label kind="guard" x="-399" y="-280">index &gt;= chainSize &amp;&amp;
x &gt;= durations[globalChains[cid][index - 1]]</label>
			<label kind="assignment" x="-399" y="-238">numberOfChainsDone++</label>
		</transition>
		<transition controllable="false">
			<source ref="id3"/>
			<target ref="id2"/>
			<label kind="guard" x="-450" y="-127">x &gt;= durations[globalChains[cid][index]]</label>
			<label kind="assignment" x="-450" y="-110">availableMachines++,
tasksDone[globalChains[cid][index]] = 1,
index++</label>
			<nail x="-161" y="-85"/>
		</transition>
		<transition>
			<source ref="id2"/>
			<target ref="id3"/>
			<label kind="guard" x="34" y="-127">index &lt; chainSize &amp;&amp;
availableMachines &gt; 0 &amp;&amp; AllDependenciesDone()</label>
			<label kind="assignment" x="34" y="-85">availableMachines--,
x = 0</label>
			<nail x="17" y="-85"/>
		</transition>
	</template>
	<system>// Place template instantiations here.

// List one or more processes to be composed into a system.
system Composer, Chain;
    </system>
	<queries>
		<query>
			<formula>strategy TimeSchedule = minE (Composer.time) [&lt;=57] : &lt;&gt;Composer.Done</formula>
			<comment></comment>
		</query>
		<query>
			<formula>inf{Composer.Done} : Composer.time</formula>
			<comment></comment>
		</query>
		<query>
			<formula>A&lt;&gt; Composer.Done</formula>
			<comment></comment>
		</query>
		<query>
			<formula>E&lt;&gt; Composer.Done</formula>
			<comment></comment>
		</query>
	</queries>
</nta>
