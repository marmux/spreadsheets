<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/researchgroup/darts/uppaal/flat-1_2.dtd'>
<nta>
<declaration>//Variables
const int numberOfChains = 32;
const int numberOfTasks = 100;
const int numberOfMachines = 5;
const int maxDependencies = 22;
const int longestChain = 6;
const int globalChainSize[numberOfChains] = {3,4,3,3,6,6,4,4,4,2,5,4,3,3,4,4,2,3,4,4,4,2,4,3,1,2,2,3,1,1,1,1};
const int globalChains[numberOfChains][longestChain] = {
{0,34,96,-1,-1,-1},
{1,50,84,97,-1,-1},
{2,98,99,-1,-1,-1},
{3,63,92,-1,-1,-1},
{4,47,67,73,82,89},
{5,15,87,88,90,91},
{6,29,70,93,-1,-1},
{7,12,74,75,-1,-1},
{8,51,83,85,-1,-1},
{9,94,-1,-1,-1,-1},
{10,18,66,80,81,-1},
{11,49,56,68,-1,-1},
{13,78,95,-1,-1,-1},
{14,64,76,-1,-1,-1},
{16,24,37,72,-1,-1},
{17,41,48,55,-1,-1},
{19,65,-1,-1,-1,-1},
{20,26,86,-1,-1,-1},
{21,35,71,77,-1,-1},
{22,25,57,59,-1,-1},
{23,36,60,79,-1,-1},
{27,40,-1,-1,-1,-1},
{28,31,62,69,-1,-1},
{30,42,46,-1,-1,-1},
{32,-1,-1,-1,-1,-1},
{33,54,-1,-1,-1,-1},
{38,44,-1,-1,-1,-1},
{39,43,58,-1,-1,-1},
{45,-1,-1,-1,-1,-1},
{52,-1,-1,-1,-1,-1},
{53,-1,-1,-1,-1,-1},
{61,-1,-1,-1,-1,-1}};
int chainDuration[numberOfChains] = {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1};
int durations[numberOfTasks] = {1,2,10,3,1,1,14,6,4,1,1,3,9,1,3,7,16,2,16,20,2,3,8,16,5,5,24,9,1,18,6,3,5,4,1,18,4,16,4,3,1,8,3,4,11,1,6,10,8,8,6,1,2,2,5,2,9,5,3,2,3,2,1,11,5,6,13,1,11,1,7,21,1,11,2,8,6,19,3,13,3,5,12,3,6,8,13,3,13,2,13,26,7,3,7,5,2,26,5,9};
const int dependencies[numberOfTasks][maxDependencies] = {
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,3,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,2,5,8,13,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,16,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,3,8,10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,14,15,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{11,16,17,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{10,13,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,10,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{12,18,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,6,13,16,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,7,9,20,22,23,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,7,14,18,20,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,3,14,16,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,7,24,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,5,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,13,20,29,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,9,13,17,22,28,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,12,26,28,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{20,21,22,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,20,23,25,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,6,17,21,31,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,19,20,21,22,23,33,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,10,12,16,24,33,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,38,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,14,23,24,27,32,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,7,8,11,17,23,27,35,40,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,21,30,35,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{11,12,36,39,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,12,17,18,38,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,9,22,24,36,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{15,18,42,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,4,6,10,13,15,18,20,21,46,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,9,10,41,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,10,11,15,21,22,25,26,29,46,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,6,14,39,40,43,44,45,46,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,8,10,12,15,24,25,33,40,41,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{20,34,39,43,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,8,25,30,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,13,30,31,33,38,39,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{37,41,42,43,48,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,4,11,12,22,24,25,46,49,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{18,19,22,25,27,29,31,40,42,44,46,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,5,8,17,36,43,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{29,30,40,44,57,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,16,23,26,31,34,36,39,52,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{12,15,24,56,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,17,31,35,38,44,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,3,13,18,28,29,34,48,54,61,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,12,14,15,20,27,29,35,41,44,55,57,58,61,62,-1,-1,-1,-1,-1,-1,-1},
{7,11,12,16,19,36,58,59,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,9,16,18,40,50,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,5,11,27,37,39,40,47,49,56,57,62,63,66,-1,-1,-1,-1,-1,-1,-1,-1},
{1,21,29,30,38,45,46,51,56,58,59,61,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,10,16,30,46,62,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,15,17,20,24,29,32,40,42,50,53,54,61,65,-1,-1,-1,-1,-1,-1,-1,-1},
{12,35,41,44,46,51,61,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{28,37,42,53,59,61,67,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,10,13,18,20,22,39,40,49,51,55,63,67,72,-1,-1,-1,-1,-1,-1,-1,-1},
{8,12,23,32,39,44,50,59,61,63,64,67,69,72,-1,-1,-1,-1,-1,-1,-1,-1},
{4,20,32,36,38,42,43,65,67,74,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,3,10,19,24,42,64,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,19,28,40,42,45,71,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,11,13,16,23,28,29,37,54,55,69,70,72,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{26,32,38,44,60,71,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{15,20,21,22,30,33,38,47,52,66,69,72,74,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,18,21,27,48,62,69,78,79,80,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{10,19,25,31,34,41,45,48,54,61,63,70,72,73,79,80,-1,-1,-1,-1,-1,-1},
{2,8,19,23,34,37,39,40,45,51,52,59,61,62,72,81,-1,-1,-1,-1,-1,-1},
{1,3,4,16,20,26,42,45,46,50,62,64,66,69,75,-1,-1,-1,-1,-1,-1,-1},
{10,13,23,24,25,26,49,58,61,70,73,77,83,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{17,19,26,28,29,32,39,48,52,57,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,15,18,47,63,85,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,22,26,27,29,32,43,62,63,71,74,83,85,87,-1,-1,-1,-1,-1,-1,-1,-1},
{0,8,12,22,24,27,63,68,70,79,82,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,15,17,48,56,67,78,86,88,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,9,10,16,18,39,48,52,58,66,84,90,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,5,6,10,11,28,29,31,36,44,50,53,60,63,72,78,89,91,-1,-1,-1,-1},
{0,6,13,15,17,32,36,55,70,71,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,9,30,34,42,49,52,79,90,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,13,21,28,39,44,52,54,70,74,78,86,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,2,11,22,34,50,55,59,61,66,67,83,84,87,90,-1,-1,-1,-1,-1,-1,-1},
{2,13,34,38,41,55,76,80,84,86,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,2,15,16,29,35,41,47,54,59,61,64,67,68,69,72,74,79,82,84,85,91},
{3,5,6,10,12,18,19,31,37,45,49,51,61,69,80,86,91,94,98,-1,-1,-1}};


int availableMachines = numberOfMachines;

// Typedefs
typedef int[0, numberOfChains - 1] chainId_t;

// Ints and Arrays
int numberOfChainsDone = 0;
int tasksDone[numberOfTasks];
bool runnableChains[numberOfChains];
bool assignmentChoice[numberOfChains];

// Channels
broadcast chan startMachines;
broadcast chan chainMachineChan[numberOfChains];
broadcast chan activateChains;</declaration>
	<template>
		<name x="5" y="5">Composer</name>
		<declaration>// Place local declarations here.
clock time;</declaration>
		<location id="id0" x="-102" y="-255">
			<name x="-112" y="-289">Init</name>
			<label kind="invariant" x="-246" y="-238">numberOfChainsDone &lt;= numberOfChains</label> 
 <label kind="exponentialrate" x="-112" y="-221">0</label>
		</location>
		<location id="id1" x="331" y="-255">
			<name x="321" y="-289">Done</name>
		</location>
		<init ref="id0"/>
		<transition>
			<source ref="id0"/>
			<target ref="id1"/>
			<label kind="guard" x="-17" y="-289">numberOfChainsDone &gt;= numberOfChains</label>
		</transition>
	</template>
	<template>
		<name>Chain</name>
		<parameter>const chainId_t cid</parameter>
		<declaration>clock x;
const int chainSize = globalChainSize[cid];
int index = 0;

bool AllDependenciesDone()
{
    bool dependenciesDone = 1;
    int i;
    for (i = 0; i &lt; maxDependencies; i++)
    {
        int value = dependencies[globalChains[cid][index]][i];
        if (value == -1)
            return dependenciesDone;

        dependenciesDone &amp;= tasksDone[value];
    }
    return dependenciesDone;
}</declaration>
		<location id="id2" x="-68" y="-238">
			<name x="-78" y="-272">Idle</name>
			<label kind="exponentialrate" x="-51" y="-255">3</label>
		</location>
		<location id="id3" x="-76" y="51">
			<name x="-102" y="68">Running</name>
			<label kind="invariant" x="-178" y="85">x &lt;= durations[globalChains[cid][index]]</label>
		</location>
		<location id="id4" x="-450" y="-238">
			<name x="-460" y="-272">Done</name>
		</location>
		<init ref="id2"/>
		<transition controllable="false">
			<source ref="id2"/>
			<target ref="id4"/>
			<label kind="guard" x="-399" y="-280">index &gt;= chainSize &amp;&amp;
x &gt;= durations[globalChains[cid][index - 1]]</label>
			<label kind="assignment" x="-399" y="-238">numberOfChainsDone++</label>
		</transition>
		<transition controllable="false">
			<source ref="id3"/>
			<target ref="id2"/>
			<label kind="guard" x="-450" y="-127">x &gt;= durations[globalChains[cid][index]]</label>
			<label kind="assignment" x="-450" y="-110">availableMachines++,
tasksDone[globalChains[cid][index]] = 1,
index++</label>
			<nail x="-161" y="-85"/>
		</transition>
		<transition>
			<source ref="id2"/>
			<target ref="id3"/>
			<label kind="guard" x="34" y="-127">index &lt; chainSize &amp;&amp;
availableMachines &gt; 0 &amp;&amp; AllDependenciesDone()</label>
			<label kind="assignment" x="34" y="-85">availableMachines--,
x = 0</label>
			<nail x="17" y="-85"/>
		</transition>
	</template>
	<system>// Place template instantiations here.

// List one or more processes to be composed into a system.
system Composer, Chain;
    </system>
	<queries>
		<query>
			<formula>strategy TimeSchedule = minE (Composer.time) [&lt;=57] : &lt;&gt;Composer.Done</formula>
			<comment></comment>
		</query>
		<query>
			<formula>inf{Composer.Done} : Composer.time</formula>
			<comment></comment>
		</query>
		<query>
			<formula>A&lt;&gt; Composer.Done</formula>
			<comment></comment>
		</query>
		<query>
			<formula>E&lt;&gt; Composer.Done</formula>
			<comment></comment>
		</query>
	</queries>
</nta>
