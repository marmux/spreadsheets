<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/researchgroup/darts/uppaal/flat-1_2.dtd'>
<nta>
<declaration>//Variables
const int numberOfChains = 59;
const int numberOfTasks = 100;
const int numberOfMachines = 3;
const int maxDependencies = 6;
const int longestChain = 6;
const int globalChainSize[numberOfChains] = {4,2,2,3,1,1,3,6,3,1,3,2,2,2,1,1,1,1,1,3,4,4,2,1,2,1,2,1,3,1,1,2,1,2,1,1,1,3,1,1,1,1,1,2,1,2,1,1,1,2,1,1,1,1,1,1,1,1,1};
const int globalChains[numberOfChains][longestChain] = {
{0,13,32,96,-1,-1},
{1,63,-1,-1,-1,-1},
{2,33,-1,-1,-1,-1},
{3,37,85,-1,-1,-1},
{4,-1,-1,-1,-1,-1},
{5,-1,-1,-1,-1,-1},
{6,64,71,-1,-1,-1},
{7,35,53,65,73,89},
{8,30,67,-1,-1,-1},
{9,-1,-1,-1,-1,-1},
{10,48,77,-1,-1,-1},
{11,97,-1,-1,-1,-1},
{12,79,-1,-1,-1,-1},
{14,47,-1,-1,-1,-1},
{15,-1,-1,-1,-1,-1},
{16,-1,-1,-1,-1,-1},
{17,-1,-1,-1,-1,-1},
{18,-1,-1,-1,-1,-1},
{19,-1,-1,-1,-1,-1},
{20,52,94,-1,-1,-1},
{21,42,55,91,-1,-1},
{22,56,66,70,-1,-1},
{23,51,-1,-1,-1,-1},
{24,-1,-1,-1,-1,-1},
{25,39,-1,-1,-1,-1},
{26,-1,-1,-1,-1,-1},
{27,44,-1,-1,-1,-1},
{28,-1,-1,-1,-1,-1},
{29,31,75,-1,-1,-1},
{34,-1,-1,-1,-1,-1},
{36,-1,-1,-1,-1,-1},
{38,45,-1,-1,-1,-1},
{40,-1,-1,-1,-1,-1},
{41,90,-1,-1,-1,-1},
{43,-1,-1,-1,-1,-1},
{46,-1,-1,-1,-1,-1},
{49,-1,-1,-1,-1,-1},
{50,78,82,-1,-1,-1},
{54,-1,-1,-1,-1,-1},
{57,-1,-1,-1,-1,-1},
{58,-1,-1,-1,-1,-1},
{59,-1,-1,-1,-1,-1},
{60,-1,-1,-1,-1,-1},
{61,69,-1,-1,-1,-1},
{62,-1,-1,-1,-1,-1},
{68,98,-1,-1,-1,-1},
{72,-1,-1,-1,-1,-1},
{74,-1,-1,-1,-1,-1},
{76,-1,-1,-1,-1,-1},
{80,87,-1,-1,-1,-1},
{81,-1,-1,-1,-1,-1},
{83,-1,-1,-1,-1,-1},
{84,-1,-1,-1,-1,-1},
{86,-1,-1,-1,-1,-1},
{88,-1,-1,-1,-1,-1},
{92,-1,-1,-1,-1,-1},
{93,-1,-1,-1,-1,-1},
{95,-1,-1,-1,-1,-1},
{99,-1,-1,-1,-1,-1}};
int chainDuration[numberOfChains] = {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1};
int durations[numberOfTasks] = {6,5,5,7,7,6,4,6,6,6,6,6,7,6,6,6,6,8,5,6,6,5,6,5,5,7,5,5,4,5,4,7,6,5,6,4,6,4,5,6,5,4,7,5,5,6,5,6,4,5,5,6,6,5,5,7,5,6,7,6,6,5,6,4,6,3,6,7,7,6,5,5,6,3,5,5,3,3,5,5,4,6,6,5,7,6,6,6,7,8,7,7,7,4,7,6,4,5,6,6};
const int dependencies[numberOfTasks][maxDependencies] = {
{-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1},
{0,1,-1,-1,-1,-1},
{0,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1},
{0,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1},
{8,-1,-1,-1,-1,-1},
{29,-1,-1,-1,-1,-1},
{13,17,-1,-1,-1,-1},
{2,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1},
{7,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1},
{3,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1},
{25,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1},
{21,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1},
{27,-1,-1,-1,-1,-1},
{30,38,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1},
{13,14,15,16,19,38},
{0,10,-1,-1,-1,-1},
{11,-1,-1,-1,-1,-1},
{30,-1,-1,-1,-1,-1},
{11,23,-1,-1,-1,-1},
{20,28,36,-1,-1,-1},
{30,35,-1,-1,-1,-1},
{13,38,-1,-1,-1,-1},
{36,42,-1,-1,-1,-1},
{22,28,34,-1,-1,-1},
{-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1},
{29,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1},
{23,-1,-1,-1,-1,-1},
{38,-1,-1,-1,-1,-1},
{1,25,-1,-1,-1,-1},
{6,-1,-1,-1,-1,-1},
{42,53,-1,-1,-1,-1},
{11,14,56,-1,-1,-1},
{3,14,24,30,-1,-1},
{53,-1,-1,-1,-1,-1},
{29,61,-1,-1,-1,-1},
{14,66,-1,-1,-1,-1},
{11,14,64,-1,-1,-1},
{0,-1,-1,-1,-1,-1},
{65,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1},
{31,41,-1,-1,-1,-1},
{50,-1,-1,-1,-1,-1},
{48,57,-1,-1,-1,-1},
{50,65,-1,-1,-1,-1},
{12,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1},
{66,78,-1,-1,-1,-1},
{11,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1},
{10,20,30,37,-1,-1},
{25,-1,-1,-1,-1,-1},
{11,80,-1,-1,-1,-1},
{11,-1,-1,-1,-1,-1},
{9,25,73,-1,-1,-1},
{41,-1,-1,-1,-1,-1},
{29,35,40,55,-1,-1},
{61,-1,-1,-1,-1,-1},
{48,-1,-1,-1,-1,-1},
{52,62,-1,-1,-1,-1},
{21,50,-1,-1,-1,-1},
{15,32,63,-1,-1,-1},
{11,25,37,56,-1,-1},
{37,68,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1}};


int availableMachines = numberOfMachines;

// Typedefs
typedef int[0, numberOfChains - 1] chainId_t;

// Ints and Arrays
int numberOfChainsDone = 0;
int tasksDone[numberOfTasks];
bool runnableChains[numberOfChains];
bool assignmentChoice[numberOfChains];

// Channels
broadcast chan startMachines;
broadcast chan chainMachineChan[numberOfChains];
broadcast chan activateChains;</declaration>
	<template>
		<name x="5" y="5">Composer</name>
		<declaration>// Place local declarations here.
clock time;</declaration>
		<location id="id0" x="-102" y="-255">
			<name x="-112" y="-289">Init</name>
			<label kind="invariant" x="-246" y="-238">numberOfChainsDone &lt;= numberOfChains</label> 
 <label kind="exponentialrate" x="-112" y="-221">0</label>
		</location>
		<location id="id1" x="331" y="-255">
			<name x="321" y="-289">Done</name>
		</location>
		<init ref="id0"/>
		<transition>
			<source ref="id0"/>
			<target ref="id1"/>
			<label kind="guard" x="-17" y="-289">numberOfChainsDone &gt;= numberOfChains</label>
		</transition>
	</template>
	<template>
		<name>Chain</name>
		<parameter>const chainId_t cid</parameter>
		<declaration>clock x;
const int chainSize = globalChainSize[cid];
int index = 0;

bool AllDependenciesDone()
{
    bool dependenciesDone = 1;
    int i;
    for (i = 0; i &lt; maxDependencies; i++)
    {
        int value = dependencies[globalChains[cid][index]][i];
        if (value == -1)
            return dependenciesDone;

        dependenciesDone &amp;= tasksDone[value];
    }
    return dependenciesDone;
}</declaration>
		<location id="id2" x="-68" y="-238">
			<name x="-78" y="-272">Idle</name>
			<label kind="exponentialrate" x="-51" y="-255">3</label>
		</location>
		<location id="id3" x="-76" y="51">
			<name x="-102" y="68">Running</name>
			<label kind="invariant" x="-178" y="85">x &lt;= durations[globalChains[cid][index]]</label>
		</location>
		<location id="id4" x="-450" y="-238">
			<name x="-460" y="-272">Done</name>
		</location>
		<init ref="id2"/>
		<transition controllable="false">
			<source ref="id2"/>
			<target ref="id4"/>
			<label kind="guard" x="-399" y="-280">index &gt;= chainSize &amp;&amp;
x &gt;= durations[globalChains[cid][index - 1]]</label>
			<label kind="assignment" x="-399" y="-238">numberOfChainsDone++</label>
		</transition>
		<transition controllable="false">
			<source ref="id3"/>
			<target ref="id2"/>
			<label kind="guard" x="-450" y="-127">x &gt;= durations[globalChains[cid][index]]</label>
			<label kind="assignment" x="-450" y="-110">availableMachines++,
tasksDone[globalChains[cid][index]] = 1,
index++</label>
			<nail x="-161" y="-85"/>
		</transition>
		<transition>
			<source ref="id2"/>
			<target ref="id3"/>
			<label kind="guard" x="34" y="-127">index &lt; chainSize &amp;&amp;
availableMachines &gt; 0 &amp;&amp; AllDependenciesDone()</label>
			<label kind="assignment" x="34" y="-85">availableMachines--,
x = 0</label>
			<nail x="17" y="-85"/>
		</transition>
	</template>
	<system>// Place template instantiations here.

// List one or more processes to be composed into a system.
system Composer, Chain;
    </system>
	<queries>
		<query>
			<formula>strategy TimeSchedule = minE (Composer.time) [&lt;=57] : &lt;&gt;Composer.Done</formula>
			<comment></comment>
		</query>
		<query>
			<formula>inf{Composer.Done} : Composer.time</formula>
			<comment></comment>
		</query>
		<query>
			<formula>A&lt;&gt; Composer.Done</formula>
			<comment></comment>
		</query>
		<query>
			<formula>E&lt;&gt; Composer.Done</formula>
			<comment></comment>
		</query>
	</queries>
</nta>
