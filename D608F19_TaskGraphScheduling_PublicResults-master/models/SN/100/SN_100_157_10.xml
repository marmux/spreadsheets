<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/researchgroup/darts/uppaal/flat-1_2.dtd'>
<nta>
<declaration>//Variables
const int numberOfChains = 30;
const int numberOfTasks = 100;
const int numberOfMachines = 10;
const int maxDependencies = 31;
const int longestChain = 7;
const int globalChainSize[numberOfChains] = {6,7,5,3,3,5,4,3,4,4,4,2,6,3,5,3,2,2,4,5,3,3,3,2,2,1,2,2,1,1};
const int globalChains[numberOfChains][longestChain] = {
{0,3,4,55,85,92,-1},
{1,21,61,67,90,94,97},
{2,75,78,95,99,-1,-1},
{5,24,91,-1,-1,-1,-1},
{6,43,93,-1,-1,-1,-1},
{7,62,80,84,96,-1,-1},
{8,71,86,87,-1,-1,-1},
{9,77,88,-1,-1,-1,-1},
{10,73,82,89,-1,-1,-1},
{11,27,70,83,-1,-1,-1},
{12,35,64,98,-1,-1,-1},
{13,81,-1,-1,-1,-1,-1},
{14,41,59,65,69,74,-1},
{15,76,79,-1,-1,-1,-1},
{16,39,58,60,66,-1,-1},
{17,57,72,-1,-1,-1,-1},
{18,50,-1,-1,-1,-1,-1},
{19,68,-1,-1,-1,-1,-1},
{20,46,53,54,-1,-1,-1},
{22,31,34,42,56,-1,-1},
{23,25,63,-1,-1,-1,-1},
{26,45,47,-1,-1,-1,-1},
{28,37,49,-1,-1,-1,-1},
{29,40,-1,-1,-1,-1,-1},
{30,52,-1,-1,-1,-1,-1},
{32,-1,-1,-1,-1,-1,-1},
{33,51,-1,-1,-1,-1,-1},
{36,38,-1,-1,-1,-1,-1},
{44,-1,-1,-1,-1,-1,-1},
{48,-1,-1,-1,-1,-1,-1}};
int chainDuration[numberOfChains] = {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1};
int durations[numberOfTasks] = {1,3,2,16,5,4,9,1,9,7,21,5,2,1,11,1,21,7,17,4,5,4,1,1,19,13,2,17,9,5,8,2,10,4,1,8,1,2,20,8,2,3,9,27,14,1,9,4,3,1,6,2,4,30,2,30,5,11,9,20,9,1,36,3,1,10,3,6,2,2,21,9,11,7,5,15,20,1,6,2,20,7,4,2,25,11,20,5,10,1,57,1,3,3,1,36,2,16,5,8};
const int dependencies[numberOfTasks][maxDependencies] = {
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,3,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,2,3,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,4,5,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,4,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,8,9,10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{14,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,2,8,12,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,3,14,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,8,11,14,15,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,3,10,11,13,14,17,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,8,10,12,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,2,3,9,11,13,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,2,7,20,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,4,5,6,15,22,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,2,4,5,13,14,21,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,7,15,17,22,23,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,3,16,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,7,9,10,11,12,14,18,20,21,23,24,26,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,11,17,18,19,22,25,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,2,7,9,20,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,12,17,19,22,25,27,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,4,6,11,13,15,22,27,30,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,14,18,20,22,27,31,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,3,16,21,27,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,11,12,14,21,22,24,30,31,32,33,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,5,6,9,11,12,15,18,19,20,30,32,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,10,17,20,22,27,34,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,6,7,16,20,27,28,36,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{15,16,18,20,29,34,35,36,37,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,3,9,10,12,13,16,25,27,28,30,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,9,13,18,24,25,29,30,32,35,38,39,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,5,6,11,12,13,14,17,19,22,26,29,31,32,35,38,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,8,14,19,20,23,26,27,31,33,34,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,3,4,6,11,12,17,24,29,36,39,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,9,17,19,33,41,42,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,16,17,22,26,30,36,39,42,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,7,13,17,20,21,23,25,28,33,35,40,42,43,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,21,23,26,37,41,44,45,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{13,18,30,31,33,36,46,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,7,12,13,21,28,30,36,37,40,41,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,2,7,10,11,12,17,18,19,25,26,30,32,33,36,38,40,46,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,8,12,19,33,37,39,42,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,5,25,27,30,31,38,44,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{12,14,18,19,22,27,28,30,34,36,39,45,46,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,12,13,14,16,19,26,29,36,39,41,47,49,51,53,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,3,4,7,26,33,35,39,40,52,53,54,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{11,15,18,19,20,23,24,27,29,36,40,42,44,45,51,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,3,6,16,17,26,28,38,40,41,43,47,48,53,55,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,11,13,15,16,21,28,29,34,38,39,41,42,43,47,50,51,56,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,3,10,14,24,27,29,30,36,39,41,43,47,50,53,54,57,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,5,7,13,16,20,26,37,40,54,56,58,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,14,20,21,29,32,33,34,38,42,45,47,48,49,55,56,59,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,3,5,6,7,13,14,17,19,23,26,27,30,32,33,37,38,44,54,55,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,12,14,24,25,27,29,33,38,41,55,61,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,5,7,9,11,15,21,22,23,35,40,41,45,46,50,51,58,60,61,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,9,18,23,24,25,28,32,35,36,37,39,44,46,50,51,59,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,4,6,8,10,14,25,26,31,32,44,45,46,51,60,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,2,3,10,15,16,21,23,27,32,37,40,42,43,47,53,54,61,64,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,5,12,16,19,22,26,27,28,30,34,35,36,38,45,48,52,55,56,63,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,9,12,14,15,23,24,25,28,29,30,31,33,37,42,46,57,58,60,61,63,65,68,-1,-1,-1,-1,-1,-1,-1,-1},
{0,6,9,13,16,21,22,24,26,27,29,36,37,44,46,49,50,53,55,59,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,8,12,17,18,22,23,24,28,31,32,35,36,42,43,45,47,48,50,52,54,55,60,61,64,66,68,-1,-1,-1,-1},
{5,8,18,19,20,25,28,31,33,35,36,37,41,42,48,53,56,57,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,5,8,9,10,11,17,18,21,22,23,26,32,34,40,42,44,45,54,57,59,62,66,68,70,-1,-1,-1,-1,-1,-1},
{2,21,28,30,35,37,39,40,41,42,48,49,51,53,55,56,62,64,69,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,2,10,11,12,18,19,21,27,28,29,34,35,37,39,46,49,55,59,61,62,64,66,70,71,73,-1,-1,-1,-1,-1},
{2,11,13,14,15,16,18,19,20,30,32,40,41,46,47,53,54,58,60,61,68,71,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,2,8,9,13,14,17,21,34,36,38,40,43,49,51,55,56,57,58,66,69,74,76,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,2,6,7,22,25,28,31,42,43,44,46,54,55,60,62,65,70,75,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,4,5,12,19,20,29,30,32,36,37,39,41,45,46,47,51,52,55,56,58,72,75,76,-1,-1,-1,-1,-1,-1,-1},
{0,4,9,12,17,23,29,34,35,36,44,48,55,59,62,71,72,74,78,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,7,8,13,14,16,17,21,22,26,29,32,41,49,51,53,54,60,73,78,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,8,9,10,19,20,23,24,29,33,35,42,44,45,46,48,53,56,63,64,67,72,73,80,-1,-1,-1,-1,-1,-1,-1},
{7,10,11,16,17,21,22,29,34,38,42,43,45,47,51,53,54,58,62,65,70,72,76,-1,-1,-1,-1,-1,-1,-1,-1},
{2,4,6,12,17,27,30,33,34,35,36,45,47,56,61,64,67,68,70,80,82,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,3,4,6,8,9,15,16,23,26,31,37,38,40,42,44,48,50,52,55,56,61,68,70,77,79,-1,-1,-1,-1,-1},
{1,2,5,11,17,30,36,45,46,47,48,54,60,70,71,72,74,80,82,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,10,30,32,34,38,40,44,54,55,56,63,64,68,84,86,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,7,8,9,10,14,19,23,25,26,27,29,33,35,38,40,43,48,50,51,52,55,57,58,60,64,67,76,77,81,-1},
{8,11,13,18,20,22,23,30,33,36,37,38,39,40,46,56,59,60,63,66,73,81,82,83,-1,-1,-1,-1,-1,-1,-1},
{1,2,5,8,18,25,32,33,36,40,45,48,54,55,56,59,61,62,63,67,70,72,74,78,87,-1,-1,-1,-1,-1,-1},
{0,7,9,13,16,17,18,21,24,25,28,30,31,32,35,36,40,41,44,45,50,53,59,64,66,73,74,78,82,84,90},
{3,6,8,11,14,26,29,31,36,37,44,46,50,51,60,62,66,72,76,81,82,85,90,-1,-1,-1,-1,-1,-1,-1,-1},
{5,8,9,13,16,24,25,28,30,32,34,38,42,43,44,45,47,51,59,60,62,64,67,69,70,75,78,79,-1,-1,-1},
{0,1,5,13,15,17,20,22,23,30,32,36,40,44,45,47,55,57,58,59,60,65,70,78,79,80,82,89,90,91,-1},
{0,2,8,9,10,12,14,16,20,21,33,41,44,45,46,50,75,78,83,87,91,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,20,23,28,29,35,36,37,39,53,60,62,63,64,65,73,74,79,84,86,89,90,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,6,16,18,20,25,26,28,31,45,46,70,76,80,82,83,86,87,91,94,96,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,10,14,15,17,24,29,32,37,39,41,46,50,57,58,64,65,67,68,71,80,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,10,17,19,22,23,28,30,31,34,35,36,38,39,48,51,65,69,70,71,72,73,74,76,77,81,83,88,93,95,98}};


int availableMachines = numberOfMachines;

// Typedefs
typedef int[0, numberOfChains - 1] chainId_t;

// Ints and Arrays
int numberOfChainsDone = 0;
int tasksDone[numberOfTasks];
bool runnableChains[numberOfChains];
bool assignmentChoice[numberOfChains];

// Channels
broadcast chan startMachines;
broadcast chan chainMachineChan[numberOfChains];
broadcast chan activateChains;</declaration>
	<template>
		<name x="5" y="5">Composer</name>
		<declaration>// Place local declarations here.
clock time;</declaration>
		<location id="id0" x="-102" y="-255">
			<name x="-112" y="-289">Init</name>
			<label kind="invariant" x="-246" y="-238">numberOfChainsDone &lt;= numberOfChains</label> 
 <label kind="exponentialrate" x="-112" y="-221">0</label>
		</location>
		<location id="id1" x="331" y="-255">
			<name x="321" y="-289">Done</name>
		</location>
		<init ref="id0"/>
		<transition>
			<source ref="id0"/>
			<target ref="id1"/>
			<label kind="guard" x="-17" y="-289">numberOfChainsDone &gt;= numberOfChains</label>
		</transition>
	</template>
	<template>
		<name>Chain</name>
		<parameter>const chainId_t cid</parameter>
		<declaration>clock x;
const int chainSize = globalChainSize[cid];
int index = 0;

bool AllDependenciesDone()
{
    bool dependenciesDone = 1;
    int i;
    for (i = 0; i &lt; maxDependencies; i++)
    {
        int value = dependencies[globalChains[cid][index]][i];
        if (value == -1)
            return dependenciesDone;

        dependenciesDone &amp;= tasksDone[value];
    }
    return dependenciesDone;
}</declaration>
		<location id="id2" x="-68" y="-238">
			<name x="-78" y="-272">Idle</name>
			<label kind="exponentialrate" x="-51" y="-255">3</label>
		</location>
		<location id="id3" x="-76" y="51">
			<name x="-102" y="68">Running</name>
			<label kind="invariant" x="-178" y="85">x &lt;= durations[globalChains[cid][index]]</label>
		</location>
		<location id="id4" x="-450" y="-238">
			<name x="-460" y="-272">Done</name>
		</location>
		<init ref="id2"/>
		<transition controllable="false">
			<source ref="id2"/>
			<target ref="id4"/>
			<label kind="guard" x="-399" y="-280">index &gt;= chainSize &amp;&amp;
x &gt;= durations[globalChains[cid][index - 1]]</label>
			<label kind="assignment" x="-399" y="-238">numberOfChainsDone++</label>
		</transition>
		<transition controllable="false">
			<source ref="id3"/>
			<target ref="id2"/>
			<label kind="guard" x="-450" y="-127">x &gt;= durations[globalChains[cid][index]]</label>
			<label kind="assignment" x="-450" y="-110">availableMachines++,
tasksDone[globalChains[cid][index]] = 1,
index++</label>
			<nail x="-161" y="-85"/>
		</transition>
		<transition>
			<source ref="id2"/>
			<target ref="id3"/>
			<label kind="guard" x="34" y="-127">index &lt; chainSize &amp;&amp;
availableMachines &gt; 0 &amp;&amp; AllDependenciesDone()</label>
			<label kind="assignment" x="34" y="-85">availableMachines--,
x = 0</label>
			<nail x="17" y="-85"/>
		</transition>
	</template>
	<system>// Place template instantiations here.

// List one or more processes to be composed into a system.
system Composer, Chain;
    </system>
	<queries>
		<query>
			<formula>strategy TimeSchedule = minE (Composer.time) [&lt;=57] : &lt;&gt;Composer.Done</formula>
			<comment></comment>
		</query>
		<query>
			<formula>inf{Composer.Done} : Composer.time</formula>
			<comment></comment>
		</query>
		<query>
			<formula>A&lt;&gt; Composer.Done</formula>
			<comment></comment>
		</query>
		<query>
			<formula>E&lt;&gt; Composer.Done</formula>
			<comment></comment>
		</query>
	</queries>
</nta>
