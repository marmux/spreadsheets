<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/researchgroup/darts/uppaal/flat-1_2.dtd'>
<nta>
<declaration>//Variables
const int numberOfChains = 38;
const int numberOfTasks = 100;
const int numberOfMachines = 5;
const int maxDependencies = 11;
const int longestChain = 6;
const int globalChainSize[numberOfChains] = {6,4,3,3,6,3,4,2,3,5,2,2,2,2,3,4,4,2,3,2,2,4,3,3,1,2,2,2,1,2,4,3,1,1,1,1,1,1};
const int globalChains[numberOfChains][longestChain] = {
{0,12,32,41,49,90},
{1,42,73,88,-1,-1},
{2,35,91,-1,-1,-1},
{3,62,95,-1,-1,-1},
{4,16,47,54,66,79},
{5,78,97,-1,-1,-1},
{6,45,60,84,-1,-1},
{7,86,-1,-1,-1,-1},
{8,51,83,-1,-1,-1},
{9,13,64,77,96,-1},
{10,82,-1,-1,-1,-1},
{11,68,-1,-1,-1,-1},
{14,67,-1,-1,-1,-1},
{15,92,-1,-1,-1,-1},
{17,39,89,-1,-1,-1},
{18,28,52,80,-1,-1},
{19,43,61,76,-1,-1},
{20,55,-1,-1,-1,-1},
{21,31,59,-1,-1,-1},
{22,56,-1,-1,-1,-1},
{23,93,-1,-1,-1,-1},
{24,53,69,74,-1,-1},
{25,33,58,-1,-1,-1},
{26,38,72,-1,-1,-1},
{27,-1,-1,-1,-1,-1},
{29,46,-1,-1,-1,-1},
{30,99,-1,-1,-1,-1},
{34,94,-1,-1,-1,-1},
{36,-1,-1,-1,-1,-1},
{37,65,-1,-1,-1,-1},
{40,50,70,98,-1,-1},
{44,75,85,-1,-1,-1},
{48,-1,-1,-1,-1,-1},
{57,-1,-1,-1,-1,-1},
{63,-1,-1,-1,-1,-1},
{71,-1,-1,-1,-1,-1},
{81,-1,-1,-1,-1,-1},
{87,-1,-1,-1,-1,-1}};
int chainDuration[numberOfChains] = {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1};
int durations[numberOfTasks] = {3,6,5,7,7,4,7,7,6,5,6,7,5,5,5,7,5,6,5,3,5,5,7,6,4,5,6,6,5,5,6,5,6,6,5,7,6,5,6,5,5,9,6,7,6,6,6,6,4,6,5,4,5,5,5,6,7,5,6,5,5,6,5,5,5,3,7,6,7,7,5,7,6,6,4,7,4,6,5,4,5,4,3,6,6,5,5,6,6,6,4,4,3,5,6,5,5,5,7,4};
const int dependencies[numberOfTasks][maxDependencies] = {
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,4,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{15,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{13,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{14,17,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{14,15,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,24,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{11,18,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{23,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,21,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{12,16,25,-1,-1,-1,-1,-1,-1,-1,-1},
{25,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,15,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,2,10,13,-1,-1,-1,-1,-1,-1,-1},
{6,30,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{23,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{26,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,15,17,18,30,-1,-1,-1,-1,-1,-1},
{14,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,31,32,-1,-1,-1,-1,-1,-1,-1,-1},
{1,4,32,-1,-1,-1,-1,-1,-1,-1,-1},
{6,17,19,-1,-1,-1,-1,-1,-1,-1,-1},
{31,32,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,3,6,24,33,-1,-1,-1,-1,-1,-1},
{1,17,29,-1,-1,-1,-1,-1,-1,-1,-1},
{11,16,31,33,-1,-1,-1,-1,-1,-1,-1},
{5,13,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{31,41,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{10,40,44,45,-1,-1,-1,-1,-1,-1,-1},
{8,14,19,33,37,-1,-1,-1,-1,-1,-1},
{16,28,34,-1,-1,-1,-1,-1,-1,-1,-1},
{7,23,24,31,-1,-1,-1,-1,-1,-1,-1},
{29,36,47,-1,-1,-1,-1,-1,-1,-1,-1},
{13,20,23,-1,-1,-1,-1,-1,-1,-1,-1},
{7,19,22,-1,-1,-1,-1,-1,-1,-1,-1},
{11,21,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,17,23,29,33,38,-1,-1,-1,-1,-1},
{14,19,31,-1,-1,-1,-1,-1,-1,-1,-1},
{1,23,32,38,45,-1,-1,-1,-1,-1,-1},
{18,20,25,26,33,41,43,-1,-1,-1,-1},
{3,12,28,29,35,44,50,61,-1,-1,-1},
{37,44,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{13,30,38,45,47,-1,-1,-1,-1,-1,-1},
{6,37,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{11,20,33,36,47,50,54,-1,-1,-1,-1},
{14,29,47,54,-1,-1,-1,-1,-1,-1,-1},
{8,11,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,38,50,53,58,-1,-1,-1,-1,-1,-1},
{4,13,44,48,50,-1,-1,-1,-1,-1,-1},
{21,37,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{23,37,38,71,-1,-1,-1,-1,-1,-1,-1},
{12,19,30,39,42,47,57,61,-1,-1,-1},
{30,48,50,53,69,-1,-1,-1,-1,-1,-1},
{21,44,47,57,71,-1,-1,-1,-1,-1,-1},
{1,12,15,44,56,61,-1,-1,-1,-1,-1},
{13,23,37,60,64,71,-1,-1,-1,-1,-1},
{5,36,41,-1,-1,-1,-1,-1,-1,-1,-1},
{2,3,27,38,65,66,-1,-1,-1,-1,-1},
{8,23,52,-1,-1,-1,-1,-1,-1,-1,-1},
{28,50,70,-1,-1,-1,-1,-1,-1,-1,-1},
{9,10,27,37,40,64,72,76,-1,-1,-1},
{22,25,40,51,-1,-1,-1,-1,-1,-1,-1},
{11,41,50,60,74,76,-1,-1,-1,-1,-1},
{35,38,44,75,-1,-1,-1,-1,-1,-1,-1},
{7,52,76,78,80,-1,-1,-1,-1,-1,-1},
{16,23,70,-1,-1,-1,-1,-1,-1,-1,-1},
{3,9,20,28,32,39,56,61,62,65,73},
{6,20,39,64,72,74,-1,-1,-1,-1,-1},
{5,7,8,10,18,49,58,65,76,-1,-1},
{1,27,30,31,35,41,72,75,77,-1,-1},
{15,35,36,64,78,-1,-1,-1,-1,-1,-1},
{13,23,43,62,63,69,-1,-1,-1,-1,-1},
{17,34,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,12,22,26,53,62,77,-1,-1,-1,-1},
{23,48,65,77,81,-1,-1,-1,-1,-1,-1},
{1,3,17,20,40,49,68,78,85,93,-1},
{1,22,23,70,-1,-1,-1,-1,-1,-1,-1},
{12,24,30,33,37,-1,-1,-1,-1,-1,-1}};


int availableMachines = numberOfMachines;

// Typedefs
typedef int[0, numberOfChains - 1] chainId_t;

// Ints and Arrays
int numberOfChainsDone = 0;
int tasksDone[numberOfTasks];
bool runnableChains[numberOfChains];
bool assignmentChoice[numberOfChains];

// Channels
broadcast chan startMachines;
broadcast chan chainMachineChan[numberOfChains];
broadcast chan activateChains;</declaration>
	<template>
		<name x="5" y="5">Composer</name>
		<declaration>// Place local declarations here.
clock time;</declaration>
		<location id="id0" x="-102" y="-255">
			<name x="-112" y="-289">Init</name>
			<label kind="invariant" x="-246" y="-238">numberOfChainsDone &lt;= numberOfChains</label> 
 <label kind="exponentialrate" x="-112" y="-221">0</label>
		</location>
		<location id="id1" x="331" y="-255">
			<name x="321" y="-289">Done</name>
		</location>
		<init ref="id0"/>
		<transition>
			<source ref="id0"/>
			<target ref="id1"/>
			<label kind="guard" x="-17" y="-289">numberOfChainsDone &gt;= numberOfChains</label>
		</transition>
	</template>
	<template>
		<name>Chain</name>
		<parameter>const chainId_t cid</parameter>
		<declaration>clock x;
const int chainSize = globalChainSize[cid];
int index = 0;

bool AllDependenciesDone()
{
    bool dependenciesDone = 1;
    int i;
    for (i = 0; i &lt; maxDependencies; i++)
    {
        int value = dependencies[globalChains[cid][index]][i];
        if (value == -1)
            return dependenciesDone;

        dependenciesDone &amp;= tasksDone[value];
    }
    return dependenciesDone;
}</declaration>
		<location id="id2" x="-68" y="-238">
			<name x="-78" y="-272">Idle</name>
			<label kind="exponentialrate" x="-51" y="-255">3</label>
		</location>
		<location id="id3" x="-76" y="51">
			<name x="-102" y="68">Running</name>
			<label kind="invariant" x="-178" y="85">x &lt;= durations[globalChains[cid][index]]</label>
		</location>
		<location id="id4" x="-450" y="-238">
			<name x="-460" y="-272">Done</name>
		</location>
		<init ref="id2"/>
		<transition controllable="false">
			<source ref="id2"/>
			<target ref="id4"/>
			<label kind="guard" x="-399" y="-280">index &gt;= chainSize &amp;&amp;
x &gt;= durations[globalChains[cid][index - 1]]</label>
			<label kind="assignment" x="-399" y="-238">numberOfChainsDone++</label>
		</transition>
		<transition controllable="false">
			<source ref="id3"/>
			<target ref="id2"/>
			<label kind="guard" x="-450" y="-127">x &gt;= durations[globalChains[cid][index]]</label>
			<label kind="assignment" x="-450" y="-110">availableMachines++,
tasksDone[globalChains[cid][index]] = 1,
index++</label>
			<nail x="-161" y="-85"/>
		</transition>
		<transition>
			<source ref="id2"/>
			<target ref="id3"/>
			<label kind="guard" x="34" y="-127">index &lt; chainSize &amp;&amp;
availableMachines &gt; 0 &amp;&amp; AllDependenciesDone()</label>
			<label kind="assignment" x="34" y="-85">availableMachines--,
x = 0</label>
			<nail x="17" y="-85"/>
		</transition>
	</template>
	<system>// Place template instantiations here.

// List one or more processes to be composed into a system.
system Composer, Chain;
    </system>
	<queries>
		<query>
			<formula>strategy TimeSchedule = minE (Composer.time) [&lt;=57] : &lt;&gt;Composer.Done</formula>
			<comment></comment>
		</query>
		<query>
			<formula>inf{Composer.Done} : Composer.time</formula>
			<comment></comment>
		</query>
		<query>
			<formula>A&lt;&gt; Composer.Done</formula>
			<comment></comment>
		</query>
		<query>
			<formula>E&lt;&gt; Composer.Done</formula>
			<comment></comment>
		</query>
	</queries>
</nta>
