<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/researchgroup/darts/uppaal/flat-1_2.dtd'>
<nta>
<declaration>//Variables
const int numberOfChains = 38;
const int numberOfTasks = 100;
const int numberOfMachines = 4;
const int maxDependencies = 16;
const int longestChain = 5;
const int globalChainSize[numberOfChains] = {5,5,2,2,4,4,4,5,4,3,5,3,4,3,3,2,3,2,5,3,2,3,3,2,3,1,3,1,1,1,2,1,1,1,1,1,1,1};
const int globalChains[numberOfChains][longestChain] = {
{0,15,23,88,98},
{1,66,80,83,94},
{2,91,-1,-1,-1},
{3,90,-1,-1,-1},
{4,17,32,99,-1},
{5,40,81,97,-1},
{6,33,78,82,-1},
{7,35,45,49,72},
{8,67,74,86,-1},
{9,76,93,-1,-1},
{10,47,64,77,95},
{11,44,89,-1,-1},
{12,52,85,96,-1},
{13,42,63,-1,-1},
{14,58,92,-1,-1},
{16,70,-1,-1,-1},
{18,68,79,-1,-1},
{19,87,-1,-1,-1},
{20,34,59,71,84},
{21,62,75,-1,-1},
{22,48,-1,-1,-1},
{24,38,73,-1,-1},
{25,46,53,-1,-1},
{26,54,-1,-1,-1},
{27,30,51,-1,-1},
{28,-1,-1,-1,-1},
{29,43,60,-1,-1},
{31,-1,-1,-1,-1},
{36,-1,-1,-1,-1},
{37,-1,-1,-1,-1},
{39,61,-1,-1,-1},
{41,-1,-1,-1,-1},
{50,-1,-1,-1,-1},
{55,-1,-1,-1,-1},
{56,-1,-1,-1,-1},
{57,-1,-1,-1,-1},
{65,-1,-1,-1,-1},
{69,-1,-1,-1,-1}};
int chainDuration[numberOfChains] = {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1};
int durations[numberOfTasks] = {7,5,13,2,14,8,18,2,10,10,20,17,4,7,9,20,2,2,10,9,1,7,9,1,3,8,8,5,4,10,4,10,4,2,9,4,3,4,6,4,8,7,1,2,19,10,2,15,5,18,7,3,3,11,4,2,1,2,3,5,4,5,8,3,3,2,18,3,9,15,2,1,17,6,3,7,9,4,7,6,9,14,18,4,5,14,7,8,3,10,5,1,7,9,7,16,6,2,9,9};
const int dependencies[numberOfTasks][maxDependencies] = {
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,3,5,10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,3,4,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,13,15,18,21,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,9,10,19,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,11,15,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{19,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,10,17,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{9,19,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,3,11,27,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{16,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,4,14,17,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,6,15,21,22,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{11,17,20,21,24,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,7,12,14,16,17,23,24,-1,-1,-1,-1,-1,-1,-1,-1},
{11,19,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,25,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{10,20,24,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,3,5,14,16,19,25,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{11,26,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,8,13,26,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{22,25,29,32,41,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,10,11,17,18,24,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,5,9,35,37,39,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,18,22,25,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,6,10,19,25,30,32,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,5,22,41,45,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,9,21,23,32,45,46,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{12,26,43,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,10,21,26,30,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,6,12,14,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{22,23,28,29,31,32,36,37,46,-1,-1,-1,-1,-1,-1,-1},
{17,25,26,28,30,37,42,45,-1,-1,-1,-1,-1,-1,-1,-1},
{18,38,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,20,46,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{26,39,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,14,33,47,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,8,27,34,46,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,14,29,43,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,7,30,35,39,45,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,4,5,11,21,46,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,3,22,29,36,42,47,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,23,26,27,28,29,44,45,47,53,63,-1,-1,-1,-1,-1},
{12,18,25,43,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,5,9,15,18,19,27,40,44,53,57,-1,-1,-1,-1,-1},
{7,8,28,40,52,55,60,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,3,12,18,21,25,41,56,59,-1,-1,-1,-1,-1,-1,-1},
{12,13,52,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,16,18,38,47,56,60,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{15,25,28,40,41,59,60,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,14,21,39,40,48,49,54,56,58,60,-1,-1,-1,-1,-1},
{11,29,35,38,47,69,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{12,24,28,32,36,38,45,61,67,-1,-1,-1,-1,-1,-1,-1},
{19,24,29,33,62,64,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,8,9,22,28,52,54,59,61,64,-1,-1,-1,-1,-1,-1},
{0,12,16,18,36,47,64,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,9,19,30,33,52,56,58,63,-1,-1,-1,-1,-1,-1,-1},
{2,21,23,68,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,10,54,61,65,66,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,12,20,23,36,40,53,57,58,63,-1,-1,-1,-1,-1,-1},
{2,19,24,31,37,40,43,46,47,57,62,69,78,-1,-1,-1},
{4,6,23,37,44,46,72,74,80,-1,-1,-1,-1,-1,-1,-1},
{10,11,28,38,43,60,68,71,-1,-1,-1,-1,-1,-1,-1,-1},
{6,22,37,47,52,54,70,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,28,43,47,51,74,80,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,10,15,19,36,37,42,43,75,-1,-1,-1,-1,-1,-1,-1},
{2,15,16,23,26,48,51,54,61,71,73,74,80,-1,-1,-1},
{27,29,30,44,49,61,76,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,3,12,15,20,26,29,34,44,47,48,59,63,70,73,-1},
{0,1,2,4,8,27,31,44,52,60,62,71,72,77,89,90},
{10,20,31,36,40,51,58,62,69,83,-1,-1,-1,-1,-1,-1},
{9,13,17,18,20,22,33,36,39,43,48,61,62,69,76,-1},
{1,10,42,66,81,83,87,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{19,27,28,40,47,48,51,54,59,62,73,77,79,84,87,-1},
{14,55,84,85,87,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,21,31,42,54,61,63,68,70,74,81,89,-1,-1,-1,-1},
{13,14,19,46,68,72,78,81,88,-1,-1,-1,-1,-1,-1,-1},
{2,11,21,25,28,32,33,39,54,69,83,87,-1,-1,-1,-1}};


int availableMachines = numberOfMachines;

// Typedefs
typedef int[0, numberOfChains - 1] chainId_t;

// Ints and Arrays
int numberOfChainsDone = 0;
int tasksDone[numberOfTasks];
bool runnableChains[numberOfChains];
bool assignmentChoice[numberOfChains];

// Channels
broadcast chan startMachines;
broadcast chan chainMachineChan[numberOfChains];
broadcast chan activateChains;</declaration>
	<template>
		<name x="5" y="5">Composer</name>
		<declaration>// Place local declarations here.
clock time;</declaration>
		<location id="id0" x="-102" y="-255">
			<name x="-112" y="-289">Init</name>
			<label kind="invariant" x="-246" y="-238">numberOfChainsDone &lt;= numberOfChains</label> 
 <label kind="exponentialrate" x="-112" y="-221">0</label>
		</location>
		<location id="id1" x="331" y="-255">
			<name x="321" y="-289">Done</name>
		</location>
		<init ref="id0"/>
		<transition>
			<source ref="id0"/>
			<target ref="id1"/>
			<label kind="guard" x="-17" y="-289">numberOfChainsDone &gt;= numberOfChains</label>
		</transition>
	</template>
	<template>
		<name>Chain</name>
		<parameter>const chainId_t cid</parameter>
		<declaration>clock x;
const int chainSize = globalChainSize[cid];
int index = 0;

bool AllDependenciesDone()
{
    bool dependenciesDone = 1;
    int i;
    for (i = 0; i &lt; maxDependencies; i++)
    {
        int value = dependencies[globalChains[cid][index]][i];
        if (value == -1)
            return dependenciesDone;

        dependenciesDone &amp;= tasksDone[value];
    }
    return dependenciesDone;
}</declaration>
		<location id="id2" x="-68" y="-238">
			<name x="-78" y="-272">Idle</name>
			<label kind="exponentialrate" x="-51" y="-255">3</label>
		</location>
		<location id="id3" x="-76" y="51">
			<name x="-102" y="68">Running</name>
			<label kind="invariant" x="-178" y="85">x &lt;= durations[globalChains[cid][index]]</label>
		</location>
		<location id="id4" x="-450" y="-238">
			<name x="-460" y="-272">Done</name>
		</location>
		<init ref="id2"/>
		<transition controllable="false">
			<source ref="id2"/>
			<target ref="id4"/>
			<label kind="guard" x="-399" y="-280">index &gt;= chainSize &amp;&amp;
x &gt;= durations[globalChains[cid][index - 1]]</label>
			<label kind="assignment" x="-399" y="-238">numberOfChainsDone++</label>
		</transition>
		<transition controllable="false">
			<source ref="id3"/>
			<target ref="id2"/>
			<label kind="guard" x="-450" y="-127">x &gt;= durations[globalChains[cid][index]]</label>
			<label kind="assignment" x="-450" y="-110">availableMachines++,
tasksDone[globalChains[cid][index]] = 1,
index++</label>
			<nail x="-161" y="-85"/>
		</transition>
		<transition>
			<source ref="id2"/>
			<target ref="id3"/>
			<label kind="guard" x="34" y="-127">index &lt; chainSize &amp;&amp;
availableMachines &gt; 0 &amp;&amp; AllDependenciesDone()</label>
			<label kind="assignment" x="34" y="-85">availableMachines--,
x = 0</label>
			<nail x="17" y="-85"/>
		</transition>
	</template>
	<system>// Place template instantiations here.

// List one or more processes to be composed into a system.
system Composer, Chain;
    </system>
	<queries>
		<query>
			<formula>strategy TimeSchedule = minE (Composer.time) [&lt;=57] : &lt;&gt;Composer.Done</formula>
			<comment></comment>
		</query>
		<query>
			<formula>inf{Composer.Done} : Composer.time</formula>
			<comment></comment>
		</query>
		<query>
			<formula>A&lt;&gt; Composer.Done</formula>
			<comment></comment>
		</query>
		<query>
			<formula>E&lt;&gt; Composer.Done</formula>
			<comment></comment>
		</query>
	</queries>
</nta>
