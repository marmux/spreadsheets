<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/researchgroup/darts/uppaal/flat-1_2.dtd'>
<nta>
<declaration>//Variables
const int numberOfChains = 34;
const int numberOfTasks = 100;
const int numberOfMachines = 2;
const int maxDependencies = 12;
const int longestChain = 5;
const int globalChainSize[numberOfChains] = {5,5,3,5,4,3,4,4,4,3,3,4,4,3,2,5,2,3,3,5,3,3,1,2,2,2,2,1,3,1,2,2,1,1};
const int globalChains[numberOfChains][longestChain] = {
{0,25,49,59,75},
{1,50,56,73,97},
{2,71,98,-1,-1},
{3,15,29,57,82},
{4,14,63,79,-1},
{5,47,74,-1,-1},
{6,38,78,93,-1},
{7,19,42,88,-1},
{8,66,81,99,-1},
{9,76,92,-1,-1},
{10,83,94,-1,-1},
{11,34,52,89,-1},
{12,26,61,87,-1},
{13,31,80,-1,-1},
{16,91,-1,-1,-1},
{17,36,41,55,86},
{18,85,-1,-1,-1},
{20,27,64,-1,-1},
{21,32,95,-1,-1},
{22,45,65,77,96},
{23,54,84,-1,-1},
{24,28,70,-1,-1},
{30,-1,-1,-1,-1},
{33,60,-1,-1,-1},
{35,48,-1,-1,-1},
{37,67,-1,-1,-1},
{39,69,-1,-1,-1},
{40,-1,-1,-1,-1},
{43,72,90,-1,-1},
{44,-1,-1,-1,-1},
{46,68,-1,-1,-1},
{51,58,-1,-1,-1},
{53,-1,-1,-1,-1},
{62,-1,-1,-1,-1}};
int chainDuration[numberOfChains] = {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1};
int durations[numberOfTasks] = {24,40,24,24,5,7,10,14,2,24,21,7,6,33,22,8,6,2,1,12,3,1,2,15,14,30,2,8,7,1,35,6,29,24,16,20,4,5,2,5,36,3,10,1,33,18,23,21,16,27,1,5,25,12,6,9,26,4,11,14,4,19,21,13,6,18,5,51,66,1,9,3,13,15,7,7,6,35,16,5,2,13,2,15,7,12,5,10,4,26,4,4,29,4,17,25,1,21,4,46};
const int dependencies[numberOfTasks][maxDependencies] = {
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{9,14,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,7,14,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,9,10,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{11,12,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{9,10,12,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,4,20,26,-1,-1,-1,-1,-1,-1,-1,-1},
{3,24,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,6,15,20,24,-1,-1,-1,-1,-1,-1,-1},
{9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{13,22,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{14,21,26,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{11,19,22,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,9,16,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{11,12,17,20,-1,-1,-1,-1,-1,-1,-1,-1},
{3,10,15,16,-1,-1,-1,-1,-1,-1,-1,-1},
{1,6,15,20,30,31,-1,-1,-1,-1,-1,-1},
{14,17,27,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,19,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{19,26,33,34,36,-1,-1,-1,-1,-1,-1,-1},
{2,7,19,32,34,-1,-1,-1,-1,-1,-1,-1},
{1,16,27,28,-1,-1,-1,-1,-1,-1,-1,-1},
{0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,15,22,28,-1,-1,-1,-1,-1,-1,-1,-1},
{15,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,14,21,23,29,44,-1,-1,-1,-1,-1,-1},
{3,20,26,35,-1,-1,-1,-1,-1,-1,-1,-1},
{0,25,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,5,25,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{39,41,46,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,17,32,34,38,46,-1,-1,-1,-1,-1,-1},
{1,10,17,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{15,21,23,36,-1,-1,-1,-1,-1,-1,-1,-1},
{6,27,32,41,51,-1,-1,-1,-1,-1,-1,-1},
{3,28,45,46,50,-1,-1,-1,-1,-1,-1,-1},
{15,18,29,37,40,45,-1,-1,-1,-1,-1,-1},
{3,10,15,51,-1,-1,-1,-1,-1,-1,-1,-1},
{22,49,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{12,28,33,42,43,46,48,-1,-1,-1,-1,-1},
{9,26,31,34,44,52,55,-1,-1,-1,-1,-1},
{36,52,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,6,14,15,18,28,30,31,44,45,-1,-1},
{12,27,31,49,58,-1,-1,-1,-1,-1,-1,-1},
{6,12,45,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,5,8,11,12,20,21,23,-1,-1,-1,-1},
{10,37,39,45,46,54,55,-1,-1,-1,-1,-1},
{1,17,19,46,-1,-1,-1,-1,-1,-1,-1,-1},
{11,28,36,39,58,-1,-1,-1,-1,-1,-1,-1},
{8,16,25,28,29,30,33,40,43,-1,-1,-1},
{1,2,23,24,27,45,48,-1,-1,-1,-1,-1},
{43,51,57,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,18,20,56,62,63,-1,-1,-1,-1,-1,-1},
{10,11,18,29,37,46,47,58,62,64,-1,-1},
{4,20,23,40,56,59,66,67,69,-1,-1,-1},
{3,9,14,21,34,68,69,-1,-1,-1,-1,-1},
{10,23,37,47,59,60,65,-1,-1,-1,-1,-1},
{0,7,11,36,38,47,65,66,68,-1,-1,-1},
{0,6,7,10,21,25,26,36,38,39,63,64},
{19,29,31,42,43,64,-1,-1,-1,-1,-1,-1},
{10,31,46,66,70,-1,-1,-1,-1,-1,-1,-1},
{2,4,7,24,25,51,55,57,-1,-1,-1,-1},
{10,11,16,21,29,42,59,-1,-1,-1,-1,-1},
{11,23,45,46,54,59,62,67,68,-1,-1,-1},
{1,4,16,18,68,-1,-1,-1,-1,-1,-1,-1},
{6,10,16,36,37,44,55,-1,-1,-1,-1,-1},
{7,14,18,52,60,61,70,-1,-1,-1,-1,-1},
{0,18,37,38,42,46,55,63,66,-1,-1,-1},
{7,33,36,51,52,56,63,-1,-1,-1,-1,-1},
{21,47,49,62,72,-1,-1,-1,-1,-1,-1,-1},
{4,16,26,27,41,44,49,65,67,78,-1,-1},
{16,35,42,45,55,56,76,78,83,-1,-1,-1},
{10,14,16,19,26,27,29,37,55,63,78,-1},
{20,33,42,55,60,67,68,72,83,-1,-1,-1},
{6,32,48,68,83,-1,-1,-1,-1,-1,-1,-1},
{2,14,28,31,36,44,51,62,77,-1,-1,-1},
{0,7,23,29,31,66,72,73,-1,-1,-1,-1},
{5,7,16,21,32,38,71,-1,-1,-1,-1,-1},
{3,21,24,29,53,65,81,-1,-1,-1,-1,-1}};


int availableMachines = numberOfMachines;

// Typedefs
typedef int[0, numberOfChains - 1] chainId_t;

// Ints and Arrays
int numberOfChainsDone = 0;
int tasksDone[numberOfTasks];
bool runnableChains[numberOfChains];
bool assignmentChoice[numberOfChains];

// Channels
broadcast chan startMachines;
broadcast chan chainMachineChan[numberOfChains];
broadcast chan activateChains;</declaration>
	<template>
		<name x="5" y="5">Composer</name>
		<declaration>// Place local declarations here.
clock time;</declaration>
		<location id="id0" x="-102" y="-255">
			<name x="-112" y="-289">Init</name>
			<label kind="invariant" x="-246" y="-238">numberOfChainsDone &lt;= numberOfChains</label> 
 <label kind="exponentialrate" x="-112" y="-221">0</label>
		</location>
		<location id="id1" x="331" y="-255">
			<name x="321" y="-289">Done</name>
		</location>
		<init ref="id0"/>
		<transition>
			<source ref="id0"/>
			<target ref="id1"/>
			<label kind="guard" x="-17" y="-289">numberOfChainsDone &gt;= numberOfChains</label>
		</transition>
	</template>
	<template>
		<name>Chain</name>
		<parameter>const chainId_t cid</parameter>
		<declaration>clock x;
const int chainSize = globalChainSize[cid];
int index = 0;

bool AllDependenciesDone()
{
    bool dependenciesDone = 1;
    int i;
    for (i = 0; i &lt; maxDependencies; i++)
    {
        int value = dependencies[globalChains[cid][index]][i];
        if (value == -1)
            return dependenciesDone;

        dependenciesDone &amp;= tasksDone[value];
    }
    return dependenciesDone;
}</declaration>
		<location id="id2" x="-68" y="-238">
			<name x="-78" y="-272">Idle</name>
			<label kind="exponentialrate" x="-51" y="-255">3</label>
		</location>
		<location id="id3" x="-76" y="51">
			<name x="-102" y="68">Running</name>
			<label kind="invariant" x="-178" y="85">x &lt;= durations[globalChains[cid][index]]</label>
		</location>
		<location id="id4" x="-450" y="-238">
			<name x="-460" y="-272">Done</name>
		</location>
		<init ref="id2"/>
		<transition controllable="false">
			<source ref="id2"/>
			<target ref="id4"/>
			<label kind="guard" x="-399" y="-280">index &gt;= chainSize &amp;&amp;
x &gt;= durations[globalChains[cid][index - 1]]</label>
			<label kind="assignment" x="-399" y="-238">numberOfChainsDone++</label>
		</transition>
		<transition controllable="false">
			<source ref="id3"/>
			<target ref="id2"/>
			<label kind="guard" x="-450" y="-127">x &gt;= durations[globalChains[cid][index]]</label>
			<label kind="assignment" x="-450" y="-110">availableMachines++,
tasksDone[globalChains[cid][index]] = 1,
index++</label>
			<nail x="-161" y="-85"/>
		</transition>
		<transition>
			<source ref="id2"/>
			<target ref="id3"/>
			<label kind="guard" x="34" y="-127">index &lt; chainSize &amp;&amp;
availableMachines &gt; 0 &amp;&amp; AllDependenciesDone()</label>
			<label kind="assignment" x="34" y="-85">availableMachines--,
x = 0</label>
			<nail x="17" y="-85"/>
		</transition>
	</template>
	<system>// Place template instantiations here.

// List one or more processes to be composed into a system.
system Composer, Chain;
    </system>
	<queries>
		<query>
			<formula>strategy TimeSchedule = minE (Composer.time) [&lt;=57] : &lt;&gt;Composer.Done</formula>
			<comment></comment>
		</query>
		<query>
			<formula>inf{Composer.Done} : Composer.time</formula>
			<comment></comment>
		</query>
		<query>
			<formula>A&lt;&gt; Composer.Done</formula>
			<comment></comment>
		</query>
		<query>
			<formula>E&lt;&gt; Composer.Done</formula>
			<comment></comment>
		</query>
	</queries>
</nta>
