<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/researchgroup/darts/uppaal/flat-1_2.dtd'>
<nta>
<declaration>//Variables
const int numberOfChains = 35;
const int numberOfTasks = 100;
const int numberOfMachines = 8;
const int maxDependencies = 16;
const int longestChain = 6;
const int globalChainSize[numberOfChains] = {5,6,6,4,2,5,5,3,2,2,4,4,2,4,2,2,3,4,3,3,2,3,2,3,2,2,2,1,2,2,2,2,2,1,1};
const int globalChains[numberOfChains][longestChain] = {
{0,4,67,81,88,-1},
{1,7,22,39,59,93},
{2,36,49,63,76,91},
{3,66,74,94,-1,-1},
{5,87,-1,-1,-1,-1},
{6,13,35,61,95,-1},
{8,70,77,86,96,-1},
{9,48,83,-1,-1,-1},
{10,98,-1,-1,-1,-1},
{11,56,-1,-1,-1,-1},
{12,40,80,85,-1,-1},
{14,54,65,84,-1,-1},
{15,79,-1,-1,-1,-1},
{16,27,46,97,-1,-1},
{17,99,-1,-1,-1,-1},
{18,72,-1,-1,-1,-1},
{19,75,92,-1,-1,-1},
{20,50,58,90,-1,-1},
{21,25,60,-1,-1,-1},
{23,37,41,-1,-1,-1},
{24,69,-1,-1,-1,-1},
{26,53,64,-1,-1,-1},
{28,43,-1,-1,-1,-1},
{29,57,73,-1,-1,-1},
{30,52,-1,-1,-1,-1},
{31,42,-1,-1,-1,-1},
{32,71,-1,-1,-1,-1},
{33,-1,-1,-1,-1,-1},
{34,78,-1,-1,-1,-1},
{38,45,-1,-1,-1,-1},
{44,82,-1,-1,-1,-1},
{47,89,-1,-1,-1,-1},
{51,68,-1,-1,-1,-1},
{55,-1,-1,-1,-1,-1},
{62,-1,-1,-1,-1,-1}};
int chainDuration[numberOfChains] = {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1};
int durations[numberOfTasks] = {9,5,5,7,5,7,5,6,7,5,10,13,6,12,5,7,7,12,11,5,8,7,6,6,7,8,5,11,7,6,6,5,10,9,16,6,9,10,4,6,4,5,6,7,11,5,8,15,4,15,6,6,6,6,9,5,4,2,6,8,5,8,10,9,6,9,7,9,6,7,7,6,7,14,6,6,9,5,3,13,5,6,7,6,5,5,6,9,5,12,5,10,10,6,9,4,7,4,6,4};
const int dependencies[numberOfTasks][maxDependencies] = {
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,2,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,3,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,2,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,21,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{13,14,18,19,21,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{15,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,9,15,16,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,21,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{9,13,23,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{11,17,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,8,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{13,18,23,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,14,16,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,3,7,13,19,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,2,7,9,10,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,7,17,23,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,10,15,22,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,8,9,12,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,5,10,19,27,37,38,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,3,18,21,27,31,34,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{11,22,27,28,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{19,24,31,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,10,11,32,38,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,5,14,16,27,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,16,27,29,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,6,9,28,35,37,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,12,15,28,36,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,16,20,31,33,37,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,14,20,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,19,23,30,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,10,19,25,26,31,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,5,7,14,40,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,20,31,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{10,11,12,16,36,42,46,48,-1,-1,-1,-1,-1,-1,-1,-1},
{1,2,12,13,29,30,47,52,-1,-1,-1,-1,-1,-1,-1,-1},
{7,16,20,50,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,6,7,10,15,17,24,36,39,45,48,-1,-1,-1,-1,-1},
{2,9,13,19,25,31,34,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,20,22,25,26,31,34,35,38,39,-1,-1,-1,-1,-1,-1},
{2,10,35,57,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,22,24,36,43,49,50,53,-1,-1,-1,-1,-1,-1,-1,-1},
{18,31,32,43,50,52,53,55,-1,-1,-1,-1,-1,-1,-1,-1},
{2,18,22,31,40,53,54,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,4,9,10,16,18,24,28,32,34,35,38,39,49,-1,-1},
{0,4,9,19,25,39,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,18,49,51,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,18,21,24,27,37,44,61,-1,-1,-1,-1,-1,-1,-1,-1},
{0,8,9,13,18,20,21,37,-1,-1,-1,-1,-1,-1,-1,-1},
{23,32,50,51,58,61,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{10,18,24,36,50,60,67,70,-1,-1,-1,-1,-1,-1,-1,-1},
{9,24,50,54,57,66,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{11,18,22,30,32,36,37,48,55,61,66,70,-1,-1,-1,-1},
{10,13,19,21,27,32,33,34,35,36,52,55,69,71,-1,-1},
{12,22,27,29,39,42,43,63,66,67,68,70,-1,-1,-1,-1},
{2,9,13,17,29,52,54,60,63,64,70,71,-1,-1,-1,-1},
{7,16,28,34,44,57,70,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,8,11,15,17,27,28,29,34,37,-1,-1,-1,-1,-1,-1},
{7,9,22,29,31,33,38,40,41,42,43,57,62,70,-1,-1},
{2,4,5,10,11,15,16,21,26,31,41,47,62,67,-1,-1},
{6,9,19,37,44,47,51,54,59,-1,-1,-1,-1,-1,-1,-1},
{2,4,11,27,37,48,63,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{12,16,19,26,31,46,55,59,65,70,75,82,-1,-1,-1,-1},
{20,22,25,26,42,49,62,64,71,72,75,80,-1,-1,-1,-1},
{0,49,52,77,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,15,29,30,39,49,57,63,64,78,-1,-1,-1,-1,-1,-1},
{0,6,8,16,19,20,23,26,39,54,60,68,73,78,81,83},
{4,5,47,63,68,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{13,14,18,26,30,38,42,55,58,70,-1,-1,-1,-1,-1,-1},
{1,18,19,23,27,50,54,57,60,62,64,76,89,-1,-1,-1},
{0,13,17,27,28,32,43,44,55,58,67,69,75,82,-1,-1},
{2,16,30,33,42,44,46,48,53,59,68,81,85,-1,-1,-1},
{23,53,57,60,61,63,74,75,80,-1,-1,-1,-1,-1,-1,-1},
{6,9,11,34,50,53,61,64,66,-1,-1,-1,-1,-1,-1,-1},
{1,9,14,15,23,24,30,33,56,62,70,72,82,86,-1,-1},
{0,10,16,21,26,33,44,46,49,60,62,-1,-1,-1,-1,-1},
{2,5,10,14,15,24,59,66,80,-1,-1,-1,-1,-1,-1,-1},
{12,14,17,24,36,44,45,52,57,60,66,67,73,90,-1,-1}};


int availableMachines = numberOfMachines;

// Typedefs
typedef int[0, numberOfChains - 1] chainId_t;

// Ints and Arrays
int numberOfChainsDone = 0;
int tasksDone[numberOfTasks];
bool runnableChains[numberOfChains];
bool assignmentChoice[numberOfChains];

// Channels
broadcast chan startMachines;
broadcast chan chainMachineChan[numberOfChains];
broadcast chan activateChains;</declaration>
	<template>
		<name x="5" y="5">Composer</name>
		<declaration>// Place local declarations here.
clock time;</declaration>
		<location id="id0" x="-102" y="-255">
			<name x="-112" y="-289">Init</name>
			<label kind="invariant" x="-246" y="-238">numberOfChainsDone &lt;= numberOfChains</label> 
 <label kind="exponentialrate" x="-112" y="-221">0</label>
		</location>
		<location id="id1" x="331" y="-255">
			<name x="321" y="-289">Done</name>
		</location>
		<init ref="id0"/>
		<transition>
			<source ref="id0"/>
			<target ref="id1"/>
			<label kind="guard" x="-17" y="-289">numberOfChainsDone &gt;= numberOfChains</label>
		</transition>
	</template>
	<template>
		<name>Chain</name>
		<parameter>const chainId_t cid</parameter>
		<declaration>clock x;
const int chainSize = globalChainSize[cid];
int index = 0;

bool AllDependenciesDone()
{
    bool dependenciesDone = 1;
    int i;
    for (i = 0; i &lt; maxDependencies; i++)
    {
        int value = dependencies[globalChains[cid][index]][i];
        if (value == -1)
            return dependenciesDone;

        dependenciesDone &amp;= tasksDone[value];
    }
    return dependenciesDone;
}</declaration>
		<location id="id2" x="-68" y="-238">
			<name x="-78" y="-272">Idle</name>
			<label kind="exponentialrate" x="-51" y="-255">3</label>
		</location>
		<location id="id3" x="-76" y="51">
			<name x="-102" y="68">Running</name>
			<label kind="invariant" x="-178" y="85">x &lt;= durations[globalChains[cid][index]]</label>
		</location>
		<location id="id4" x="-450" y="-238">
			<name x="-460" y="-272">Done</name>
		</location>
		<init ref="id2"/>
		<transition controllable="false">
			<source ref="id2"/>
			<target ref="id4"/>
			<label kind="guard" x="-399" y="-280">index &gt;= chainSize &amp;&amp;
x &gt;= durations[globalChains[cid][index - 1]]</label>
			<label kind="assignment" x="-399" y="-238">numberOfChainsDone++</label>
		</transition>
		<transition controllable="false">
			<source ref="id3"/>
			<target ref="id2"/>
			<label kind="guard" x="-450" y="-127">x &gt;= durations[globalChains[cid][index]]</label>
			<label kind="assignment" x="-450" y="-110">availableMachines++,
tasksDone[globalChains[cid][index]] = 1,
index++</label>
			<nail x="-161" y="-85"/>
		</transition>
		<transition>
			<source ref="id2"/>
			<target ref="id3"/>
			<label kind="guard" x="34" y="-127">index &lt; chainSize &amp;&amp;
availableMachines &gt; 0 &amp;&amp; AllDependenciesDone()</label>
			<label kind="assignment" x="34" y="-85">availableMachines--,
x = 0</label>
			<nail x="17" y="-85"/>
		</transition>
	</template>
	<system>// Place template instantiations here.

// List one or more processes to be composed into a system.
system Composer, Chain;
    </system>
	<queries>
		<query>
			<formula>strategy TimeSchedule = minE (Composer.time) [&lt;=57] : &lt;&gt;Composer.Done</formula>
			<comment></comment>
		</query>
		<query>
			<formula>inf{Composer.Done} : Composer.time</formula>
			<comment></comment>
		</query>
		<query>
			<formula>A&lt;&gt; Composer.Done</formula>
			<comment></comment>
		</query>
		<query>
			<formula>E&lt;&gt; Composer.Done</formula>
			<comment></comment>
		</query>
	</queries>
</nta>
