<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/researchgroup/darts/uppaal/flat-1_2.dtd'>
<nta>
<declaration>//Variables
const int numberOfChains = 27;
const int numberOfTasks = 100;
const int numberOfMachines = 2;
const int maxDependencies = 26;
const int longestChain = 9;
const int globalChainSize[numberOfChains] = {9,4,4,2,7,6,3,6,4,2,5,5,4,3,4,7,2,4,5,1,3,4,1,2,1,1,1};
const int globalChains[numberOfChains][longestChain] = {
{0,4,30,73,79,92,97,98,99},
{1,60,85,91,-1,-1,-1,-1,-1},
{2,46,64,82,-1,-1,-1,-1,-1},
{3,90,-1,-1,-1,-1,-1,-1,-1},
{5,63,70,74,76,86,95,-1,-1},
{6,66,77,78,93,96,-1,-1,-1},
{7,28,88,-1,-1,-1,-1,-1,-1},
{8,42,68,72,84,94,-1,-1,-1},
{9,61,65,71,-1,-1,-1,-1,-1},
{10,81,-1,-1,-1,-1,-1,-1,-1},
{11,20,57,75,87,-1,-1,-1,-1},
{12,25,39,53,67,-1,-1,-1,-1},
{13,32,34,83,-1,-1,-1,-1,-1},
{14,19,69,-1,-1,-1,-1,-1,-1},
{15,44,51,55,-1,-1,-1,-1,-1},
{16,27,45,48,49,58,89,-1,-1},
{17,41,-1,-1,-1,-1,-1,-1,-1},
{18,21,56,62,-1,-1,-1,-1,-1},
{22,29,38,54,59,-1,-1,-1,-1},
{23,-1,-1,-1,-1,-1,-1,-1,-1},
{24,31,50,-1,-1,-1,-1,-1,-1},
{26,37,52,80,-1,-1,-1,-1,-1},
{33,-1,-1,-1,-1,-1,-1,-1,-1},
{35,40,-1,-1,-1,-1,-1,-1,-1},
{36,-1,-1,-1,-1,-1,-1,-1,-1},
{43,-1,-1,-1,-1,-1,-1,-1,-1},
{47,-1,-1,-1,-1,-1,-1,-1,-1}};
int chainDuration[numberOfChains] = {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1};
int durations[numberOfTasks] = {9,13,10,15,8,15,12,7,5,11,15,11,12,14,9,15,10,5,9,11,5,9,10,10,20,8,2,11,7,10,10,8,10,14,13,13,12,7,13,11,10,12,14,11,5,11,14,15,5,13,15,7,9,19,10,15,12,13,11,7,13,6,10,13,11,15,10,13,6,8,14,11,12,11,10,8,13,15,9,11,12,16,9,5,11,13,8,9,8,9,17,12,10,10,9,7,10,6,8,14};
const int dependencies[numberOfTasks][maxDependencies] = {
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,2,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,7,9,10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,5,15,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,9,13,14,16,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,7,10,11,16,17,18,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,12,15,17,18,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{9,10,11,18,21,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,2,13,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,8,9,12,14,16,22,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,12,14,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,4,13,14,16,18,22,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,2,7,9,10,11,14,21,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,15,21,22,25,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,4,8,9,13,17,22,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,16,19,21,24,25,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,8,13,18,26,28,31,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,19,21,25,28,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,10,17,19,27,32,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,8,10,21,22,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,13,20,29,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,11,13,21,26,35,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,8,9,20,21,24,29,31,36,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,10,24,25,29,30,35,36,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,17,27,34,35,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,8,16,17,22,24,26,34,35,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,8,19,21,28,29,30,36,38,41,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,32,34,39,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{9,13,15,18,28,39,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,15,21,24,27,39,44,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,2,4,8,11,12,14,15,21,22,31,42,44,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,15,24,27,28,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,21,24,28,39,45,47,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,13,23,24,25,33,38,40,48,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,2,15,22,26,28,31,37,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,6,9,15,24,25,31,44,48,50,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,9,12,17,24,28,37,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,8,9,21,23,28,29,34,39,41,51,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,7,22,29,37,38,45,47,52,53,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,10,13,17,18,24,26,35,37,47,48,49,51,54,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{12,17,21,23,44,51,53,54,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,10,11,16,20,21,27,28,41,45,56,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,17,18,38,45,46,49,54,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,10,16,33,35,37,49,50,54,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,4,10,16,18,46,49,58,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,7,9,14,22,25,29,31,35,42,52,60,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,14,17,26,34,56,59,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,11,14,23,25,30,37,38,44,46,49,52,53,55,58,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,4,5,7,9,11,15,26,27,35,45,46,58,60,62,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,15,33,34,39,41,42,47,58,60,61,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,7,9,10,13,14,21,23,30,31,33,39,40,42,45,46,52,59,-1,-1,-1,-1,-1,-1,-1,-1},
{5,19,22,33,35,46,50,53,54,64,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,7,8,12,18,22,36,39,42,43,51,58,60,65,67,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,5,18,19,27,31,33,35,38,42,45,46,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,8,28,42,48,50,51,54,55,63,64,69,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,9,15,22,28,35,36,40,43,45,48,51,52,56,58,65,66,69,-1,-1,-1,-1,-1,-1,-1,-1},
{4,18,29,35,38,39,44,49,51,53,59,66,68,69,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,4,9,15,16,20,21,28,30,52,58,66,68,69,71,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,6,8,13,31,34,39,40,43,44,46,57,61,62,70,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{11,19,21,25,26,27,33,39,40,41,44,48,56,57,67,69,72,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,4,12,19,22,25,34,47,52,55,58,59,62,64,69,74,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,10,12,14,22,27,30,35,37,44,49,51,66,68,69,70,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,5,18,21,28,29,38,42,62,64,66,67,71,75,77,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,13,17,29,30,31,38,40,59,61,70,71,73,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{13,45,52,54,60,78,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,4,9,10,12,13,21,39,47,74,75,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,4,5,6,10,12,18,23,24,27,34,38,41,51,56,64,68,69,77,78,-1,-1,-1,-1,-1},
{4,9,30,34,37,40,50,51,52,59,62,75,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,9,25,38,53,67,68,69,72,80,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,8,16,24,27,28,37,40,49,53,54,56,58,60,62,65,67,69,79,81,-1,-1,-1,-1,-1,-1},
{2,5,11,13,21,25,29,31,41,45,68,71,75,76,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{9,19,25,28,34,47,49,53,62,75,77,79,80,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,7,9,10,14,15,19,20,28,32,48,50,64,68,75,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,27,31,40,58,72,79,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,6,9,26,28,30,36,37,41,46,53,54,57,59,64,65,77,84,-1,-1,-1,-1,-1,-1,-1,-1},
{7,17,24,25,28,30,31,42,45,57,71,73,81,82,85,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,8,9,13,23,24,28,29,31,32,35,36,39,42,44,50,55,56,67,72,73,79,81,90,91},
{8,24,27,38,45,46,55,60,65,69,73,78,80,81,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,3,12,19,29,46,54,59,69,75,81,84,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,9,12,18,19,23,46,49,51,52,54,80,85,86,88,89,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,19,21,39,40,41,53,61,65,66,67,74,93,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{13,16,18,31,43,44,57,62,65,80,83,86,87,90,92,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,12,29,40,46,49,50,67,68,72,81,83,84,92,95,97,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,7,8,18,20,23,25,29,31,38,39,50,58,60,63,69,75,77,83,89,94,98,-1,-1,-1,-1}};


int availableMachines = numberOfMachines;

// Typedefs
typedef int[0, numberOfChains - 1] chainId_t;

// Ints and Arrays
int numberOfChainsDone = 0;
int tasksDone[numberOfTasks];
bool runnableChains[numberOfChains];
bool assignmentChoice[numberOfChains];

// Channels
broadcast chan startMachines;
broadcast chan chainMachineChan[numberOfChains];
broadcast chan activateChains;</declaration>
	<template>
		<name x="5" y="5">Composer</name>
		<declaration>// Place local declarations here.
clock time;</declaration>
		<location id="id0" x="-102" y="-255">
			<name x="-112" y="-289">Init</name>
			<label kind="invariant" x="-246" y="-238">numberOfChainsDone &lt;= numberOfChains</label> 
 <label kind="exponentialrate" x="-112" y="-221">0</label>
		</location>
		<location id="id1" x="331" y="-255">
			<name x="321" y="-289">Done</name>
		</location>
		<init ref="id0"/>
		<transition>
			<source ref="id0"/>
			<target ref="id1"/>
			<label kind="guard" x="-17" y="-289">numberOfChainsDone &gt;= numberOfChains</label>
		</transition>
	</template>
	<template>
		<name>Chain</name>
		<parameter>const chainId_t cid</parameter>
		<declaration>clock x;
const int chainSize = globalChainSize[cid];
int index = 0;

bool AllDependenciesDone()
{
    bool dependenciesDone = 1;
    int i;
    for (i = 0; i &lt; maxDependencies; i++)
    {
        int value = dependencies[globalChains[cid][index]][i];
        if (value == -1)
            return dependenciesDone;

        dependenciesDone &amp;= tasksDone[value];
    }
    return dependenciesDone;
}</declaration>
		<location id="id2" x="-68" y="-238">
			<name x="-78" y="-272">Idle</name>
			<label kind="exponentialrate" x="-51" y="-255">3</label>
		</location>
		<location id="id3" x="-76" y="51">
			<name x="-102" y="68">Running</name>
			<label kind="invariant" x="-178" y="85">x &lt;= durations[globalChains[cid][index]]</label>
		</location>
		<location id="id4" x="-450" y="-238">
			<name x="-460" y="-272">Done</name>
		</location>
		<init ref="id2"/>
		<transition controllable="false">
			<source ref="id2"/>
			<target ref="id4"/>
			<label kind="guard" x="-399" y="-280">index &gt;= chainSize &amp;&amp;
x &gt;= durations[globalChains[cid][index - 1]]</label>
			<label kind="assignment" x="-399" y="-238">numberOfChainsDone++</label>
		</transition>
		<transition controllable="false">
			<source ref="id3"/>
			<target ref="id2"/>
			<label kind="guard" x="-450" y="-127">x &gt;= durations[globalChains[cid][index]]</label>
			<label kind="assignment" x="-450" y="-110">availableMachines++,
tasksDone[globalChains[cid][index]] = 1,
index++</label>
			<nail x="-161" y="-85"/>
		</transition>
		<transition>
			<source ref="id2"/>
			<target ref="id3"/>
			<label kind="guard" x="34" y="-127">index &lt; chainSize &amp;&amp;
availableMachines &gt; 0 &amp;&amp; AllDependenciesDone()</label>
			<label kind="assignment" x="34" y="-85">availableMachines--,
x = 0</label>
			<nail x="17" y="-85"/>
		</transition>
	</template>
	<system>// Place template instantiations here.

// List one or more processes to be composed into a system.
system Composer, Chain;
    </system>
	<queries>
		<query>
			<formula>strategy TimeSchedule = minE (Composer.time) [&lt;=57] : &lt;&gt;Composer.Done</formula>
			<comment></comment>
		</query>
		<query>
			<formula>inf{Composer.Done} : Composer.time</formula>
			<comment></comment>
		</query>
		<query>
			<formula>A&lt;&gt; Composer.Done</formula>
			<comment></comment>
		</query>
		<query>
			<formula>E&lt;&gt; Composer.Done</formula>
			<comment></comment>
		</query>
	</queries>
</nta>
