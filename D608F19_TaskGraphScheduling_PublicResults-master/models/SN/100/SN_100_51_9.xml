<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/researchgroup/darts/uppaal/flat-1_2.dtd'>
<nta>
<declaration>//Variables
const int numberOfChains = 34;
const int numberOfTasks = 100;
const int numberOfMachines = 9;
const int maxDependencies = 19;
const int longestChain = 5;
const int globalChainSize[numberOfChains] = {4,3,5,3,2,4,4,2,5,5,5,3,4,2,5,1,4,4,2,2,2,3,3,3,3,3,3,2,4,1,1,1,1,1};
const int globalChains[numberOfChains][longestChain] = {
{0,21,47,94,-1},
{1,41,87,-1,-1},
{2,14,19,63,88},
{3,36,89,-1,-1},
{4,76,-1,-1,-1},
{5,34,75,95,-1},
{6,60,77,99,-1},
{7,90,-1,-1,-1},
{8,27,31,49,84},
{9,22,45,69,93},
{10,52,71,83,97},
{11,64,85,-1,-1},
{12,28,55,74,-1},
{13,91,-1,-1,-1},
{15,30,67,78,92},
{16,-1,-1,-1,-1},
{17,48,53,79,-1},
{18,42,70,80,-1},
{20,98,-1,-1,-1},
{23,66,-1,-1,-1},
{24,81,-1,-1,-1},
{25,57,72,-1,-1},
{26,44,58,-1,-1},
{29,62,65,-1,-1},
{32,46,86,-1,-1},
{33,54,68,-1,-1},
{35,43,56,-1,-1},
{37,73,-1,-1,-1},
{38,39,51,82,-1},
{40,-1,-1,-1,-1},
{50,-1,-1,-1,-1},
{59,-1,-1,-1,-1},
{61,-1,-1,-1,-1},
{96,-1,-1,-1,-1}};
int chainDuration[numberOfChains] = {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1};
int durations[numberOfTasks] = {5,6,6,5,5,6,7,6,6,6,5,5,7,7,5,6,6,5,5,7,5,6,5,4,6,6,6,7,4,4,4,5,7,7,7,5,5,5,6,4,5,6,6,6,4,5,4,4,5,5,7,5,7,7,7,7,5,5,5,6,7,5,5,5,4,4,7,5,6,5,7,6,4,4,3,6,6,5,6,6,7,6,4,4,5,7,6,5,5,4,6,7,6,6,5,5,5,6,5,3};
const int dependencies[numberOfTasks][maxDependencies] = {
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,11,13,14,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,11,18,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,4,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{9,14,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{15,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,8,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,8,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,8,14,15,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,5,9,12,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{14,17,23,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{11,12,15,18,22,24,26,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,4,8,13,17,22,24,27,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{12,15,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,26,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,5,14,18,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,8,14,22,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,8,10,18,19,26,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{10,27,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,9,15,27,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,4,13,37,38,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,5,10,18,38,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,5,17,31,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,5,8,11,18,33,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{11,13,14,20,35,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{10,14,19,23,26,31,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,8,11,14,16,18,22,27,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{10,22,32,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,4,19,21,28,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,9,10,17,25,35,45,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,18,22,23,31,36,41,43,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{13,30,32,39,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,23,27,37,39,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,10,17,18,27,38,40,41,45,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{23,29,33,45,48,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,21,33,36,50,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,6,11,13,20,24,28,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,20,43,44,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,14,15,25,26,32,45,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,4,18,22,29,40,44,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{15,20,27,44,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,6,9,11,17,20,27,31,36,44,51,-1,-1,-1,-1,-1,-1,-1,-1},
{20,52,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{9,20,28,29,34,39,44,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,4,8,10,14,15,19,23,39,44,45,-1,-1,-1,-1,-1,-1,-1,-1},
{9,10,11,14,32,35,36,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,11,13,49,51,62,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,8,18,20,23,24,40,41,43,56,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,15,19,27,30,46,48,54,59,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,10,11,17,22,23,40,54,56,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,19,26,31,32,38,39,41,45,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,23,25,38,42,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{9,12,21,23,24,48,49,52,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,10,26,32,40,43,57,58,63,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{22,29,35,36,37,45,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,22,45,49,55,59,67,68,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,7,34,48,50,58,61,70,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,4,7,27,30,54,63,67,73,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{11,13,19,20,25,27,31,39,42,60,70,72,-1,-1,-1,-1,-1,-1,-1},
{8,21,23,32,35,43,49,50,65,66,67,-1,-1,-1,-1,-1,-1,-1,-1},
{0,12,21,28,50,53,56,62,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{11,21,23,33,39,43,57,70,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,18,24,26,35,39,57,62,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{26,30,44,51,62,64,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,6,10,13,21,22,30,39,53,62,70,71,-1,-1,-1,-1,-1,-1,-1},
{15,16,22,24,26,27,30,34,35,42,43,49,51,63,64,70,73,-1,-1},
{2,5,7,17,25,26,43,44,48,55,57,62,64,-1,-1,-1,-1,-1,-1},
{28,46,51,52,56,67,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{9,19,21,24,25,39,41,43,46,50,77,-1,-1,-1,-1,-1,-1,-1,-1},
{14,18,19,21,25,28,32,35,48,49,61,63,65,71,74,77,85,-1,-1},
{1,10,14,16,18,19,27,32,33,35,36,44,45,50,56,65,78,85,-1},
{4,5,7,11,36,39,48,56,78,84,86,-1,-1,-1,-1,-1,-1,-1,-1},
{4,10,13,14,26,29,39,45,71,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,10,28,29,37,54,78,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,25,46,56,58,59,69,71,78,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{15,18,23,24,28,29,30,42,43,44,47,53,59,60,71,76,78,79,83},
{7,12,47,61,67,70,75,79,81,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,57,78,83,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,8,20,25,29,46,50,60,71,80,83,-1,-1,-1,-1,-1,-1,-1,-1},
{10,13,20,22,24,34,35,49,82,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,14,16,30,36,62,64,69,72,74,77,81,-1,-1,-1,-1,-1,-1,-1}};


int availableMachines = numberOfMachines;

// Typedefs
typedef int[0, numberOfChains - 1] chainId_t;

// Ints and Arrays
int numberOfChainsDone = 0;
int tasksDone[numberOfTasks];
bool runnableChains[numberOfChains];
bool assignmentChoice[numberOfChains];

// Channels
broadcast chan startMachines;
broadcast chan chainMachineChan[numberOfChains];
broadcast chan activateChains;</declaration>
	<template>
		<name x="5" y="5">Composer</name>
		<declaration>// Place local declarations here.
clock time;</declaration>
		<location id="id0" x="-102" y="-255">
			<name x="-112" y="-289">Init</name>
			<label kind="invariant" x="-246" y="-238">numberOfChainsDone &lt;= numberOfChains</label> 
 <label kind="exponentialrate" x="-112" y="-221">0</label>
		</location>
		<location id="id1" x="331" y="-255">
			<name x="321" y="-289">Done</name>
		</location>
		<init ref="id0"/>
		<transition>
			<source ref="id0"/>
			<target ref="id1"/>
			<label kind="guard" x="-17" y="-289">numberOfChainsDone &gt;= numberOfChains</label>
		</transition>
	</template>
	<template>
		<name>Chain</name>
		<parameter>const chainId_t cid</parameter>
		<declaration>clock x;
const int chainSize = globalChainSize[cid];
int index = 0;

bool AllDependenciesDone()
{
    bool dependenciesDone = 1;
    int i;
    for (i = 0; i &lt; maxDependencies; i++)
    {
        int value = dependencies[globalChains[cid][index]][i];
        if (value == -1)
            return dependenciesDone;

        dependenciesDone &amp;= tasksDone[value];
    }
    return dependenciesDone;
}</declaration>
		<location id="id2" x="-68" y="-238">
			<name x="-78" y="-272">Idle</name>
			<label kind="exponentialrate" x="-51" y="-255">3</label>
		</location>
		<location id="id3" x="-76" y="51">
			<name x="-102" y="68">Running</name>
			<label kind="invariant" x="-178" y="85">x &lt;= durations[globalChains[cid][index]]</label>
		</location>
		<location id="id4" x="-450" y="-238">
			<name x="-460" y="-272">Done</name>
		</location>
		<init ref="id2"/>
		<transition controllable="false">
			<source ref="id2"/>
			<target ref="id4"/>
			<label kind="guard" x="-399" y="-280">index &gt;= chainSize &amp;&amp;
x &gt;= durations[globalChains[cid][index - 1]]</label>
			<label kind="assignment" x="-399" y="-238">numberOfChainsDone++</label>
		</transition>
		<transition controllable="false">
			<source ref="id3"/>
			<target ref="id2"/>
			<label kind="guard" x="-450" y="-127">x &gt;= durations[globalChains[cid][index]]</label>
			<label kind="assignment" x="-450" y="-110">availableMachines++,
tasksDone[globalChains[cid][index]] = 1,
index++</label>
			<nail x="-161" y="-85"/>
		</transition>
		<transition>
			<source ref="id2"/>
			<target ref="id3"/>
			<label kind="guard" x="34" y="-127">index &lt; chainSize &amp;&amp;
availableMachines &gt; 0 &amp;&amp; AllDependenciesDone()</label>
			<label kind="assignment" x="34" y="-85">availableMachines--,
x = 0</label>
			<nail x="17" y="-85"/>
		</transition>
	</template>
	<system>// Place template instantiations here.

// List one or more processes to be composed into a system.
system Composer, Chain;
    </system>
	<queries>
		<query>
			<formula>strategy TimeSchedule = minE (Composer.time) [&lt;=57] : &lt;&gt;Composer.Done</formula>
			<comment></comment>
		</query>
		<query>
			<formula>inf{Composer.Done} : Composer.time</formula>
			<comment></comment>
		</query>
		<query>
			<formula>A&lt;&gt; Composer.Done</formula>
			<comment></comment>
		</query>
		<query>
			<formula>E&lt;&gt; Composer.Done</formula>
			<comment></comment>
		</query>
	</queries>
</nta>
