<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/researchgroup/darts/uppaal/flat-1_2.dtd'>
<nta>
<declaration>//Variables
const int numberOfChains = 35;
const int numberOfTasks = 100;
const int numberOfMachines = 2;
const int maxDependencies = 11;
const int longestChain = 6;
const int globalChainSize[numberOfChains] = {5,3,3,4,6,4,4,4,4,4,4,3,2,4,2,3,1,3,2,2,3,5,2,2,4,2,2,2,2,2,2,1,2,1,1};
const int globalChains[numberOfChains][longestChain] = {
{0,14,23,50,68,-1},
{1,45,76,-1,-1,-1},
{2,81,84,-1,-1,-1},
{3,67,69,95,-1,-1},
{4,58,64,72,86,98},
{5,35,70,87,-1,-1},
{6,32,46,93,-1,-1},
{7,13,92,99,-1,-1},
{8,61,90,96,-1,-1},
{9,51,73,77,-1,-1},
{10,55,62,71,-1,-1},
{11,54,74,-1,-1,-1},
{12,44,-1,-1,-1,-1},
{15,26,48,60,-1,-1},
{16,94,-1,-1,-1,-1},
{17,41,52,-1,-1,-1},
{18,-1,-1,-1,-1,-1},
{19,89,97,-1,-1,-1},
{20,80,-1,-1,-1,-1},
{21,91,-1,-1,-1,-1},
{22,29,85,-1,-1,-1},
{24,42,49,66,75,-1},
{25,83,-1,-1,-1,-1},
{27,36,-1,-1,-1,-1},
{28,56,59,88,-1,-1},
{30,78,-1,-1,-1,-1},
{31,38,-1,-1,-1,-1},
{33,79,-1,-1,-1,-1},
{34,39,-1,-1,-1,-1},
{37,53,-1,-1,-1,-1},
{40,57,-1,-1,-1,-1},
{43,-1,-1,-1,-1,-1},
{47,65,-1,-1,-1,-1},
{63,-1,-1,-1,-1,-1},
{82,-1,-1,-1,-1,-1}};
int chainDuration[numberOfChains] = {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1};
int durations[numberOfTasks] = {1,12,17,21,6,1,8,5,11,1,3,13,6,4,3,15,4,4,2,2,4,9,5,6,1,16,14,1,6,4,6,11,1,2,4,2,4,2,1,5,3,3,2,14,1,7,6,5,10,18,4,1,7,2,8,3,17,3,8,1,3,13,1,2,2,20,1,8,9,6,1,5,25,2,7,2,8,6,16,19,1,18,2,4,14,8,2,2,1,17,1,12,7,13,8,31,1,6,3,13};
const int dependencies[numberOfTasks][maxDependencies] = {
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,9,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,13,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{12,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{14,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,15,16,19,-1,-1,-1,-1,-1,-1,-1},
{0,9,16,-1,-1,-1,-1,-1,-1,-1,-1},
{6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{13,22,24,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,6,8,21,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{32,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,5,16,25,-1,-1,-1,-1,-1,-1,-1},
{27,32,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{15,23,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{21,31,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{34,37,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{9,17,18,-1,-1,-1,-1,-1,-1,-1,-1},
{24,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{13,31,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,12,19,-1,-1,-1,-1,-1,-1,-1,-1},
{1,4,10,14,19,25,31,-1,-1,-1,-1},
{4,5,32,-1,-1,-1,-1,-1,-1,-1,-1},
{2,5,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{9,26,29,35,39,40,-1,-1,-1,-1,-1},
{3,36,42,47,-1,-1,-1,-1,-1,-1,-1},
{13,14,23,34,46,-1,-1,-1,-1,-1,-1},
{9,11,13,22,30,32,47,-1,-1,-1,-1},
{15,41,50,-1,-1,-1,-1,-1,-1,-1,-1},
{3,37,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{9,11,18,33,44,-1,-1,-1,-1,-1,-1},
{4,10,14,27,-1,-1,-1,-1,-1,-1,-1},
{25,28,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,40,42,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,4,22,43,46,-1,-1,-1,-1,-1},
{3,56,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{10,34,37,48,-1,-1,-1,-1,-1,-1,-1},
{6,8,19,27,28,40,46,51,-1,-1,-1},
{9,19,26,31,47,55,-1,-1,-1,-1,-1},
{9,21,59,-1,-1,-1,-1,-1,-1,-1,-1},
{11,26,39,58,59,62,-1,-1,-1,-1,-1},
{26,47,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{40,49,55,61,-1,-1,-1,-1,-1,-1,-1},
{3,21,23,25,29,31,-1,-1,-1,-1,-1},
{8,16,23,35,50,-1,-1,-1,-1,-1,-1},
{13,45,49,52,67,-1,-1,-1,-1,-1,-1},
{1,8,19,31,35,53,59,61,63,-1,-1},
{11,16,59,62,-1,-1,-1,-1,-1,-1,-1},
{3,24,35,51,60,62,64,66,-1,-1,-1},
{21,51,65,72,-1,-1,-1,-1,-1,-1,-1},
{10,13,32,53,54,60,-1,-1,-1,-1,-1},
{8,66,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{14,31,45,47,48,64,-1,-1,-1,-1,-1},
{8,22,30,33,40,53,54,55,73,-1,-1},
{23,30,48,-1,-1,-1,-1,-1,-1,-1,-1},
{26,33,37,-1,-1,-1,-1,-1,-1,-1,-1},
{2,20,30,32,57,67,-1,-1,-1,-1,-1},
{2,6,23,32,42,45,54,69,-1,-1,-1},
{14,67,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{23,25,28,41,64,79,-1,-1,-1,-1,-1},
{0,3,23,37,46,58,72,81,-1,-1,-1},
{12,29,66,81,-1,-1,-1,-1,-1,-1,-1},
{2,7,18,29,34,47,52,72,73,77,-1},
{12,20,30,38,44,48,49,66,69,70,81},
{2,16,45,59,-1,-1,-1,-1,-1,-1,-1},
{2,19,20,29,75,-1,-1,-1,-1,-1,-1},
{11,24,34,41,51,61,70,88,-1,-1,-1},
{11,21,22,24,25,64,-1,-1,-1,-1,-1},
{1,5,13,51,60,77,88,-1,-1,-1,-1},
{2,14,19,40,46,55,89,-1,-1,-1,-1},
{3,13,16,29,50,-1,-1,-1,-1,-1,-1},
{2,5,31,56,59,65,67,69,77,-1,-1},
{7,16,74,90,-1,-1,-1,-1,-1,-1,-1},
{3,26,89,-1,-1,-1,-1,-1,-1,-1,-1},
{1,8,25,26,35,49,55,64,86,-1,-1},
{10,37,60,92,-1,-1,-1,-1,-1,-1,-1}};


int availableMachines = numberOfMachines;

// Typedefs
typedef int[0, numberOfChains - 1] chainId_t;

// Ints and Arrays
int numberOfChainsDone = 0;
int tasksDone[numberOfTasks];
bool runnableChains[numberOfChains];
bool assignmentChoice[numberOfChains];

// Channels
broadcast chan startMachines;
broadcast chan chainMachineChan[numberOfChains];
broadcast chan activateChains;</declaration>
	<template>
		<name x="5" y="5">Composer</name>
		<declaration>// Place local declarations here.
clock time;</declaration>
		<location id="id0" x="-102" y="-255">
			<name x="-112" y="-289">Init</name>
			<label kind="invariant" x="-246" y="-238">numberOfChainsDone &lt;= numberOfChains</label> 
 <label kind="exponentialrate" x="-112" y="-221">0</label>
		</location>
		<location id="id1" x="331" y="-255">
			<name x="321" y="-289">Done</name>
		</location>
		<init ref="id0"/>
		<transition>
			<source ref="id0"/>
			<target ref="id1"/>
			<label kind="guard" x="-17" y="-289">numberOfChainsDone &gt;= numberOfChains</label>
		</transition>
	</template>
	<template>
		<name>Chain</name>
		<parameter>const chainId_t cid</parameter>
		<declaration>clock x;
const int chainSize = globalChainSize[cid];
int index = 0;

bool AllDependenciesDone()
{
    bool dependenciesDone = 1;
    int i;
    for (i = 0; i &lt; maxDependencies; i++)
    {
        int value = dependencies[globalChains[cid][index]][i];
        if (value == -1)
            return dependenciesDone;

        dependenciesDone &amp;= tasksDone[value];
    }
    return dependenciesDone;
}</declaration>
		<location id="id2" x="-68" y="-238">
			<name x="-78" y="-272">Idle</name>
			<label kind="exponentialrate" x="-51" y="-255">3</label>
		</location>
		<location id="id3" x="-76" y="51">
			<name x="-102" y="68">Running</name>
			<label kind="invariant" x="-178" y="85">x &lt;= durations[globalChains[cid][index]]</label>
		</location>
		<location id="id4" x="-450" y="-238">
			<name x="-460" y="-272">Done</name>
		</location>
		<init ref="id2"/>
		<transition controllable="false">
			<source ref="id2"/>
			<target ref="id4"/>
			<label kind="guard" x="-399" y="-280">index &gt;= chainSize &amp;&amp;
x &gt;= durations[globalChains[cid][index - 1]]</label>
			<label kind="assignment" x="-399" y="-238">numberOfChainsDone++</label>
		</transition>
		<transition controllable="false">
			<source ref="id3"/>
			<target ref="id2"/>
			<label kind="guard" x="-450" y="-127">x &gt;= durations[globalChains[cid][index]]</label>
			<label kind="assignment" x="-450" y="-110">availableMachines++,
tasksDone[globalChains[cid][index]] = 1,
index++</label>
			<nail x="-161" y="-85"/>
		</transition>
		<transition>
			<source ref="id2"/>
			<target ref="id3"/>
			<label kind="guard" x="34" y="-127">index &lt; chainSize &amp;&amp;
availableMachines &gt; 0 &amp;&amp; AllDependenciesDone()</label>
			<label kind="assignment" x="34" y="-85">availableMachines--,
x = 0</label>
			<nail x="17" y="-85"/>
		</transition>
	</template>
	<system>// Place template instantiations here.

// List one or more processes to be composed into a system.
system Composer, Chain;
    </system>
	<queries>
		<query>
			<formula>strategy TimeSchedule = minE (Composer.time) [&lt;=57] : &lt;&gt;Composer.Done</formula>
			<comment></comment>
		</query>
		<query>
			<formula>inf{Composer.Done} : Composer.time</formula>
			<comment></comment>
		</query>
		<query>
			<formula>A&lt;&gt; Composer.Done</formula>
			<comment></comment>
		</query>
		<query>
			<formula>E&lt;&gt; Composer.Done</formula>
			<comment></comment>
		</query>
	</queries>
</nta>
