<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/researchgroup/darts/uppaal/flat-1_2.dtd'>
<nta>
<declaration>//Variables
const int numberOfChains = 28;
const int numberOfTasks = 100;
const int numberOfMachines = 5;
const int maxDependencies = 26;
const int longestChain = 8;
const int globalChainSize[numberOfChains] = {8,3,2,4,3,4,2,6,6,7,6,3,3,6,3,4,4,2,3,3,3,5,2,2,1,2,2,1};
const int globalChains[numberOfChains][longestChain] = {
{0,10,14,18,78,82,87,98},
{1,94,95,-1,-1,-1,-1,-1},
{2,96,-1,-1,-1,-1,-1,-1},
{3,66,71,92,-1,-1,-1,-1},
{4,84,90,-1,-1,-1,-1,-1},
{5,47,77,86,-1,-1,-1,-1},
{6,91,-1,-1,-1,-1,-1,-1},
{7,11,12,74,79,99,-1,-1},
{8,9,62,63,83,97,-1,-1},
{13,28,42,46,53,58,88,-1},
{15,39,45,65,70,76,-1,-1},
{16,80,93,-1,-1,-1,-1,-1},
{17,75,89,-1,-1,-1,-1,-1},
{19,49,55,60,68,81,-1,-1},
{20,36,73,-1,-1,-1,-1,-1},
{21,51,54,61,-1,-1,-1,-1},
{22,57,67,85,-1,-1,-1,-1},
{23,69,-1,-1,-1,-1,-1,-1},
{24,56,72,-1,-1,-1,-1,-1},
{25,41,44,-1,-1,-1,-1,-1},
{26,40,64,-1,-1,-1,-1,-1},
{27,30,37,48,59,-1,-1,-1},
{29,32,-1,-1,-1,-1,-1,-1},
{31,43,-1,-1,-1,-1,-1,-1},
{33,-1,-1,-1,-1,-1,-1,-1},
{34,52,-1,-1,-1,-1,-1,-1},
{35,38,-1,-1,-1,-1,-1,-1},
{50,-1,-1,-1,-1,-1,-1,-1}};
int chainDuration[numberOfChains] = {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1};
int durations[numberOfTasks] = {20,12,7,1,4,7,11,4,5,3,7,8,11,8,16,9,2,1,10,8,3,2,26,4,1,2,1,4,5,12,45,2,5,1,1,38,16,17,21,3,7,1,3,4,6,5,26,11,10,7,2,1,3,49,7,4,2,10,13,13,1,5,5,4,8,4,11,14,13,1,5,4,9,2,29,3,7,3,10,5,1,11,9,1,11,28,15,2,4,5,17,2,11,2,14,3,6,3,12,3};
const int dependencies[numberOfTasks][maxDependencies] = {
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,3,5,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,4,6,7,10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,2,4,6,7,9,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,7,10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,5,6,11,12,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,8,10,14,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,7,12,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,13,20,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,7,10,17,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,9,17,23,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,3,5,23,24,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,4,7,8,11,13,16,23,24,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,5,6,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,10,14,22,25,27,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,9,13,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,4,7,13,28,29,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,11,12,13,14,23,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,7,21,29,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{17,19,25,27,28,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,3,4,7,13,20,25,33,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,3,14,17,20,30,31,33,34,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{12,13,15,27,29,35,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,10,13,15,16,17,18,23,24,26,28,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{17,23,26,29,32,38,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,6,13,22,25,27,28,35,38,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,6,10,11,12,13,15,16,17,25,26,28,34,39,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,11,17,21,30,31,34,35,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{15,17,27,30,31,40,41,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,5,14,15,21,22,27,28,32,33,39,41,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,4,14,28,35,39,42,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,2,5,9,10,16,25,30,32,35,39,46,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,17,21,29,34,35,37,38,40,47,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,6,14,17,19,22,24,29,36,40,41,45,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,13,18,28,29,30,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,2,5,15,18,21,22,35,39,41,44,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{19,34,38,41,47,50,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,4,8,10,21,23,25,45,46,50,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,13,20,21,39,41,45,47,51,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,7,8,12,14,21,26,48,49,51,54,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{14,15,19,22,24,30,32,34,36,41,43,44,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,8,12,22,28,32,36,53,56,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,3,6,11,13,16,21,31,33,35,37,40,45,48,53,57,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,17,25,48,51,53,54,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,12,20,21,33,39,43,44,45,49,53,55,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,4,11,19,28,29,35,38,49,54,55,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,9,12,14,19,20,22,26,30,46,47,57,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,8,11,21,22,27,30,31,33,35,48,56,57,58,61,62,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{11,14,21,27,28,30,31,37,40,50,53,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,7,15,23,24,40,45,46,63,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,3,6,7,10,21,31,32,38,40,42,43,45,53,56,59,61,-1,-1,-1,-1,-1,-1,-1,-1},
{0,15,20,21,30,31,42,43,44,50,57,58,59,63,64,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,5,21,23,25,38,43,44,60,61,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,5,11,20,21,23,33,34,51,53,59,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,10,15,19,20,26,29,34,36,42,54,61,62,65,69,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,8,15,25,33,35,36,45,52,56,60,66,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,11,14,20,22,31,35,39,43,56,57,65,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,11,15,26,33,34,36,37,44,53,63,71,72,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,6,12,18,25,35,39,43,47,55,56,61,68,71,73,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,12,14,17,21,23,25,27,41,58,63,65,72,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{10,15,17,18,27,38,44,52,58,65,70,72,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,2,3,14,15,17,26,28,35,38,46,47,59,60,61,63,64,68,-1,-1,-1,-1,-1,-1,-1,-1},
{0,4,6,7,10,13,18,27,35,37,41,44,46,47,49,50,51,53,61,64,68,72,73,74,75,76},
{5,6,13,14,15,17,21,22,31,41,50,53,74,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,11,12,16,20,31,36,43,44,45,46,48,60,66,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,8,14,17,29,32,33,58,68,70,74,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,8,9,12,14,15,17,18,20,22,30,33,43,52,60,64,78,79,-1,-1,-1,-1,-1,-1,-1,-1},
{8,11,15,16,18,23,25,26,28,31,32,33,42,50,51,53,54,56,63,71,74,75,-1,-1,-1,-1},
{3,4,19,28,36,41,42,49,50,52,53,54,59,65,70,71,78,80,83,-1,-1,-1,-1,-1,-1,-1},
{8,11,24,28,32,33,40,41,45,65,67,68,72,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,3,13,16,20,21,22,24,29,36,48,56,60,61,62,65,73,77,80,-1,-1,-1,-1,-1,-1,-1},
{0,2,10,19,22,23,30,33,36,41,48,61,62,70,71,74,76,78,79,82,-1,-1,-1,-1,-1,-1},
{3,12,13,17,18,21,22,26,49,50,58,60,63,65,69,71,72,75,-1,-1,-1,-1,-1,-1,-1,-1},
{0,6,16,19,23,30,32,44,45,54,55,56,67,75,79,81,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,4,5,11,26,29,34,35,40,41,43,58,64,72,74,84,86,-1,-1,-1,-1,-1,-1,-1,-1},
{3,4,5,6,7,12,15,17,18,19,22,30,32,35,37,43,47,49,54,72,89,-1,-1,-1,-1,-1},
{0,4,11,16,17,18,24,32,41,48,53,59,63,71,78,85,89,91,-1,-1,-1,-1,-1,-1,-1,-1},
{14,19,21,27,28,37,38,40,48,54,55,61,63,73,74,75,80,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,2,6,9,10,13,18,19,20,25,28,29,30,32,35,36,41,42,51,52,62,66,70,82,89,91},
{1,4,6,13,17,29,30,36,38,42,52,53,56,58,67,69,71,82,85,86,89,91,92,94,-1,-1},
{0,1,2,3,14,19,23,32,36,54,64,66,67,69,74,76,77,78,88,89,90,-1,-1,-1,-1,-1},
{6,7,13,14,22,40,47,54,68,83,85,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,6,9,13,14,17,19,26,27,28,39,42,43,51,53,57,60,65,66,75,79,80,87,90,91,93},
{5,7,8,12,14,18,24,27,30,31,37,42,43,47,50,53,57,62,68,79,-1,-1,-1,-1,-1,-1}};


int availableMachines = numberOfMachines;

// Typedefs
typedef int[0, numberOfChains - 1] chainId_t;

// Ints and Arrays
int numberOfChainsDone = 0;
int tasksDone[numberOfTasks];
bool runnableChains[numberOfChains];
bool assignmentChoice[numberOfChains];

// Channels
broadcast chan startMachines;
broadcast chan chainMachineChan[numberOfChains];
broadcast chan activateChains;</declaration>
	<template>
		<name x="5" y="5">Composer</name>
		<declaration>// Place local declarations here.
clock time;</declaration>
		<location id="id0" x="-102" y="-255">
			<name x="-112" y="-289">Init</name>
			<label kind="invariant" x="-246" y="-238">numberOfChainsDone &lt;= numberOfChains</label> 
 <label kind="exponentialrate" x="-112" y="-221">0</label>
		</location>
		<location id="id1" x="331" y="-255">
			<name x="321" y="-289">Done</name>
		</location>
		<init ref="id0"/>
		<transition>
			<source ref="id0"/>
			<target ref="id1"/>
			<label kind="guard" x="-17" y="-289">numberOfChainsDone &gt;= numberOfChains</label>
		</transition>
	</template>
	<template>
		<name>Chain</name>
		<parameter>const chainId_t cid</parameter>
		<declaration>clock x;
const int chainSize = globalChainSize[cid];
int index = 0;

bool AllDependenciesDone()
{
    bool dependenciesDone = 1;
    int i;
    for (i = 0; i &lt; maxDependencies; i++)
    {
        int value = dependencies[globalChains[cid][index]][i];
        if (value == -1)
            return dependenciesDone;

        dependenciesDone &amp;= tasksDone[value];
    }
    return dependenciesDone;
}</declaration>
		<location id="id2" x="-68" y="-238">
			<name x="-78" y="-272">Idle</name>
			<label kind="exponentialrate" x="-51" y="-255">3</label>
		</location>
		<location id="id3" x="-76" y="51">
			<name x="-102" y="68">Running</name>
			<label kind="invariant" x="-178" y="85">x &lt;= durations[globalChains[cid][index]]</label>
		</location>
		<location id="id4" x="-450" y="-238">
			<name x="-460" y="-272">Done</name>
		</location>
		<init ref="id2"/>
		<transition controllable="false">
			<source ref="id2"/>
			<target ref="id4"/>
			<label kind="guard" x="-399" y="-280">index &gt;= chainSize &amp;&amp;
x &gt;= durations[globalChains[cid][index - 1]]</label>
			<label kind="assignment" x="-399" y="-238">numberOfChainsDone++</label>
		</transition>
		<transition controllable="false">
			<source ref="id3"/>
			<target ref="id2"/>
			<label kind="guard" x="-450" y="-127">x &gt;= durations[globalChains[cid][index]]</label>
			<label kind="assignment" x="-450" y="-110">availableMachines++,
tasksDone[globalChains[cid][index]] = 1,
index++</label>
			<nail x="-161" y="-85"/>
		</transition>
		<transition>
			<source ref="id2"/>
			<target ref="id3"/>
			<label kind="guard" x="34" y="-127">index &lt; chainSize &amp;&amp;
availableMachines &gt; 0 &amp;&amp; AllDependenciesDone()</label>
			<label kind="assignment" x="34" y="-85">availableMachines--,
x = 0</label>
			<nail x="17" y="-85"/>
		</transition>
	</template>
	<system>// Place template instantiations here.

// List one or more processes to be composed into a system.
system Composer, Chain;
    </system>
	<queries>
		<query>
			<formula>strategy TimeSchedule = minE (Composer.time) [&lt;=57] : &lt;&gt;Composer.Done</formula>
			<comment></comment>
		</query>
		<query>
			<formula>inf{Composer.Done} : Composer.time</formula>
			<comment></comment>
		</query>
		<query>
			<formula>A&lt;&gt; Composer.Done</formula>
			<comment></comment>
		</query>
		<query>
			<formula>E&lt;&gt; Composer.Done</formula>
			<comment></comment>
		</query>
	</queries>
</nta>
