<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/researchgroup/darts/uppaal/flat-1_2.dtd'>
<nta>
<declaration>//Variables
const int numberOfChains = 32;
const int numberOfTasks = 100;
const int numberOfMachines = 7;
const int maxDependencies = 15;
const int longestChain = 7;
const int globalChainSize[numberOfChains] = {6,6,4,7,4,5,4,3,5,5,5,2,2,3,4,2,6,2,2,3,2,3,2,1,2,2,1,3,1,1,1,1};
const int globalChains[numberOfChains][longestChain] = {
{0,6,25,46,96,99,-1},
{1,43,67,90,93,98,-1},
{2,65,69,97,-1,-1,-1},
{3,68,71,73,85,89,95},
{4,72,91,92,-1,-1,-1},
{5,12,51,75,86,-1,-1},
{7,24,35,77,-1,-1,-1},
{8,66,82,-1,-1,-1,-1},
{9,56,63,79,83,-1,-1},
{10,17,61,78,81,-1,-1},
{11,38,41,57,94,-1,-1},
{13,88,-1,-1,-1,-1,-1},
{14,70,-1,-1,-1,-1,-1},
{15,29,84,-1,-1,-1,-1},
{16,40,53,62,-1,-1,-1},
{18,80,-1,-1,-1,-1,-1},
{19,39,44,45,60,87,-1},
{20,76,-1,-1,-1,-1,-1},
{21,50,-1,-1,-1,-1,-1},
{22,52,74,-1,-1,-1,-1},
{23,64,-1,-1,-1,-1,-1},
{26,32,42,-1,-1,-1,-1},
{27,59,-1,-1,-1,-1,-1},
{28,-1,-1,-1,-1,-1,-1},
{30,37,-1,-1,-1,-1,-1},
{31,36,-1,-1,-1,-1,-1},
{33,-1,-1,-1,-1,-1,-1},
{34,47,54,-1,-1,-1,-1},
{48,-1,-1,-1,-1,-1,-1},
{49,-1,-1,-1,-1,-1,-1},
{55,-1,-1,-1,-1,-1,-1},
{58,-1,-1,-1,-1,-1,-1}};
int chainDuration[numberOfChains] = {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1};
int durations[numberOfTasks] = {6,5,5,5,6,7,6,5,5,5,5,7,5,6,4,6,4,4,6,6,6,4,6,6,6,7,6,6,5,5,6,5,5,4,5,6,7,7,5,7,4,5,6,4,7,7,5,5,4,6,6,6,7,4,6,4,5,5,5,4,6,6,5,5,6,6,2,7,6,7,5,3,5,6,5,6,6,5,8,7,4,4,6,7,7,5,4,5,8,5,5,7,6,4,6,5,7,7,6,5};
const int dependencies[numberOfTasks][maxDependencies] = {
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,5,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,12,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,15,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,9,10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,13,18,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,5,14,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{15,16,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,14,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,4,7,15,17,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,3,6,8,14,24,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{14,17,20,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{18,22,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{17,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,9,15,21,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{12,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{13,15,30,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,26,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,10,31,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{12,22,30,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,6,9,22,24,32,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{9,12,13,31,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{15,16,30,34,35,36,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{11,12,17,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,14,19,30,34,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,11,14,16,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,5,20,24,38,39,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,8,32,41,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,6,16,26,27,34,36,42,-1,-1,-1,-1,-1,-1,-1},
{13,31,32,36,39,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,11,21,29,44,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,9,25,27,28,32,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{9,20,32,34,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{29,43,44,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{38,40,46,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,8,15,21,27,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,3,12,18,29,41,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,14,22,40,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,12,38,39,40,42,49,-1,-1,-1,-1,-1,-1,-1,-1},
{24,40,45,47,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{32,46,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,9,44,51,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,11,24,37,41,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{32,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{14,19,27,58,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,7,20,28,29,30,40,45,-1,-1,-1,-1,-1,-1,-1},
{12,13,17,46,54,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,12,19,26,31,38,45,46,53,-1,-1,-1,-1,-1,-1},
{8,25,27,48,56,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,23,24,40,56,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,6,14,15,42,54,61,-1,-1,-1,-1,-1,-1,-1,-1},
{8,14,40,43,46,58,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,7,12,19,28,38,43,62,-1,-1,-1,-1,-1,-1},
{1,3,5,9,13,14,23,46,53,56,58,59,63,-1,-1},
{26,33,46,49,51,61,65,-1,-1,-1,-1,-1,-1,-1,-1},
{3,13,14,29,31,42,43,55,62,-1,-1,-1,-1,-1,-1},
{6,25,39,48,51,58,61,63,68,-1,-1,-1,-1,-1,-1},
{2,4,14,18,19,37,51,59,65,-1,-1,-1,-1,-1,-1},
{7,11,12,17,22,29,43,63,64,66,71,-1,-1,-1,-1},
{19,24,52,60,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,12,13,15,16,29,39,51,54,60,61,66,-1,-1,-1},
{11,20,36,37,42,43,45,47,49,57,58,59,64,-1,-1},
{10,19,24,35,57,59,62,68,-1,-1,-1,-1,-1,-1,-1},
{14,27,29,30,35,47,53,57,61,65,76,-1,-1,-1,-1},
{11,12,28,36,50,55,60,63,69,71,-1,-1,-1,-1,-1},
{3,12,18,19,25,27,30,31,42,53,55,-1,-1,-1,-1},
{2,7,10,18,23,26,33,53,76,78,-1,-1,-1,-1,-1},
{10,17,19,24,32,39,61,66,75,81,-1,-1,-1,-1,-1},
{6,13,16,24,32,56,62,79,-1,-1,-1,-1,-1,-1,-1},
{13,29,43,44,52,64,72,-1,-1,-1,-1,-1,-1,-1,-1},
{2,5,15,21,26,28,34,35,44,46,54,62,73,-1,-1},
{20,36,37,38,41,44,51,72,74,75,-1,-1,-1,-1,-1},
{17,20,26,41,57,59,60,-1,-1,-1,-1,-1,-1,-1,-1},
{7,9,12,13,40,52,70,-1,-1,-1,-1,-1,-1,-1,-1},
{4,5,6,8,9,26,51,52,57,59,68,76,79,85,-1},
{0,1,17,23,48,58,67,86,-1,-1,-1,-1,-1,-1,-1},
{19,26,32,36,37,43,50,59,67,72,-1,-1,-1,-1,-1},
{5,8,10,16,20,24,29,32,44,53,54,70,75,90,91},
{1,5,7,46,66,69,72,78,79,80,86,87,90,-1,-1},
{14,19,35,55,57,63,68,-1,-1,-1,-1,-1,-1,-1,-1},
{11,12,16,19,21,32,52,56,59,61,66,70,72,89,92},
{0,8,9,13,24,27,32,42,46,79,88,92,-1,-1,-1},
{3,10,13,31,32,46,51,69,70,72,75,82,91,94,-1},
{19,34,40,41,45,46,48,49,51,63,64,93,-1,-1,-1},
{5,31,34,44,47,48,65,82,89,96,98,-1,-1,-1,-1}};


int availableMachines = numberOfMachines;

// Typedefs
typedef int[0, numberOfChains - 1] chainId_t;

// Ints and Arrays
int numberOfChainsDone = 0;
int tasksDone[numberOfTasks];
bool runnableChains[numberOfChains];
bool assignmentChoice[numberOfChains];

// Channels
broadcast chan startMachines;
broadcast chan chainMachineChan[numberOfChains];
broadcast chan activateChains;</declaration>
	<template>
		<name x="5" y="5">Composer</name>
		<declaration>// Place local declarations here.
clock time;</declaration>
		<location id="id0" x="-102" y="-255">
			<name x="-112" y="-289">Init</name>
			<label kind="invariant" x="-246" y="-238">numberOfChainsDone &lt;= numberOfChains</label> 
 <label kind="exponentialrate" x="-112" y="-221">0</label>
		</location>
		<location id="id1" x="331" y="-255">
			<name x="321" y="-289">Done</name>
		</location>
		<init ref="id0"/>
		<transition>
			<source ref="id0"/>
			<target ref="id1"/>
			<label kind="guard" x="-17" y="-289">numberOfChainsDone &gt;= numberOfChains</label>
		</transition>
	</template>
	<template>
		<name>Chain</name>
		<parameter>const chainId_t cid</parameter>
		<declaration>clock x;
const int chainSize = globalChainSize[cid];
int index = 0;

bool AllDependenciesDone()
{
    bool dependenciesDone = 1;
    int i;
    for (i = 0; i &lt; maxDependencies; i++)
    {
        int value = dependencies[globalChains[cid][index]][i];
        if (value == -1)
            return dependenciesDone;

        dependenciesDone &amp;= tasksDone[value];
    }
    return dependenciesDone;
}</declaration>
		<location id="id2" x="-68" y="-238">
			<name x="-78" y="-272">Idle</name>
			<label kind="exponentialrate" x="-51" y="-255">3</label>
		</location>
		<location id="id3" x="-76" y="51">
			<name x="-102" y="68">Running</name>
			<label kind="invariant" x="-178" y="85">x &lt;= durations[globalChains[cid][index]]</label>
		</location>
		<location id="id4" x="-450" y="-238">
			<name x="-460" y="-272">Done</name>
		</location>
		<init ref="id2"/>
		<transition controllable="false">
			<source ref="id2"/>
			<target ref="id4"/>
			<label kind="guard" x="-399" y="-280">index &gt;= chainSize &amp;&amp;
x &gt;= durations[globalChains[cid][index - 1]]</label>
			<label kind="assignment" x="-399" y="-238">numberOfChainsDone++</label>
		</transition>
		<transition controllable="false">
			<source ref="id3"/>
			<target ref="id2"/>
			<label kind="guard" x="-450" y="-127">x &gt;= durations[globalChains[cid][index]]</label>
			<label kind="assignment" x="-450" y="-110">availableMachines++,
tasksDone[globalChains[cid][index]] = 1,
index++</label>
			<nail x="-161" y="-85"/>
		</transition>
		<transition>
			<source ref="id2"/>
			<target ref="id3"/>
			<label kind="guard" x="34" y="-127">index &lt; chainSize &amp;&amp;
availableMachines &gt; 0 &amp;&amp; AllDependenciesDone()</label>
			<label kind="assignment" x="34" y="-85">availableMachines--,
x = 0</label>
			<nail x="17" y="-85"/>
		</transition>
	</template>
	<system>// Place template instantiations here.

// List one or more processes to be composed into a system.
system Composer, Chain;
    </system>
	<queries>
		<query>
			<formula>strategy TimeSchedule = minE (Composer.time) [&lt;=57] : &lt;&gt;Composer.Done</formula>
			<comment></comment>
		</query>
		<query>
			<formula>inf{Composer.Done} : Composer.time</formula>
			<comment></comment>
		</query>
		<query>
			<formula>A&lt;&gt; Composer.Done</formula>
			<comment></comment>
		</query>
		<query>
			<formula>E&lt;&gt; Composer.Done</formula>
			<comment></comment>
		</query>
	</queries>
</nta>
