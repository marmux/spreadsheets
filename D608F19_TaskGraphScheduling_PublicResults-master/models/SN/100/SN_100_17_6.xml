<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/researchgroup/darts/uppaal/flat-1_2.dtd'>
<nta>
<declaration>//Variables
const int numberOfChains = 31;
const int numberOfTasks = 100;
const int numberOfMachines = 6;
const int maxDependencies = 15;
const int longestChain = 7;
const int globalChainSize[numberOfChains] = {7,6,4,6,3,5,2,4,3,5,2,6,3,3,2,3,3,3,3,5,4,2,2,1,3,2,3,2,1,1,1};
const int globalChains[numberOfChains][longestChain] = {
{0,3,8,42,83,89,92},
{1,43,52,60,88,90,-1},
{2,61,66,82,-1,-1,-1},
{4,32,62,67,86,91,-1},
{5,11,94,-1,-1,-1,-1},
{6,16,20,63,99,-1,-1},
{7,97,-1,-1,-1,-1,-1},
{9,64,78,87,-1,-1,-1},
{10,77,96,-1,-1,-1,-1},
{12,22,59,74,84,-1,-1},
{13,98,-1,-1,-1,-1,-1},
{14,34,47,65,73,95,-1},
{15,23,70,-1,-1,-1,-1},
{17,81,85,-1,-1,-1,-1},
{18,93,-1,-1,-1,-1,-1},
{19,56,57,-1,-1,-1,-1},
{21,72,76,-1,-1,-1,-1},
{24,51,80,-1,-1,-1,-1},
{25,48,75,-1,-1,-1,-1},
{26,28,41,53,54,-1,-1},
{27,38,44,45,-1,-1,-1},
{29,71,-1,-1,-1,-1,-1},
{30,58,-1,-1,-1,-1,-1},
{31,-1,-1,-1,-1,-1,-1},
{33,49,68,-1,-1,-1,-1},
{35,69,-1,-1,-1,-1,-1},
{36,37,46,-1,-1,-1,-1},
{39,79,-1,-1,-1,-1,-1},
{40,-1,-1,-1,-1,-1,-1},
{50,-1,-1,-1,-1,-1,-1},
{55,-1,-1,-1,-1,-1,-1}};
int chainDuration[numberOfChains] = {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1};
int durations[numberOfTasks] = {9,1,11,2,1,16,12,9,45,11,4,8,19,8,34,5,6,16,21,32,18,21,9,8,2,12,13,30,7,4,1,16,20,3,6,15,2,4,6,15,18,8,20,27,20,9,13,2,3,10,24,3,6,34,27,8,8,7,14,8,4,23,6,4,34,11,16,6,14,7,13,11,2,2,17,28,8,10,4,21,2,8,4,29,5,12,1,2,14,2,2,8,5,1,7,7,15,11,4,6};
const int dependencies[numberOfTasks][maxDependencies] = {
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,5,10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,8,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,9,12,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,3,6,11,12,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{12,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,6,11,16,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,8,20,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,11,12,20,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,12,13,15,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,9,10,17,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{16,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{15,18,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{15,18,24,26,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,17,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,18,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,2,4,17,21,22,30,-1,-1,-1,-1,-1,-1,-1,-1},
{10,22,23,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,11,12,13,14,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,13,18,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,15,16,34,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,10,27,36,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,11,12,19,27,30,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{9,18,25,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,11,24,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,25,28,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,2,8,12,20,25,26,34,-1,-1,-1,-1,-1,-1,-1},
{0,1,8,13,25,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,9,12,33,38,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{9,10,18,36,44,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,15,22,35,37,39,40,-1,-1,-1,-1,-1,-1,-1,-1},
{1,9,22,27,34,36,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,7,19,25,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{20,25,33,37,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,20,44,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,13,21,24,29,30,33,35,40,49,-1,-1,-1,-1,-1},
{2,4,8,10,11,15,21,40,43,-1,-1,-1,-1,-1,-1},
{6,13,25,33,41,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{13,24,25,27,39,41,46,53,-1,-1,-1,-1,-1,-1,-1},
{2,20,26,37,42,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,11,16,19,23,27,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,16,18,19,21,31,33,47,51,56,-1,-1,-1,-1,-1},
{17,30,34,36,41,48,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{9,10,16,18,22,23,31,47,56,-1,-1,-1,-1,-1,-1},
{0,40,52,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,2,8,9,12,19,30,41,47,57,-1,-1,-1,-1,-1},
{31,32,37,42,43,51,54,59,-1,-1,-1,-1,-1,-1,-1},
{6,7,9,11,20,57,62,-1,-1,-1,-1,-1,-1,-1,-1},
{2,4,9,20,21,29,50,55,57,58,-1,-1,-1,-1,-1},
{0,7,22,23,47,53,57,-1,-1,-1,-1,-1,-1,-1,-1},
{8,9,18,22,30,44,51,53,55,59,61,-1,-1,-1,-1},
{22,45,47,54,56,61,62,-1,-1,-1,-1,-1,-1,-1,-1},
{4,17,44,49,59,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{10,35,48,53,65,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{15,23,27,33,34,38,41,47,49,64,-1,-1,-1,-1,-1},
{2,16,25,29,39,65,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,9,21,23,42,47,50,55,-1,-1,-1,-1,-1,-1,-1},
{9,20,36,39,44,54,55,59,65,-1,-1,-1,-1,-1,-1},
{1,8,23,27,29,40,50,56,57,59,63,65,-1,-1,-1},
{5,12,24,27,48,49,50,60,-1,-1,-1,-1,-1,-1,-1},
{10,12,14,31,40,41,64,72,75,-1,-1,-1,-1,-1,-1},
{2,10,11,24,28,33,34,49,61,76,-1,-1,-1,-1,-1},
{4,11,17,26,29,33,59,64,66,-1,-1,-1,-1,-1,-1},
{39,72,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,5,9,11,14,28,37,51,56,69,71,75,-1,-1,-1},
{9,14,17,21,35,39,43,51,58,66,-1,-1,-1,-1,-1},
{2,8,13,17,20,26,30,31,32,44,51,58,66,68,-1},
{0,1,11,17,20,33,37,42,43,53,66,72,80,-1,-1},
{2,7,19,29,32,64,72,74,-1,-1,-1,-1,-1,-1,-1},
{5,9,10,17,49,81,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,22,39,44,49,53,57,59,67,70,74,-1,-1,-1,-1},
{6,9,19,38,41,49,55,76,78,-1,-1,-1,-1,-1,-1},
{0,4,10,26,28,37,50,54,57,60,64,71,73,74,76},
{1,2,8,9,19,21,25,43,52,53,67,82,83,-1,-1},
{1,14,25,41,42,50,68,82,87,88,-1,-1,-1,-1,-1},
{0,3,19,34,37,44,47,65,66,78,79,86,-1,-1,-1},
{3,11,14,29,32,38,52,61,62,64,68,70,73,85,89},
{7,18,21,34,45,62,63,-1,-1,-1,-1,-1,-1,-1,-1},
{4,11,16,17,19,46,50,64,75,77,83,89,-1,-1,-1},
{22,23,42,43,57,72,73,79,85,-1,-1,-1,-1,-1,-1},
{9,10,24,26,37,41,42,50,70,72,77,78,79,80,-1},
{2,7,16,23,39,41,42,57,65,71,76,88,-1,-1,-1},
{5,12,13,17,28,29,41,51,64,65,67,71,85,-1,-1},
{2,11,19,43,58,63,79,-1,-1,-1,-1,-1,-1,-1,-1}};


int availableMachines = numberOfMachines;

// Typedefs
typedef int[0, numberOfChains - 1] chainId_t;

// Ints and Arrays
int numberOfChainsDone = 0;
int tasksDone[numberOfTasks];
bool runnableChains[numberOfChains];
bool assignmentChoice[numberOfChains];

// Channels
broadcast chan startMachines;
broadcast chan chainMachineChan[numberOfChains];
broadcast chan activateChains;</declaration>
	<template>
		<name x="5" y="5">Composer</name>
		<declaration>// Place local declarations here.
clock time;</declaration>
		<location id="id0" x="-102" y="-255">
			<name x="-112" y="-289">Init</name>
			<label kind="invariant" x="-246" y="-238">numberOfChainsDone &lt;= numberOfChains</label> 
 <label kind="exponentialrate" x="-112" y="-221">0</label>
		</location>
		<location id="id1" x="331" y="-255">
			<name x="321" y="-289">Done</name>
		</location>
		<init ref="id0"/>
		<transition>
			<source ref="id0"/>
			<target ref="id1"/>
			<label kind="guard" x="-17" y="-289">numberOfChainsDone &gt;= numberOfChains</label>
		</transition>
	</template>
	<template>
		<name>Chain</name>
		<parameter>const chainId_t cid</parameter>
		<declaration>clock x;
const int chainSize = globalChainSize[cid];
int index = 0;

bool AllDependenciesDone()
{
    bool dependenciesDone = 1;
    int i;
    for (i = 0; i &lt; maxDependencies; i++)
    {
        int value = dependencies[globalChains[cid][index]][i];
        if (value == -1)
            return dependenciesDone;

        dependenciesDone &amp;= tasksDone[value];
    }
    return dependenciesDone;
}</declaration>
		<location id="id2" x="-68" y="-238">
			<name x="-78" y="-272">Idle</name>
			<label kind="exponentialrate" x="-51" y="-255">3</label>
		</location>
		<location id="id3" x="-76" y="51">
			<name x="-102" y="68">Running</name>
			<label kind="invariant" x="-178" y="85">x &lt;= durations[globalChains[cid][index]]</label>
		</location>
		<location id="id4" x="-450" y="-238">
			<name x="-460" y="-272">Done</name>
		</location>
		<init ref="id2"/>
		<transition controllable="false">
			<source ref="id2"/>
			<target ref="id4"/>
			<label kind="guard" x="-399" y="-280">index &gt;= chainSize &amp;&amp;
x &gt;= durations[globalChains[cid][index - 1]]</label>
			<label kind="assignment" x="-399" y="-238">numberOfChainsDone++</label>
		</transition>
		<transition controllable="false">
			<source ref="id3"/>
			<target ref="id2"/>
			<label kind="guard" x="-450" y="-127">x &gt;= durations[globalChains[cid][index]]</label>
			<label kind="assignment" x="-450" y="-110">availableMachines++,
tasksDone[globalChains[cid][index]] = 1,
index++</label>
			<nail x="-161" y="-85"/>
		</transition>
		<transition>
			<source ref="id2"/>
			<target ref="id3"/>
			<label kind="guard" x="34" y="-127">index &lt; chainSize &amp;&amp;
availableMachines &gt; 0 &amp;&amp; AllDependenciesDone()</label>
			<label kind="assignment" x="34" y="-85">availableMachines--,
x = 0</label>
			<nail x="17" y="-85"/>
		</transition>
	</template>
	<system>// Place template instantiations here.

// List one or more processes to be composed into a system.
system Composer, Chain;
    </system>
	<queries>
		<query>
			<formula>strategy TimeSchedule = minE (Composer.time) [&lt;=57] : &lt;&gt;Composer.Done</formula>
			<comment></comment>
		</query>
		<query>
			<formula>inf{Composer.Done} : Composer.time</formula>
			<comment></comment>
		</query>
		<query>
			<formula>A&lt;&gt; Composer.Done</formula>
			<comment></comment>
		</query>
		<query>
			<formula>E&lt;&gt; Composer.Done</formula>
			<comment></comment>
		</query>
	</queries>
</nta>
