<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/researchgroup/darts/uppaal/flat-1_2.dtd'>
<nta>
<declaration>//Variables
const int numberOfChains = 29;
const int numberOfTasks = 100;
const int numberOfMachines = 16;
const int maxDependencies = 19;
const int longestChain = 7;
const int globalChainSize[numberOfChains] = {7,5,2,4,5,3,3,4,4,2,4,2,7,3,4,4,7,4,1,3,4,5,3,3,2,2,1,1,1};
const int globalChains[numberOfChains][longestChain] = {
{0,10,63,82,84,94,97},
{1,22,38,75,90,-1,-1},
{2,98,-1,-1,-1,-1,-1},
{3,34,56,99,-1,-1,-1},
{4,52,86,89,96,-1,-1},
{5,76,92,-1,-1,-1,-1},
{6,70,95,-1,-1,-1,-1},
{7,27,66,87,-1,-1,-1},
{8,80,85,93,-1,-1,-1},
{9,88,-1,-1,-1,-1,-1},
{11,17,42,81,-1,-1,-1},
{12,91,-1,-1,-1,-1,-1},
{13,30,45,64,72,77,79},
{14,21,74,-1,-1,-1,-1},
{15,47,73,78,-1,-1,-1},
{16,62,67,69,-1,-1,-1},
{18,19,26,41,50,68,83},
{20,40,53,71,-1,-1,-1},
{23,-1,-1,-1,-1,-1,-1},
{24,39,57,-1,-1,-1,-1},
{25,36,43,58,-1,-1,-1},
{28,32,48,55,60,-1,-1},
{29,46,61,-1,-1,-1,-1},
{31,35,37,-1,-1,-1,-1},
{33,44,-1,-1,-1,-1,-1},
{49,59,-1,-1,-1,-1,-1},
{51,-1,-1,-1,-1,-1,-1},
{54,-1,-1,-1,-1,-1,-1},
{65,-1,-1,-1,-1,-1,-1}};
int chainDuration[numberOfChains] = {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1};
int durations[numberOfTasks] = {2,9,3,13,5,6,18,2,4,4,8,20,9,1,6,2,6,1,10,9,9,1,15,2,14,12,7,1,2,2,2,5,2,7,3,4,1,5,2,3,3,2,4,3,4,5,8,12,5,5,4,5,18,7,1,7,5,8,1,3,8,13,2,34,2,4,5,10,1,5,18,7,1,2,6,5,3,14,3,2,2,1,1,2,20,1,2,4,4,9,1,1,11,8,15,1,6,8,10,10};
const int dependencies[numberOfTasks][maxDependencies] = {
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,2,8,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,4,13,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{11,12,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,2,14,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,4,8,9,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,8,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,11,12,18,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,9,10,12,14,19,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,6,11,13,19,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,14,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,5,15,20,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{12,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,7,14,15,19,21,24,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,5,7,10,19,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,3,12,21,24,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{15,19,25,27,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,2,8,12,13,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{17,18,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,12,13,19,25,27,28,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{15,26,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,3,14,16,18,31,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{11,18,27,28,30,31,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,15,16,19,21,25,29,30,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,2,8,11,20,35,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,3,11,22,27,31,35,37,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,2,7,16,24,28,29,30,37,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,5,15,17,20,21,37,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,12,17,21,26,32,35,39,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{9,11,17,22,29,31,35,37,40,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,19,25,30,36,38,42,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{16,19,30,33,34,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,7,13,14,16,19,20,22,30,36,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{15,21,29,31,39,42,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,3,7,14,15,20,30,31,35,37,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,7,13,19,21,27,32,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,15,22,28,38,43,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{13,14,15,17,26,32,40,41,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,12,26,31,43,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,2,3,4,6,27,29,33,35,43,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,9,12,16,22,31,40,44,49,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,12,21,40,49,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,25,26,29,30,47,48,52,53,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,2,3,12,13,20,25,26,34,35,47,48,50,-1,-1,-1,-1,-1,-1},
{13,21,24,27,30,39,51,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,12,14,40,43,47,49,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,14,25,36,49,50,54,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,12,14,28,30,39,47,55,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,8,26,31,43,46,49,53,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,5,16,17,26,30,36,47,54,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,3,4,10,19,20,27,39,41,43,45,61,-1,-1,-1,-1,-1,-1,-1},
{1,7,25,32,42,45,52,56,62,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,16,26,29,53,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,10,13,15,17,24,27,34,35,43,53,54,57,60,-1,-1,-1,-1,-1},
{7,11,13,18,20,28,32,43,47,55,60,62,-1,-1,-1,-1,-1,-1,-1},
{4,6,16,27,28,33,37,38,43,49,50,53,57,-1,-1,-1,-1,-1,-1},
{14,18,25,42,44,49,60,66,67,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,6,8,11,16,17,18,20,34,38,62,-1,-1,-1,-1,-1,-1,-1,-1},
{2,16,25,33,34,35,36,37,40,41,53,54,60,67,-1,-1,-1,-1,-1},
{6,12,16,21,41,44,45,47,52,61,64,71,-1,-1,-1,-1,-1,-1,-1},
{1,6,13,30,32,40,41,42,47,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,9,12,16,20,21,29,35,36,37,39,41,45,58,63,65,-1,-1,-1},
{0,4,13,14,17,22,27,28,31,37,38,39,45,68,73,-1,-1,-1,-1},
{2,4,5,14,18,28,30,32,34,37,48,55,56,67,72,74,-1,-1,-1},
{22,23,24,30,37,39,40,43,47,51,53,69,72,74,75,76,-1,-1,-1},
{0,9,16,17,19,24,37,47,48,49,65,73,-1,-1,-1,-1,-1,-1,-1},
{8,9,11,23,25,31,37,45,47,60,67,72,77,-1,-1,-1,-1,-1,-1},
{3,8,31,37,40,41,42,50,58,59,63,64,69,76,77,79,-1,-1,-1},
{0,7,8,11,13,18,21,25,29,30,40,42,43,51,52,61,68,71,-1},
{0,3,21,25,26,31,47,57,60,63,70,72,-1,-1,-1,-1,-1,-1,-1},
{1,2,24,30,33,47,56,68,77,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,2,6,7,17,32,47,48,50,52,53,55,60,61,70,71,76,82,83},
{0,8,23,31,37,41,43,52,67,69,80,-1,-1,-1,-1,-1,-1,-1,-1},
{1,8,10,11,24,33,45,47,52,53,56,67,69,76,78,80,-1,-1,-1},
{0,11,17,18,20,22,25,31,32,34,46,58,60,66,77,80,-1,-1,-1},
{2,3,9,12,26,37,49,50,51,53,54,63,68,71,72,78,80,-1,-1},
{4,7,10,20,45,46,50,56,62,80,86,87,-1,-1,-1,-1,-1,-1,-1},
{6,10,23,33,40,45,51,56,69,75,82,88,89,-1,-1,-1,-1,-1,-1},
{8,11,12,25,40,46,69,85,89,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,7,12,17,23,24,35,43,44,46,55,60,65,67,70,75,76,82,86},
{1,5,8,16,21,43,46,49,60,61,72,78,80,83,85,88,-1,-1,-1},
{3,5,7,9,21,37,44,48,50,61,72,73,75,84,92,-1,-1,-1,-1},
{5,25,27,50,51,60,62,63,66,70,71,78,91,-1,-1,-1,-1,-1,-1},
{14,16,17,19,24,31,50,63,69,73,75,78,86,89,-1,-1,-1,-1,-1},
{2,8,22,26,35,41,42,57,58,60,69,85,88,89,94,-1,-1,-1,-1},
{1,2,19,24,36,38,39,92,95,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,4,7,18,23,28,34,38,44,45,53,56,62,68,71,74,81,88,91}};


int availableMachines = numberOfMachines;

// Typedefs
typedef int[0, numberOfChains - 1] chainId_t;

// Ints and Arrays
int numberOfChainsDone = 0;
int tasksDone[numberOfTasks];
bool runnableChains[numberOfChains];
bool assignmentChoice[numberOfChains];

// Channels
broadcast chan startMachines;
broadcast chan chainMachineChan[numberOfChains];
broadcast chan activateChains;</declaration>
	<template>
		<name x="5" y="5">Composer</name>
		<declaration>// Place local declarations here.
clock time;</declaration>
		<location id="id0" x="-102" y="-255">
			<name x="-112" y="-289">Init</name>
			<label kind="invariant" x="-246" y="-238">numberOfChainsDone &lt;= numberOfChains</label> 
 <label kind="exponentialrate" x="-112" y="-221">0</label>
		</location>
		<location id="id1" x="331" y="-255">
			<name x="321" y="-289">Done</name>
		</location>
		<init ref="id0"/>
		<transition>
			<source ref="id0"/>
			<target ref="id1"/>
			<label kind="guard" x="-17" y="-289">numberOfChainsDone &gt;= numberOfChains</label>
		</transition>
	</template>
	<template>
		<name>Chain</name>
		<parameter>const chainId_t cid</parameter>
		<declaration>clock x;
const int chainSize = globalChainSize[cid];
int index = 0;

bool AllDependenciesDone()
{
    bool dependenciesDone = 1;
    int i;
    for (i = 0; i &lt; maxDependencies; i++)
    {
        int value = dependencies[globalChains[cid][index]][i];
        if (value == -1)
            return dependenciesDone;

        dependenciesDone &amp;= tasksDone[value];
    }
    return dependenciesDone;
}</declaration>
		<location id="id2" x="-68" y="-238">
			<name x="-78" y="-272">Idle</name>
			<label kind="exponentialrate" x="-51" y="-255">3</label>
		</location>
		<location id="id3" x="-76" y="51">
			<name x="-102" y="68">Running</name>
			<label kind="invariant" x="-178" y="85">x &lt;= durations[globalChains[cid][index]]</label>
		</location>
		<location id="id4" x="-450" y="-238">
			<name x="-460" y="-272">Done</name>
		</location>
		<init ref="id2"/>
		<transition controllable="false">
			<source ref="id2"/>
			<target ref="id4"/>
			<label kind="guard" x="-399" y="-280">index &gt;= chainSize &amp;&amp;
x &gt;= durations[globalChains[cid][index - 1]]</label>
			<label kind="assignment" x="-399" y="-238">numberOfChainsDone++</label>
		</transition>
		<transition controllable="false">
			<source ref="id3"/>
			<target ref="id2"/>
			<label kind="guard" x="-450" y="-127">x &gt;= durations[globalChains[cid][index]]</label>
			<label kind="assignment" x="-450" y="-110">availableMachines++,
tasksDone[globalChains[cid][index]] = 1,
index++</label>
			<nail x="-161" y="-85"/>
		</transition>
		<transition>
			<source ref="id2"/>
			<target ref="id3"/>
			<label kind="guard" x="34" y="-127">index &lt; chainSize &amp;&amp;
availableMachines &gt; 0 &amp;&amp; AllDependenciesDone()</label>
			<label kind="assignment" x="34" y="-85">availableMachines--,
x = 0</label>
			<nail x="17" y="-85"/>
		</transition>
	</template>
	<system>// Place template instantiations here.

// List one or more processes to be composed into a system.
system Composer, Chain;
    </system>
	<queries>
		<query>
			<formula>strategy TimeSchedule = minE (Composer.time) [&lt;=57] : &lt;&gt;Composer.Done</formula>
			<comment></comment>
		</query>
		<query>
			<formula>inf{Composer.Done} : Composer.time</formula>
			<comment></comment>
		</query>
		<query>
			<formula>A&lt;&gt; Composer.Done</formula>
			<comment></comment>
		</query>
		<query>
			<formula>E&lt;&gt; Composer.Done</formula>
			<comment></comment>
		</query>
	</queries>
</nta>
