<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/researchgroup/darts/uppaal/flat-1_2.dtd'>
<nta>
<declaration>//Variables
const int numberOfChains = 33;
const int numberOfTasks = 100;
const int numberOfMachines = 11;
const int maxDependencies = 18;
const int longestChain = 7;
const int globalChainSize[numberOfChains] = {7,4,3,3,3,6,3,2,7,4,2,4,5,5,6,2,4,3,4,1,3,3,3,1,1,1,1,1,2,2,2,1,1};
const int globalChains[numberOfChains][longestChain] = {
{0,12,29,31,60,81,84},
{1,23,67,78,-1,-1,-1},
{2,50,92,-1,-1,-1,-1},
{3,89,93,-1,-1,-1,-1},
{4,79,97,-1,-1,-1,-1},
{5,32,44,65,75,88,-1},
{6,83,98,-1,-1,-1,-1},
{7,94,-1,-1,-1,-1,-1},
{8,30,38,57,70,85,99},
{9,15,63,76,-1,-1,-1},
{10,96,-1,-1,-1,-1,-1},
{11,22,68,87,-1,-1,-1},
{13,41,71,86,91,-1,-1},
{14,34,54,72,80,-1,-1},
{16,26,45,55,69,90,-1},
{17,56,-1,-1,-1,-1,-1},
{18,36,61,64,-1,-1,-1},
{19,35,74,-1,-1,-1,-1},
{20,37,73,95,-1,-1,-1},
{21,-1,-1,-1,-1,-1,-1},
{24,62,82,-1,-1,-1,-1},
{25,40,77,-1,-1,-1,-1},
{27,43,59,-1,-1,-1,-1},
{28,-1,-1,-1,-1,-1,-1},
{33,-1,-1,-1,-1,-1,-1},
{39,-1,-1,-1,-1,-1,-1},
{42,-1,-1,-1,-1,-1,-1},
{46,-1,-1,-1,-1,-1,-1},
{47,51,-1,-1,-1,-1,-1},
{48,58,-1,-1,-1,-1,-1},
{49,66,-1,-1,-1,-1,-1},
{52,-1,-1,-1,-1,-1,-1},
{53,-1,-1,-1,-1,-1,-1}};
int chainDuration[numberOfChains] = {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1};
int durations[numberOfTasks] = {7,12,15,1,6,9,14,9,15,7,9,5,4,1,20,8,3,19,18,2,9,6,1,1,18,15,12,7,19,3,18,4,8,12,12,7,13,6,14,3,16,17,18,6,13,20,15,16,16,7,12,6,8,8,12,7,18,11,2,4,9,6,20,11,6,5,2,18,11,14,3,5,15,12,4,8,11,6,5,4,20,19,2,7,9,10,3,16,3,4,15,7,8,7,15,10,9,16,8,12};
const int dependencies[numberOfTasks][maxDependencies] = {
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,2,7,9,10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,5,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,6,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,9,10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,5,9,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,6,14,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,6,10,12,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{10,11,15,16,17,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,6,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,8,10,13,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,9,12,14,16,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,8,18,23,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,7,12,14,18,23,29,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,5,8,18,27,29,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,2,6,19,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,3,6,10,14,20,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,14,16,17,19,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,13,18,28,30,32,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,8,11,20,24,30,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,6,7,9,30,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{23,27,35,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,8,18,19,25,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,7,11,13,17,21,29,34,35,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,8,19,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,2,10,16,27,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,9,12,32,33,34,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{16,22,26,32,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{13,27,31,35,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{11,27,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,11,23,31,34,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,6,18,23,26,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,12,15,18,23,30,32,34,39,41,43,44,-1,-1,-1,-1,-1,-1},
{9,43,47,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,10,13,22,32,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,12,35,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{9,14,22,23,31,33,34,39,42,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,12,17,22,24,27,28,41,45,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{11,15,17,30,32,33,35,36,40,49,-1,-1,-1,-1,-1,-1,-1,-1},
{0,4,14,15,16,28,33,38,44,46,48,-1,-1,-1,-1,-1,-1,-1},
{4,6,20,23,48,49,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{28,33,34,40,43,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,6,14,26,27,29,31,32,35,37,43,49,-1,-1,-1,-1,-1,-1},
{4,16,20,25,34,36,40,42,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,7,9,14,24,25,32,33,43,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,7,8,15,30,46,51,52,56,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{10,11,24,30,33,43,44,45,52,58,61,-1,-1,-1,-1,-1,-1,-1},
{2,5,14,15,18,22,23,44,56,62,-1,-1,-1,-1,-1,-1,-1,-1},
{1,19,44,49,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,2,7,12,13,14,15,22,23,44,46,49,54,61,-1,-1,-1,-1},
{5,9,10,13,14,22,25,48,50,55,58,-1,-1,-1,-1,-1,-1,-1},
{19,21,26,29,44,45,47,52,55,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,8,13,30,36,38,41,57,61,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,23,24,27,30,38,40,41,45,47,51,53,55,59,-1,-1,-1,-1},
{6,7,11,20,23,24,26,37,40,41,53,54,-1,-1,-1,-1,-1,-1},
{2,4,33,37,38,47,48,53,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,16,18,19,27,29,33,35,40,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{9,13,17,22,30,40,46,50,51,59,65,68,74,-1,-1,-1,-1,-1},
{4,11,20,37,39,40,41,54,63,67,70,-1,-1,-1,-1,-1,-1,-1},
{0,1,30,40,42,66,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,6,8,17,21,43,45,48,60,63,67,-1,-1,-1,-1,-1,-1,-1},
{3,4,6,7,27,31,33,51,61,72,74,-1,-1,-1,-1,-1,-1,-1},
{26,35,43,45,52,60,71,72,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,8,9,11,12,39,47,52,54,60,65,67,68,71,73,74,-1,-1},
{1,8,10,33,44,45,62,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,2,6,12,19,20,41,44,45,57,70,71,80,-1,-1,-1,-1,-1},
{15,22,42,49,53,79,81,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{9,10,16,32,39,40,42,50,53,56,58,63,66,70,81,-1,-1,-1},
{6,14,26,34,41,44,45,48,57,71,79,-1,-1,-1,-1,-1,-1,-1},
{9,13,17,22,28,31,37,41,49,51,68,71,74,-1,-1,-1,-1,-1},
{23,32,34,49,51,59,61,75,79,80,-1,-1,-1,-1,-1,-1,-1,-1},
{0,3,4,14,16,26,38,43,50,53,55,56,58,64,75,-1,-1,-1},
{9,14,20,21,35,55,58,59,68,69,81,-1,-1,-1,-1,-1,-1,-1},
{0,8,10,18,20,21,35,59,64,68,86,-1,-1,-1,-1,-1,-1,-1},
{2,6,36,40,42,44,45,50,55,56,57,61,66,77,81,87,90,-1},
{3,11,21,24,40,43,47,49,50,57,61,63,64,77,80,86,89,90},
{7,25,32,34,38,58,75,76,77,81,82,-1,-1,-1,-1,-1,-1,-1},
{16,22,25,40,45,53,57,71,73,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,10,15,17,23,36,39,40,49,56,57,64,68,73,80,81,-1,-1},
{5,6,12,17,22,29,39,46,49,63,66,79,83,85,89,-1,-1,-1},
{6,13,27,28,35,54,56,57,71,81,83,86,87,-1,-1,-1,-1,-1},
{0,15,16,17,18,22,48,53,58,64,68,73,74,85,-1,-1,-1,-1}};


int availableMachines = numberOfMachines;

// Typedefs
typedef int[0, numberOfChains - 1] chainId_t;

// Ints and Arrays
int numberOfChainsDone = 0;
int tasksDone[numberOfTasks];
bool runnableChains[numberOfChains];
bool assignmentChoice[numberOfChains];

// Channels
broadcast chan startMachines;
broadcast chan chainMachineChan[numberOfChains];
broadcast chan activateChains;</declaration>
	<template>
		<name x="5" y="5">Composer</name>
		<declaration>// Place local declarations here.
clock time;</declaration>
		<location id="id0" x="-102" y="-255">
			<name x="-112" y="-289">Init</name>
			<label kind="invariant" x="-246" y="-238">numberOfChainsDone &lt;= numberOfChains</label> 
 <label kind="exponentialrate" x="-112" y="-221">0</label>
		</location>
		<location id="id1" x="331" y="-255">
			<name x="321" y="-289">Done</name>
		</location>
		<init ref="id0"/>
		<transition>
			<source ref="id0"/>
			<target ref="id1"/>
			<label kind="guard" x="-17" y="-289">numberOfChainsDone &gt;= numberOfChains</label>
		</transition>
	</template>
	<template>
		<name>Chain</name>
		<parameter>const chainId_t cid</parameter>
		<declaration>clock x;
const int chainSize = globalChainSize[cid];
int index = 0;

bool AllDependenciesDone()
{
    bool dependenciesDone = 1;
    int i;
    for (i = 0; i &lt; maxDependencies; i++)
    {
        int value = dependencies[globalChains[cid][index]][i];
        if (value == -1)
            return dependenciesDone;

        dependenciesDone &amp;= tasksDone[value];
    }
    return dependenciesDone;
}</declaration>
		<location id="id2" x="-68" y="-238">
			<name x="-78" y="-272">Idle</name>
			<label kind="exponentialrate" x="-51" y="-255">3</label>
		</location>
		<location id="id3" x="-76" y="51">
			<name x="-102" y="68">Running</name>
			<label kind="invariant" x="-178" y="85">x &lt;= durations[globalChains[cid][index]]</label>
		</location>
		<location id="id4" x="-450" y="-238">
			<name x="-460" y="-272">Done</name>
		</location>
		<init ref="id2"/>
		<transition controllable="false">
			<source ref="id2"/>
			<target ref="id4"/>
			<label kind="guard" x="-399" y="-280">index &gt;= chainSize &amp;&amp;
x &gt;= durations[globalChains[cid][index - 1]]</label>
			<label kind="assignment" x="-399" y="-238">numberOfChainsDone++</label>
		</transition>
		<transition controllable="false">
			<source ref="id3"/>
			<target ref="id2"/>
			<label kind="guard" x="-450" y="-127">x &gt;= durations[globalChains[cid][index]]</label>
			<label kind="assignment" x="-450" y="-110">availableMachines++,
tasksDone[globalChains[cid][index]] = 1,
index++</label>
			<nail x="-161" y="-85"/>
		</transition>
		<transition>
			<source ref="id2"/>
			<target ref="id3"/>
			<label kind="guard" x="34" y="-127">index &lt; chainSize &amp;&amp;
availableMachines &gt; 0 &amp;&amp; AllDependenciesDone()</label>
			<label kind="assignment" x="34" y="-85">availableMachines--,
x = 0</label>
			<nail x="17" y="-85"/>
		</transition>
	</template>
	<system>// Place template instantiations here.

// List one or more processes to be composed into a system.
system Composer, Chain;
    </system>
	<queries>
		<query>
			<formula>strategy TimeSchedule = minE (Composer.time) [&lt;=57] : &lt;&gt;Composer.Done</formula>
			<comment></comment>
		</query>
		<query>
			<formula>inf{Composer.Done} : Composer.time</formula>
			<comment></comment>
		</query>
		<query>
			<formula>A&lt;&gt; Composer.Done</formula>
			<comment></comment>
		</query>
		<query>
			<formula>E&lt;&gt; Composer.Done</formula>
			<comment></comment>
		</query>
	</queries>
</nta>
