<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/researchgroup/darts/uppaal/flat-1_2.dtd'>
<nta>
<declaration>//Variables
const int numberOfChains = 37;
const int numberOfTasks = 100;
const int numberOfMachines = 6;
const int maxDependencies = 14;
const int longestChain = 7;
const int globalChainSize[numberOfChains] = {4,2,5,4,7,4,3,4,2,5,4,2,4,4,4,2,4,2,3,3,3,3,2,2,2,2,1,1,2,2,1,1,1,2,1,1,1};
const int globalChains[numberOfChains][longestChain] = {
{0,10,78,91,-1,-1,-1},
{1,89,-1,-1,-1,-1,-1},
{2,76,88,92,95,-1,-1},
{3,22,44,85,-1,-1,-1},
{4,26,34,52,65,69,87},
{5,13,90,98,-1,-1,-1},
{6,32,97,-1,-1,-1,-1},
{7,50,63,70,-1,-1,-1},
{8,54,-1,-1,-1,-1,-1},
{9,56,73,82,96,-1,-1},
{11,83,84,86,-1,-1,-1},
{12,94,-1,-1,-1,-1,-1},
{14,27,46,55,-1,-1,-1},
{15,25,33,99,-1,-1,-1},
{16,42,45,77,-1,-1,-1},
{17,48,-1,-1,-1,-1,-1},
{18,36,72,74,-1,-1,-1},
{19,93,-1,-1,-1,-1,-1},
{20,40,62,-1,-1,-1,-1},
{21,29,64,-1,-1,-1,-1},
{23,38,80,-1,-1,-1,-1},
{24,79,81,-1,-1,-1,-1},
{28,41,-1,-1,-1,-1,-1},
{30,47,-1,-1,-1,-1,-1},
{31,67,-1,-1,-1,-1,-1},
{35,58,-1,-1,-1,-1,-1},
{37,-1,-1,-1,-1,-1,-1},
{39,-1,-1,-1,-1,-1,-1},
{43,49,-1,-1,-1,-1,-1},
{51,71,-1,-1,-1,-1,-1},
{53,-1,-1,-1,-1,-1,-1},
{57,-1,-1,-1,-1,-1,-1},
{59,-1,-1,-1,-1,-1,-1},
{60,75,-1,-1,-1,-1,-1},
{61,-1,-1,-1,-1,-1,-1},
{66,-1,-1,-1,-1,-1,-1},
{68,-1,-1,-1,-1,-1,-1}};
int chainDuration[numberOfChains] = {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1};
int durations[numberOfTasks] = {6,9,10,9,6,15,7,4,9,4,10,7,7,6,7,9,10,5,12,4,7,13,12,10,4,5,16,4,4,4,14,13,5,4,6,5,4,6,6,5,5,5,11,16,7,6,5,6,6,4,17,7,13,11,10,6,6,11,11,7,6,16,15,3,6,9,12,6,6,5,4,13,13,10,12,10,4,6,6,17,7,5,5,5,7,12,11,11,13,13,6,12,4,16,7,15,6,8,11,3};
const int dependencies[numberOfTasks][maxDependencies] = {
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,5,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,13,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{20,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,12,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{15,21,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,5,22,25,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,5,11,14,19,21,-1,-1,-1,-1,-1,-1,-1,-1},
{26,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{17,21,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,4,6,8,23,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,11,25,27,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{10,26,29,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{22,25,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{13,18,27,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{27,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{15,23,30,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{12,14,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,20,21,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,16,28,29,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,16,17,23,33,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{42,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{10,19,22,24,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,10,42,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,10,22,27,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{26,30,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,7,17,28,29,31,-1,-1,-1,-1,-1,-1,-1,-1},
{7,19,43,45,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,3,7,45,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{35,36,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,26,29,34,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,30,33,50,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,15,16,24,27,31,46,-1,-1,-1,-1,-1,-1,-1},
{4,9,40,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,25,27,34,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,6,10,35,49,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{32,33,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,25,26,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{45,56,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,14,30,40,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,26,41,49,50,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,12,29,30,41,45,47,-1,-1,-1,-1,-1,-1,-1},
{21,34,40,43,52,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{35,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{31,50,52,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,8,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,4,11,27,36,38,51,63,65,-1,-1,-1,-1,-1},
{5,14,20,21,28,63,-1,-1,-1,-1,-1,-1,-1,-1},
{44,51,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,36,50,66,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,43,56,63,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,41,46,49,53,67,72,-1,-1,-1,-1,-1,-1,-1},
{19,27,50,60,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,2,14,19,20,24,35,41,61,-1,-1,-1,-1,-1},
{27,38,42,43,44,45,60,61,64,75,-1,-1,-1,-1},
{0,1,4,10,15,23,34,43,51,54,64,66,70,-1},
{6,24,31,76,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,8,35,38,71,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{9,23,37,61,79,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,19,30,72,73,77,80,-1,-1,-1,-1,-1,-1,-1},
{7,11,12,28,36,49,56,60,68,69,75,80,-1,-1},
{5,13,28,49,53,83,-1,-1,-1,-1,-1,-1,-1,-1},
{0,5,7,8,44,46,53,63,68,71,-1,-1,-1,-1},
{20,64,74,84,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,17,34,36,38,39,52,69,77,-1,-1,-1,-1,-1},
{2,20,23,71,72,76,-1,-1,-1,-1,-1,-1,-1,-1},
{1,5,10,11,14,20,38,44,47,48,71,74,-1,-1},
{5,6,9,11,13,20,22,29,35,47,57,60,67,75},
{11,13,17,21,23,24,35,39,42,71,75,78,-1,-1},
{15,16,18,24,26,35,36,53,56,57,85,88,-1,-1},
{10,19,34,46,66,67,-1,-1,-1,-1,-1,-1,-1,-1},
{0,5,12,36,49,67,-1,-1,-1,-1,-1,-1,-1,-1},
{2,3,20,23,30,33,49,61,66,87,92,-1,-1,-1},
{7,23,31,66,72,78,82,-1,-1,-1,-1,-1,-1,-1},
{4,7,9,20,32,46,53,55,64,-1,-1,-1,-1,-1},
{7,17,20,23,45,58,69,73,78,79,90,-1,-1,-1},
{33,39,46,52,68,-1,-1,-1,-1,-1,-1,-1,-1,-1}};


int availableMachines = numberOfMachines;

// Typedefs
typedef int[0, numberOfChains - 1] chainId_t;

// Ints and Arrays
int numberOfChainsDone = 0;
int tasksDone[numberOfTasks];
bool runnableChains[numberOfChains];
bool assignmentChoice[numberOfChains];

// Channels
broadcast chan startMachines;
broadcast chan chainMachineChan[numberOfChains];
broadcast chan activateChains;</declaration>
	<template>
		<name x="5" y="5">Composer</name>
		<declaration>// Place local declarations here.
clock time;</declaration>
		<location id="id0" x="-102" y="-255">
			<name x="-112" y="-289">Init</name>
			<label kind="invariant" x="-246" y="-238">numberOfChainsDone &lt;= numberOfChains</label> 
 <label kind="exponentialrate" x="-112" y="-221">0</label>
		</location>
		<location id="id1" x="331" y="-255">
			<name x="321" y="-289">Done</name>
		</location>
		<init ref="id0"/>
		<transition>
			<source ref="id0"/>
			<target ref="id1"/>
			<label kind="guard" x="-17" y="-289">numberOfChainsDone &gt;= numberOfChains</label>
		</transition>
	</template>
	<template>
		<name>Chain</name>
		<parameter>const chainId_t cid</parameter>
		<declaration>clock x;
const int chainSize = globalChainSize[cid];
int index = 0;

bool AllDependenciesDone()
{
    bool dependenciesDone = 1;
    int i;
    for (i = 0; i &lt; maxDependencies; i++)
    {
        int value = dependencies[globalChains[cid][index]][i];
        if (value == -1)
            return dependenciesDone;

        dependenciesDone &amp;= tasksDone[value];
    }
    return dependenciesDone;
}</declaration>
		<location id="id2" x="-68" y="-238">
			<name x="-78" y="-272">Idle</name>
			<label kind="exponentialrate" x="-51" y="-255">3</label>
		</location>
		<location id="id3" x="-76" y="51">
			<name x="-102" y="68">Running</name>
			<label kind="invariant" x="-178" y="85">x &lt;= durations[globalChains[cid][index]]</label>
		</location>
		<location id="id4" x="-450" y="-238">
			<name x="-460" y="-272">Done</name>
		</location>
		<init ref="id2"/>
		<transition controllable="false">
			<source ref="id2"/>
			<target ref="id4"/>
			<label kind="guard" x="-399" y="-280">index &gt;= chainSize &amp;&amp;
x &gt;= durations[globalChains[cid][index - 1]]</label>
			<label kind="assignment" x="-399" y="-238">numberOfChainsDone++</label>
		</transition>
		<transition controllable="false">
			<source ref="id3"/>
			<target ref="id2"/>
			<label kind="guard" x="-450" y="-127">x &gt;= durations[globalChains[cid][index]]</label>
			<label kind="assignment" x="-450" y="-110">availableMachines++,
tasksDone[globalChains[cid][index]] = 1,
index++</label>
			<nail x="-161" y="-85"/>
		</transition>
		<transition>
			<source ref="id2"/>
			<target ref="id3"/>
			<label kind="guard" x="34" y="-127">index &lt; chainSize &amp;&amp;
availableMachines &gt; 0 &amp;&amp; AllDependenciesDone()</label>
			<label kind="assignment" x="34" y="-85">availableMachines--,
x = 0</label>
			<nail x="17" y="-85"/>
		</transition>
	</template>
	<system>// Place template instantiations here.

// List one or more processes to be composed into a system.
system Composer, Chain;
    </system>
	<queries>
		<query>
			<formula>strategy TimeSchedule = minE (Composer.time) [&lt;=57] : &lt;&gt;Composer.Done</formula>
			<comment></comment>
		</query>
		<query>
			<formula>inf{Composer.Done} : Composer.time</formula>
			<comment></comment>
		</query>
		<query>
			<formula>A&lt;&gt; Composer.Done</formula>
			<comment></comment>
		</query>
		<query>
			<formula>E&lt;&gt; Composer.Done</formula>
			<comment></comment>
		</query>
	</queries>
</nta>
