<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/researchgroup/darts/uppaal/flat-1_2.dtd'>
<nta>
<declaration>//Variables
const int numberOfChains = 31;
const int numberOfTasks = 100;
const int numberOfMachines = 11;
const int maxDependencies = 13;
const int longestChain = 9;
const int globalChainSize[numberOfChains] = {5,4,9,3,5,5,6,3,8,2,2,6,2,3,2,2,4,3,2,3,3,3,1,4,3,1,1,2,1,1,1};
const int globalChains[numberOfChains][longestChain] = {
{0,5,80,95,99,-1,-1,-1,-1},
{1,28,45,84,-1,-1,-1,-1,-1},
{2,26,53,55,56,64,71,83,91},
{3,31,69,-1,-1,-1,-1,-1,-1},
{4,6,76,78,94,-1,-1,-1,-1},
{7,50,61,75,90,-1,-1,-1,-1},
{8,60,85,88,93,98,-1,-1,-1},
{9,74,97,-1,-1,-1,-1,-1,-1},
{10,14,22,40,52,65,66,92,-1},
{11,86,-1,-1,-1,-1,-1,-1,-1},
{12,68,-1,-1,-1,-1,-1,-1,-1},
{13,25,54,62,77,81,-1,-1,-1},
{15,87,-1,-1,-1,-1,-1,-1,-1},
{16,44,67,-1,-1,-1,-1,-1,-1},
{17,70,-1,-1,-1,-1,-1,-1,-1},
{18,82,-1,-1,-1,-1,-1,-1,-1},
{19,32,46,89,-1,-1,-1,-1,-1},
{20,59,96,-1,-1,-1,-1,-1,-1},
{21,43,-1,-1,-1,-1,-1,-1,-1},
{23,24,34,-1,-1,-1,-1,-1,-1},
{27,42,79,-1,-1,-1,-1,-1,-1},
{29,41,72,-1,-1,-1,-1,-1,-1},
{30,-1,-1,-1,-1,-1,-1,-1,-1},
{33,49,63,73,-1,-1,-1,-1,-1},
{35,48,58,-1,-1,-1,-1,-1,-1},
{36,-1,-1,-1,-1,-1,-1,-1,-1},
{37,-1,-1,-1,-1,-1,-1,-1,-1},
{38,51,-1,-1,-1,-1,-1,-1,-1},
{39,-1,-1,-1,-1,-1,-1,-1,-1},
{47,-1,-1,-1,-1,-1,-1,-1,-1},
{57,-1,-1,-1,-1,-1,-1,-1,-1}};
int chainDuration[numberOfChains] = {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1};
int durations[numberOfTasks] = {6,16,13,7,6,14,8,11,14,12,11,9,9,12,13,13,11,9,14,13,10,4,13,12,8,4,10,10,12,5,12,3,8,10,10,8,12,12,7,9,10,8,10,8,6,13,11,9,6,11,6,14,15,12,12,16,13,7,10,12,12,8,11,9,11,10,13,13,10,8,8,12,7,9,17,9,11,10,10,11,7,8,13,10,12,19,16,17,15,6,11,9,7,6,9,7,10,11,11,13};
const int dependencies[numberOfTasks][maxDependencies] = {
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,8,10,13,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,8,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{13,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{15,19,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,8,14,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{20,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{23,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,12,13,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{10,20,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,14,24,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,10,12,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,3,21,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,6,10,19,21,-1,-1,-1,-1,-1,-1,-1,-1},
{21,27,31,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{15,16,24,27,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{24,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{26,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{11,21,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{18,24,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,13,22,35,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{15,22,29,33,38,40,-1,-1,-1,-1,-1,-1,-1},
{4,15,16,27,33,-1,-1,-1,-1,-1,-1,-1,-1},
{9,12,21,37,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,8,14,16,23,-1,-1,-1,-1,-1,-1,-1,-1},
{5,9,14,21,25,28,29,-1,-1,-1,-1,-1,-1},
{9,13,19,32,35,-1,-1,-1,-1,-1,-1,-1,-1},
{1,41,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,18,21,35,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{33,42,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,7,8,13,20,26,37,40,-1,-1,-1,-1,-1},
{33,38,42,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,27,29,40,45,-1,-1,-1,-1,-1,-1,-1,-1},
{2,3,8,26,41,-1,-1,-1,-1,-1,-1,-1,-1},
{14,25,28,40,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{15,17,20,23,28,34,40,49,53,-1,-1,-1,-1},
{1,2,15,38,43,55,-1,-1,-1,-1,-1,-1,-1},
{17,18,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,9,18,37,48,-1,-1,-1,-1,-1,-1,-1,-1},
{7,20,23,32,33,36,45,47,-1,-1,-1,-1,-1},
{8,14,16,29,30,35,44,45,47,53,57,-1,-1},
{6,28,36,39,50,57,-1,-1,-1,-1,-1,-1,-1},
{12,25,46,49,52,54,-1,-1,-1,-1,-1,-1,-1},
{1,27,49,55,58,-1,-1,-1,-1,-1,-1,-1,-1},
{2,9,19,28,32,44,46,56,57,-1,-1,-1,-1},
{7,17,18,26,47,48,52,-1,-1,-1,-1,-1,-1},
{8,25,42,65,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,44,46,47,53,-1,-1,-1,-1,-1,-1,-1,-1},
{2,11,12,27,34,36,49,56,-1,-1,-1,-1,-1},
{2,22,31,34,49,57,62,68,-1,-1,-1,-1,-1},
{11,12,17,31,38,40,43,47,-1,-1,-1,-1,-1},
{2,30,39,51,53,63,64,-1,-1,-1,-1,-1,-1},
{14,32,37,41,53,-1,-1,-1,-1,-1,-1,-1,-1},
{0,20,62,63,64,-1,-1,-1,-1,-1,-1,-1,-1},
{0,2,9,16,22,32,38,44,50,58,59,-1,-1},
{0,19,26,29,42,56,61,74,-1,-1,-1,-1,-1},
{2,6,16,21,25,31,34,43,48,68,-1,-1,-1},
{13,15,31,32,36,52,54,62,63,-1,-1,-1,-1},
{17,20,21,52,53,64,68,76,-1,-1,-1,-1,-1},
{5,38,42,52,57,74,-1,-1,-1,-1,-1,-1,-1},
{0,5,7,32,46,-1,-1,-1,-1,-1,-1,-1,-1},
{11,34,36,72,77,-1,-1,-1,-1,-1,-1,-1,-1},
{14,18,26,27,37,57,74,-1,-1,-1,-1,-1,-1},
{3,22,26,48,53,63,71,78,-1,-1,-1,-1,-1},
{0,17,40,45,46,57,59,75,-1,-1,-1,-1,-1},
{12,30,47,59,60,70,-1,-1,-1,-1,-1,-1,-1},
{6,11,29,43,44,48,50,67,83,-1,-1,-1,-1},
{5,6,15,55,57,-1,-1,-1,-1,-1,-1,-1,-1},
{6,12,30,37,57,68,71,85,-1,-1,-1,-1,-1},
{2,12,20,35,36,46,73,-1,-1,-1,-1,-1,-1},
{13,27,37,50,55,67,75,85,88,-1,-1,-1,-1},
{13,33,43,45,64,75,78,83,-1,-1,-1,-1,-1},
{13,14,25,38,40,52,59,66,-1,-1,-1,-1,-1},
{3,31,41,47,52,62,88,-1,-1,-1,-1,-1,-1},
{12,20,25,64,75,76,78,87,-1,-1,-1,-1,-1},
{20,22,37,47,59,60,64,71,75,79,80,-1,-1},
{10,20,23,24,33,36,42,47,59,64,74,-1,-1},
{7,9,10,12,16,32,34,37,51,71,73,74,87},
{24,29,37,39,42,47,54,66,77,87,93,-1,-1},
{14,16,17,25,36,86,92,95,98,-1,-1,-1,-1}};


// Typedefs
typedef int[0, numberOfChains - 1] chainId_t;

// Ints and Arrays
int Machines = numberOfMachines;
int numberOfChainsDone = 0;
int tasksDone[numberOfTasks];
bool runnableChains[numberOfChains];

// Channels
broadcast chan startMachines;
broadcast chan chainMachineChan[numberOfChains];
broadcast chan activateChains;
broadcast chan ChainDone[numberOfChains];</declaration>
	<template>
		<name x="5" y="5">Composer</name>
		<declaration>// Place local declarations here.
clock time;</declaration>
		<location id="id0" x="-102" y="-255">
			<name x="-112" y="-289">Init</name>
			<label kind="invariant" x="-246" y="-238">numberOfChainsDone &lt;= numberOfChains</label>
			<label kind="exponentialrate" x="-112" y="-221">0</label>
		</location>
		<location id="id1" x="331" y="-255">
			<name x="321" y="-289">Done</name>
		</location>
		<init ref="id0"/>
		<transition>
			<source ref="id0"/>
			<target ref="id1"/>
			<label kind="guard" x="-17" y="-289">numberOfChainsDone &gt;= numberOfChains</label>
		</transition>
	</template>
	<template>
		<name>Chain</name>
		<parameter>const chainId_t cid</parameter>
		<declaration>clock x;
const int chainSize = globalChainSize[cid];
int index = 0;
int TimeUnit = 2;

bool AllDependenciesDone()
{
    bool dependenciesDone = 1;
    int i;
    for (i = 0; i &lt; maxDependencies; i++)
    {
        int value = dependencies[globalChains[cid][index]][i];
        if (value == -1)
            return dependenciesDone;

        dependenciesDone &amp;= tasksDone[value];
    }
    return dependenciesDone;
}

void DecrementWork(int workDone)
{
    int currentDuration = durations[globalChains[cid][index]];

    if (workDone &gt; currentDuration)
        durations[globalChains[cid][index]] = 0;
    else
        durations[globalChains[cid][index]] -= workDone;
}</declaration>
		<location id="id2" x="-68" y="-238">
			<name x="-78" y="-272">Idle</name>
			<label kind="exponentialrate" x="-51" y="-263">3</label>
		</location>
		<location id="id3" x="-68" y="51">
			<name x="-93" y="68">Running</name>
			<label kind="invariant" x="-127" y="85">x &lt;= chainDuration[cid]</label>
		</location>
		<location id="id4" x="-399" y="-238">
			<name x="-409" y="-272">Done</name>
		</location>
		<init ref="id2"/>
		<transition controllable="false">
			<source ref="id3"/>
			<target ref="id2"/>
			<label kind="select" x="-59" y="-119">chain_id : chainId_t</label>
			<label kind="synchronisation" x="-59" y="-102">ChainDone[chain_id]?</label>
			<label kind="assignment" x="-59" y="-85">DecrementWork(chainDuration[chain_id]),
Machines++</label>
		</transition>
		<transition controllable="false">
			<source ref="id2"/>
			<target ref="id4"/>
			<label kind="guard" x="-357" y="-280">index &gt;= chainSize</label>
			<label kind="assignment" x="-357" y="-263">numberOfChainsDone++</label>
		</transition>
		<transition controllable="false">
			<source ref="id3"/>
			<target ref="id2"/>
			<label kind="guard" x="-433" y="-119">x &gt;= chainDuration[cid]</label>
			<label kind="synchronisation" x="-433" y="-102">ChainDone[cid]!</label>
			<label kind="assignment" x="-433" y="-85">Machines++,
tasksDone[globalChains[cid][index]] = 1,
index++</label>
			<nail x="-170" y="-8"/>
			<nail x="-170" y="-170"/>
		</transition>
		<transition>
			<source ref="id2"/>
			<target ref="id3"/>
			<label kind="guard" x="136" y="-238">index &lt; chainSize &amp;&amp;
Machines &gt; 0 &amp;&amp; AllDependenciesDone()</label>
			<label kind="assignment" x="136" y="-204">chainDuration[cid] = durations[globalChains[cid][index]],
Machines--,
x = 0</label>
			<nail x="127" y="-238"/>
			<nail x="127" y="51"/>
		</transition>
	</template>
	<system>// Place template instantiations here.

// List one or more processes to be composed into a system.
system Composer, Chain;
    </system>
	<queries>
		<query>
			<formula>A[] not deadlock</formula>
			<comment></comment>
		</query>
		<query>
			<formula>strategy TimeSchedule = minE (Composer.time) [&lt;=60] : &lt;&gt;Composer.Done</formula>
			<comment></comment>
		</query>
		<query>
			<formula>simulate 5000 [&lt;=200] {Composer.Done}</formula>
			<comment></comment>
		</query>
		<query>
			<formula>simulate 5000 [&lt;=65] {Composer.Done} under TimeSchedule</formula>
			<comment></comment>
		</query>
		<query>
			<formula>inf{Composer.Done} : Composer.time under TimeSchedule</formula>
			<comment></comment>
		</query>
		<query>
			<formula>A&lt;&gt; Composer.Done</formula>
			<comment></comment>
		</query>
		<query>
			<formula>E&lt;&gt; Composer.Done</formula>
			<comment></comment>
		</query>
	</queries>
</nta>
