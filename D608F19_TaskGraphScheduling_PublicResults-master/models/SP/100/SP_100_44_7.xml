<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/researchgroup/darts/uppaal/flat-1_2.dtd'>
<nta>
<declaration>//Variables
const int numberOfChains = 35;
const int numberOfTasks = 100;
const int numberOfMachines = 7;
const int maxDependencies = 17;
const int longestChain = 6;
const int globalChainSize[numberOfChains] = {5,3,3,5,4,2,5,4,3,3,4,2,2,3,4,3,4,4,2,6,4,2,2,3,2,3,2,2,1,2,1,1,2,1,1};
const int globalChains[numberOfChains][longestChain] = {
{0,17,24,85,99,-1},
{1,79,97,-1,-1,-1},
{2,20,84,-1,-1,-1},
{3,61,67,72,95,-1},
{4,37,80,90,-1,-1},
{5,70,-1,-1,-1,-1},
{6,29,54,57,88,-1},
{7,75,86,94,-1,-1},
{8,89,96,-1,-1,-1},
{9,64,82,-1,-1,-1},
{10,41,76,87,-1,-1},
{11,92,-1,-1,-1,-1},
{12,83,-1,-1,-1,-1},
{13,26,71,-1,-1,-1},
{14,35,77,93,-1,-1},
{15,39,81,-1,-1,-1},
{16,28,53,98,-1,-1},
{18,49,69,78,-1,-1},
{19,74,-1,-1,-1,-1},
{21,27,38,65,73,91},
{22,31,58,66,-1,-1},
{23,63,-1,-1,-1,-1},
{25,52,-1,-1,-1,-1},
{30,45,60,-1,-1,-1},
{32,47,-1,-1,-1,-1},
{33,42,62,-1,-1,-1},
{34,50,-1,-1,-1,-1},
{36,59,-1,-1,-1,-1},
{40,-1,-1,-1,-1,-1},
{43,51,-1,-1,-1,-1},
{44,-1,-1,-1,-1,-1},
{46,-1,-1,-1,-1,-1},
{48,56,-1,-1,-1,-1},
{55,-1,-1,-1,-1,-1},
{68,-1,-1,-1,-1,-1}};
int chainDuration[numberOfChains] = {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1};
int durations[numberOfTasks] = {1,13,1,1,2,19,1,1,2,2,2,1,2,5,8,1,5,6,6,1,3,8,3,1,2,5,2,4,2,5,3,17,1,1,29,4,12,4,4,8,2,5,8,2,3,3,5,1,1,2,3,4,4,1,5,6,2,15,1,1,9,16,12,5,9,2,1,2,9,18,1,1,3,5,1,1,3,5,12,6,2,11,1,3,11,1,16,1,23,1,9,3,2,4,5,5,3,4,10,2};
const int dependencies[numberOfTasks][maxDependencies] = {
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,8,10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,2,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,17,19,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,6,10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,9,12,13,21,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,6,18,21,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,10,13,16,17,23,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,6,20,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,13,21,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,13,20,22,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{22,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{13,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{20,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,9,14,16,28,29,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{19,22,23,26,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,2,4,33,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{10,24,27,29,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,15,17,26,30,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,17,18,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,5,9,10,13,14,25,32,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,13,28,33,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{16,18,33,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{15,20,21,35,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{13,22,27,30,36,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,11,22,38,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{25,32,34,41,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{13,18,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,8,15,18,25,34,35,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,10,14,34,37,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{28,32,36,38,43,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{14,25,35,39,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,13,18,28,29,31,35,42,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,10,14,26,29,37,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,5,13,39,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,3,10,48,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,3,7,11,30,32,49,54,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,8,10,31,34,48,50,51,53,54,-1,-1,-1,-1,-1,-1,-1},
{8,18,28,36,41,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,11,27,30,44,45,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,3,19,20,32,35,37,39,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{9,26,30,42,44,54,55,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,10,14,23,31,32,44,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,6,9,12,29,34,36,42,43,-1,-1,-1,-1,-1,-1,-1,-1},
{2,8,10,16,17,22,25,38,48,-1,-1,-1,-1,-1,-1,-1,-1},
{1,8,32,44,58,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,3,5,36,41,42,43,49,51,55,61,64,-1,-1,-1,-1,-1},
{5,6,12,18,35,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{9,11,26,28,30,31,34,38,49,50,60,-1,-1,-1,-1,-1,-1},
{0,2,3,5,11,13,21,25,34,36,39,44,45,46,58,65,-1},
{1,3,11,14,26,35,42,48,55,62,-1,-1,-1,-1,-1,-1,-1},
{1,2,14,18,26,32,39,41,45,50,59,62,67,-1,-1,-1,-1},
{1,21,22,28,30,31,43,48,55,65,-1,-1,-1,-1,-1,-1,-1},
{8,14,19,32,46,61,62,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,7,12,15,18,20,36,40,69,-1,-1,-1,-1,-1,-1,-1,-1},
{5,8,30,41,46,47,53,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,9,10,18,27,29,35,38,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,26,27,28,31,41,42,50,62,64,69,-1,-1,-1,-1,-1,-1},
{0,1,10,20,23,29,37,47,67,-1,-1,-1,-1,-1,-1,-1,-1},
{1,19,20,22,27,36,37,38,49,53,54,64,-1,-1,-1,-1,-1},
{8,11,23,25,39,40,49,54,56,57,-1,-1,-1,-1,-1,-1,-1},
{13,18,19,31,45,46,50,54,57,58,64,68,-1,-1,-1,-1,-1},
{7,12,16,20,61,65,68,71,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,2,4,12,16,20,34,36,37,42,45,49,53,54,56,66,68},
{0,10,24,34,35,42,44,46,48,60,65,71,76,-1,-1,-1,-1},
{1,7,12,22,23,24,26,32,35,40,75,76,-1,-1,-1,-1,-1},
{14,24,32,39,45,54,58,61,66,74,76,-1,-1,-1,-1,-1,-1},
{1,5,9,15,23,37,48,49,50,57,60,62,65,68,73,75,82},
{8,24,29,30,31,37,45,46,56,62,82,-1,-1,-1,-1,-1,-1},
{9,20,28,45,50,59,64,80,81,82,-1,-1,-1,-1,-1,-1,-1},
{10,40,43,57,62,65,69,73,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,11,22,43,47,49,54,56,74,75,76,78,-1,-1,-1,-1,-1},
{26,34,47,48,58,61,75,77,81,-1,-1,-1,-1,-1,-1,-1,-1},
{3,12,21,29,33,40,46,48,63,86,-1,-1,-1,-1,-1,-1,-1},
{5,20,21,26,31,36,38,50,63,68,70,72,74,90,-1,-1,-1},
{6,8,18,21,22,26,27,30,32,36,40,52,59,61,73,74,89},
{8,10,24,27,58,73,79,83,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,4,23,28,31,34,35,36,42,52,53,60,64,69,-1,-1,-1},
{7,40,45,47,50,53,62,85,91,-1,-1,-1,-1,-1,-1,-1,-1}};


// Typedefs
typedef int[0, numberOfChains - 1] chainId_t;

// Ints and Arrays
int Machines = numberOfMachines;
int numberOfChainsDone = 0;
int tasksDone[numberOfTasks];
bool runnableChains[numberOfChains];

// Channels
broadcast chan startMachines;
broadcast chan chainMachineChan[numberOfChains];
broadcast chan activateChains;
broadcast chan ChainDone[numberOfChains];</declaration>
	<template>
		<name x="5" y="5">Composer</name>
		<declaration>// Place local declarations here.
clock time;</declaration>
		<location id="id0" x="-102" y="-255">
			<name x="-112" y="-289">Init</name>
			<label kind="invariant" x="-246" y="-238">numberOfChainsDone &lt;= numberOfChains</label>
			<label kind="exponentialrate" x="-112" y="-221">0</label>
		</location>
		<location id="id1" x="331" y="-255">
			<name x="321" y="-289">Done</name>
		</location>
		<init ref="id0"/>
		<transition>
			<source ref="id0"/>
			<target ref="id1"/>
			<label kind="guard" x="-17" y="-289">numberOfChainsDone &gt;= numberOfChains</label>
		</transition>
	</template>
	<template>
		<name>Chain</name>
		<parameter>const chainId_t cid</parameter>
		<declaration>clock x;
const int chainSize = globalChainSize[cid];
int index = 0;
int TimeUnit = 2;

bool AllDependenciesDone()
{
    bool dependenciesDone = 1;
    int i;
    for (i = 0; i &lt; maxDependencies; i++)
    {
        int value = dependencies[globalChains[cid][index]][i];
        if (value == -1)
            return dependenciesDone;

        dependenciesDone &amp;= tasksDone[value];
    }
    return dependenciesDone;
}

void DecrementWork(int workDone)
{
    int currentDuration = durations[globalChains[cid][index]];

    if (workDone &gt; currentDuration)
        durations[globalChains[cid][index]] = 0;
    else
        durations[globalChains[cid][index]] -= workDone;
}</declaration>
		<location id="id2" x="-68" y="-238">
			<name x="-78" y="-272">Idle</name>
			<label kind="exponentialrate" x="-51" y="-263">3</label>
		</location>
		<location id="id3" x="-68" y="51">
			<name x="-93" y="68">Running</name>
			<label kind="invariant" x="-127" y="85">x &lt;= chainDuration[cid]</label>
		</location>
		<location id="id4" x="-399" y="-238">
			<name x="-409" y="-272">Done</name>
		</location>
		<init ref="id2"/>
		<transition controllable="false">
			<source ref="id3"/>
			<target ref="id2"/>
			<label kind="select" x="-59" y="-119">chain_id : chainId_t</label>
			<label kind="synchronisation" x="-59" y="-102">ChainDone[chain_id]?</label>
			<label kind="assignment" x="-59" y="-85">DecrementWork(chainDuration[chain_id]),
Machines++</label>
		</transition>
		<transition controllable="false">
			<source ref="id2"/>
			<target ref="id4"/>
			<label kind="guard" x="-357" y="-280">index &gt;= chainSize</label>
			<label kind="assignment" x="-357" y="-263">numberOfChainsDone++</label>
		</transition>
		<transition controllable="false">
			<source ref="id3"/>
			<target ref="id2"/>
			<label kind="guard" x="-433" y="-119">x &gt;= chainDuration[cid]</label>
			<label kind="synchronisation" x="-433" y="-102">ChainDone[cid]!</label>
			<label kind="assignment" x="-433" y="-85">Machines++,
tasksDone[globalChains[cid][index]] = 1,
index++</label>
			<nail x="-170" y="-8"/>
			<nail x="-170" y="-170"/>
		</transition>
		<transition>
			<source ref="id2"/>
			<target ref="id3"/>
			<label kind="guard" x="136" y="-238">index &lt; chainSize &amp;&amp;
Machines &gt; 0 &amp;&amp; AllDependenciesDone()</label>
			<label kind="assignment" x="136" y="-204">chainDuration[cid] = durations[globalChains[cid][index]],
Machines--,
x = 0</label>
			<nail x="127" y="-238"/>
			<nail x="127" y="51"/>
		</transition>
	</template>
	<system>// Place template instantiations here.

// List one or more processes to be composed into a system.
system Composer, Chain;
    </system>
	<queries>
		<query>
			<formula>A[] not deadlock</formula>
			<comment></comment>
		</query>
		<query>
			<formula>strategy TimeSchedule = minE (Composer.time) [&lt;=60] : &lt;&gt;Composer.Done</formula>
			<comment></comment>
		</query>
		<query>
			<formula>simulate 5000 [&lt;=200] {Composer.Done}</formula>
			<comment></comment>
		</query>
		<query>
			<formula>simulate 5000 [&lt;=65] {Composer.Done} under TimeSchedule</formula>
			<comment></comment>
		</query>
		<query>
			<formula>inf{Composer.Done} : Composer.time under TimeSchedule</formula>
			<comment></comment>
		</query>
		<query>
			<formula>A&lt;&gt; Composer.Done</formula>
			<comment></comment>
		</query>
		<query>
			<formula>E&lt;&gt; Composer.Done</formula>
			<comment></comment>
		</query>
	</queries>
</nta>
