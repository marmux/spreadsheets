<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/researchgroup/darts/uppaal/flat-1_2.dtd'>
<nta>
<declaration>//Variables
const int numberOfChains = 38;
const int numberOfTasks = 100;
const int numberOfMachines = 16;
const int maxDependencies = 11;
const int longestChain = 6;
const int globalChainSize[numberOfChains] = {6,3,4,4,3,5,3,5,1,4,3,3,5,3,4,1,5,4,5,2,1,4,1,2,1,2,3,1,1,1,1,3,1,1,1,1,1,1};
const int globalChains[numberOfChains][longestChain] = {
{0,3,5,26,66,80},
{1,92,94,-1,-1,-1},
{2,63,81,91,-1,-1},
{4,46,76,88,-1,-1},
{6,71,77,-1,-1,-1},
{7,11,20,83,95,-1},
{8,24,75,-1,-1,-1},
{9,28,37,86,90,-1},
{10,-1,-1,-1,-1,-1},
{12,47,55,61,-1,-1},
{13,82,89,-1,-1,-1},
{14,56,93,-1,-1,-1},
{15,21,30,31,98,-1},
{16,34,99,-1,-1,-1},
{17,64,72,84,-1,-1},
{18,-1,-1,-1,-1,-1},
{19,43,50,57,73,-1},
{22,32,54,70,-1,-1},
{23,35,49,68,78,-1},
{25,65,-1,-1,-1,-1},
{27,-1,-1,-1,-1,-1},
{29,38,62,74,-1,-1},
{33,-1,-1,-1,-1,-1},
{36,48,-1,-1,-1,-1},
{39,-1,-1,-1,-1,-1},
{40,59,-1,-1,-1,-1},
{41,52,67,-1,-1,-1},
{42,-1,-1,-1,-1,-1},
{44,-1,-1,-1,-1,-1},
{45,-1,-1,-1,-1,-1},
{51,-1,-1,-1,-1,-1},
{53,85,97,-1,-1,-1},
{58,-1,-1,-1,-1,-1},
{60,-1,-1,-1,-1,-1},
{69,-1,-1,-1,-1,-1},
{79,-1,-1,-1,-1,-1},
{87,-1,-1,-1,-1,-1},
{96,-1,-1,-1,-1,-1}};
int chainDuration[numberOfChains] = {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1};
int durations[numberOfTasks] = {5,3,10,6,3,2,17,20,8,2,7,8,14,9,4,3,3,6,7,8,3,20,20,6,6,20,5,19,9,8,12,10,9,10,4,5,9,3,16,6,12,6,4,10,3,3,5,12,7,1,10,16,7,6,3,10,9,2,7,14,11,3,10,2,5,7,4,20,1,4,8,7,10,10,3,20,2,8,8,2,6,12,4,9,8,11,3,9,9,15,10,10,6,4,3,4,1,4,3,2};
const int dependencies[numberOfTasks][maxDependencies] = {
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,9,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,12,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{12,14,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{15,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,11,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{13,15,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,17,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,8,13,22,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,5,9,21,-1,-1,-1,-1,-1,-1,-1},
{17,24,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,9,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{21,28,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,30,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,22,30,-1,-1,-1,-1,-1,-1,-1,-1},
{26,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,16,19,25,-1,-1,-1,-1,-1,-1,-1},
{13,17,23,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,8,28,31,-1,-1,-1,-1,-1,-1,-1},
{17,22,29,-1,-1,-1,-1,-1,-1,-1,-1},
{4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{16,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,12,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{35,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{19,23,41,-1,-1,-1,-1,-1,-1,-1,-1},
{3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{9,15,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,5,10,11,39,-1,-1,-1,-1,-1,-1},
{11,12,24,33,-1,-1,-1,-1,-1,-1,-1},
{9,31,36,39,45,-1,-1,-1,-1,-1,-1},
{31,34,35,36,-1,-1,-1,-1,-1,-1,-1},
{28,32,37,39,41,43,-1,-1,-1,-1,-1},
{28,36,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{24,35,41,-1,-1,-1,-1,-1,-1,-1,-1},
{1,49,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{32,47,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,8,12,13,47,53,-1,-1,-1,-1,-1},
{5,8,14,18,30,32,33,-1,-1,-1,-1},
{3,37,45,48,49,50,-1,-1,-1,-1,-1},
{36,50,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{19,23,29,40,-1,-1,-1,-1,-1,-1,-1},
{11,16,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,13,25,26,27,55,-1,-1,-1,-1,-1},
{38,56,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,26,38,-1,-1,-1,-1,-1,-1,-1,-1},
{0,17,36,37,40,49,-1,-1,-1,-1,-1},
{2,5,25,31,-1,-1,-1,-1,-1,-1,-1},
{0,10,26,39,-1,-1,-1,-1,-1,-1,-1},
{52,63,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{22,34,49,58,-1,-1,-1,-1,-1,-1,-1},
{64,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{19,42,54,60,-1,-1,-1,-1,-1,-1,-1},
{6,7,22,29,59,60,66,-1,-1,-1,-1},
{4,17,33,64,-1,-1,-1,-1,-1,-1,-1},
{22,24,27,57,-1,-1,-1,-1,-1,-1,-1},
{20,29,62,-1,-1,-1,-1,-1,-1,-1,-1},
{5,8,14,18,21,24,32,35,54,55,56},
{18,22,33,37,41,46,64,-1,-1,-1,-1},
{19,24,35,39,41,43,53,54,58,71,-1},
{34,53,68,-1,-1,-1,-1,-1,-1,-1,-1},
{36,49,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,26,32,58,66,74,-1,-1,-1,-1,-1},
{11,24,26,30,51,56,59,63,68,-1,-1},
{13,25,27,28,30,31,79,-1,-1,-1,-1},
{8,20,31,32,71,72,-1,-1,-1,-1,-1},
{13,25,33,35,36,49,50,60,72,-1,-1},
{16,17,53,64,79,-1,-1,-1,-1,-1,-1},
{4,6,14,37,45,51,-1,-1,-1,-1,-1},
{23,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{12,26,37,42,47,48,61,76,77,82,86},
{19,21,42,65,82,-1,-1,-1,-1,-1,-1},
{15,19,23,85,86,-1,-1,-1,-1,-1,-1},
{15,22,27,43,81,83,-1,-1,-1,-1,-1},
{1,3,8,19,50,55,66,67,78,90,91},
{2,35,56,62,64,67,87,-1,-1,-1,-1},
{3,6,13,15,38,61,63,85,89,92,-1},
{4,6,9,10,13,15,18,37,55,83,-1},
{2,25,66,-1,-1,-1,-1,-1,-1,-1,-1},
{82,85,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,31,37,55,97,-1,-1,-1,-1,-1,-1},
{3,8,34,57,-1,-1,-1,-1,-1,-1,-1}};


// Typedefs
typedef int[0, numberOfChains - 1] chainId_t;

// Ints and Arrays
int Machines = numberOfMachines;
int numberOfChainsDone = 0;
int tasksDone[numberOfTasks];
bool runnableChains[numberOfChains];

// Channels
broadcast chan startMachines;
broadcast chan chainMachineChan[numberOfChains];
broadcast chan activateChains;
broadcast chan ChainDone[numberOfChains];</declaration>
	<template>
		<name x="5" y="5">Composer</name>
		<declaration>// Place local declarations here.
clock time;</declaration>
		<location id="id0" x="-102" y="-255">
			<name x="-112" y="-289">Init</name>
			<label kind="invariant" x="-246" y="-238">numberOfChainsDone &lt;= numberOfChains</label>
			<label kind="exponentialrate" x="-112" y="-221">0</label>
		</location>
		<location id="id1" x="331" y="-255">
			<name x="321" y="-289">Done</name>
		</location>
		<init ref="id0"/>
		<transition>
			<source ref="id0"/>
			<target ref="id1"/>
			<label kind="guard" x="-17" y="-289">numberOfChainsDone &gt;= numberOfChains</label>
		</transition>
	</template>
	<template>
		<name>Chain</name>
		<parameter>const chainId_t cid</parameter>
		<declaration>clock x;
const int chainSize = globalChainSize[cid];
int index = 0;
int TimeUnit = 2;

bool AllDependenciesDone()
{
    bool dependenciesDone = 1;
    int i;
    for (i = 0; i &lt; maxDependencies; i++)
    {
        int value = dependencies[globalChains[cid][index]][i];
        if (value == -1)
            return dependenciesDone;

        dependenciesDone &amp;= tasksDone[value];
    }
    return dependenciesDone;
}

void DecrementWork(int workDone)
{
    int currentDuration = durations[globalChains[cid][index]];

    if (workDone &gt; currentDuration)
        durations[globalChains[cid][index]] = 0;
    else
        durations[globalChains[cid][index]] -= workDone;
}</declaration>
		<location id="id2" x="-68" y="-238">
			<name x="-78" y="-272">Idle</name>
			<label kind="exponentialrate" x="-51" y="-263">3</label>
		</location>
		<location id="id3" x="-68" y="51">
			<name x="-93" y="68">Running</name>
			<label kind="invariant" x="-127" y="85">x &lt;= chainDuration[cid]</label>
		</location>
		<location id="id4" x="-399" y="-238">
			<name x="-409" y="-272">Done</name>
		</location>
		<init ref="id2"/>
		<transition controllable="false">
			<source ref="id3"/>
			<target ref="id2"/>
			<label kind="select" x="-59" y="-119">chain_id : chainId_t</label>
			<label kind="synchronisation" x="-59" y="-102">ChainDone[chain_id]?</label>
			<label kind="assignment" x="-59" y="-85">DecrementWork(chainDuration[chain_id]),
Machines++</label>
		</transition>
		<transition controllable="false">
			<source ref="id2"/>
			<target ref="id4"/>
			<label kind="guard" x="-357" y="-280">index &gt;= chainSize</label>
			<label kind="assignment" x="-357" y="-263">numberOfChainsDone++</label>
		</transition>
		<transition controllable="false">
			<source ref="id3"/>
			<target ref="id2"/>
			<label kind="guard" x="-433" y="-119">x &gt;= chainDuration[cid]</label>
			<label kind="synchronisation" x="-433" y="-102">ChainDone[cid]!</label>
			<label kind="assignment" x="-433" y="-85">Machines++,
tasksDone[globalChains[cid][index]] = 1,
index++</label>
			<nail x="-170" y="-8"/>
			<nail x="-170" y="-170"/>
		</transition>
		<transition>
			<source ref="id2"/>
			<target ref="id3"/>
			<label kind="guard" x="136" y="-238">index &lt; chainSize &amp;&amp;
Machines &gt; 0 &amp;&amp; AllDependenciesDone()</label>
			<label kind="assignment" x="136" y="-204">chainDuration[cid] = durations[globalChains[cid][index]],
Machines--,
x = 0</label>
			<nail x="127" y="-238"/>
			<nail x="127" y="51"/>
		</transition>
	</template>
	<system>// Place template instantiations here.

// List one or more processes to be composed into a system.
system Composer, Chain;
    </system>
	<queries>
		<query>
			<formula>A[] not deadlock</formula>
			<comment></comment>
		</query>
		<query>
			<formula>strategy TimeSchedule = minE (Composer.time) [&lt;=60] : &lt;&gt;Composer.Done</formula>
			<comment></comment>
		</query>
		<query>
			<formula>simulate 5000 [&lt;=200] {Composer.Done}</formula>
			<comment></comment>
		</query>
		<query>
			<formula>simulate 5000 [&lt;=65] {Composer.Done} under TimeSchedule</formula>
			<comment></comment>
		</query>
		<query>
			<formula>inf{Composer.Done} : Composer.time under TimeSchedule</formula>
			<comment></comment>
		</query>
		<query>
			<formula>A&lt;&gt; Composer.Done</formula>
			<comment></comment>
		</query>
		<query>
			<formula>E&lt;&gt; Composer.Done</formula>
			<comment></comment>
		</query>
	</queries>
</nta>
