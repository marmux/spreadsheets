<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/researchgroup/darts/uppaal/flat-1_2.dtd'>
<nta>
<declaration>//Variables
const int numberOfChains = 45;
const int numberOfTasks = 100;
const int numberOfMachines = 7;
const int maxDependencies = 11;
const int longestChain = 5;
const int globalChainSize[numberOfChains] = {5,3,4,4,3,3,2,3,3,4,3,3,4,2,2,2,2,4,2,2,2,2,4,1,2,1,3,1,3,2,2,1,2,1,2,2,1,1,1,1,1,1,1,1,1};
const int globalChains[numberOfChains][longestChain] = {
{0,17,53,71,85},
{1,69,98,-1,-1},
{2,34,81,88,-1},
{3,12,22,99,-1},
{4,38,74,-1,-1},
{5,86,95,-1,-1},
{6,92,-1,-1,-1},
{7,16,60,-1,-1},
{8,21,77,-1,-1},
{9,27,39,91,-1},
{10,26,97,-1,-1},
{11,75,82,-1,-1},
{13,48,57,87,-1},
{14,79,-1,-1,-1},
{15,63,-1,-1,-1},
{18,78,-1,-1,-1},
{19,70,-1,-1,-1},
{20,24,37,80,-1},
{23,68,-1,-1,-1},
{25,72,-1,-1,-1},
{28,41,-1,-1,-1},
{29,73,-1,-1,-1},
{30,62,83,96,-1},
{31,-1,-1,-1,-1},
{32,94,-1,-1,-1},
{33,-1,-1,-1,-1},
{35,51,93,-1,-1},
{36,-1,-1,-1,-1},
{40,61,90,-1,-1},
{42,59,-1,-1,-1},
{43,65,-1,-1,-1},
{44,-1,-1,-1,-1},
{45,52,-1,-1,-1},
{46,-1,-1,-1,-1},
{47,58,-1,-1,-1},
{49,89,-1,-1,-1},
{50,-1,-1,-1,-1},
{54,-1,-1,-1,-1},
{55,-1,-1,-1,-1},
{56,-1,-1,-1,-1},
{64,-1,-1,-1,-1},
{66,-1,-1,-1,-1},
{67,-1,-1,-1,-1},
{76,-1,-1,-1,-1},
{84,-1,-1,-1,-1}};
int chainDuration[numberOfChains] = {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1};
int durations[numberOfTasks] = {12,14,9,12,11,11,12,8,10,8,13,14,12,7,11,16,10,6,7,14,9,13,11,10,7,9,14,13,8,12,12,13,10,12,10,10,9,11,7,8,8,9,12,11,13,12,12,12,11,7,8,12,14,11,13,10,11,6,16,3,12,10,14,13,10,6,12,15,11,13,7,12,10,11,13,8,9,11,13,10,16,8,7,11,16,5,10,12,14,12,12,7,9,10,15,7,12,14,9,10};
const int dependencies[numberOfTasks][maxDependencies] = {
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,3,8,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,7,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,12,16,-1,-1,-1,-1,-1,-1,-1,-1},
{10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,20,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{19,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,10,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{15,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{15,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{12,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,15,24,-1,-1,-1,-1,-1,-1,-1,-1},
{1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{13,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{23,24,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,6,17,-1,-1,-1,-1,-1,-1,-1,-1},
{2,8,27,-1,-1,-1,-1,-1,-1,-1,-1},
{5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,28,31,-1,-1,-1,-1,-1,-1,-1,-1},
{2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{34,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{21,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{18,23,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{38,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,13,24,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{16,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{29,34,35,42,-1,-1,-1,-1,-1,-1,-1},
{25,30,45,-1,-1,-1,-1,-1,-1,-1,-1},
{0,10,15,17,23,25,27,31,38,41,42},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{37,38,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{17,30,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,27,43,48,-1,-1,-1,-1,-1,-1,-1},
{11,47,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{17,42,52,-1,-1,-1,-1,-1,-1,-1,-1},
{16,19,34,41,-1,-1,-1,-1,-1,-1,-1},
{29,40,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{20,28,30,44,-1,-1,-1,-1,-1,-1,-1},
{7,15,31,37,41,-1,-1,-1,-1,-1,-1},
{48,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{43,52,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,48,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{16,28,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,4,23,46,-1,-1,-1,-1,-1,-1,-1},
{0,1,29,50,55,-1,-1,-1,-1,-1,-1},
{12,19,39,59,62,-1,-1,-1,-1,-1,-1},
{53,67,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{13,25,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{13,17,29,-1,-1,-1,-1,-1,-1,-1,-1},
{22,38,40,48,51,58,-1,-1,-1,-1,-1},
{10,11,21,-1,-1,-1,-1,-1,-1,-1,-1},
{35,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,4,21,23,46,49,-1,-1,-1,-1,-1},
{12,18,62,-1,-1,-1,-1,-1,-1,-1,-1},
{14,18,24,44,66,-1,-1,-1,-1,-1,-1},
{15,37,46,53,-1,-1,-1,-1,-1,-1,-1},
{17,33,34,36,50,-1,-1,-1,-1,-1,-1},
{15,25,27,52,75,-1,-1,-1,-1,-1,-1},
{49,51,53,62,-1,-1,-1,-1,-1,-1,-1},
{2,16,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{10,30,37,45,58,59,71,81,-1,-1,-1},
{5,12,24,37,39,66,-1,-1,-1,-1,-1},
{5,34,51,57,64,-1,-1,-1,-1,-1,-1},
{4,6,25,43,68,80,81,-1,-1,-1,-1},
{39,45,49,-1,-1,-1,-1,-1,-1,-1,-1},
{16,18,56,61,-1,-1,-1,-1,-1,-1,-1},
{38,39,43,75,81,-1,-1,-1,-1,-1,-1},
{4,6,10,22,26,43,56,78,-1,-1,-1},
{28,32,43,51,64,67,-1,-1,-1,-1,-1},
{10,12,32,64,-1,-1,-1,-1,-1,-1,-1},
{23,42,58,73,82,86,93,-1,-1,-1,-1},
{18,19,35,65,83,-1,-1,-1,-1,-1,-1},
{13,26,39,67,76,-1,-1,-1,-1,-1,-1},
{24,27,69,90,-1,-1,-1,-1,-1,-1,-1},
{3,22,39,42,45,46,53,76,-1,-1,-1}};


// Typedefs
typedef int[0, numberOfChains - 1] chainId_t;

// Ints and Arrays
int Machines = numberOfMachines;
int numberOfChainsDone = 0;
int tasksDone[numberOfTasks];
bool runnableChains[numberOfChains];

// Channels
broadcast chan startMachines;
broadcast chan chainMachineChan[numberOfChains];
broadcast chan activateChains;
broadcast chan ChainDone[numberOfChains];</declaration>
	<template>
		<name x="5" y="5">Composer</name>
		<declaration>// Place local declarations here.
clock time;</declaration>
		<location id="id0" x="-102" y="-255">
			<name x="-112" y="-289">Init</name>
			<label kind="invariant" x="-246" y="-238">numberOfChainsDone &lt;= numberOfChains</label>
			<label kind="exponentialrate" x="-112" y="-221">0</label>
		</location>
		<location id="id1" x="331" y="-255">
			<name x="321" y="-289">Done</name>
		</location>
		<init ref="id0"/>
		<transition>
			<source ref="id0"/>
			<target ref="id1"/>
			<label kind="guard" x="-17" y="-289">numberOfChainsDone &gt;= numberOfChains</label>
		</transition>
	</template>
	<template>
		<name>Chain</name>
		<parameter>const chainId_t cid</parameter>
		<declaration>clock x;
const int chainSize = globalChainSize[cid];
int index = 0;
int TimeUnit = 2;

bool AllDependenciesDone()
{
    bool dependenciesDone = 1;
    int i;
    for (i = 0; i &lt; maxDependencies; i++)
    {
        int value = dependencies[globalChains[cid][index]][i];
        if (value == -1)
            return dependenciesDone;

        dependenciesDone &amp;= tasksDone[value];
    }
    return dependenciesDone;
}

void DecrementWork(int workDone)
{
    int currentDuration = durations[globalChains[cid][index]];

    if (workDone &gt; currentDuration)
        durations[globalChains[cid][index]] = 0;
    else
        durations[globalChains[cid][index]] -= workDone;
}</declaration>
		<location id="id2" x="-68" y="-238">
			<name x="-78" y="-272">Idle</name>
			<label kind="exponentialrate" x="-51" y="-263">3</label>
		</location>
		<location id="id3" x="-68" y="51">
			<name x="-93" y="68">Running</name>
			<label kind="invariant" x="-127" y="85">x &lt;= chainDuration[cid]</label>
		</location>
		<location id="id4" x="-399" y="-238">
			<name x="-409" y="-272">Done</name>
		</location>
		<init ref="id2"/>
		<transition controllable="false">
			<source ref="id3"/>
			<target ref="id2"/>
			<label kind="select" x="-59" y="-119">chain_id : chainId_t</label>
			<label kind="synchronisation" x="-59" y="-102">ChainDone[chain_id]?</label>
			<label kind="assignment" x="-59" y="-85">DecrementWork(chainDuration[chain_id]),
Machines++</label>
		</transition>
		<transition controllable="false">
			<source ref="id2"/>
			<target ref="id4"/>
			<label kind="guard" x="-357" y="-280">index &gt;= chainSize</label>
			<label kind="assignment" x="-357" y="-263">numberOfChainsDone++</label>
		</transition>
		<transition controllable="false">
			<source ref="id3"/>
			<target ref="id2"/>
			<label kind="guard" x="-433" y="-119">x &gt;= chainDuration[cid]</label>
			<label kind="synchronisation" x="-433" y="-102">ChainDone[cid]!</label>
			<label kind="assignment" x="-433" y="-85">Machines++,
tasksDone[globalChains[cid][index]] = 1,
index++</label>
			<nail x="-170" y="-8"/>
			<nail x="-170" y="-170"/>
		</transition>
		<transition>
			<source ref="id2"/>
			<target ref="id3"/>
			<label kind="guard" x="136" y="-238">index &lt; chainSize &amp;&amp;
Machines &gt; 0 &amp;&amp; AllDependenciesDone()</label>
			<label kind="assignment" x="136" y="-204">chainDuration[cid] = durations[globalChains[cid][index]],
Machines--,
x = 0</label>
			<nail x="127" y="-238"/>
			<nail x="127" y="51"/>
		</transition>
	</template>
	<system>// Place template instantiations here.

// List one or more processes to be composed into a system.
system Composer, Chain;
    </system>
	<queries>
		<query>
			<formula>A[] not deadlock</formula>
			<comment></comment>
		</query>
		<query>
			<formula>strategy TimeSchedule = minE (Composer.time) [&lt;=60] : &lt;&gt;Composer.Done</formula>
			<comment></comment>
		</query>
		<query>
			<formula>simulate 5000 [&lt;=200] {Composer.Done}</formula>
			<comment></comment>
		</query>
		<query>
			<formula>simulate 5000 [&lt;=65] {Composer.Done} under TimeSchedule</formula>
			<comment></comment>
		</query>
		<query>
			<formula>inf{Composer.Done} : Composer.time under TimeSchedule</formula>
			<comment></comment>
		</query>
		<query>
			<formula>A&lt;&gt; Composer.Done</formula>
			<comment></comment>
		</query>
		<query>
			<formula>E&lt;&gt; Composer.Done</formula>
			<comment></comment>
		</query>
	</queries>
</nta>
