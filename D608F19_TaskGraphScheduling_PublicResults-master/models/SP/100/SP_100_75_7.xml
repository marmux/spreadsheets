<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/researchgroup/darts/uppaal/flat-1_2.dtd'>
<nta>
<declaration>//Variables
const int numberOfChains = 30;
const int numberOfTasks = 100;
const int numberOfMachines = 7;
const int maxDependencies = 27;
const int longestChain = 8;
const int globalChainSize[numberOfChains] = {8,5,4,6,3,3,5,3,7,3,2,3,4,6,2,2,4,6,3,3,3,2,2,3,3,1,1,1,1,1};
const int globalChains[numberOfChains][longestChain] = {
{0,5,6,48,65,89,91,93},
{1,53,63,66,95,-1,-1,-1},
{2,82,83,90,-1,-1,-1,-1},
{3,52,58,72,85,92,-1,-1},
{4,69,99,-1,-1,-1,-1,-1},
{7,74,98,-1,-1,-1,-1,-1},
{8,26,62,84,96,-1,-1,-1},
{9,94,97,-1,-1,-1,-1,-1},
{10,31,68,73,75,86,88,-1},
{11,54,71,-1,-1,-1,-1,-1},
{12,78,-1,-1,-1,-1,-1,-1},
{13,80,81,-1,-1,-1,-1,-1},
{14,34,51,79,-1,-1,-1,-1},
{15,42,55,56,70,77,-1,-1},
{16,67,-1,-1,-1,-1,-1,-1},
{17,76,-1,-1,-1,-1,-1,-1},
{18,30,32,87,-1,-1,-1,-1},
{19,40,49,50,57,64,-1,-1},
{20,60,61,-1,-1,-1,-1,-1},
{21,22,59,-1,-1,-1,-1,-1},
{23,25,47,-1,-1,-1,-1,-1},
{24,45,-1,-1,-1,-1,-1,-1},
{27,46,-1,-1,-1,-1,-1,-1},
{28,39,41,-1,-1,-1,-1,-1},
{29,38,44,-1,-1,-1,-1,-1},
{33,-1,-1,-1,-1,-1,-1,-1},
{35,-1,-1,-1,-1,-1,-1,-1},
{36,-1,-1,-1,-1,-1,-1,-1},
{37,-1,-1,-1,-1,-1,-1,-1},
{43,-1,-1,-1,-1,-1,-1,-1}};
int chainDuration[numberOfChains] = {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1};
int durations[numberOfTasks] = {1,1,18,2,21,2,9,3,1,7,16,5,6,2,1,5,2,10,29,10,5,23,3,6,4,22,3,1,19,24,1,31,10,2,15,14,2,1,1,1,8,2,34,14,3,1,14,1,13,9,3,1,3,11,12,4,15,18,7,3,2,9,4,7,1,1,8,1,10,20,5,25,26,15,1,1,5,2,1,4,25,8,2,5,17,43,9,2,7,7,8,35,20,4,8,34,14,15,3,28};
const int dependencies[numberOfTasks][maxDependencies] = {
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,2,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,5,6,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,2,6,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,6,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,12,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,4,6,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,4,9,11,14,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,6,7,9,15,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,4,7,13,15,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,17,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,4,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,12,15,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,9,10,11,14,17,21,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,8,22,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,7,22,23,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,7,9,14,23,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,2,4,5,8,11,12,22,24,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,5,7,9,18,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,20,21,23,25,26,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,6,9,12,13,27,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,6,8,12,15,16,18,19,21,27,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,4,5,9,10,11,14,16,17,18,20,21,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,6,9,11,13,16,24,29,30,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,5,17,22,29,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,4,7,8,12,14,17,18,21,22,23,24,26,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,7,11,26,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,4,9,15,34,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,13,15,27,28,30,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{11,18,20,21,23,29,36,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,10,14,18,22,27,28,32,37,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,4,9,13,18,19,25,29,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,17,20,25,32,34,37,39,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,3,4,8,15,24,25,26,27,28,30,32,38,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,20,24,26,28,34,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,4,18,21,25,26,32,36,37,38,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,4,5,14,24,27,29,30,31,38,41,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,9,12,13,15,18,25,27,33,37,41,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,15,18,21,24,25,26,28,31,34,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,4,5,6,7,11,12,19,22,26,28,39,40,45,46,47,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,7,13,16,17,18,21,24,35,39,40,41,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,3,13,16,22,23,31,34,35,37,38,40,41,43,46,49,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,8,9,12,25,30,34,38,42,43,48,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,3,5,7,9,18,21,22,29,30,31,32,39,41,42,43,48,51,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,8,10,16,21,22,28,30,33,40,48,50,51,52,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,7,8,10,11,14,20,24,26,29,32,43,46,49,51,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,9,10,13,16,18,19,20,27,41,42,44,45,47,51,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,4,12,24,28,37,39,40,41,42,45,47,52,53,54,55,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,8,9,12,13,20,22,27,29,31,42,44,46,50,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,2,11,14,18,23,24,26,27,31,34,38,40,43,44,45,46,48,52,54,56,-1,-1,-1,-1,-1,-1},
{12,13,22,26,28,29,36,39,49,53,55,58,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,7,15,20,28,33,42,44,49,57,58,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,10,13,20,29,30,34,36,38,55,60,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,3,4,5,8,14,15,22,25,26,27,40,45,47,56,59,61,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,6,8,12,15,17,22,29,33,36,43,46,47,53,57,59,62,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,6,7,26,36,40,43,44,46,50,57,60,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,5,10,14,17,19,23,28,34,37,38,42,43,48,53,55,57,64,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{9,19,20,22,25,27,28,29,31,40,41,42,48,49,59,60,61,62,63,64,65,-1,-1,-1,-1,-1,-1},
{3,8,9,12,16,19,22,30,40,42,46,50,59,66,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,7,18,26,31,51,54,56,59,63,65,67,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,3,4,22,23,30,31,35,40,44,46,48,50,55,66,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,15,18,22,26,27,34,42,47,51,56,68,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,4,11,12,15,18,21,25,31,33,45,54,55,56,60,65,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,2,3,10,14,16,18,21,22,26,34,40,55,58,68,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,10,16,23,24,25,26,29,35,38,39,50,52,54,56,57,68,69,70,-1,-1,-1,-1,-1,-1,-1,-1},
{0,4,5,7,14,16,17,22,25,26,33,40,52,71,72,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,8,13,30,43,49,53,54,56,57,59,67,69,70,71,73,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{15,16,17,23,24,26,29,32,36,39,42,50,60,64,69,72,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,15,19,38,39,43,47,48,49,50,57,60,70,73,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,3,4,5,12,17,22,23,29,31,33,39,41,44,58,67,77,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,3,9,14,16,20,22,23,31,37,38,41,42,49,51,55,68,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,3,12,13,22,24,34,38,49,51,55,58,61,73,75,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,9,12,36,37,43,48,50,53,54,55,59,72,80,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,5,6,8,9,18,22,24,30,33,34,35,38,40,42,44,45,46,50,53,55,56,72,75,-1,-1,-1},
{1,2,13,26,28,30,34,37,54,57,58,63,82,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,5,8,14,21,29,32,35,39,40,45,49,53,59,61,62,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,5,16,17,24,27,33,36,41,42,43,47,48,55,62,64,70,72,83,-1,-1,-1,-1,-1,-1,-1,-1},
{4,8,17,30,31,37,40,42,45,50,58,59,60,61,64,68,75,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,9,17,21,23,27,32,35,36,38,44,45,48,57,60,69,75,84,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,11,15,18,23,24,27,28,31,39,40,41,46,47,54,78,79,86,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,5,14,17,22,23,25,27,31,41,42,46,58,59,64,65,67,68,70,71,75,84,86,-1,-1,-1,-1},
{1,6,7,13,21,23,24,26,33,38,55,56,57,65,68,73,75,83,88,-1,-1,-1,-1,-1,-1,-1,-1},
{18,20,21,22,30,39,44,46,47,53,55,67,74,79,81,87,89,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,2,7,16,25,28,32,38,40,59,64,67,72,79,85,86,91,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,8,10,19,20,21,25,36,46,59,60,61,62,65,68,69,72,78,81,90,91,-1,-1,-1,-1,-1,-1},
{4,7,9,11,18,29,33,35,37,41,42,54,57,60,64,67,69,75,89,91,-1,-1,-1,-1,-1,-1,-1},
{7,23,27,39,43,47,53,59,63,65,66,67,72,77,83,85,88,94,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{10,15,20,22,23,24,30,34,36,43,44,46,52,57,63,64,69,73,77,82,84,86,94,-1,-1,-1,-1},
{2,3,4,16,17,19,20,28,30,46,54,55,58,59,65,68,71,79,88,94,-1,-1,-1,-1,-1,-1,-1},
{3,7,14,21,27,29,35,39,45,47,58,65,67,68,72,74,78,81,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,3,8,11,17,19,29,32,34,36,40,43,47,50,52,53,55,59,69,71,72,74,86,88,96,97,98}};


// Typedefs
typedef int[0, numberOfChains - 1] chainId_t;

// Ints and Arrays
int Machines = numberOfMachines;
int numberOfChainsDone = 0;
int tasksDone[numberOfTasks];
bool runnableChains[numberOfChains];

// Channels
broadcast chan startMachines;
broadcast chan chainMachineChan[numberOfChains];
broadcast chan activateChains;
broadcast chan ChainDone[numberOfChains];</declaration>
	<template>
		<name x="5" y="5">Composer</name>
		<declaration>// Place local declarations here.
clock time;</declaration>
		<location id="id0" x="-102" y="-255">
			<name x="-112" y="-289">Init</name>
			<label kind="invariant" x="-246" y="-238">numberOfChainsDone &lt;= numberOfChains</label>
			<label kind="exponentialrate" x="-112" y="-221">0</label>
		</location>
		<location id="id1" x="331" y="-255">
			<name x="321" y="-289">Done</name>
		</location>
		<init ref="id0"/>
		<transition>
			<source ref="id0"/>
			<target ref="id1"/>
			<label kind="guard" x="-17" y="-289">numberOfChainsDone &gt;= numberOfChains</label>
		</transition>
	</template>
	<template>
		<name>Chain</name>
		<parameter>const chainId_t cid</parameter>
		<declaration>clock x;
const int chainSize = globalChainSize[cid];
int index = 0;
int TimeUnit = 2;

bool AllDependenciesDone()
{
    bool dependenciesDone = 1;
    int i;
    for (i = 0; i &lt; maxDependencies; i++)
    {
        int value = dependencies[globalChains[cid][index]][i];
        if (value == -1)
            return dependenciesDone;

        dependenciesDone &amp;= tasksDone[value];
    }
    return dependenciesDone;
}

void DecrementWork(int workDone)
{
    int currentDuration = durations[globalChains[cid][index]];

    if (workDone &gt; currentDuration)
        durations[globalChains[cid][index]] = 0;
    else
        durations[globalChains[cid][index]] -= workDone;
}</declaration>
		<location id="id2" x="-68" y="-238">
			<name x="-78" y="-272">Idle</name>
			<label kind="exponentialrate" x="-51" y="-263">3</label>
		</location>
		<location id="id3" x="-68" y="51">
			<name x="-93" y="68">Running</name>
			<label kind="invariant" x="-127" y="85">x &lt;= chainDuration[cid]</label>
		</location>
		<location id="id4" x="-399" y="-238">
			<name x="-409" y="-272">Done</name>
		</location>
		<init ref="id2"/>
		<transition controllable="false">
			<source ref="id3"/>
			<target ref="id2"/>
			<label kind="select" x="-59" y="-119">chain_id : chainId_t</label>
			<label kind="synchronisation" x="-59" y="-102">ChainDone[chain_id]?</label>
			<label kind="assignment" x="-59" y="-85">DecrementWork(chainDuration[chain_id]),
Machines++</label>
		</transition>
		<transition controllable="false">
			<source ref="id2"/>
			<target ref="id4"/>
			<label kind="guard" x="-357" y="-280">index &gt;= chainSize</label>
			<label kind="assignment" x="-357" y="-263">numberOfChainsDone++</label>
		</transition>
		<transition controllable="false">
			<source ref="id3"/>
			<target ref="id2"/>
			<label kind="guard" x="-433" y="-119">x &gt;= chainDuration[cid]</label>
			<label kind="synchronisation" x="-433" y="-102">ChainDone[cid]!</label>
			<label kind="assignment" x="-433" y="-85">Machines++,
tasksDone[globalChains[cid][index]] = 1,
index++</label>
			<nail x="-170" y="-8"/>
			<nail x="-170" y="-170"/>
		</transition>
		<transition>
			<source ref="id2"/>
			<target ref="id3"/>
			<label kind="guard" x="136" y="-238">index &lt; chainSize &amp;&amp;
Machines &gt; 0 &amp;&amp; AllDependenciesDone()</label>
			<label kind="assignment" x="136" y="-204">chainDuration[cid] = durations[globalChains[cid][index]],
Machines--,
x = 0</label>
			<nail x="127" y="-238"/>
			<nail x="127" y="51"/>
		</transition>
	</template>
	<system>// Place template instantiations here.

// List one or more processes to be composed into a system.
system Composer, Chain;
    </system>
	<queries>
		<query>
			<formula>A[] not deadlock</formula>
			<comment></comment>
		</query>
		<query>
			<formula>strategy TimeSchedule = minE (Composer.time) [&lt;=60] : &lt;&gt;Composer.Done</formula>
			<comment></comment>
		</query>
		<query>
			<formula>simulate 5000 [&lt;=200] {Composer.Done}</formula>
			<comment></comment>
		</query>
		<query>
			<formula>simulate 5000 [&lt;=65] {Composer.Done} under TimeSchedule</formula>
			<comment></comment>
		</query>
		<query>
			<formula>inf{Composer.Done} : Composer.time under TimeSchedule</formula>
			<comment></comment>
		</query>
		<query>
			<formula>A&lt;&gt; Composer.Done</formula>
			<comment></comment>
		</query>
		<query>
			<formula>E&lt;&gt; Composer.Done</formula>
			<comment></comment>
		</query>
	</queries>
</nta>
