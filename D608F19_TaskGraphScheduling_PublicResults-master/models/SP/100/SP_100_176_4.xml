<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/researchgroup/darts/uppaal/flat-1_2.dtd'>
<nta>
<declaration>//Variables
const int numberOfChains = 48;
const int numberOfTasks = 100;
const int numberOfMachines = 4;
const int maxDependencies = 11;
const int longestChain = 4;
const int globalChainSize[numberOfChains] = {4,2,3,2,4,2,4,2,2,3,3,3,3,3,2,2,3,3,2,1,2,4,2,2,2,2,2,3,1,2,2,1,1,2,2,1,1,1,3,2,2,1,1,1,1,1,1,1};
const int globalChains[numberOfChains][longestChain] = {
{0,71,87,97},
{1,31,-1,-1},
{2,75,76,-1},
{3,98,-1,-1},
{4,43,63,86},
{5,46,-1,-1},
{6,18,55,82},
{7,22,-1,-1},
{8,72,-1,-1},
{9,53,96,-1},
{10,17,99,-1},
{11,50,85,-1},
{12,36,66,-1},
{13,58,67,-1},
{14,93,-1,-1},
{15,92,-1,-1},
{16,35,81,-1},
{19,32,80,-1},
{20,91,-1,-1},
{21,-1,-1,-1},
{23,70,-1,-1},
{24,33,45,90},
{25,68,-1,-1},
{26,89,-1,-1},
{27,47,-1,-1},
{28,62,-1,-1},
{29,52,-1,-1},
{30,74,84,-1},
{34,-1,-1,-1},
{37,59,-1,-1},
{38,95,-1,-1},
{39,-1,-1,-1},
{40,-1,-1,-1},
{41,56,-1,-1},
{42,94,-1,-1},
{44,-1,-1,-1},
{48,-1,-1,-1},
{49,-1,-1,-1},
{51,64,73,-1},
{54,69,-1,-1},
{57,88,-1,-1},
{60,-1,-1,-1},
{61,-1,-1,-1},
{65,-1,-1,-1},
{77,-1,-1,-1},
{78,-1,-1,-1},
{79,-1,-1,-1},
{83,-1,-1,-1}};
int chainDuration[numberOfChains] = {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1};
int durations[numberOfTasks] = {13,5,6,7,12,9,4,15,5,13,5,3,5,13,15,7,6,6,12,6,5,10,7,13,12,5,5,13,5,16,9,12,4,7,8,6,10,7,7,13,8,6,4,6,9,6,5,5,5,12,5,10,5,12,6,8,4,6,15,8,9,5,8,12,5,6,6,14,12,6,6,4,6,6,10,9,6,4,5,19,10,9,11,6,4,7,5,6,12,6,6,4,7,10,10,6,6,5,6,6};
const int dependencies[numberOfTasks][maxDependencies] = {
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{9,10,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,6,7,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,7,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,7,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{24,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,3,12,14,-1,-1,-1,-1,-1,-1,-1},
{2,19,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{11,19,24,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{11,16,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{12,14,21,-1,-1,-1,-1,-1,-1,-1,-1},
{6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{28,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{33,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,4,15,21,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,33,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,5,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,27,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{16,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,10,11,34,-1,-1,-1,-1,-1,-1,-1},
{38,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{16,29,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,9,40,-1,-1,-1,-1,-1,-1,-1,-1},
{35,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,18,29,37,-1,-1,-1,-1,-1,-1,-1},
{4,7,41,44,-1,-1,-1,-1,-1,-1,-1},
{10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{13,50,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,37,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{28,35,41,-1,-1,-1,-1,-1,-1,-1,-1},
{18,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,16,28,48,52,-1,-1,-1,-1,-1,-1},
{43,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{28,51,53,-1,-1,-1,-1,-1,-1,-1,-1},
{18,36,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,6,20,26,36,49,-1,-1,-1,-1,-1},
{1,30,44,47,51,58,62,-1,-1,-1,-1},
{5,25,33,38,48,57,-1,-1,-1,-1,-1},
{5,10,28,54,-1,-1,-1,-1,-1,-1,-1},
{3,18,23,45,51,-1,-1,-1,-1,-1,-1},
{0,6,10,29,40,-1,-1,-1,-1,-1,-1},
{8,18,43,58,62,-1,-1,-1,-1,-1,-1},
{36,64,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{30,35,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,2,8,32,-1,-1,-1,-1,-1,-1,-1},
{0,2,45,58,75,-1,-1,-1,-1,-1,-1},
{6,9,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{33,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{35,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{17,19,32,37,54,-1,-1,-1,-1,-1,-1},
{33,35,43,45,-1,-1,-1,-1,-1,-1,-1},
{11,35,55,-1,-1,-1,-1,-1,-1,-1,-1},
{4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{23,40,74,-1,-1,-1,-1,-1,-1,-1,-1},
{0,37,47,50,54,-1,-1,-1,-1,-1,-1},
{14,27,35,39,60,63,-1,-1,-1,-1,-1},
{4,6,47,68,71,-1,-1,-1,-1,-1,-1},
{8,41,57,61,-1,-1,-1,-1,-1,-1,-1},
{26,74,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{45,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{12,20,30,47,61,78,79,-1,-1,-1,-1},
{13,15,34,63,-1,-1,-1,-1,-1,-1,-1},
{14,26,54,60,-1,-1,-1,-1,-1,-1,-1},
{20,42,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,30,38,-1,-1,-1,-1,-1,-1,-1,-1},
{1,14,25,27,34,49,53,57,-1,-1,-1},
{1,49,87,-1,-1,-1,-1,-1,-1,-1,-1},
{0,3,33,35,38,42,50,59,83,85,92},
{10,17,27,33,-1,-1,-1,-1,-1,-1,-1}};


// Typedefs
typedef int[0, numberOfChains - 1] chainId_t;

// Ints and Arrays
int Machines = numberOfMachines;
int numberOfChainsDone = 0;
int tasksDone[numberOfTasks];
bool runnableChains[numberOfChains];

// Channels
broadcast chan startMachines;
broadcast chan chainMachineChan[numberOfChains];
broadcast chan activateChains;
broadcast chan ChainDone[numberOfChains];</declaration>
	<template>
		<name x="5" y="5">Composer</name>
		<declaration>// Place local declarations here.
clock time;</declaration>
		<location id="id0" x="-102" y="-255">
			<name x="-112" y="-289">Init</name>
			<label kind="invariant" x="-246" y="-238">numberOfChainsDone &lt;= numberOfChains</label>
			<label kind="exponentialrate" x="-112" y="-221">0</label>
		</location>
		<location id="id1" x="331" y="-255">
			<name x="321" y="-289">Done</name>
		</location>
		<init ref="id0"/>
		<transition>
			<source ref="id0"/>
			<target ref="id1"/>
			<label kind="guard" x="-17" y="-289">numberOfChainsDone &gt;= numberOfChains</label>
		</transition>
	</template>
	<template>
		<name>Chain</name>
		<parameter>const chainId_t cid</parameter>
		<declaration>clock x;
const int chainSize = globalChainSize[cid];
int index = 0;
int TimeUnit = 2;

bool AllDependenciesDone()
{
    bool dependenciesDone = 1;
    int i;
    for (i = 0; i &lt; maxDependencies; i++)
    {
        int value = dependencies[globalChains[cid][index]][i];
        if (value == -1)
            return dependenciesDone;

        dependenciesDone &amp;= tasksDone[value];
    }
    return dependenciesDone;
}

void DecrementWork(int workDone)
{
    int currentDuration = durations[globalChains[cid][index]];

    if (workDone &gt; currentDuration)
        durations[globalChains[cid][index]] = 0;
    else
        durations[globalChains[cid][index]] -= workDone;
}</declaration>
		<location id="id2" x="-68" y="-238">
			<name x="-78" y="-272">Idle</name>
			<label kind="exponentialrate" x="-51" y="-263">3</label>
		</location>
		<location id="id3" x="-68" y="51">
			<name x="-93" y="68">Running</name>
			<label kind="invariant" x="-127" y="85">x &lt;= chainDuration[cid]</label>
		</location>
		<location id="id4" x="-399" y="-238">
			<name x="-409" y="-272">Done</name>
		</location>
		<init ref="id2"/>
		<transition controllable="false">
			<source ref="id3"/>
			<target ref="id2"/>
			<label kind="select" x="-59" y="-119">chain_id : chainId_t</label>
			<label kind="synchronisation" x="-59" y="-102">ChainDone[chain_id]?</label>
			<label kind="assignment" x="-59" y="-85">DecrementWork(chainDuration[chain_id]),
Machines++</label>
		</transition>
		<transition controllable="false">
			<source ref="id2"/>
			<target ref="id4"/>
			<label kind="guard" x="-357" y="-280">index &gt;= chainSize</label>
			<label kind="assignment" x="-357" y="-263">numberOfChainsDone++</label>
		</transition>
		<transition controllable="false">
			<source ref="id3"/>
			<target ref="id2"/>
			<label kind="guard" x="-433" y="-119">x &gt;= chainDuration[cid]</label>
			<label kind="synchronisation" x="-433" y="-102">ChainDone[cid]!</label>
			<label kind="assignment" x="-433" y="-85">Machines++,
tasksDone[globalChains[cid][index]] = 1,
index++</label>
			<nail x="-170" y="-8"/>
			<nail x="-170" y="-170"/>
		</transition>
		<transition>
			<source ref="id2"/>
			<target ref="id3"/>
			<label kind="guard" x="136" y="-238">index &lt; chainSize &amp;&amp;
Machines &gt; 0 &amp;&amp; AllDependenciesDone()</label>
			<label kind="assignment" x="136" y="-204">chainDuration[cid] = durations[globalChains[cid][index]],
Machines--,
x = 0</label>
			<nail x="127" y="-238"/>
			<nail x="127" y="51"/>
		</transition>
	</template>
	<system>// Place template instantiations here.

// List one or more processes to be composed into a system.
system Composer, Chain;
    </system>
	<queries>
		<query>
			<formula>A[] not deadlock</formula>
			<comment></comment>
		</query>
		<query>
			<formula>strategy TimeSchedule = minE (Composer.time) [&lt;=60] : &lt;&gt;Composer.Done</formula>
			<comment></comment>
		</query>
		<query>
			<formula>simulate 5000 [&lt;=200] {Composer.Done}</formula>
			<comment></comment>
		</query>
		<query>
			<formula>simulate 5000 [&lt;=65] {Composer.Done} under TimeSchedule</formula>
			<comment></comment>
		</query>
		<query>
			<formula>inf{Composer.Done} : Composer.time under TimeSchedule</formula>
			<comment></comment>
		</query>
		<query>
			<formula>A&lt;&gt; Composer.Done</formula>
			<comment></comment>
		</query>
		<query>
			<formula>E&lt;&gt; Composer.Done</formula>
			<comment></comment>
		</query>
	</queries>
</nta>
