<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/researchgroup/darts/uppaal/flat-1_2.dtd'>
<nta>
<declaration>//Variables
const int numberOfChains = 27;
const int numberOfTasks = 100;
const int numberOfMachines = 3;
const int maxDependencies = 23;
const int longestChain = 8;
const int globalChainSize[numberOfChains] = {8,7,5,3,3,5,5,2,6,2,4,3,4,3,5,3,3,4,6,5,3,3,4,1,1,1,1};
const int globalChains[numberOfChains][longestChain] = {
{0,2,33,58,88,95,96,99},
{1,13,34,54,65,89,93,-1},
{3,37,51,87,91,-1,-1,-1},
{4,80,98,-1,-1,-1,-1,-1},
{5,92,97,-1,-1,-1,-1,-1},
{6,9,47,59,85,-1,-1,-1},
{7,18,77,79,81,-1,-1,-1},
{8,84,-1,-1,-1,-1,-1,-1},
{10,25,69,75,76,86,-1,-1},
{11,78,-1,-1,-1,-1,-1,-1},
{12,23,42,90,-1,-1,-1,-1},
{14,82,94,-1,-1,-1,-1,-1},
{15,55,73,83,-1,-1,-1,-1},
{16,64,68,-1,-1,-1,-1,-1},
{17,24,32,45,72,-1,-1,-1},
{19,70,74,-1,-1,-1,-1,-1},
{20,56,67,-1,-1,-1,-1,-1},
{21,27,44,63,-1,-1,-1,-1},
{22,50,52,61,62,71,-1,-1},
{26,41,43,57,66,-1,-1,-1},
{28,29,60,-1,-1,-1,-1,-1},
{30,48,53,-1,-1,-1,-1,-1},
{31,36,46,49,-1,-1,-1,-1},
{35,-1,-1,-1,-1,-1,-1,-1},
{38,-1,-1,-1,-1,-1,-1,-1},
{39,-1,-1,-1,-1,-1,-1,-1},
{40,-1,-1,-1,-1,-1,-1,-1}};
int chainDuration[numberOfChains] = {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1};
int durations[numberOfTasks] = {7,6,20,10,10,7,10,13,2,5,4,7,4,5,8,16,7,2,17,2,5,4,5,6,10,4,18,2,10,4,7,7,19,2,3,2,15,7,8,9,16,2,8,8,3,6,12,3,8,8,19,8,14,2,16,7,6,14,1,3,3,10,17,6,15,17,8,3,4,5,19,7,17,6,10,4,8,19,2,15,20,6,2,3,7,14,5,17,1,7,2,2,16,3,19,6,9,3,1,3};
const int dependencies[numberOfTasks][maxDependencies] = {
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,3,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,3,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,5,6,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,5,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,2,10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,4,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,8,12,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,8,9,14,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,5,7,10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,18,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,14,16,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,7,12,13,22,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,7,17,18,21,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,5,7,10,16,22,24,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,12,19,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,7,11,16,19,21,22,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{18,20,21,26,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{14,15,18,19,21,25,28,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,11,14,17,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{11,18,25,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,17,21,22,24,25,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,2,3,4,18,20,25,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,4,13,23,29,33,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,16,19,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,11,15,16,18,31,35,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,3,8,28,30,31,36,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,17,25,28,31,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,6,11,15,19,28,32,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,14,19,31,32,37,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,4,20,26,29,37,39,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,2,7,18,19,21,22,23,29,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{13,18,24,29,36,41,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,12,16,19,22,27,31,34,35,38,41,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,6,11,14,32,37,38,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{16,24,29,36,42,43,44,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,3,5,7,8,9,11,27,38,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{16,25,30,37,40,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,18,20,28,35,46,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,8,22,25,34,42,44,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,8,20,22,24,25,33,36,37,44,46,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,22,31,41,44,46,49,50,51,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,4,6,8,27,28,36,40,48,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,2,5,8,14,22,24,30,34,35,42,45,47,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{11,14,15,16,18,25,26,29,32,33,41,42,44,46,52,-1,-1,-1,-1,-1,-1,-1,-1},
{3,16,20,22,24,29,32,40,43,46,53,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,18,29,32,33,42,43,47,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,6,10,20,27,33,36,37,51,53,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,9,12,13,21,33,36,47,50,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,16,23,29,35,38,43,44,47,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{11,19,31,36,40,44,52,60,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,10,15,26,28,40,45,46,58,61,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,7,17,19,21,44,50,56,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,6,8,11,15,16,21,22,28,57,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,8,10,13,35,37,41,49,50,52,54,62,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{17,35,40,42,44,55,57,65,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,9,23,24,27,45,56,61,62,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,7,14,18,23,26,33,45,61,64,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,5,12,17,22,25,29,35,47,48,51,53,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,11,19,23,37,40,44,56,61,64,69,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{25,46,48,61,62,65,70,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,8,18,23,29,30,42,45,56,57,70,71,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{12,25,30,32,36,37,40,48,55,57,62,65,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,8,28,47,49,50,52,63,64,67,70,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,5,13,22,25,28,29,45,56,69,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,13,16,24,36,40,42,43,50,51,57,63,64,69,72,74,75,-1,-1,-1,-1,-1,-1},
{0,4,9,18,21,27,31,44,51,52,72,75,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{9,11,17,24,25,31,32,35,38,39,40,41,42,65,67,68,76,-1,-1,-1,-1,-1,-1},
{3,6,25,43,52,58,68,77,78,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,4,5,7,8,20,26,36,39,42,49,51,53,58,74,-1,-1,-1,-1,-1,-1,-1,-1},
{19,22,29,33,35,38,41,48,56,67,70,71,75,77,79,-1,-1,-1,-1,-1,-1,-1,-1},
{1,8,14,27,31,32,34,36,37,42,44,48,69,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,20,25,26,28,38,42,46,48,50,59,67,73,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,8,17,33,37,76,77,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,23,25,26,29,32,34,35,43,45,48,49,56,59,61,62,65,70,83,-1,-1,-1,-1},
{10,41,55,58,59,67,75,76,77,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,4,6,7,13,18,19,20,25,33,35,51,69,70,71,78,83,84,-1,-1,-1,-1,-1},
{4,27,33,34,36,55,56,58,64,67,70,73,84,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,3,5,6,13,19,25,32,52,57,63,65,66,67,68,79,80,81,-1,-1,-1,-1},
{10,20,25,27,31,32,34,35,41,42,43,68,69,76,80,82,83,-1,-1,-1,-1,-1,-1},
{1,14,29,34,45,53,59,66,67,71,73,78,79,81,87,-1,-1,-1,-1,-1,-1,-1,-1},
{4,5,12,15,37,38,45,46,50,52,54,65,69,70,72,74,76,82,-1,-1,-1,-1,-1},
{5,13,14,19,21,24,31,36,51,54,61,73,75,81,89,92,-1,-1,-1,-1,-1,-1,-1},
{4,8,20,34,43,44,45,52,57,60,76,82,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,8,10,15,23,26,42,55,57,60,61,62,67,69,75,83,88,91,93,-1,-1,-1,-1},
{25,28,34,37,43,54,56,68,69,72,79,95,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,5,11,18,39,40,48,78,79,81,88,90,92,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,7,11,13,15,16,21,22,23,24,25,29,32,34,39,40,45,59,78,80,84,85,92},
{2,17,20,23,31,63,64,66,68,76,82,85,86,91,96,97,-1,-1,-1,-1,-1,-1,-1}};


// Typedefs
typedef int[0, numberOfChains - 1] chainId_t;

// Ints and Arrays
int Machines = numberOfMachines;
int numberOfChainsDone = 0;
int tasksDone[numberOfTasks];
bool runnableChains[numberOfChains];

// Channels
broadcast chan startMachines;
broadcast chan chainMachineChan[numberOfChains];
broadcast chan activateChains;
broadcast chan ChainDone[numberOfChains];</declaration>
	<template>
		<name x="5" y="5">Composer</name>
		<declaration>// Place local declarations here.
clock time;</declaration>
		<location id="id0" x="-102" y="-255">
			<name x="-112" y="-289">Init</name>
			<label kind="invariant" x="-246" y="-238">numberOfChainsDone &lt;= numberOfChains</label>
			<label kind="exponentialrate" x="-112" y="-221">0</label>
		</location>
		<location id="id1" x="331" y="-255">
			<name x="321" y="-289">Done</name>
		</location>
		<init ref="id0"/>
		<transition>
			<source ref="id0"/>
			<target ref="id1"/>
			<label kind="guard" x="-17" y="-289">numberOfChainsDone &gt;= numberOfChains</label>
		</transition>
	</template>
	<template>
		<name>Chain</name>
		<parameter>const chainId_t cid</parameter>
		<declaration>clock x;
const int chainSize = globalChainSize[cid];
int index = 0;
int TimeUnit = 2;

bool AllDependenciesDone()
{
    bool dependenciesDone = 1;
    int i;
    for (i = 0; i &lt; maxDependencies; i++)
    {
        int value = dependencies[globalChains[cid][index]][i];
        if (value == -1)
            return dependenciesDone;

        dependenciesDone &amp;= tasksDone[value];
    }
    return dependenciesDone;
}

void DecrementWork(int workDone)
{
    int currentDuration = durations[globalChains[cid][index]];

    if (workDone &gt; currentDuration)
        durations[globalChains[cid][index]] = 0;
    else
        durations[globalChains[cid][index]] -= workDone;
}</declaration>
		<location id="id2" x="-68" y="-238">
			<name x="-78" y="-272">Idle</name>
			<label kind="exponentialrate" x="-51" y="-263">3</label>
		</location>
		<location id="id3" x="-68" y="51">
			<name x="-93" y="68">Running</name>
			<label kind="invariant" x="-127" y="85">x &lt;= chainDuration[cid]</label>
		</location>
		<location id="id4" x="-399" y="-238">
			<name x="-409" y="-272">Done</name>
		</location>
		<init ref="id2"/>
		<transition controllable="false">
			<source ref="id3"/>
			<target ref="id2"/>
			<label kind="select" x="-59" y="-119">chain_id : chainId_t</label>
			<label kind="synchronisation" x="-59" y="-102">ChainDone[chain_id]?</label>
			<label kind="assignment" x="-59" y="-85">DecrementWork(chainDuration[chain_id]),
Machines++</label>
		</transition>
		<transition controllable="false">
			<source ref="id2"/>
			<target ref="id4"/>
			<label kind="guard" x="-357" y="-280">index &gt;= chainSize</label>
			<label kind="assignment" x="-357" y="-263">numberOfChainsDone++</label>
		</transition>
		<transition controllable="false">
			<source ref="id3"/>
			<target ref="id2"/>
			<label kind="guard" x="-433" y="-119">x &gt;= chainDuration[cid]</label>
			<label kind="synchronisation" x="-433" y="-102">ChainDone[cid]!</label>
			<label kind="assignment" x="-433" y="-85">Machines++,
tasksDone[globalChains[cid][index]] = 1,
index++</label>
			<nail x="-170" y="-8"/>
			<nail x="-170" y="-170"/>
		</transition>
		<transition>
			<source ref="id2"/>
			<target ref="id3"/>
			<label kind="guard" x="136" y="-238">index &lt; chainSize &amp;&amp;
Machines &gt; 0 &amp;&amp; AllDependenciesDone()</label>
			<label kind="assignment" x="136" y="-204">chainDuration[cid] = durations[globalChains[cid][index]],
Machines--,
x = 0</label>
			<nail x="127" y="-238"/>
			<nail x="127" y="51"/>
		</transition>
	</template>
	<system>// Place template instantiations here.

// List one or more processes to be composed into a system.
system Composer, Chain;
    </system>
	<queries>
		<query>
			<formula>A[] not deadlock</formula>
			<comment></comment>
		</query>
		<query>
			<formula>strategy TimeSchedule = minE (Composer.time) [&lt;=60] : &lt;&gt;Composer.Done</formula>
			<comment></comment>
		</query>
		<query>
			<formula>simulate 5000 [&lt;=200] {Composer.Done}</formula>
			<comment></comment>
		</query>
		<query>
			<formula>simulate 5000 [&lt;=65] {Composer.Done} under TimeSchedule</formula>
			<comment></comment>
		</query>
		<query>
			<formula>inf{Composer.Done} : Composer.time under TimeSchedule</formula>
			<comment></comment>
		</query>
		<query>
			<formula>A&lt;&gt; Composer.Done</formula>
			<comment></comment>
		</query>
		<query>
			<formula>E&lt;&gt; Composer.Done</formula>
			<comment></comment>
		</query>
	</queries>
</nta>
