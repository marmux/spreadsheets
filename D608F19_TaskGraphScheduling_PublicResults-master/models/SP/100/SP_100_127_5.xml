<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/researchgroup/darts/uppaal/flat-1_2.dtd'>
<nta>
<declaration>//Variables
const int numberOfChains = 30;
const int numberOfTasks = 100;
const int numberOfMachines = 5;
const int maxDependencies = 16;
const int longestChain = 8;
const int globalChainSize[numberOfChains] = {8,4,2,4,5,2,8,4,7,3,4,3,2,2,4,2,7,2,7,5,2,2,1,1,2,2,1,2,1,1};
const int globalChains[numberOfChains][longestChain] = {
{0,3,22,46,51,63,81,98},
{1,60,87,97,-1,-1,-1,-1},
{2,72,-1,-1,-1,-1,-1,-1},
{4,54,75,86,-1,-1,-1,-1},
{5,58,59,67,84,-1,-1,-1},
{6,77,-1,-1,-1,-1,-1,-1},
{7,10,52,57,76,78,82,88},
{8,61,69,95,-1,-1,-1,-1},
{9,64,70,80,90,91,93,-1},
{11,85,96,-1,-1,-1,-1,-1},
{12,62,89,94,-1,-1,-1,-1},
{13,34,99,-1,-1,-1,-1,-1},
{14,65,-1,-1,-1,-1,-1,-1},
{15,48,-1,-1,-1,-1,-1,-1},
{16,17,33,79,-1,-1,-1,-1},
{18,83,-1,-1,-1,-1,-1,-1},
{19,30,32,42,44,68,73,-1},
{20,45,-1,-1,-1,-1,-1,-1},
{21,25,27,39,50,66,71,-1},
{23,26,43,47,74,-1,-1,-1},
{24,41,-1,-1,-1,-1,-1,-1},
{28,37,-1,-1,-1,-1,-1,-1},
{29,-1,-1,-1,-1,-1,-1,-1},
{31,-1,-1,-1,-1,-1,-1,-1},
{35,55,-1,-1,-1,-1,-1,-1},
{36,53,-1,-1,-1,-1,-1,-1},
{38,-1,-1,-1,-1,-1,-1,-1},
{40,56,-1,-1,-1,-1,-1,-1},
{49,-1,-1,-1,-1,-1,-1,-1},
{92,-1,-1,-1,-1,-1,-1,-1}};
int chainDuration[numberOfChains] = {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1};
int durations[numberOfTasks] = {48,1,4,5,16,6,5,2,3,4,1,19,4,8,10,7,13,11,2,5,12,15,11,29,5,18,4,2,2,24,15,7,6,4,2,1,1,16,12,11,5,17,4,5,3,4,5,3,2,1,2,1,9,7,5,12,9,19,26,7,10,5,11,4,17,1,4,1,2,16,2,5,10,2,11,4,3,13,2,3,7,8,47,5,2,12,1,2,3,14,3,22,31,9,8,3,22,4,2,11};
const int dependencies[numberOfTasks][maxDependencies] = {
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,4,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,13,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,3,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,15,16,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{15,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{9,10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,10,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,3,9,21,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{13,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,8,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{21,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,3,9,23,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,11,25,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,14,18,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,8,19,21,28,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,11,22,27,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{10,13,14,30,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,7,17,22,24,30,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,11,12,13,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,20,25,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,9,23,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{13,16,28,29,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,28,30,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,11,18,22,27,35,38,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{24,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,8,9,17,24,27,29,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{23,29,32,38,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,9,10,14,26,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{13,14,42,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,8,11,20,26,35,36,37,-1,-1,-1,-1,-1,-1,-1,-1},
{0,8,11,15,17,22,24,27,39,41,-1,-1,-1,-1,-1,-1},
{9,12,19,28,43,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,13,15,18,42,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,22,43,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{23,28,39,40,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,23,25,29,40,46,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,10,12,34,41,45,46,49,51,-1,-1,-1,-1,-1,-1,-1},
{6,30,36,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,4,8,15,16,46,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,33,35,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,24,27,33,40,49,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,7,9,12,13,19,31,51,52,-1,-1,-1,-1,-1,-1,-1},
{5,7,8,18,19,22,27,40,44,47,-1,-1,-1,-1,-1,-1},
{0,10,42,44,48,51,58,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,3,31,46,47,57,58,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,20,25,33,46,48,51,55,-1,-1,-1,-1,-1,-1,-1,-1},
{5,9,10,12,16,21,39,45,-1,-1,-1,-1,-1,-1,-1,-1},
{3,22,24,51,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,9,28,30,33,34,39,47,51,52,-1,-1,-1,-1,-1,-1},
{0,8,10,12,14,33,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,46,50,53,61,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,6,12,14,29,33,35,38,51,55,59,-1,-1,-1,-1,-1},
{14,30,44,64,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{9,18,21,50,52,58,59,60,61,-1,-1,-1,-1,-1,-1,-1},
{0,3,9,16,19,27,29,30,64,-1,-1,-1,-1,-1,-1,-1},
{23,44,50,64,66,67,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,10,14,21,22,35,45,61,69,71,-1,-1,-1,-1,-1,-1},
{12,26,28,43,58,68,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{11,47,60,61,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,11,17,35,49,52,54,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,7,18,28,33,36,46,55,57,-1,-1,-1,-1,-1,-1,-1},
{2,4,6,11,40,57,58,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{11,16,34,36,57,62,65,68,69,76,-1,-1,-1,-1,-1,-1},
{2,12,28,33,42,47,57,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{19,33,40,47,60,70,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{16,41,45,50,51,63,66,70,75,-1,-1,-1,-1,-1,-1,-1},
{13,21,37,69,71,78,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,9,17,18,34,40,55,56,68,-1,-1,-1,-1,-1,-1,-1},
{13,19,21,26,27,29,35,44,52,59,62,67,71,79,80,82},
{7,11,33,34,35,42,51,68,80,-1,-1,-1,-1,-1,-1,-1},
{8,11,20,31,32,38,45,50,54,73,75,-1,-1,-1,-1,-1},
{1,3,6,23,30,32,42,48,55,60,65,80,84,-1,-1,-1},
{13,14,15,46,48,51,64,74,82,83,85,-1,-1,-1,-1,-1},
{19,34,38,40,60,62,68,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,6,9,12,27,34,41,68,73,75,80,83,-1,-1,-1,-1},
{3,7,9,13,18,23,27,30,36,43,53,63,90,-1,-1,-1},
{40,75,82,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,16,18,31,38,40,47,48,56,90,91,-1,-1,-1,-1,-1},
{12,14,23,29,34,35,37,48,50,55,57,63,80,89,-1,-1},
{24,36,39,41,45,48,56,57,65,67,69,-1,-1,-1,-1,-1},
{13,17,20,34,48,56,57,58,75,85,90,94,-1,-1,-1,-1},
{11,21,22,41,56,57,69,76,87,92,-1,-1,-1,-1,-1,-1},
{6,52,54,74,81,83,91,95,-1,-1,-1,-1,-1,-1,-1,-1},
{10,11,16,34,39,53,87,-1,-1,-1,-1,-1,-1,-1,-1,-1}};


// Typedefs
typedef int[0, numberOfChains - 1] chainId_t;

// Ints and Arrays
int Machines = numberOfMachines;
int numberOfChainsDone = 0;
int tasksDone[numberOfTasks];
bool runnableChains[numberOfChains];

// Channels
broadcast chan startMachines;
broadcast chan chainMachineChan[numberOfChains];
broadcast chan activateChains;
broadcast chan ChainDone[numberOfChains];</declaration>
	<template>
		<name x="5" y="5">Composer</name>
		<declaration>// Place local declarations here.
clock time;</declaration>
		<location id="id0" x="-102" y="-255">
			<name x="-112" y="-289">Init</name>
			<label kind="invariant" x="-246" y="-238">numberOfChainsDone &lt;= numberOfChains</label>
			<label kind="exponentialrate" x="-112" y="-221">0</label>
		</location>
		<location id="id1" x="331" y="-255">
			<name x="321" y="-289">Done</name>
		</location>
		<init ref="id0"/>
		<transition>
			<source ref="id0"/>
			<target ref="id1"/>
			<label kind="guard" x="-17" y="-289">numberOfChainsDone &gt;= numberOfChains</label>
		</transition>
	</template>
	<template>
		<name>Chain</name>
		<parameter>const chainId_t cid</parameter>
		<declaration>clock x;
const int chainSize = globalChainSize[cid];
int index = 0;
int TimeUnit = 2;

bool AllDependenciesDone()
{
    bool dependenciesDone = 1;
    int i;
    for (i = 0; i &lt; maxDependencies; i++)
    {
        int value = dependencies[globalChains[cid][index]][i];
        if (value == -1)
            return dependenciesDone;

        dependenciesDone &amp;= tasksDone[value];
    }
    return dependenciesDone;
}

void DecrementWork(int workDone)
{
    int currentDuration = durations[globalChains[cid][index]];

    if (workDone &gt; currentDuration)
        durations[globalChains[cid][index]] = 0;
    else
        durations[globalChains[cid][index]] -= workDone;
}</declaration>
		<location id="id2" x="-68" y="-238">
			<name x="-78" y="-272">Idle</name>
			<label kind="exponentialrate" x="-51" y="-263">3</label>
		</location>
		<location id="id3" x="-68" y="51">
			<name x="-93" y="68">Running</name>
			<label kind="invariant" x="-127" y="85">x &lt;= chainDuration[cid]</label>
		</location>
		<location id="id4" x="-399" y="-238">
			<name x="-409" y="-272">Done</name>
		</location>
		<init ref="id2"/>
		<transition controllable="false">
			<source ref="id3"/>
			<target ref="id2"/>
			<label kind="select" x="-59" y="-119">chain_id : chainId_t</label>
			<label kind="synchronisation" x="-59" y="-102">ChainDone[chain_id]?</label>
			<label kind="assignment" x="-59" y="-85">DecrementWork(chainDuration[chain_id]),
Machines++</label>
		</transition>
		<transition controllable="false">
			<source ref="id2"/>
			<target ref="id4"/>
			<label kind="guard" x="-357" y="-280">index &gt;= chainSize</label>
			<label kind="assignment" x="-357" y="-263">numberOfChainsDone++</label>
		</transition>
		<transition controllable="false">
			<source ref="id3"/>
			<target ref="id2"/>
			<label kind="guard" x="-433" y="-119">x &gt;= chainDuration[cid]</label>
			<label kind="synchronisation" x="-433" y="-102">ChainDone[cid]!</label>
			<label kind="assignment" x="-433" y="-85">Machines++,
tasksDone[globalChains[cid][index]] = 1,
index++</label>
			<nail x="-170" y="-8"/>
			<nail x="-170" y="-170"/>
		</transition>
		<transition>
			<source ref="id2"/>
			<target ref="id3"/>
			<label kind="guard" x="136" y="-238">index &lt; chainSize &amp;&amp;
Machines &gt; 0 &amp;&amp; AllDependenciesDone()</label>
			<label kind="assignment" x="136" y="-204">chainDuration[cid] = durations[globalChains[cid][index]],
Machines--,
x = 0</label>
			<nail x="127" y="-238"/>
			<nail x="127" y="51"/>
		</transition>
	</template>
	<system>// Place template instantiations here.

// List one or more processes to be composed into a system.
system Composer, Chain;
    </system>
	<queries>
		<query>
			<formula>A[] not deadlock</formula>
			<comment></comment>
		</query>
		<query>
			<formula>strategy TimeSchedule = minE (Composer.time) [&lt;=60] : &lt;&gt;Composer.Done</formula>
			<comment></comment>
		</query>
		<query>
			<formula>simulate 5000 [&lt;=200] {Composer.Done}</formula>
			<comment></comment>
		</query>
		<query>
			<formula>simulate 5000 [&lt;=65] {Composer.Done} under TimeSchedule</formula>
			<comment></comment>
		</query>
		<query>
			<formula>inf{Composer.Done} : Composer.time under TimeSchedule</formula>
			<comment></comment>
		</query>
		<query>
			<formula>A&lt;&gt; Composer.Done</formula>
			<comment></comment>
		</query>
		<query>
			<formula>E&lt;&gt; Composer.Done</formula>
			<comment></comment>
		</query>
	</queries>
</nta>
