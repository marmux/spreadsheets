<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/researchgroup/darts/uppaal/flat-1_2.dtd'>
<nta>
<declaration>//Variables
const int numberOfChains = 34;
const int numberOfTasks = 100;
const int numberOfMachines = 6;
const int maxDependencies = 29;
const int longestChain = 5;
const int globalChainSize[numberOfChains] = {5,4,4,3,3,4,4,3,3,5,3,3,3,3,3,4,4,4,4,4,3,4,3,2,2,2,2,2,2,1,1,1,1,1};
const int globalChains[numberOfChains][longestChain] = {
{0,10,38,76,90},
{1,56,73,83,-1},
{2,52,85,97,-1},
{3,80,99,-1,-1},
{4,84,96,-1,-1},
{5,57,67,92,-1},
{6,70,87,93,-1},
{7,78,86,-1,-1},
{8,72,98,-1,-1},
{9,17,44,63,88},
{11,71,95,-1,-1},
{12,53,94,-1,-1},
{13,23,89,-1,-1},
{14,62,79,-1,-1},
{15,58,74,-1,-1},
{16,26,59,69,-1},
{18,66,82,91,-1},
{19,29,65,75,-1},
{20,32,39,77,-1},
{21,34,40,81,-1},
{22,49,60,-1,-1},
{24,36,46,55,-1},
{25,35,50,-1,-1},
{27,64,-1,-1,-1},
{28,45,-1,-1,-1},
{30,61,-1,-1,-1},
{31,68,-1,-1,-1},
{33,51,-1,-1,-1},
{37,42,-1,-1,-1},
{41,-1,-1,-1,-1},
{43,-1,-1,-1,-1},
{47,-1,-1,-1,-1},
{48,-1,-1,-1,-1},
{54,-1,-1,-1,-1}};
int chainDuration[numberOfChains] = {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1};
int durations[numberOfTasks] = {19,16,33,10,7,1,15,2,1,9,20,7,12,10,1,3,2,2,4,1,7,4,6,14,1,4,2,38,7,17,43,7,14,10,5,9,7,1,8,2,8,17,9,6,2,8,2,4,9,10,26,12,2,2,1,1,18,21,2,8,6,7,22,41,3,5,6,25,1,3,8,6,14,1,11,1,22,11,18,4,9,2,4,1,8,16,12,3,18,1,1,6,16,5,2,2,5,16,7,3};
const int dependencies[numberOfTasks][maxDependencies] = {
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,4,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,6,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,2,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,5,7,8,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,8,11,12,15,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{12,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,8,12,13,17,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,9,14,15,17,18,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,7,9,11,12,13,15,16,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,5,10,15,17,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{9,11,14,15,17,18,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,10,11,14,15,16,17,18,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,7,15,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,5,6,9,13,16,19,26,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,9,15,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,10,11,12,22,23,27,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,4,5,6,11,19,20,21,23,24,25,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,4,10,14,22,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,4,13,14,16,17,21,24,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,4,6,10,12,17,20,22,25,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,6,14,15,17,23,24,26,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,7,9,10,11,18,19,25,26,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,4,10,13,15,22,25,27,30,31,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,9,10,12,14,26,27,29,31,32,33,36,37,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,6,7,8,10,16,18,24,27,28,34,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,7,12,15,19,32,36,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,10,16,18,20,25,27,32,37,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,4,5,17,19,22,36,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,5,6,7,8,11,17,22,32,34,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,3,7,13,15,16,25,28,29,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,8,10,16,29,30,31,32,34,36,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,21,25,27,32,36,37,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{11,13,17,22,32,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,6,9,10,14,15,16,22,32,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,9,11,15,19,21,27,29,31,35,37,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,8,10,15,18,19,21,33,40,43,48,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,5,6,8,9,10,12,16,24,25,27,28,29,33,35,36,38,41,43,47,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,5,6,9,10,12,16,17,18,22,23,26,29,36,42,45,49,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{18,33,39,44,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{9,10,14,17,22,26,29,34,35,41,44,46,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,8,9,10,11,20,28,29,34,44,47,48,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,2,5,6,13,16,17,19,20,23,28,33,35,36,38,41,44,45,46,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,4,5,9,13,15,18,25,27,31,32,34,37,43,45,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,8,10,12,13,16,17,22,24,26,30,33,37,39,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,2,9,17,18,20,23,25,31,33,34,36,45,49,50,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,6,17,19,21,29,30,35,40,51,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,4,5,10,14,18,20,22,23,25,39,41,45,46,47,49,50,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,4,5,7,12,14,16,27,30,32,33,34,38,39,40,44,46,49,55,59,60,-1,-1,-1,-1,-1,-1,-1,-1},
{13,14,17,18,20,25,27,28,32,36,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{11,12,13,15,19,20,23,29,32,36,42,47,58,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,4,11,16,17,18,21,28,29,30,33,36,46,50,52,54,55,58,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,4,18,20,22,31,35,36,43,49,53,54,57,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,3,5,18,21,30,31,32,37,44,48,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,6,8,17,19,24,41,45,47,48,50,52,54,57,59,60,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,5,6,7,13,18,21,22,25,26,28,30,38,40,55,56,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,10,11,13,14,15,17,18,21,22,24,30,35,40,50,55,56,57,62,65,67,-1,-1,-1,-1,-1,-1,-1,-1},
{1,5,6,8,14,19,21,32,35,36,37,38,40,43,44,47,49,64,67,68,69,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,4,10,12,14,20,32,33,47,48,51,52,54,56,64,66,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,7,9,12,18,23,25,27,29,33,40,43,58,63,68,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,13,16,21,22,28,33,35,40,42,50,65,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,6,8,10,21,27,30,33,38,40,50,51,57,64,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{12,13,17,21,22,24,26,30,32,33,35,37,39,40,41,46,54,66,70,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,5,6,7,14,15,17,27,29,32,35,38,40,47,49,63,67,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{10,19,20,23,26,31,35,39,40,42,56,57,62,64,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,3,6,7,9,10,12,14,17,19,20,27,34,35,37,41,43,44,56,60,65,66,70,-1,-1,-1,-1,-1,-1},
{0,10,18,23,25,26,35,40,44,47,48,59,60,70,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,3,5,6,20,22,23,28,29,32,39,40,41,50,53,58,60,66,68,77,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,7,9,10,30,33,52,55,59,64,66,72,73,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,10,11,12,22,29,33,35,38,47,48,50,56,60,61,62,70,71,74,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,4,6,15,17,20,26,27,37,42,44,45,52,53,54,55,56,67,69,71,-1,-1,-1,-1,-1,-1,-1,-1},
{8,10,14,18,21,22,30,34,36,45,52,68,69,70,72,78,81,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,9,15,17,19,24,25,27,31,38,41,46,47,56,59,61,65,67,70,77,79,-1,-1,-1,-1,-1,-1,-1,-1},
{0,4,5,6,18,21,25,28,29,30,33,35,40,43,48,55,58,63,64,65,66,67,69,75,81,-1,-1,-1,-1},
{3,6,8,13,14,21,23,32,34,36,37,40,49,50,51,60,63,65,66,71,79,-1,-1,-1,-1,-1,-1,-1,-1},
{0,2,5,6,7,8,20,22,32,33,42,44,45,46,49,54,56,60,63,64,65,66,72,76,78,81,85,-1,-1},
{8,11,15,16,21,24,25,29,33,37,42,47,50,61,62,64,82,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,9,11,15,17,20,21,27,30,35,41,51,56,66,67,73,81,82,85,87,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,4,9,12,14,20,21,23,27,28,29,40,56,58,61,62,66,72,76,78,81,82,87,-1,-1,-1,-1,-1,-1},
{2,9,12,15,20,23,25,28,33,36,41,45,49,53,55,57,60,61,66,67,69,77,81,87,-1,-1,-1,-1,-1},
{3,7,14,15,18,21,26,34,38,42,43,46,47,49,52,56,61,62,64,71,81,-1,-1,-1,-1,-1,-1,-1,-1},
{10,13,15,20,21,26,29,33,36,41,42,47,49,51,52,53,60,63,69,73,84,86,89,-1,-1,-1,-1,-1,-1},
{2,3,7,12,13,19,20,21,22,28,31,33,34,42,49,51,53,58,60,63,66,71,73,75,76,81,85,88,89},
{4,5,11,14,15,16,17,21,22,26,32,35,39,50,55,56,58,67,72,79,89,-1,-1,-1,-1,-1,-1,-1,-1},
{0,4,8,9,11,16,17,20,22,31,32,46,48,50,51,59,61,67,68,72,75,80,81,84,87,-1,-1,-1,-1}};


// Typedefs
typedef int[0, numberOfChains - 1] chainId_t;

// Ints and Arrays
int Machines = numberOfMachines;
int numberOfChainsDone = 0;
int tasksDone[numberOfTasks];
bool runnableChains[numberOfChains];

// Channels
broadcast chan startMachines;
broadcast chan chainMachineChan[numberOfChains];
broadcast chan activateChains;
broadcast chan ChainDone[numberOfChains];</declaration>
	<template>
		<name x="5" y="5">Composer</name>
		<declaration>// Place local declarations here.
clock time;</declaration>
		<location id="id0" x="-102" y="-255">
			<name x="-112" y="-289">Init</name>
			<label kind="invariant" x="-246" y="-238">numberOfChainsDone &lt;= numberOfChains</label>
			<label kind="exponentialrate" x="-112" y="-221">0</label>
		</location>
		<location id="id1" x="331" y="-255">
			<name x="321" y="-289">Done</name>
		</location>
		<init ref="id0"/>
		<transition>
			<source ref="id0"/>
			<target ref="id1"/>
			<label kind="guard" x="-17" y="-289">numberOfChainsDone &gt;= numberOfChains</label>
		</transition>
	</template>
	<template>
		<name>Chain</name>
		<parameter>const chainId_t cid</parameter>
		<declaration>clock x;
const int chainSize = globalChainSize[cid];
int index = 0;
int TimeUnit = 2;

bool AllDependenciesDone()
{
    bool dependenciesDone = 1;
    int i;
    for (i = 0; i &lt; maxDependencies; i++)
    {
        int value = dependencies[globalChains[cid][index]][i];
        if (value == -1)
            return dependenciesDone;

        dependenciesDone &amp;= tasksDone[value];
    }
    return dependenciesDone;
}

void DecrementWork(int workDone)
{
    int currentDuration = durations[globalChains[cid][index]];

    if (workDone &gt; currentDuration)
        durations[globalChains[cid][index]] = 0;
    else
        durations[globalChains[cid][index]] -= workDone;
}</declaration>
		<location id="id2" x="-68" y="-238">
			<name x="-78" y="-272">Idle</name>
			<label kind="exponentialrate" x="-51" y="-263">3</label>
		</location>
		<location id="id3" x="-68" y="51">
			<name x="-93" y="68">Running</name>
			<label kind="invariant" x="-127" y="85">x &lt;= chainDuration[cid]</label>
		</location>
		<location id="id4" x="-399" y="-238">
			<name x="-409" y="-272">Done</name>
		</location>
		<init ref="id2"/>
		<transition controllable="false">
			<source ref="id3"/>
			<target ref="id2"/>
			<label kind="select" x="-59" y="-119">chain_id : chainId_t</label>
			<label kind="synchronisation" x="-59" y="-102">ChainDone[chain_id]?</label>
			<label kind="assignment" x="-59" y="-85">DecrementWork(chainDuration[chain_id]),
Machines++</label>
		</transition>
		<transition controllable="false">
			<source ref="id2"/>
			<target ref="id4"/>
			<label kind="guard" x="-357" y="-280">index &gt;= chainSize</label>
			<label kind="assignment" x="-357" y="-263">numberOfChainsDone++</label>
		</transition>
		<transition controllable="false">
			<source ref="id3"/>
			<target ref="id2"/>
			<label kind="guard" x="-433" y="-119">x &gt;= chainDuration[cid]</label>
			<label kind="synchronisation" x="-433" y="-102">ChainDone[cid]!</label>
			<label kind="assignment" x="-433" y="-85">Machines++,
tasksDone[globalChains[cid][index]] = 1,
index++</label>
			<nail x="-170" y="-8"/>
			<nail x="-170" y="-170"/>
		</transition>
		<transition>
			<source ref="id2"/>
			<target ref="id3"/>
			<label kind="guard" x="136" y="-238">index &lt; chainSize &amp;&amp;
Machines &gt; 0 &amp;&amp; AllDependenciesDone()</label>
			<label kind="assignment" x="136" y="-204">chainDuration[cid] = durations[globalChains[cid][index]],
Machines--,
x = 0</label>
			<nail x="127" y="-238"/>
			<nail x="127" y="51"/>
		</transition>
	</template>
	<system>// Place template instantiations here.

// List one or more processes to be composed into a system.
system Composer, Chain;
    </system>
	<queries>
		<query>
			<formula>A[] not deadlock</formula>
			<comment></comment>
		</query>
		<query>
			<formula>strategy TimeSchedule = minE (Composer.time) [&lt;=60] : &lt;&gt;Composer.Done</formula>
			<comment></comment>
		</query>
		<query>
			<formula>simulate 5000 [&lt;=200] {Composer.Done}</formula>
			<comment></comment>
		</query>
		<query>
			<formula>simulate 5000 [&lt;=65] {Composer.Done} under TimeSchedule</formula>
			<comment></comment>
		</query>
		<query>
			<formula>inf{Composer.Done} : Composer.time under TimeSchedule</formula>
			<comment></comment>
		</query>
		<query>
			<formula>A&lt;&gt; Composer.Done</formula>
			<comment></comment>
		</query>
		<query>
			<formula>E&lt;&gt; Composer.Done</formula>
			<comment></comment>
		</query>
	</queries>
</nta>
