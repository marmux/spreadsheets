<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/researchgroup/darts/uppaal/flat-1_2.dtd'>
<nta>
<declaration>//Variables
const int numberOfChains = 31;
const int numberOfTasks = 100;
const int numberOfMachines = 11;
const int maxDependencies = 11;
const int longestChain = 7;
const int globalChainSize[numberOfChains] = {7,3,6,2,7,4,6,5,4,2,2,4,4,4,3,3,4,3,2,3,2,1,2,1,4,1,3,5,1,1,1};
const int globalChains[numberOfChains][longestChain] = {
{0,19,39,52,55,74,77},
{1,60,83,-1,-1,-1,-1},
{2,56,58,62,90,99,-1},
{3,96,-1,-1,-1,-1,-1},
{4,6,67,72,73,78,86},
{5,80,85,92,-1,-1,-1},
{7,16,31,45,54,91,-1},
{8,24,63,95,98,-1,-1},
{9,34,75,97,-1,-1,-1},
{10,87,-1,-1,-1,-1,-1},
{11,49,-1,-1,-1,-1,-1},
{12,22,89,94,-1,-1,-1},
{13,44,59,93,-1,-1,-1},
{14,46,81,82,-1,-1,-1},
{15,26,76,-1,-1,-1,-1},
{17,51,84,-1,-1,-1,-1},
{18,64,66,79,-1,-1,-1},
{20,57,61,-1,-1,-1,-1},
{21,88,-1,-1,-1,-1,-1},
{23,41,70,-1,-1,-1,-1},
{25,69,-1,-1,-1,-1,-1},
{27,-1,-1,-1,-1,-1,-1},
{28,53,-1,-1,-1,-1,-1},
{29,-1,-1,-1,-1,-1,-1},
{30,33,43,50,-1,-1,-1},
{32,-1,-1,-1,-1,-1,-1},
{35,48,71,-1,-1,-1,-1},
{36,38,42,65,68,-1,-1},
{37,-1,-1,-1,-1,-1,-1},
{40,-1,-1,-1,-1,-1,-1},
{47,-1,-1,-1,-1,-1,-1}};
int chainDuration[numberOfChains] = {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1};
int durations[numberOfTasks] = {9,1,7,8,3,1,9,8,9,8,4,9,4,5,8,5,8,5,10,7,6,9,8,1,2,7,7,9,4,2,6,5,8,7,4,6,7,9,2,2,7,6,2,8,4,10,6,2,10,9,4,10,2,2,1,3,1,2,7,4,1,4,3,3,5,5,2,4,3,1,7,3,8,6,5,9,5,10,7,3,1,7,2,3,5,7,10,7,2,1,10,8,3,4,6,4,3,7,2,8};
const int dependencies[numberOfTasks][maxDependencies] = {
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{13,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,5,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,7,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,3,10,-1,-1,-1,-1,-1,-1,-1,-1},
{6,10,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{11,12,15,17,-1,-1,-1,-1,-1,-1,-1},
{11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,16,17,-1,-1,-1,-1,-1,-1,-1,-1},
{6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,15,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{26,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,12,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,16,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{17,20,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{30,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,9,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,9,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,16,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{28,31,36,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,3,19,22,-1,-1,-1,-1,-1,-1},
{1,24,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{15,19,23,-1,-1,-1,-1,-1,-1,-1,-1},
{33,34,37,38,40,-1,-1,-1,-1,-1,-1},
{0,33,36,41,-1,-1,-1,-1,-1,-1,-1},
{10,13,25,-1,-1,-1,-1,-1,-1,-1,-1},
{6,7,31,41,-1,-1,-1,-1,-1,-1,-1},
{3,14,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{31,35,38,-1,-1,-1,-1,-1,-1,-1,-1},
{4,11,13,30,31,-1,-1,-1,-1,-1,-1},
{43,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{17,18,26,27,-1,-1,-1,-1,-1,-1,-1},
{16,39,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{26,28,45,-1,-1,-1,-1,-1,-1,-1,-1},
{6,28,41,45,48,-1,-1,-1,-1,-1,-1},
{8,52,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,9,12,19,22,25,-1,-1,-1,-1,-1},
{7,17,20,-1,-1,-1,-1,-1,-1,-1,-1},
{2,4,16,53,56,57,-1,-1,-1,-1,-1},
{12,22,25,29,32,44,-1,-1,-1,-1,-1},
{1,44,47,52,-1,-1,-1,-1,-1,-1,-1},
{34,46,57,-1,-1,-1,-1,-1,-1,-1,-1},
{8,13,21,22,51,52,58,-1,-1,-1,-1},
{7,24,29,30,45,-1,-1,-1,-1,-1,-1},
{2,11,18,28,59,61,-1,-1,-1,-1,-1},
{19,23,40,42,59,-1,-1,-1,-1,-1,-1},
{14,31,64,-1,-1,-1,-1,-1,-1,-1,-1},
{0,6,28,29,37,48,49,-1,-1,-1,-1},
{6,22,65,-1,-1,-1,-1,-1,-1,-1,-1},
{13,25,41,-1,-1,-1,-1,-1,-1,-1,-1},
{9,40,41,42,63,-1,-1,-1,-1,-1,-1},
{41,48,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,16,25,55,67,-1,-1,-1,-1,-1,-1},
{2,53,69,72,-1,-1,-1,-1,-1,-1,-1},
{14,19,21,34,45,47,55,56,58,61,62},
{6,12,31,34,38,48,-1,-1,-1,-1,-1},
{26,31,38,48,56,-1,-1,-1,-1,-1,-1},
{6,24,26,32,35,36,48,67,74,-1,-1},
{31,41,42,50,63,73,74,75,-1,-1,-1},
{25,53,63,66,-1,-1,-1,-1,-1,-1,-1},
{5,56,72,-1,-1,-1,-1,-1,-1,-1,-1},
{25,38,46,58,64,73,-1,-1,-1,-1,-1},
{15,24,81,-1,-1,-1,-1,-1,-1,-1,-1},
{32,40,52,59,60,76,79,-1,-1,-1,-1},
{11,51,52,59,-1,-1,-1,-1,-1,-1,-1},
{15,22,60,65,66,76,80,84,-1,-1,-1},
{12,13,14,28,37,61,70,78,-1,-1,-1},
{10,34,36,53,63,82,-1,-1,-1,-1,-1},
{7,21,44,48,68,-1,-1,-1,-1,-1,-1},
{21,22,41,47,67,72,-1,-1,-1,-1,-1},
{16,26,28,32,33,57,62,72,82,-1,-1},
{10,13,17,46,54,55,58,65,-1,-1,-1},
{15,26,28,40,50,64,81,85,91,-1,-1},
{11,14,21,27,45,50,59,74,-1,-1,-1},
{0,14,38,48,54,60,69,89,-1,-1,-1},
{16,21,28,61,63,67,88,-1,-1,-1,-1},
{0,3,6,9,16,24,47,65,76,-1,-1},
{31,46,48,49,52,59,65,67,69,75,-1},
{25,27,34,47,48,50,66,95,-1,-1,-1},
{0,11,12,22,24,28,32,54,63,90,-1}};


// Typedefs
typedef int[0, numberOfChains - 1] chainId_t;

// Ints and Arrays
int Machines = numberOfMachines;
int numberOfChainsDone = 0;
int tasksDone[numberOfTasks];
bool runnableChains[numberOfChains];

// Channels
broadcast chan startMachines;
broadcast chan chainMachineChan[numberOfChains];
broadcast chan activateChains;
broadcast chan ChainDone[numberOfChains];</declaration>
	<template>
		<name x="5" y="5">Composer</name>
		<declaration>// Place local declarations here.
clock time;</declaration>
		<location id="id0" x="-102" y="-255">
			<name x="-112" y="-289">Init</name>
			<label kind="invariant" x="-246" y="-238">numberOfChainsDone &lt;= numberOfChains</label>
			<label kind="exponentialrate" x="-112" y="-221">0</label>
		</location>
		<location id="id1" x="331" y="-255">
			<name x="321" y="-289">Done</name>
		</location>
		<init ref="id0"/>
		<transition>
			<source ref="id0"/>
			<target ref="id1"/>
			<label kind="guard" x="-17" y="-289">numberOfChainsDone &gt;= numberOfChains</label>
		</transition>
	</template>
	<template>
		<name>Chain</name>
		<parameter>const chainId_t cid</parameter>
		<declaration>clock x;
const int chainSize = globalChainSize[cid];
int index = 0;
int TimeUnit = 2;

bool AllDependenciesDone()
{
    bool dependenciesDone = 1;
    int i;
    for (i = 0; i &lt; maxDependencies; i++)
    {
        int value = dependencies[globalChains[cid][index]][i];
        if (value == -1)
            return dependenciesDone;

        dependenciesDone &amp;= tasksDone[value];
    }
    return dependenciesDone;
}

void DecrementWork(int workDone)
{
    int currentDuration = durations[globalChains[cid][index]];

    if (workDone &gt; currentDuration)
        durations[globalChains[cid][index]] = 0;
    else
        durations[globalChains[cid][index]] -= workDone;
}</declaration>
		<location id="id2" x="-68" y="-238">
			<name x="-78" y="-272">Idle</name>
			<label kind="exponentialrate" x="-51" y="-263">3</label>
		</location>
		<location id="id3" x="-68" y="51">
			<name x="-93" y="68">Running</name>
			<label kind="invariant" x="-127" y="85">x &lt;= chainDuration[cid]</label>
		</location>
		<location id="id4" x="-399" y="-238">
			<name x="-409" y="-272">Done</name>
		</location>
		<init ref="id2"/>
		<transition controllable="false">
			<source ref="id3"/>
			<target ref="id2"/>
			<label kind="select" x="-59" y="-119">chain_id : chainId_t</label>
			<label kind="synchronisation" x="-59" y="-102">ChainDone[chain_id]?</label>
			<label kind="assignment" x="-59" y="-85">DecrementWork(chainDuration[chain_id]),
Machines++</label>
		</transition>
		<transition controllable="false">
			<source ref="id2"/>
			<target ref="id4"/>
			<label kind="guard" x="-357" y="-280">index &gt;= chainSize</label>
			<label kind="assignment" x="-357" y="-263">numberOfChainsDone++</label>
		</transition>
		<transition controllable="false">
			<source ref="id3"/>
			<target ref="id2"/>
			<label kind="guard" x="-433" y="-119">x &gt;= chainDuration[cid]</label>
			<label kind="synchronisation" x="-433" y="-102">ChainDone[cid]!</label>
			<label kind="assignment" x="-433" y="-85">Machines++,
tasksDone[globalChains[cid][index]] = 1,
index++</label>
			<nail x="-170" y="-8"/>
			<nail x="-170" y="-170"/>
		</transition>
		<transition>
			<source ref="id2"/>
			<target ref="id3"/>
			<label kind="guard" x="136" y="-238">index &lt; chainSize &amp;&amp;
Machines &gt; 0 &amp;&amp; AllDependenciesDone()</label>
			<label kind="assignment" x="136" y="-204">chainDuration[cid] = durations[globalChains[cid][index]],
Machines--,
x = 0</label>
			<nail x="127" y="-238"/>
			<nail x="127" y="51"/>
		</transition>
	</template>
	<system>// Place template instantiations here.

// List one or more processes to be composed into a system.
system Composer, Chain;
    </system>
	<queries>
		<query>
			<formula>A[] not deadlock</formula>
			<comment></comment>
		</query>
		<query>
			<formula>strategy TimeSchedule = minE (Composer.time) [&lt;=60] : &lt;&gt;Composer.Done</formula>
			<comment></comment>
		</query>
		<query>
			<formula>simulate 5000 [&lt;=200] {Composer.Done}</formula>
			<comment></comment>
		</query>
		<query>
			<formula>simulate 5000 [&lt;=65] {Composer.Done} under TimeSchedule</formula>
			<comment></comment>
		</query>
		<query>
			<formula>inf{Composer.Done} : Composer.time under TimeSchedule</formula>
			<comment></comment>
		</query>
		<query>
			<formula>A&lt;&gt; Composer.Done</formula>
			<comment></comment>
		</query>
		<query>
			<formula>E&lt;&gt; Composer.Done</formula>
			<comment></comment>
		</query>
	</queries>
</nta>
