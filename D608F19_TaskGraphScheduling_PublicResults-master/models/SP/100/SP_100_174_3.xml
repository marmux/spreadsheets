<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/researchgroup/darts/uppaal/flat-1_2.dtd'>
<nta>
<declaration>//Variables
const int numberOfChains = 33;
const int numberOfTasks = 100;
const int numberOfMachines = 3;
const int maxDependencies = 29;
const int longestChain = 8;
const int globalChainSize[numberOfChains] = {8,3,2,4,3,4,3,3,3,3,3,4,4,4,4,5,2,5,4,3,2,3,3,3,2,3,2,2,2,1,1,1,1};
const int globalChains[numberOfChains][longestChain] = {
{0,12,37,39,53,60,76,94},
{1,80,90,-1,-1,-1,-1,-1},
{2,91,-1,-1,-1,-1,-1,-1},
{3,54,64,96,-1,-1,-1,-1},
{4,86,99,-1,-1,-1,-1,-1},
{5,41,82,93,-1,-1,-1,-1},
{6,55,95,-1,-1,-1,-1,-1},
{7,65,78,-1,-1,-1,-1,-1},
{8,77,92,-1,-1,-1,-1,-1},
{9,71,98,-1,-1,-1,-1,-1},
{10,75,79,-1,-1,-1,-1,-1},
{11,57,70,83,-1,-1,-1,-1},
{13,21,72,97,-1,-1,-1,-1},
{14,58,69,84,-1,-1,-1,-1},
{15,73,85,89,-1,-1,-1,-1},
{16,48,51,61,87,-1,-1,-1},
{17,81,-1,-1,-1,-1,-1,-1},
{18,22,46,74,88,-1,-1,-1},
{19,44,62,66,-1,-1,-1,-1},
{20,52,56,-1,-1,-1,-1,-1},
{23,68,-1,-1,-1,-1,-1,-1},
{24,45,59,-1,-1,-1,-1,-1},
{25,42,67,-1,-1,-1,-1,-1},
{26,50,63,-1,-1,-1,-1,-1},
{27,49,-1,-1,-1,-1,-1,-1},
{28,35,47,-1,-1,-1,-1,-1},
{29,43,-1,-1,-1,-1,-1,-1},
{30,34,-1,-1,-1,-1,-1,-1},
{31,38,-1,-1,-1,-1,-1,-1},
{32,-1,-1,-1,-1,-1,-1,-1},
{33,-1,-1,-1,-1,-1,-1,-1},
{36,-1,-1,-1,-1,-1,-1,-1},
{40,-1,-1,-1,-1,-1,-1,-1}};
int chainDuration[numberOfChains] = {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1};
int durations[numberOfTasks] = {1,1,3,17,3,6,11,2,5,5,20,12,22,17,10,7,14,7,16,8,5,23,1,1,1,8,1,4,16,17,6,27,3,1,5,7,31,8,8,5,3,34,14,2,16,3,7,6,16,29,1,9,4,4,6,1,8,5,27,14,10,1,2,10,14,30,1,15,2,14,3,4,2,10,5,9,1,2,16,5,10,7,1,5,9,3,11,4,3,3,2,10,3,17,1,15,1,2,6,10};
const int dependencies[numberOfTasks][maxDependencies] = {
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,6,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,2,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,6,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,2,6,8,10,18,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,3,7,13,16,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,4,5,6,8,13,15,17,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,2,4,8,10,11,15,17,18,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,11,12,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,2,6,11,15,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{11,12,18,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,8,11,13,14,18,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,6,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,3,7,8,10,17,18,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,3,12,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,9,12,13,18,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,3,4,5,20,24,25,27,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,4,6,9,15,25,31,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,6,18,20,22,28,29,30,31,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,12,13,18,19,22,28,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,8,12,13,22,26,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,12,20,29,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,6,13,15,18,24,27,29,31,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,3,4,6,7,9,10,18,24,27,28,29,33,34,36,37,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,5,13,20,27,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,4,5,8,12,15,20,24,25,31,33,37,38,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,11,15,16,20,21,22,24,25,26,30,32,33,36,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,11,13,17,18,20,25,29,31,34,35,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,7,10,11,13,18,19,23,24,28,30,32,33,37,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,6,7,10,13,15,18,24,25,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,4,6,7,16,17,18,22,24,28,37,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,10,14,16,19,25,26,34,35,36,37,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,4,5,7,12,13,15,16,20,22,29,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,3,7,9,15,19,22,25,27,29,31,32,36,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,5,7,11,17,19,24,26,28,31,32,34,36,39,40,47,48,49,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,3,6,7,13,15,18,27,28,33,38,39,43,46,47,48,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,6,9,12,13,17,20,23,24,26,28,31,32,34,35,38,43,44,49,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,4,5,11,14,19,24,28,35,37,39,45,46,48,49,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,3,8,10,11,18,19,21,33,34,36,37,40,45,46,48,52,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,5,6,7,12,22,24,25,27,28,30,32,35,39,40,41,45,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,16,18,20,22,27,31,32,42,43,45,46,47,48,49,52,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,3,5,7,10,11,14,15,19,22,24,29,32,33,36,39,45,51,52,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,2,4,5,6,11,14,23,35,36,40,42,45,49,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,10,12,14,15,16,25,26,29,30,35,41,42,45,46,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,6,8,14,23,24,27,29,31,33,34,38,39,40,42,50,52,53,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,6,21,24,26,29,37,41,45,46,48,49,50,51,53,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,8,13,17,23,26,30,32,37,44,48,51,53,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,11,18,20,21,28,29,30,31,33,35,38,41,46,49,50,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,3,4,5,8,21,24,28,39,44,54,57,60,63,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,4,7,8,12,13,18,20,21,22,23,25,26,29,36,38,42,45,51,55,57,-1,-1,-1,-1,-1,-1,-1},
{8,9,11,21,23,27,34,35,37,46,47,48,56,59,61,62,63,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,6,14,17,21,26,30,41,42,44,57,60,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,6,10,11,21,23,26,31,36,46,48,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,5,6,14,16,17,20,22,23,25,33,41,50,55,56,58,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,6,10,13,18,19,22,26,29,37,38,39,50,52,54,57,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,5,7,9,11,13,19,20,21,25,27,29,34,36,38,40,41,45,52,53,55,57,61,-1,-1,-1,-1,-1,-1},
{5,7,15,18,21,22,30,31,32,34,39,41,42,44,46,48,55,60,61,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,5,7,10,11,12,15,26,27,31,37,40,42,49,52,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,12,18,21,22,25,26,27,33,41,44,46,49,54,56,57,59,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,5,6,9,10,16,18,24,25,27,28,29,30,33,34,36,39,40,43,52,54,56,57,58,-1,-1,-1,-1,-1},
{1,14,20,22,23,27,29,30,35,37,39,42,45,46,47,48,56,59,60,61,63,-1,-1,-1,-1,-1,-1,-1,-1},
{0,3,4,7,8,13,19,20,25,28,29,32,33,37,45,48,50,54,68,69,72,74,-1,-1,-1,-1,-1,-1,-1},
{2,5,6,8,13,14,18,24,28,30,31,33,37,38,39,40,62,64,65,66,69,75,-1,-1,-1,-1,-1,-1,-1},
{2,6,9,12,15,16,23,26,30,31,44,46,47,52,63,64,65,66,67,69,74,75,-1,-1,-1,-1,-1,-1,-1},
{0,1,5,6,12,16,18,24,34,36,43,54,60,65,71,73,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{9,17,25,26,39,43,46,48,49,51,52,54,56,57,58,59,60,68,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,5,7,11,14,18,25,27,39,41,53,54,57,58,61,72,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,6,9,13,16,17,23,27,29,30,32,34,35,37,38,39,41,43,44,53,61,69,70,-1,-1,-1,-1,-1,-1},
{1,2,7,11,17,26,34,40,41,42,44,50,55,65,68,69,73,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,8,16,26,27,29,30,33,34,36,37,38,44,49,51,53,58,61,65,66,73,-1,-1,-1,-1,-1,-1,-1,-1},
{0,3,4,7,8,9,20,21,24,28,31,34,35,38,42,47,48,54,55,60,62,64,67,69,72,74,-1,-1,-1},
{7,8,10,14,18,21,22,25,31,34,36,41,50,53,61,66,67,69,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,15,19,24,25,26,29,30,35,36,39,40,43,54,63,66,70,73,74,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,7,14,16,17,19,24,32,34,42,44,51,52,54,61,63,85,88,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,14,15,17,18,19,20,22,23,24,31,33,39,44,46,51,64,65,70,76,80,85,86,-1,-1,-1,-1,-1,-1},
{0,2,3,17,20,23,24,27,35,39,41,62,63,64,68,72,73,75,76,83,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,5,6,7,17,18,21,24,28,35,43,49,60,65,71,77,87,88,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,2,5,16,17,21,23,26,27,28,32,33,35,40,44,45,48,53,55,56,65,69,70,72,81,82,84,85,86},
{3,4,10,12,14,15,25,29,34,37,43,47,57,58,59,60,62,67,68,70,71,73,76,83,85,86,-1,-1,-1},
{2,5,6,13,15,16,17,20,22,27,30,39,42,45,50,51,55,56,60,63,67,69,73,76,79,83,-1,-1,-1},
{2,6,13,23,24,26,28,37,39,41,42,44,53,54,55,56,64,70,74,78,79,81,87,-1,-1,-1,-1,-1,-1},
{1,13,16,17,19,20,28,32,37,46,48,49,58,61,65,68,69,72,82,84,86,-1,-1,-1,-1,-1,-1,-1,-1},
{0,5,8,13,16,17,18,20,23,28,34,38,43,45,47,51,55,66,67,71,73,74,77,86,-1,-1,-1,-1,-1},
{1,2,6,8,10,11,12,15,17,22,27,31,40,45,47,48,53,56,57,65,79,81,84,86,87,-1,-1,-1,-1}};


// Typedefs
typedef int[0, numberOfChains - 1] chainId_t;

// Ints and Arrays
int Machines = numberOfMachines;
int numberOfChainsDone = 0;
int tasksDone[numberOfTasks];
bool runnableChains[numberOfChains];

// Channels
broadcast chan startMachines;
broadcast chan chainMachineChan[numberOfChains];
broadcast chan activateChains;
broadcast chan ChainDone[numberOfChains];</declaration>
	<template>
		<name x="5" y="5">Composer</name>
		<declaration>// Place local declarations here.
clock time;</declaration>
		<location id="id0" x="-102" y="-255">
			<name x="-112" y="-289">Init</name>
			<label kind="invariant" x="-246" y="-238">numberOfChainsDone &lt;= numberOfChains</label>
			<label kind="exponentialrate" x="-112" y="-221">0</label>
		</location>
		<location id="id1" x="331" y="-255">
			<name x="321" y="-289">Done</name>
		</location>
		<init ref="id0"/>
		<transition>
			<source ref="id0"/>
			<target ref="id1"/>
			<label kind="guard" x="-17" y="-289">numberOfChainsDone &gt;= numberOfChains</label>
		</transition>
	</template>
	<template>
		<name>Chain</name>
		<parameter>const chainId_t cid</parameter>
		<declaration>clock x;
const int chainSize = globalChainSize[cid];
int index = 0;
int TimeUnit = 2;

bool AllDependenciesDone()
{
    bool dependenciesDone = 1;
    int i;
    for (i = 0; i &lt; maxDependencies; i++)
    {
        int value = dependencies[globalChains[cid][index]][i];
        if (value == -1)
            return dependenciesDone;

        dependenciesDone &amp;= tasksDone[value];
    }
    return dependenciesDone;
}

void DecrementWork(int workDone)
{
    int currentDuration = durations[globalChains[cid][index]];

    if (workDone &gt; currentDuration)
        durations[globalChains[cid][index]] = 0;
    else
        durations[globalChains[cid][index]] -= workDone;
}</declaration>
		<location id="id2" x="-68" y="-238">
			<name x="-78" y="-272">Idle</name>
			<label kind="exponentialrate" x="-51" y="-263">3</label>
		</location>
		<location id="id3" x="-68" y="51">
			<name x="-93" y="68">Running</name>
			<label kind="invariant" x="-127" y="85">x &lt;= chainDuration[cid]</label>
		</location>
		<location id="id4" x="-399" y="-238">
			<name x="-409" y="-272">Done</name>
		</location>
		<init ref="id2"/>
		<transition controllable="false">
			<source ref="id3"/>
			<target ref="id2"/>
			<label kind="select" x="-59" y="-119">chain_id : chainId_t</label>
			<label kind="synchronisation" x="-59" y="-102">ChainDone[chain_id]?</label>
			<label kind="assignment" x="-59" y="-85">DecrementWork(chainDuration[chain_id]),
Machines++</label>
		</transition>
		<transition controllable="false">
			<source ref="id2"/>
			<target ref="id4"/>
			<label kind="guard" x="-357" y="-280">index &gt;= chainSize</label>
			<label kind="assignment" x="-357" y="-263">numberOfChainsDone++</label>
		</transition>
		<transition controllable="false">
			<source ref="id3"/>
			<target ref="id2"/>
			<label kind="guard" x="-433" y="-119">x &gt;= chainDuration[cid]</label>
			<label kind="synchronisation" x="-433" y="-102">ChainDone[cid]!</label>
			<label kind="assignment" x="-433" y="-85">Machines++,
tasksDone[globalChains[cid][index]] = 1,
index++</label>
			<nail x="-170" y="-8"/>
			<nail x="-170" y="-170"/>
		</transition>
		<transition>
			<source ref="id2"/>
			<target ref="id3"/>
			<label kind="guard" x="136" y="-238">index &lt; chainSize &amp;&amp;
Machines &gt; 0 &amp;&amp; AllDependenciesDone()</label>
			<label kind="assignment" x="136" y="-204">chainDuration[cid] = durations[globalChains[cid][index]],
Machines--,
x = 0</label>
			<nail x="127" y="-238"/>
			<nail x="127" y="51"/>
		</transition>
	</template>
	<system>// Place template instantiations here.

// List one or more processes to be composed into a system.
system Composer, Chain;
    </system>
	<queries>
		<query>
			<formula>A[] not deadlock</formula>
			<comment></comment>
		</query>
		<query>
			<formula>strategy TimeSchedule = minE (Composer.time) [&lt;=60] : &lt;&gt;Composer.Done</formula>
			<comment></comment>
		</query>
		<query>
			<formula>simulate 5000 [&lt;=200] {Composer.Done}</formula>
			<comment></comment>
		</query>
		<query>
			<formula>simulate 5000 [&lt;=65] {Composer.Done} under TimeSchedule</formula>
			<comment></comment>
		</query>
		<query>
			<formula>inf{Composer.Done} : Composer.time under TimeSchedule</formula>
			<comment></comment>
		</query>
		<query>
			<formula>A&lt;&gt; Composer.Done</formula>
			<comment></comment>
		</query>
		<query>
			<formula>E&lt;&gt; Composer.Done</formula>
			<comment></comment>
		</query>
	</queries>
</nta>
