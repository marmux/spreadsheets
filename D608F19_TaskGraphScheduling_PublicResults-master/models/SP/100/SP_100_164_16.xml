<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/researchgroup/darts/uppaal/flat-1_2.dtd'>
<nta>
<declaration>//Variables
const int numberOfChains = 27;
const int numberOfTasks = 100;
const int numberOfMachines = 16;
const int maxDependencies = 29;
const int longestChain = 11;
const int globalChainSize[numberOfChains] = {5,8,4,5,4,11,6,3,4,2,6,3,2,2,2,4,4,3,3,2,3,4,4,2,1,1,2};
const int globalChains[numberOfChains][longestChain] = {
{0,2,18,97,99,-1,-1,-1,-1,-1,-1},
{1,34,64,71,78,83,92,96,-1,-1,-1},
{3,89,90,98,-1,-1,-1,-1,-1,-1,-1},
{4,73,79,85,95,-1,-1,-1,-1,-1,-1},
{5,81,82,94,-1,-1,-1,-1,-1,-1,-1},
{6,38,43,51,52,54,56,61,67,72,93},
{7,70,74,77,86,88,-1,-1,-1,-1,-1},
{8,30,91,-1,-1,-1,-1,-1,-1,-1,-1},
{9,59,66,87,-1,-1,-1,-1,-1,-1,-1},
{10,84,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{11,26,42,57,65,69,-1,-1,-1,-1,-1},
{12,44,75,-1,-1,-1,-1,-1,-1,-1,-1},
{13,76,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{14,68,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{15,80,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{16,46,47,62,-1,-1,-1,-1,-1,-1,-1},
{17,31,35,53,-1,-1,-1,-1,-1,-1,-1},
{19,29,60,-1,-1,-1,-1,-1,-1,-1,-1},
{20,41,63,-1,-1,-1,-1,-1,-1,-1,-1},
{21,58,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{22,39,55,-1,-1,-1,-1,-1,-1,-1,-1},
{23,27,36,49,-1,-1,-1,-1,-1,-1,-1},
{24,28,40,45,-1,-1,-1,-1,-1,-1,-1},
{25,37,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{32,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{33,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{48,50,-1,-1,-1,-1,-1,-1,-1,-1,-1}};
int chainDuration[numberOfChains] = {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1};
int durations[numberOfTasks] = {7,5,11,10,4,8,11,6,6,4,10,13,9,10,10,6,13,6,9,6,6,6,14,8,6,9,6,4,6,18,12,9,4,6,17,5,6,6,11,5,9,13,6,6,4,7,10,6,5,14,7,5,10,14,13,6,6,3,12,5,6,5,5,12,7,9,3,11,7,6,6,5,13,9,6,6,7,6,6,6,5,6,10,9,6,11,6,14,5,5,11,10,5,5,11,3,6,7,4,6};
const int dependencies[numberOfTasks][maxDependencies] = {
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,4,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,6,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{9,10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,7,8,9,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,5,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,2,11,12,13,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,2,3,7,9,14,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,8,12,17,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,11,12,13,14,15,18,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,7,9,12,15,18,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,18,19,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{20,22,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,5,9,10,12,15,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,14,15,24,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,7,8,10,11,15,17,18,19,22,23,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,5,12,18,21,23,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,16,21,22,24,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,9,12,14,15,18,19,26,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,4,5,7,8,18,20,26,29,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,4,6,8,10,12,13,15,17,22,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,2,10,25,31,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,4,7,16,21,27,31,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,2,4,6,12,16,26,32,33,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,5,6,7,9,11,24,31,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,4,10,12,14,24,25,27,30,35,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{9,13,16,21,23,25,36,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,2,5,6,9,15,19,23,26,32,35,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,2,6,8,12,16,19,22,31,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,8,10,16,20,28,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,7,8,12,14,15,19,20,22,23,33,34,37,40,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,5,8,9,11,12,21,26,31,36,37,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,4,5,6,7,16,20,21,22,25,26,27,38,39,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,4,12,13,17,20,21,26,34,36,40,42,43,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,11,18,21,26,35,40,41,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,2,5,7,12,16,20,21,25,29,37,38,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,5,10,11,15,19,29,35,36,37,42,44,45,46,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,5,6,11,13,40,42,43,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,4,9,12,16,30,36,42,46,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,5,6,9,20,26,39,47,48,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,5,7,12,14,23,27,32,34,36,38,43,44,48,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,2,8,12,21,22,23,27,33,37,43,46,47,50,51,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,3,9,13,24,29,30,35,38,40,43,45,49,50,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,3,7,11,14,25,31,34,36,38,52,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,5,13,14,17,23,24,35,39,42,51,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,3,4,5,7,10,11,12,14,20,29,30,31,36,38,42,54,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,8,10,11,18,23,24,27,28,35,37,42,52,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,7,8,12,17,20,21,22,24,28,32,39,46,47,49,55,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,9,10,12,17,18,40,42,43,45,51,52,54,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,11,12,22,26,29,34,39,48,49,52,57,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,4,13,21,38,39,46,48,52,56,57,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,14,25,30,35,44,45,47,48,51,54,58,59,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,4,20,21,25,27,39,41,54,57,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,2,3,6,8,17,23,30,32,33,34,36,38,39,41,55,61,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,9,15,26,33,34,35,42,46,48,55,56,57,60,64,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,8,11,15,18,19,20,22,29,30,36,40,47,55,59,61,63,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,3,8,9,28,34,38,46,50,56,58,59,61,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,11,14,24,27,31,32,34,36,37,39,42,50,54,57,66,67,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,14,19,20,25,30,35,48,49,58,60,61,62,65,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,4,5,7,9,16,22,24,38,41,44,46,50,54,57,58,60,61,62,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,13,15,18,22,23,33,34,41,42,50,51,53,64,69,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,8,14,17,22,28,34,37,41,44,45,47,54,55,58,62,67,71,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,4,5,16,19,21,26,30,32,34,36,37,50,63,64,67,68,70,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,6,13,21,26,28,29,36,38,42,45,48,59,64,70,71,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,2,7,9,12,13,18,26,36,44,46,53,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,6,13,16,23,25,28,29,34,37,43,46,47,53,57,58,70,72,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,10,11,23,26,33,37,38,39,43,44,45,51,52,69,73,74,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,12,15,18,28,33,42,45,46,48,54,61,71,75,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,9,12,16,17,30,35,39,44,45,46,49,52,57,58,62,64,65,67,68,70,73,74,78,-1,-1,-1,-1,-1},
{0,6,10,12,15,17,20,25,31,36,38,44,45,48,49,53,57,61,62,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,4,5,8,12,18,22,23,24,29,30,37,39,43,51,53,55,63,64,65,67,68,80,-1,-1,-1,-1,-1,-1},
{0,6,9,15,26,28,30,31,33,36,37,39,42,54,59,69,72,73,76,80,81,-1,-1,-1,-1,-1,-1,-1,-1},
{2,6,9,11,14,17,21,25,36,37,58,63,64,65,78,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,6,7,10,16,25,28,41,47,50,53,61,64,78,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{10,14,17,20,21,22,23,25,29,34,37,38,39,44,48,52,58,60,63,64,65,68,77,79,80,81,82,-1,-1},
{4,21,24,25,32,35,36,39,50,51,54,60,65,69,74,77,80,81,83,84,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,10,16,21,23,29,39,47,55,56,57,61,63,66,76,82,84,86,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,3,6,7,8,10,12,13,24,25,27,29,32,36,38,53,55,66,75,77,86,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,3,5,7,8,12,14,16,33,38,42,43,44,45,47,49,59,66,71,75,76,79,80,81,-1,-1,-1,-1},
{1,9,12,18,40,41,42,47,49,53,55,56,62,65,70,71,79,85,88,89,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,14,16,24,28,30,42,45,48,49,54,63,65,69,72,83,85,87,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,5,6,7,13,20,29,46,55,58,59,66,71,83,84,87,88,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,10,15,16,21,24,25,29,30,33,38,68,70,72,73,76,85,88,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,11,13,15,17,22,24,26,29,33,36,37,39,40,43,45,47,63,68,74,82,85,91,-1,-1,-1,-1,-1,-1},
{4,6,11,14,19,22,28,31,32,36,37,49,50,52,54,61,63,67,71,73,74,82,84,85,86,88,89,-1,-1},
{5,10,16,20,26,27,33,52,54,56,60,61,64,66,68,71,77,79,84,91,92,94,-1,-1,-1,-1,-1,-1,-1},
{0,2,3,4,17,18,20,21,31,32,34,35,39,40,53,55,57,63,64,67,72,79,80,82,84,87,88,89,96},
{0,3,5,11,19,20,26,28,32,33,40,41,43,48,49,52,56,68,79,85,88,90,-1,-1,-1,-1,-1,-1,-1},
{0,15,20,24,29,35,39,41,43,50,55,57,60,61,62,65,68,74,85,96,97,-1,-1,-1,-1,-1,-1,-1,-1}};


// Typedefs
typedef int[0, numberOfChains - 1] chainId_t;

// Ints and Arrays
int Machines = numberOfMachines;
int numberOfChainsDone = 0;
int tasksDone[numberOfTasks];
bool runnableChains[numberOfChains];

// Channels
broadcast chan startMachines;
broadcast chan chainMachineChan[numberOfChains];
broadcast chan activateChains;
broadcast chan ChainDone[numberOfChains];</declaration>
	<template>
		<name x="5" y="5">Composer</name>
		<declaration>// Place local declarations here.
clock time;</declaration>
		<location id="id0" x="-102" y="-255">
			<name x="-112" y="-289">Init</name>
			<label kind="invariant" x="-246" y="-238">numberOfChainsDone &lt;= numberOfChains</label>
			<label kind="exponentialrate" x="-112" y="-221">0</label>
		</location>
		<location id="id1" x="331" y="-255">
			<name x="321" y="-289">Done</name>
		</location>
		<init ref="id0"/>
		<transition>
			<source ref="id0"/>
			<target ref="id1"/>
			<label kind="guard" x="-17" y="-289">numberOfChainsDone &gt;= numberOfChains</label>
		</transition>
	</template>
	<template>
		<name>Chain</name>
		<parameter>const chainId_t cid</parameter>
		<declaration>clock x;
const int chainSize = globalChainSize[cid];
int index = 0;
int TimeUnit = 2;

bool AllDependenciesDone()
{
    bool dependenciesDone = 1;
    int i;
    for (i = 0; i &lt; maxDependencies; i++)
    {
        int value = dependencies[globalChains[cid][index]][i];
        if (value == -1)
            return dependenciesDone;

        dependenciesDone &amp;= tasksDone[value];
    }
    return dependenciesDone;
}

void DecrementWork(int workDone)
{
    int currentDuration = durations[globalChains[cid][index]];

    if (workDone &gt; currentDuration)
        durations[globalChains[cid][index]] = 0;
    else
        durations[globalChains[cid][index]] -= workDone;
}</declaration>
		<location id="id2" x="-68" y="-238">
			<name x="-78" y="-272">Idle</name>
			<label kind="exponentialrate" x="-51" y="-263">3</label>
		</location>
		<location id="id3" x="-68" y="51">
			<name x="-93" y="68">Running</name>
			<label kind="invariant" x="-127" y="85">x &lt;= chainDuration[cid]</label>
		</location>
		<location id="id4" x="-399" y="-238">
			<name x="-409" y="-272">Done</name>
		</location>
		<init ref="id2"/>
		<transition controllable="false">
			<source ref="id3"/>
			<target ref="id2"/>
			<label kind="select" x="-59" y="-119">chain_id : chainId_t</label>
			<label kind="synchronisation" x="-59" y="-102">ChainDone[chain_id]?</label>
			<label kind="assignment" x="-59" y="-85">DecrementWork(chainDuration[chain_id]),
Machines++</label>
		</transition>
		<transition controllable="false">
			<source ref="id2"/>
			<target ref="id4"/>
			<label kind="guard" x="-357" y="-280">index &gt;= chainSize</label>
			<label kind="assignment" x="-357" y="-263">numberOfChainsDone++</label>
		</transition>
		<transition controllable="false">
			<source ref="id3"/>
			<target ref="id2"/>
			<label kind="guard" x="-433" y="-119">x &gt;= chainDuration[cid]</label>
			<label kind="synchronisation" x="-433" y="-102">ChainDone[cid]!</label>
			<label kind="assignment" x="-433" y="-85">Machines++,
tasksDone[globalChains[cid][index]] = 1,
index++</label>
			<nail x="-170" y="-8"/>
			<nail x="-170" y="-170"/>
		</transition>
		<transition>
			<source ref="id2"/>
			<target ref="id3"/>
			<label kind="guard" x="136" y="-238">index &lt; chainSize &amp;&amp;
Machines &gt; 0 &amp;&amp; AllDependenciesDone()</label>
			<label kind="assignment" x="136" y="-204">chainDuration[cid] = durations[globalChains[cid][index]],
Machines--,
x = 0</label>
			<nail x="127" y="-238"/>
			<nail x="127" y="51"/>
		</transition>
	</template>
	<system>// Place template instantiations here.

// List one or more processes to be composed into a system.
system Composer, Chain;
    </system>
	<queries>
		<query>
			<formula>A[] not deadlock</formula>
			<comment></comment>
		</query>
		<query>
			<formula>strategy TimeSchedule = minE (Composer.time) [&lt;=60] : &lt;&gt;Composer.Done</formula>
			<comment></comment>
		</query>
		<query>
			<formula>simulate 5000 [&lt;=200] {Composer.Done}</formula>
			<comment></comment>
		</query>
		<query>
			<formula>simulate 5000 [&lt;=65] {Composer.Done} under TimeSchedule</formula>
			<comment></comment>
		</query>
		<query>
			<formula>inf{Composer.Done} : Composer.time under TimeSchedule</formula>
			<comment></comment>
		</query>
		<query>
			<formula>A&lt;&gt; Composer.Done</formula>
			<comment></comment>
		</query>
		<query>
			<formula>E&lt;&gt; Composer.Done</formula>
			<comment></comment>
		</query>
	</queries>
</nta>
