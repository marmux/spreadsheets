<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/researchgroup/darts/uppaal/flat-1_2.dtd'>
<nta>
<declaration>//Variables
const int numberOfChains = 35;
const int numberOfTasks = 100;
const int numberOfMachines = 6;
const int maxDependencies = 8;
const int longestChain = 8;
const int globalChainSize[numberOfChains] = {7,8,2,2,6,2,3,3,3,2,5,3,3,4,5,2,6,4,4,3,4,3,2,1,1,1,1,2,1,1,1,1,1,1,2};
const int globalChains[numberOfChains][longestChain] = {
{0,23,34,35,44,80,95,-1},
{1,5,6,53,61,78,89,98},
{2,85,-1,-1,-1,-1,-1,-1},
{3,94,-1,-1,-1,-1,-1,-1},
{4,14,28,31,43,74,-1,-1},
{7,86,-1,-1,-1,-1,-1,-1},
{8,52,82,-1,-1,-1,-1,-1},
{9,11,72,-1,-1,-1,-1,-1},
{10,67,99,-1,-1,-1,-1,-1},
{12,92,-1,-1,-1,-1,-1,-1},
{13,58,62,69,79,-1,-1,-1},
{15,42,96,-1,-1,-1,-1,-1},
{16,48,65,-1,-1,-1,-1,-1},
{17,51,76,77,-1,-1,-1,-1},
{18,40,41,63,88,-1,-1,-1},
{19,93,-1,-1,-1,-1,-1,-1},
{20,21,27,54,84,91,-1,-1},
{22,47,71,81,-1,-1,-1,-1},
{24,66,87,97,-1,-1,-1,-1},
{25,33,37,-1,-1,-1,-1,-1},
{26,38,68,70,-1,-1,-1,-1},
{29,39,90,-1,-1,-1,-1,-1},
{30,60,-1,-1,-1,-1,-1,-1},
{32,-1,-1,-1,-1,-1,-1,-1},
{36,-1,-1,-1,-1,-1,-1,-1},
{45,-1,-1,-1,-1,-1,-1,-1},
{46,-1,-1,-1,-1,-1,-1,-1},
{49,56,-1,-1,-1,-1,-1,-1},
{50,-1,-1,-1,-1,-1,-1,-1},
{55,-1,-1,-1,-1,-1,-1,-1},
{57,-1,-1,-1,-1,-1,-1,-1},
{59,-1,-1,-1,-1,-1,-1,-1},
{64,-1,-1,-1,-1,-1,-1,-1},
{73,-1,-1,-1,-1,-1,-1,-1},
{75,83,-1,-1,-1,-1,-1,-1}};
int chainDuration[numberOfChains] = {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1};
int durations[numberOfTasks] = {5,6,5,4,6,6,5,5,5,5,4,5,6,5,5,5,5,5,6,5,3,5,5,5,6,8,7,4,4,7,7,6,6,3,4,6,5,4,6,5,4,6,4,7,5,7,4,4,5,7,4,6,6,6,6,7,6,4,4,4,6,7,8,5,6,8,5,5,5,6,4,5,4,5,4,5,6,6,6,5,4,8,4,5,5,7,6,6,6,5,5,3,5,7,5,5,5,5,7,6};
const int dependencies[numberOfTasks][maxDependencies] = {
{-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1},
{1,-1,-1,-1,-1,-1,-1,-1},
{5,-1,-1,-1,-1,-1,-1,-1},
{1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1},
{6,9,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1},
{4,5,7,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1},
{2,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1},
{14,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1},
{7,8,20,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1},
{0,11,12,17,-1,-1,-1,-1},
{0,-1,-1,-1,-1,-1,-1,-1},
{0,-1,-1,-1,-1,-1,-1,-1},
{0,-1,-1,-1,-1,-1,-1,-1},
{21,-1,-1,-1,-1,-1,-1,-1},
{2,4,14,15,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1},
{7,20,28,-1,-1,-1,-1,-1},
{14,25,-1,-1,-1,-1,-1,-1},
{11,20,25,-1,-1,-1,-1,-1},
{23,-1,-1,-1,-1,-1,-1,-1},
{13,27,34,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1},
{33,-1,-1,-1,-1,-1,-1,-1},
{4,11,26,-1,-1,-1,-1,-1},
{13,26,29,30,-1,-1,-1,-1},
{18,-1,-1,-1,-1,-1,-1,-1},
{6,37,40,-1,-1,-1,-1,-1},
{11,15,17,41,-1,-1,-1,-1},
{14,18,31,-1,-1,-1,-1,-1},
{34,35,36,-1,-1,-1,-1,-1},
{28,-1,-1,-1,-1,-1,-1,-1},
{29,44,-1,-1,-1,-1,-1,-1},
{9,14,22,33,-1,-1,-1,-1},
{16,20,24,28,38,40,-1,-1},
{25,42,-1,-1,-1,-1,-1,-1},
{29,-1,-1,-1,-1,-1,-1,-1},
{4,17,20,-1,-1,-1,-1,-1},
{1,4,8,32,-1,-1,-1,-1},
{1,6,9,11,-1,-1,-1,-1},
{11,27,39,40,-1,-1,-1,-1},
{54,-1,-1,-1,-1,-1,-1,-1},
{5,49,55,-1,-1,-1,-1,-1},
{43,-1,-1,-1,-1,-1,-1,-1},
{6,13,30,45,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1},
{0,25,30,-1,-1,-1,-1,-1},
{53,-1,-1,-1,-1,-1,-1,-1},
{42,46,52,55,58,-1,-1,-1},
{34,41,49,57,-1,-1,-1,-1},
{51,-1,-1,-1,-1,-1,-1,-1},
{33,48,-1,-1,-1,-1,-1,-1},
{24,31,-1,-1,-1,-1,-1,-1},
{10,18,59,66,-1,-1,-1,-1},
{12,17,38,-1,-1,-1,-1,-1},
{2,59,62,66,-1,-1,-1,-1},
{43,60,64,68,-1,-1,-1,-1},
{28,47,51,-1,-1,-1,-1,-1},
{4,11,37,44,-1,-1,-1,-1},
{18,-1,-1,-1,-1,-1,-1,-1},
{0,8,39,43,62,71,-1,-1},
{66,-1,-1,-1,-1,-1,-1,-1},
{24,28,43,51,55,59,-1,-1},
{35,36,50,71,76,-1,-1,-1},
{10,20,32,61,71,77,-1,-1},
{16,68,69,-1,-1,-1,-1,-1},
{27,28,34,36,44,-1,-1,-1},
{9,17,71,-1,-1,-1,-1,-1},
{14,20,33,34,52,66,-1,-1},
{28,75,-1,-1,-1,-1,-1,-1},
{4,54,81,83,-1,-1,-1,-1},
{2,7,15,23,27,-1,-1,-1},
{2,7,12,13,60,-1,-1,-1},
{11,16,57,63,66,-1,-1,-1},
{1,17,36,51,63,66,-1,-1},
{26,28,49,78,81,-1,-1,-1},
{11,39,-1,-1,-1,-1,-1,-1},
{23,43,71,84,-1,-1,-1,-1},
{7,12,79,-1,-1,-1,-1,-1},
{19,20,52,59,83,-1,-1,-1},
{3,16,36,65,78,-1,-1,-1},
{5,26,61,65,80,82,-1,-1},
{2,24,42,-1,-1,-1,-1,-1},
{9,54,56,59,64,73,75,87},
{14,77,89,-1,-1,-1,-1,-1},
{10,50,67,-1,-1,-1,-1,-1}};


// Typedefs
typedef int[0, numberOfChains - 1] chainId_t;

// Ints and Arrays
int Machines = numberOfMachines;
int numberOfChainsDone = 0;
int tasksDone[numberOfTasks];
bool runnableChains[numberOfChains];

// Channels
broadcast chan startMachines;
broadcast chan chainMachineChan[numberOfChains];
broadcast chan activateChains;
broadcast chan ChainDone[numberOfChains];</declaration>
	<template>
		<name x="5" y="5">Composer</name>
		<declaration>// Place local declarations here.
clock time;</declaration>
		<location id="id0" x="-102" y="-255">
			<name x="-112" y="-289">Init</name>
			<label kind="invariant" x="-246" y="-238">numberOfChainsDone &lt;= numberOfChains</label>
			<label kind="exponentialrate" x="-112" y="-221">0</label>
		</location>
		<location id="id1" x="331" y="-255">
			<name x="321" y="-289">Done</name>
		</location>
		<init ref="id0"/>
		<transition>
			<source ref="id0"/>
			<target ref="id1"/>
			<label kind="guard" x="-17" y="-289">numberOfChainsDone &gt;= numberOfChains</label>
		</transition>
	</template>
	<template>
		<name>Chain</name>
		<parameter>const chainId_t cid</parameter>
		<declaration>clock x;
const int chainSize = globalChainSize[cid];
int index = 0;
int TimeUnit = 2;

bool AllDependenciesDone()
{
    bool dependenciesDone = 1;
    int i;
    for (i = 0; i &lt; maxDependencies; i++)
    {
        int value = dependencies[globalChains[cid][index]][i];
        if (value == -1)
            return dependenciesDone;

        dependenciesDone &amp;= tasksDone[value];
    }
    return dependenciesDone;
}

void DecrementWork(int workDone)
{
    int currentDuration = durations[globalChains[cid][index]];

    if (workDone &gt; currentDuration)
        durations[globalChains[cid][index]] = 0;
    else
        durations[globalChains[cid][index]] -= workDone;
}</declaration>
		<location id="id2" x="-68" y="-238">
			<name x="-78" y="-272">Idle</name>
			<label kind="exponentialrate" x="-51" y="-263">3</label>
		</location>
		<location id="id3" x="-68" y="51">
			<name x="-93" y="68">Running</name>
			<label kind="invariant" x="-127" y="85">x &lt;= chainDuration[cid]</label>
		</location>
		<location id="id4" x="-399" y="-238">
			<name x="-409" y="-272">Done</name>
		</location>
		<init ref="id2"/>
		<transition controllable="false">
			<source ref="id3"/>
			<target ref="id2"/>
			<label kind="select" x="-59" y="-119">chain_id : chainId_t</label>
			<label kind="synchronisation" x="-59" y="-102">ChainDone[chain_id]?</label>
			<label kind="assignment" x="-59" y="-85">DecrementWork(chainDuration[chain_id]),
Machines++</label>
		</transition>
		<transition controllable="false">
			<source ref="id2"/>
			<target ref="id4"/>
			<label kind="guard" x="-357" y="-280">index &gt;= chainSize</label>
			<label kind="assignment" x="-357" y="-263">numberOfChainsDone++</label>
		</transition>
		<transition controllable="false">
			<source ref="id3"/>
			<target ref="id2"/>
			<label kind="guard" x="-433" y="-119">x &gt;= chainDuration[cid]</label>
			<label kind="synchronisation" x="-433" y="-102">ChainDone[cid]!</label>
			<label kind="assignment" x="-433" y="-85">Machines++,
tasksDone[globalChains[cid][index]] = 1,
index++</label>
			<nail x="-170" y="-8"/>
			<nail x="-170" y="-170"/>
		</transition>
		<transition>
			<source ref="id2"/>
			<target ref="id3"/>
			<label kind="guard" x="136" y="-238">index &lt; chainSize &amp;&amp;
Machines &gt; 0 &amp;&amp; AllDependenciesDone()</label>
			<label kind="assignment" x="136" y="-204">chainDuration[cid] = durations[globalChains[cid][index]],
Machines--,
x = 0</label>
			<nail x="127" y="-238"/>
			<nail x="127" y="51"/>
		</transition>
	</template>
	<system>// Place template instantiations here.

// List one or more processes to be composed into a system.
system Composer, Chain;
    </system>
	<queries>
		<query>
			<formula>A[] not deadlock</formula>
			<comment></comment>
		</query>
		<query>
			<formula>strategy TimeSchedule = minE (Composer.time) [&lt;=60] : &lt;&gt;Composer.Done</formula>
			<comment></comment>
		</query>
		<query>
			<formula>simulate 5000 [&lt;=200] {Composer.Done}</formula>
			<comment></comment>
		</query>
		<query>
			<formula>simulate 5000 [&lt;=65] {Composer.Done} under TimeSchedule</formula>
			<comment></comment>
		</query>
		<query>
			<formula>inf{Composer.Done} : Composer.time under TimeSchedule</formula>
			<comment></comment>
		</query>
		<query>
			<formula>A&lt;&gt; Composer.Done</formula>
			<comment></comment>
		</query>
		<query>
			<formula>E&lt;&gt; Composer.Done</formula>
			<comment></comment>
		</query>
	</queries>
</nta>
