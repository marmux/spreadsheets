<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/researchgroup/darts/uppaal/flat-1_2.dtd'>
<nta>
<declaration>//Variables
const int numberOfChains = 30;
const int numberOfTasks = 100;
const int numberOfMachines = 4;
const int maxDependencies = 27;
const int longestChain = 11;
const int globalChainSize[numberOfChains] = {11,5,2,9,4,4,3,3,4,4,3,2,2,2,4,4,2,4,5,3,5,2,2,2,3,1,2,1,1,1};
const int globalChains[numberOfChains][longestChain] = {
{0,2,6,12,30,37,38,41,56,70,96},
{1,84,89,98,99,-1,-1,-1,-1,-1,-1},
{3,94,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,57,60,61,62,82,86,87,95,-1,-1},
{5,78,83,85,-1,-1,-1,-1,-1,-1,-1},
{7,90,91,92,-1,-1,-1,-1,-1,-1,-1},
{8,51,97,-1,-1,-1,-1,-1,-1,-1,-1},
{9,72,74,-1,-1,-1,-1,-1,-1,-1,-1},
{10,17,79,81,-1,-1,-1,-1,-1,-1,-1},
{11,55,69,77,-1,-1,-1,-1,-1,-1,-1},
{13,88,93,-1,-1,-1,-1,-1,-1,-1,-1},
{14,75,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{15,76,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{16,67,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{18,22,52,59,-1,-1,-1,-1,-1,-1,-1},
{19,64,71,73,-1,-1,-1,-1,-1,-1,-1},
{20,65,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{21,48,63,80,-1,-1,-1,-1,-1,-1,-1},
{23,27,42,53,66,-1,-1,-1,-1,-1,-1},
{24,35,54,-1,-1,-1,-1,-1,-1,-1,-1},
{25,26,34,46,58,-1,-1,-1,-1,-1,-1},
{28,68,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{29,45,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{31,39,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{32,43,49,-1,-1,-1,-1,-1,-1,-1,-1},
{33,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{36,44,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{40,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{47,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{50,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1}};
int chainDuration[numberOfChains] = {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1};
int durations[numberOfTasks] = {5,8,10,10,15,10,9,6,4,10,6,15,7,6,8,9,11,6,11,9,13,16,11,3,10,10,14,12,10,13,12,7,8,4,7,8,9,9,14,12,11,11,9,10,15,11,11,10,6,12,11,8,10,12,10,14,10,4,15,6,8,15,9,10,16,7,14,16,13,15,16,15,11,15,16,10,13,12,9,14,9,12,12,10,13,12,11,11,21,11,13,8,7,9,6,12,10,15,9,13};
const int dependencies[numberOfTasks][maxDependencies] = {
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,4,5,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,2,4,6,8,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,5,6,7,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,2,11,14,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,3,14,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,4,5,8,9,10,12,14,16,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,8,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,10,12,14,15,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,7,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{15,19,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,7,9,11,14,15,17,18,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,9,10,11,15,16,22,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,6,7,8,10,11,16,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,5,9,10,12,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,5,7,9,17,23,25,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,6,9,10,18,19,20,23,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,11,15,16,22,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,2,8,9,10,13,18,28,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,6,12,22,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,7,11,13,17,27,28,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{9,16,18,22,23,31,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,7,17,21,26,27,28,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,5,9,10,13,16,20,25,26,28,29,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,8,9,14,15,17,19,24,25,33,34,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,5,6,21,22,27,29,30,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,5,6,12,13,17,29,30,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,6,7,11,12,15,17,21,24,27,29,37,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,8,15,16,17,19,22,25,31,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,2,5,7,10,29,32,34,36,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,4,6,9,26,27,28,29,34,37,38,40,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,4,10,11,13,18,20,22,24,27,35,36,40,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,4,13,14,17,23,30,31,32,34,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{21,23,24,25,29,34,35,36,37,41,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,2,5,15,20,24,26,27,29,33,37,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,4,6,13,16,17,24,34,43,45,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{9,24,42,43,46,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,7,8,11,21,25,27,33,36,38,41,46,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,7,9,21,22,31,32,33,43,47,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,7,8,17,18,20,26,41,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,6,7,8,14,17,25,32,35,36,37,38,45,50,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,7,10,11,22,33,37,38,41,42,47,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,8,9,12,18,21,24,25,32,38,42,44,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,9,11,20,22,29,35,36,48,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,3,5,9,10,11,12,13,15,16,22,23,24,38,42,52,53,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,2,5,6,7,23,30,34,40,41,43,45,47,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,2,4,9,32,38,44,48,50,51,55,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,10,12,29,38,46,50,57,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,9,12,18,19,41,44,47,49,52,56,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,11,15,16,18,23,24,25,28,36,37,38,39,41,44,51,53,54,55,57,-1,-1,-1,-1,-1,-1,-1},
{1,4,6,7,9,12,16,19,20,24,25,29,30,32,42,46,48,49,55,59,60,-1,-1,-1,-1,-1,-1},
{1,8,9,12,17,26,28,39,42,45,47,56,57,61,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,4,12,14,16,42,46,47,48,54,56,57,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,5,19,28,29,30,31,36,37,46,51,52,53,60,63,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,2,5,8,17,18,20,22,31,42,50,53,61,63,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,9,10,13,18,22,26,31,45,46,51,53,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,11,16,17,20,24,25,26,28,30,32,35,37,38,43,44,48,49,58,61,65,-1,-1,-1,-1,-1,-1},
{2,4,9,24,25,28,32,33,35,37,42,43,49,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,17,19,20,21,22,27,34,37,40,41,51,52,53,54,55,56,64,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,12,14,17,18,20,30,33,36,39,41,48,52,54,56,57,59,62,66,-1,-1,-1,-1,-1,-1,-1,-1},
{8,14,25,27,28,30,31,33,47,50,51,53,55,56,64,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,9,11,12,13,14,23,25,38,46,51,54,60,61,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,19,20,24,28,33,34,38,39,56,57,69,71,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,9,11,13,17,18,22,23,24,36,37,39,41,42,43,45,46,50,59,62,65,66,68,72,-1,-1,-1},
{2,7,13,14,24,25,26,27,29,35,38,39,41,45,47,49,59,62,67,-1,-1,-1,-1,-1,-1,-1,-1},
{2,3,8,9,14,15,25,40,42,47,61,65,72,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,6,8,12,16,19,25,28,33,36,44,45,47,48,54,55,60,62,69,73,75,-1,-1,-1,-1,-1,-1},
{1,5,6,10,15,18,22,31,37,54,57,61,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,7,10,11,17,18,19,25,28,31,32,37,39,43,49,54,60,62,63,67,77,-1,-1,-1,-1,-1,-1},
{15,17,20,23,27,32,33,37,38,44,45,46,54,55,60,62,63,69,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,5,6,7,9,10,11,20,21,31,40,46,48,63,65,66,67,78,79,-1,-1,-1,-1,-1,-1,-1,-1},
{4,6,12,13,19,23,24,25,26,29,31,34,36,40,41,44,51,52,56,58,62,74,76,79,-1,-1,-1},
{0,3,4,6,11,18,19,25,29,31,32,34,35,38,46,51,58,59,67,76,78,79,-1,-1,-1,-1,-1},
{0,1,4,5,6,8,9,10,11,12,34,38,40,61,63,66,67,68,73,82,-1,-1,-1,-1,-1,-1,-1},
{0,4,15,19,20,23,26,30,44,45,47,51,52,58,62,67,69,70,80,83,84,-1,-1,-1,-1,-1,-1},
{0,7,10,18,27,37,38,44,46,47,49,53,56,58,61,62,71,73,75,78,82,-1,-1,-1,-1,-1,-1},
{5,8,19,23,34,38,50,51,52,57,58,62,72,80,81,86,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,9,13,26,29,32,41,43,44,46,53,58,61,62,64,65,66,67,73,83,-1,-1,-1,-1,-1,-1,-1},
{0,1,2,5,7,10,12,18,21,27,35,39,45,48,51,55,61,63,77,79,81,84,87,88,-1,-1,-1},
{0,4,7,16,17,18,28,32,37,52,53,56,60,64,65,69,71,77,79,81,89,-1,-1,-1,-1,-1,-1},
{2,9,10,13,16,20,21,22,23,26,27,32,33,38,41,48,53,55,56,61,65,66,76,77,78,79,90},
{0,1,6,8,11,15,16,22,26,33,35,39,43,46,47,48,49,58,59,61,64,65,69,81,84,91,-1},
{13,16,20,21,25,30,32,35,39,44,48,49,50,54,57,63,64,65,80,88,-1,-1,-1,-1,-1,-1,-1},
{0,3,6,9,10,14,20,34,35,36,39,42,45,48,50,56,59,61,63,66,69,78,83,88,89,91,92},
{8,9,26,27,32,33,37,39,41,42,44,50,55,56,62,68,69,70,76,82,84,87,92,-1,-1,-1,-1},
{1,2,6,12,18,20,23,24,28,30,39,44,46,50,52,60,62,70,77,82,89,92,93,-1,-1,-1,-1},
{7,12,14,16,23,24,27,28,30,32,33,35,38,42,46,47,51,59,60,69,74,78,88,93,-1,-1,-1},
{1,11,13,14,18,21,30,35,38,49,53,57,58,64,70,77,79,82,87,89,90,95,-1,-1,-1,-1,-1},
{0,1,3,7,15,17,25,27,33,35,38,43,44,47,49,51,55,65,77,83,95,98,-1,-1,-1,-1,-1}};


// Typedefs
typedef int[0, numberOfChains - 1] chainId_t;

// Ints and Arrays
int Machines = numberOfMachines;
int numberOfChainsDone = 0;
int tasksDone[numberOfTasks];
bool runnableChains[numberOfChains];

// Channels
broadcast chan startMachines;
broadcast chan chainMachineChan[numberOfChains];
broadcast chan activateChains;
broadcast chan ChainDone[numberOfChains];</declaration>
	<template>
		<name x="5" y="5">Composer</name>
		<declaration>// Place local declarations here.
clock time;</declaration>
		<location id="id0" x="-102" y="-255">
			<name x="-112" y="-289">Init</name>
			<label kind="invariant" x="-246" y="-238">numberOfChainsDone &lt;= numberOfChains</label>
			<label kind="exponentialrate" x="-112" y="-221">0</label>
		</location>
		<location id="id1" x="331" y="-255">
			<name x="321" y="-289">Done</name>
		</location>
		<init ref="id0"/>
		<transition>
			<source ref="id0"/>
			<target ref="id1"/>
			<label kind="guard" x="-17" y="-289">numberOfChainsDone &gt;= numberOfChains</label>
		</transition>
	</template>
	<template>
		<name>Chain</name>
		<parameter>const chainId_t cid</parameter>
		<declaration>clock x;
const int chainSize = globalChainSize[cid];
int index = 0;
int TimeUnit = 2;

bool AllDependenciesDone()
{
    bool dependenciesDone = 1;
    int i;
    for (i = 0; i &lt; maxDependencies; i++)
    {
        int value = dependencies[globalChains[cid][index]][i];
        if (value == -1)
            return dependenciesDone;

        dependenciesDone &amp;= tasksDone[value];
    }
    return dependenciesDone;
}

void DecrementWork(int workDone)
{
    int currentDuration = durations[globalChains[cid][index]];

    if (workDone &gt; currentDuration)
        durations[globalChains[cid][index]] = 0;
    else
        durations[globalChains[cid][index]] -= workDone;
}</declaration>
		<location id="id2" x="-68" y="-238">
			<name x="-78" y="-272">Idle</name>
			<label kind="exponentialrate" x="-51" y="-263">3</label>
		</location>
		<location id="id3" x="-68" y="51">
			<name x="-93" y="68">Running</name>
			<label kind="invariant" x="-127" y="85">x &lt;= chainDuration[cid]</label>
		</location>
		<location id="id4" x="-399" y="-238">
			<name x="-409" y="-272">Done</name>
		</location>
		<init ref="id2"/>
		<transition controllable="false">
			<source ref="id3"/>
			<target ref="id2"/>
			<label kind="select" x="-59" y="-119">chain_id : chainId_t</label>
			<label kind="synchronisation" x="-59" y="-102">ChainDone[chain_id]?</label>
			<label kind="assignment" x="-59" y="-85">DecrementWork(chainDuration[chain_id]),
Machines++</label>
		</transition>
		<transition controllable="false">
			<source ref="id2"/>
			<target ref="id4"/>
			<label kind="guard" x="-357" y="-280">index &gt;= chainSize</label>
			<label kind="assignment" x="-357" y="-263">numberOfChainsDone++</label>
		</transition>
		<transition controllable="false">
			<source ref="id3"/>
			<target ref="id2"/>
			<label kind="guard" x="-433" y="-119">x &gt;= chainDuration[cid]</label>
			<label kind="synchronisation" x="-433" y="-102">ChainDone[cid]!</label>
			<label kind="assignment" x="-433" y="-85">Machines++,
tasksDone[globalChains[cid][index]] = 1,
index++</label>
			<nail x="-170" y="-8"/>
			<nail x="-170" y="-170"/>
		</transition>
		<transition>
			<source ref="id2"/>
			<target ref="id3"/>
			<label kind="guard" x="136" y="-238">index &lt; chainSize &amp;&amp;
Machines &gt; 0 &amp;&amp; AllDependenciesDone()</label>
			<label kind="assignment" x="136" y="-204">chainDuration[cid] = durations[globalChains[cid][index]],
Machines--,
x = 0</label>
			<nail x="127" y="-238"/>
			<nail x="127" y="51"/>
		</transition>
	</template>
	<system>// Place template instantiations here.

// List one or more processes to be composed into a system.
system Composer, Chain;
    </system>
	<queries>
		<query>
			<formula>A[] not deadlock</formula>
			<comment></comment>
		</query>
		<query>
			<formula>strategy TimeSchedule = minE (Composer.time) [&lt;=60] : &lt;&gt;Composer.Done</formula>
			<comment></comment>
		</query>
		<query>
			<formula>simulate 5000 [&lt;=200] {Composer.Done}</formula>
			<comment></comment>
		</query>
		<query>
			<formula>simulate 5000 [&lt;=65] {Composer.Done} under TimeSchedule</formula>
			<comment></comment>
		</query>
		<query>
			<formula>inf{Composer.Done} : Composer.time under TimeSchedule</formula>
			<comment></comment>
		</query>
		<query>
			<formula>A&lt;&gt; Composer.Done</formula>
			<comment></comment>
		</query>
		<query>
			<formula>E&lt;&gt; Composer.Done</formula>
			<comment></comment>
		</query>
	</queries>
</nta>
