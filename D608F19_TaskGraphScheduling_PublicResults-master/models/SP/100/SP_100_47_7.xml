<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/researchgroup/darts/uppaal/flat-1_2.dtd'>
<nta>
<declaration>//Variables
const int numberOfChains = 33;
const int numberOfTasks = 100;
const int numberOfMachines = 7;
const int maxDependencies = 19;
const int longestChain = 5;
const int globalChainSize[numberOfChains] = {5,4,4,4,5,4,2,4,4,3,4,2,5,3,5,3,4,4,3,4,3,3,2,3,1,1,2,2,1,1,2,2,1};
const int globalChains[numberOfChains][longestChain] = {
{0,14,57,76,94},
{1,63,84,90,-1},
{2,26,93,95,-1},
{3,34,38,97,-1},
{4,52,80,88,96},
{5,30,60,81,-1},
{6,98,-1,-1,-1},
{7,51,59,89,-1},
{8,58,69,74,-1},
{9,65,77,-1,-1},
{10,48,82,85,-1},
{11,87,-1,-1,-1},
{12,36,68,78,99},
{13,41,61,-1,-1},
{15,32,42,71,91},
{16,83,86,-1,-1},
{17,37,50,70,-1},
{18,62,75,92,-1},
{19,21,66,-1,-1},
{20,45,53,73,-1},
{22,40,55,-1,-1},
{23,29,67,-1,-1},
{24,39,-1,-1,-1},
{25,35,79,-1,-1},
{27,-1,-1,-1,-1},
{28,-1,-1,-1,-1},
{31,47,-1,-1,-1},
{33,72,-1,-1,-1},
{43,-1,-1,-1,-1},
{44,-1,-1,-1,-1},
{46,64,-1,-1,-1},
{49,54,-1,-1,-1},
{56,-1,-1,-1,-1}};
int chainDuration[numberOfChains] = {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1};
int durations[numberOfTasks] = {13,2,9,5,8,6,11,1,24,3,3,6,19,13,1,3,1,3,15,22,25,12,12,3,11,10,17,8,19,2,2,4,8,8,5,11,42,39,4,6,6,7,3,10,2,15,9,4,3,3,2,47,14,28,3,4,5,1,9,40,3,10,18,1,9,19,35,7,5,3,7,5,5,2,5,7,6,16,8,16,29,5,3,8,13,37,4,13,24,12,5,3,4,40,2,8,6,8,3,5};
const int dependencies[numberOfTasks][maxDependencies] = {
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,4,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,8,9,10,19,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,4,9,17,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{10,12,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,15,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,2,3,4,5,10,13,20,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,11,12,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,8,13,17,23,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,4,5,13,14,16,23,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,13,15,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,9,19,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,3,4,7,10,11,16,17,21,26,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,9,11,13,25,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,10,12,14,25,26,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{13,15,16,17,21,24,32,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,4,5,7,11,12,23,24,25,34,-1,-1,-1,-1,-1,-1,-1,-1},
{0,8,10,24,33,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,20,22,23,25,32,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,7,9,13,20,22,26,32,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,9,10,14,23,32,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,4,22,30,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,6,22,32,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,2,3,12,20,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{10,12,26,34,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,10,24,26,31,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,4,6,7,10,19,27,32,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,17,23,26,29,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,3,9,10,26,31,33,35,37,49,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,4,5,7,12,15,20,34,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,2,4,29,31,34,46,47,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,9,12,14,19,23,43,45,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{14,19,25,31,49,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,10,15,19,21,33,40,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{31,41,48,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,3,4,10,11,12,14,15,18,25,29,30,31,45,48,-1,-1,-1,-1},
{0,6,8,10,12,15,19,26,35,43,44,45,-1,-1,-1,-1,-1,-1,-1},
{12,37,38,39,51,57,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,8,22,24,26,30,32,33,47,50,51,52,53,-1,-1,-1,-1,-1,-1},
{2,3,10,21,22,25,32,41,54,57,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,3,8,9,18,22,25,27,31,39,40,46,-1,-1,-1,-1,-1,-1,-1},
{0,1,6,11,12,14,16,19,28,29,41,42,52,-1,-1,-1,-1,-1,-1},
{0,4,23,25,33,46,54,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,3,6,9,10,20,21,31,46,48,52,54,-1,-1,-1,-1,-1,-1,-1},
{0,1,16,21,22,36,46,47,51,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,29,36,37,40,42,54,57,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,9,10,13,26,27,33,35,36,39,45,49,52,-1,-1,-1,-1,-1,-1},
{7,8,17,18,20,34,45,48,50,51,55,58,-1,-1,-1,-1,-1,-1,-1},
{2,8,10,17,18,24,27,37,50,53,58,-1,-1,-1,-1,-1,-1,-1,-1},
{1,2,8,18,23,33,36,42,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,16,32,33,37,44,52,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,5,12,16,23,27,33,38,44,53,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,3,8,13,18,20,21,42,56,59,61,65,68,69,72,73,-1,-1,-1},
{18,19,22,27,40,49,51,52,53,55,62,66,73,-1,-1,-1,-1,-1,-1},
{0,1,3,19,25,33,47,49,52,53,57,58,59,60,67,-1,-1,-1,-1},
{2,9,12,16,28,31,40,41,45,47,57,65,68,69,70,-1,-1,-1,-1},
{1,3,18,19,24,54,55,58,67,68,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,28,35,41,46,57,68,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,4,7,10,22,26,27,28,34,43,50,52,59,-1,-1,-1,-1,-1,-1},
{1,2,5,6,9,12,25,50,58,59,60,62,66,67,69,70,72,-1,-1},
{1,5,6,7,13,18,22,28,43,46,48,57,-1,-1,-1,-1,-1,-1,-1},
{2,4,9,16,19,24,25,41,47,49,65,67,73,-1,-1,-1,-1,-1,-1},
{0,2,6,20,21,24,45,52,57,63,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,18,20,23,27,36,37,58,63,68,75,82,-1,-1,-1,-1,-1,-1,-1},
{4,8,20,25,28,33,39,48,55,62,66,67,69,73,83,-1,-1,-1,-1},
{0,3,6,11,15,30,41,53,68,71,73,75,-1,-1,-1,-1,-1,-1,-1},
{9,11,29,31,34,35,36,38,44,52,53,55,73,75,80,-1,-1,-1,-1},
{1,8,19,22,28,29,30,33,40,46,47,50,54,57,59,61,64,65,67},
{0,14,23,28,29,35,37,84,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,16,17,22,27,47,52,53,55,68,71,-1,-1,-1,-1,-1,-1,-1,-1},
{0,8,17,22,47,63,75,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,8,10,25,26,30,41,42,44,47,52,55,57,60,67,72,81,84,-1},
{3,22,26,30,31,42,43,50,55,56,58,76,79,-1,-1,-1,-1,-1,-1},
{2,6,7,8,12,15,36,66,67,70,93,-1,-1,-1,-1,-1,-1,-1,-1},
{2,9,14,20,21,28,57,72,80,85,88,-1,-1,-1,-1,-1,-1,-1,-1},
{0,17,20,21,34,36,38,39,43,45,50,55,79,82,91,-1,-1,-1,-1},
{6,13,15,18,26,34,40,43,60,65,68,74,75,84,85,-1,-1,-1,-1},
{1,6,17,23,32,61,71,78,86,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1}};


// Typedefs
typedef int[0, numberOfChains - 1] chainId_t;

// Ints and Arrays
int Machines = numberOfMachines;
int numberOfChainsDone = 0;
int tasksDone[numberOfTasks];
bool runnableChains[numberOfChains];

// Channels
broadcast chan startMachines;
broadcast chan chainMachineChan[numberOfChains];
broadcast chan activateChains;
broadcast chan ChainDone[numberOfChains];</declaration>
	<template>
		<name x="5" y="5">Composer</name>
		<declaration>// Place local declarations here.
clock time;</declaration>
		<location id="id0" x="-102" y="-255">
			<name x="-112" y="-289">Init</name>
			<label kind="invariant" x="-246" y="-238">numberOfChainsDone &lt;= numberOfChains</label>
			<label kind="exponentialrate" x="-112" y="-221">0</label>
		</location>
		<location id="id1" x="331" y="-255">
			<name x="321" y="-289">Done</name>
		</location>
		<init ref="id0"/>
		<transition>
			<source ref="id0"/>
			<target ref="id1"/>
			<label kind="guard" x="-17" y="-289">numberOfChainsDone &gt;= numberOfChains</label>
		</transition>
	</template>
	<template>
		<name>Chain</name>
		<parameter>const chainId_t cid</parameter>
		<declaration>clock x;
const int chainSize = globalChainSize[cid];
int index = 0;
int TimeUnit = 2;

bool AllDependenciesDone()
{
    bool dependenciesDone = 1;
    int i;
    for (i = 0; i &lt; maxDependencies; i++)
    {
        int value = dependencies[globalChains[cid][index]][i];
        if (value == -1)
            return dependenciesDone;

        dependenciesDone &amp;= tasksDone[value];
    }
    return dependenciesDone;
}

void DecrementWork(int workDone)
{
    int currentDuration = durations[globalChains[cid][index]];

    if (workDone &gt; currentDuration)
        durations[globalChains[cid][index]] = 0;
    else
        durations[globalChains[cid][index]] -= workDone;
}</declaration>
		<location id="id2" x="-68" y="-238">
			<name x="-78" y="-272">Idle</name>
			<label kind="exponentialrate" x="-51" y="-263">3</label>
		</location>
		<location id="id3" x="-68" y="51">
			<name x="-93" y="68">Running</name>
			<label kind="invariant" x="-127" y="85">x &lt;= chainDuration[cid]</label>
		</location>
		<location id="id4" x="-399" y="-238">
			<name x="-409" y="-272">Done</name>
		</location>
		<init ref="id2"/>
		<transition controllable="false">
			<source ref="id3"/>
			<target ref="id2"/>
			<label kind="select" x="-59" y="-119">chain_id : chainId_t</label>
			<label kind="synchronisation" x="-59" y="-102">ChainDone[chain_id]?</label>
			<label kind="assignment" x="-59" y="-85">DecrementWork(chainDuration[chain_id]),
Machines++</label>
		</transition>
		<transition controllable="false">
			<source ref="id2"/>
			<target ref="id4"/>
			<label kind="guard" x="-357" y="-280">index &gt;= chainSize</label>
			<label kind="assignment" x="-357" y="-263">numberOfChainsDone++</label>
		</transition>
		<transition controllable="false">
			<source ref="id3"/>
			<target ref="id2"/>
			<label kind="guard" x="-433" y="-119">x &gt;= chainDuration[cid]</label>
			<label kind="synchronisation" x="-433" y="-102">ChainDone[cid]!</label>
			<label kind="assignment" x="-433" y="-85">Machines++,
tasksDone[globalChains[cid][index]] = 1,
index++</label>
			<nail x="-170" y="-8"/>
			<nail x="-170" y="-170"/>
		</transition>
		<transition>
			<source ref="id2"/>
			<target ref="id3"/>
			<label kind="guard" x="136" y="-238">index &lt; chainSize &amp;&amp;
Machines &gt; 0 &amp;&amp; AllDependenciesDone()</label>
			<label kind="assignment" x="136" y="-204">chainDuration[cid] = durations[globalChains[cid][index]],
Machines--,
x = 0</label>
			<nail x="127" y="-238"/>
			<nail x="127" y="51"/>
		</transition>
	</template>
	<system>// Place template instantiations here.

// List one or more processes to be composed into a system.
system Composer, Chain;
    </system>
	<queries>
		<query>
			<formula>A[] not deadlock</formula>
			<comment></comment>
		</query>
		<query>
			<formula>strategy TimeSchedule = minE (Composer.time) [&lt;=60] : &lt;&gt;Composer.Done</formula>
			<comment></comment>
		</query>
		<query>
			<formula>simulate 5000 [&lt;=200] {Composer.Done}</formula>
			<comment></comment>
		</query>
		<query>
			<formula>simulate 5000 [&lt;=65] {Composer.Done} under TimeSchedule</formula>
			<comment></comment>
		</query>
		<query>
			<formula>inf{Composer.Done} : Composer.time under TimeSchedule</formula>
			<comment></comment>
		</query>
		<query>
			<formula>A&lt;&gt; Composer.Done</formula>
			<comment></comment>
		</query>
		<query>
			<formula>E&lt;&gt; Composer.Done</formula>
			<comment></comment>
		</query>
	</queries>
</nta>
