<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/researchgroup/darts/uppaal/flat-1_2.dtd'>
<nta>
<declaration>//Variables
const int numberOfChains = 30;
const int numberOfTasks = 100;
const int numberOfMachines = 11;
const int maxDependencies = 20;
const int longestChain = 9;
const int globalChainSize[numberOfChains] = {6,3,9,4,4,2,3,4,5,4,6,2,6,4,2,6,3,4,3,2,3,2,4,2,1,1,1,1,1,2};
const int globalChains[numberOfChains][longestChain] = {
{0,1,21,63,68,93,-1,-1,-1},
{2,78,99,-1,-1,-1,-1,-1,-1},
{3,7,45,56,61,80,82,87,98},
{4,86,88,95,-1,-1,-1,-1,-1},
{5,67,75,92,-1,-1,-1,-1,-1},
{6,84,-1,-1,-1,-1,-1,-1,-1},
{8,89,90,-1,-1,-1,-1,-1,-1},
{9,62,96,97,-1,-1,-1,-1,-1},
{10,11,30,69,83,-1,-1,-1,-1},
{12,31,81,91,-1,-1,-1,-1,-1},
{13,22,53,74,79,85,-1,-1,-1},
{14,70,-1,-1,-1,-1,-1,-1,-1},
{15,39,60,72,76,77,-1,-1,-1},
{16,32,46,73,-1,-1,-1,-1,-1},
{17,44,-1,-1,-1,-1,-1,-1,-1},
{18,23,38,49,66,71,-1,-1,-1},
{19,36,40,-1,-1,-1,-1,-1,-1},
{20,54,64,65,-1,-1,-1,-1,-1},
{24,25,94,-1,-1,-1,-1,-1,-1},
{26,58,-1,-1,-1,-1,-1,-1,-1},
{27,52,59,-1,-1,-1,-1,-1,-1},
{28,42,-1,-1,-1,-1,-1,-1,-1},
{29,33,37,50,-1,-1,-1,-1,-1},
{34,57,-1,-1,-1,-1,-1,-1,-1},
{35,-1,-1,-1,-1,-1,-1,-1,-1},
{41,-1,-1,-1,-1,-1,-1,-1,-1},
{43,-1,-1,-1,-1,-1,-1,-1,-1},
{47,-1,-1,-1,-1,-1,-1,-1,-1},
{48,-1,-1,-1,-1,-1,-1,-1,-1},
{51,55,-1,-1,-1,-1,-1,-1,-1}};
int chainDuration[numberOfChains] = {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1};
int durations[numberOfTasks] = {4,1,9,2,12,3,14,3,3,3,18,15,8,17,11,7,9,7,10,1,2,3,16,4,10,3,11,2,6,7,17,8,5,9,11,6,18,13,12,13,8,10,2,4,12,6,9,11,16,2,17,14,7,6,5,18,17,3,16,12,12,7,9,5,20,1,5,13,1,9,3,5,10,20,6,6,6,6,3,6,2,9,17,6,13,6,11,7,6,4,7,8,1,15,12,6,9,2,1,3};
const int dependencies[numberOfTasks][maxDependencies] = {
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,2,3,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,3,4,8,10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,15,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{11,15,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{15,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,13,16,17,19,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,7,8,10,13,14,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,13,17,18,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,10,18,22,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,8,11,16,24,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,4,14,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,6,21,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,17,18,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,3,6,11,24,25,29,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,3,6,8,10,12,13,16,19,23,28,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,9,12,13,16,20,28,29,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,6,13,18,28,29,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,9,15,16,28,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,3,13,22,26,27,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{19,23,28,30,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{11,24,28,33,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,9,12,16,23,25,34,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,3,5,10,15,16,25,28,36,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,5,7,16,22,25,29,36,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,9,28,32,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{11,14,23,24,26,28,29,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,10,27,39,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{14,17,19,22,25,33,34,38,39,40,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,7,21,30,33,40,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,9,15,16,20,26,27,32,33,43,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{20,24,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,4,9,18,25,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{9,15,26,28,38,39,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,10,23,33,37,47,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,10,30,37,39,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,11,13,25,27,32,42,45,50,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,18,20,22,24,30,31,33,44,45,47,48,50,-1,-1,-1,-1,-1,-1,-1},
{3,7,18,20,34,41,47,49,52,53,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,16,27,28,49,51,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,3,18,25,32,38,44,45,46,48,49,50,51,-1,-1,-1,-1,-1,-1,-1},
{9,13,26,28,30,34,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,3,10,22,25,26,34,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,16,18,20,27,35,48,50,52,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,5,13,15,23,27,29,34,35,39,56,59,-1,-1,-1,-1,-1,-1,-1,-1},
{1,9,10,12,13,14,17,22,37,40,44,45,46,56,-1,-1,-1,-1,-1,-1},
{4,5,8,9,10,15,16,32,43,44,47,61,-1,-1,-1,-1,-1,-1,-1,-1},
{1,8,14,21,24,28,34,35,36,50,53,59,-1,-1,-1,-1,-1,-1,-1,-1},
{12,15,22,26,34,41,45,54,57,62,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,11,13,15,26,31,42,57,64,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,12,13,32,37,41,42,45,47,49,51,65,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,5,7,14,28,33,40,49,53,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{17,21,34,48,59,63,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,6,8,21,22,30,38,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,4,12,13,14,28,32,39,44,60,62,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,5,12,33,36,47,52,55,62,65,66,68,-1,-1,-1,-1,-1,-1,-1,-1},
{8,10,11,25,28,38,40,60,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,14,24,27,29,34,46,48,58,60,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,14,20,22,36,45,46,49,53,58,66,67,72,-1,-1,-1,-1,-1,-1,-1},
{4,5,13,21,24,34,35,57,67,68,71,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,12,18,23,36,38,40,46,49,62,65,72,-1,-1,-1,-1,-1,-1,-1,-1},
{23,26,28,33,44,46,48,55,69,71,76,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,2,5,8,10,13,14,16,21,28,29,31,33,46,47,52,64,67,69,-1},
{4,13,15,22,53,64,74,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{12,18,24,29,33,36,49,52,53,56,61,78,-1,-1,-1,-1,-1,-1,-1,-1},
{3,5,10,12,20,27,31,37,42,50,51,53,54,56,70,73,75,-1,-1,-1},
{2,12,30,33,35,36,41,44,57,74,75,77,80,-1,-1,-1,-1,-1,-1,-1},
{19,24,27,29,33,38,42,43,44,56,57,59,63,69,70,79,-1,-1,-1,-1},
{0,1,6,14,23,26,35,38,39,40,42,49,52,55,61,62,74,75,77,-1},
{3,7,9,14,17,40,52,55,76,77,79,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,4,13,20,35,42,45,55,59,68,71,73,77,-1,-1,-1,-1,-1,-1,-1},
{13,15,16,17,18,33,48,54,56,59,60,61,63,77,82,-1,-1,-1,-1,-1},
{2,8,9,13,17,19,29,45,62,68,71,84,85,86,-1,-1,-1,-1,-1,-1},
{7,8,27,28,31,33,41,44,45,46,48,55,60,67,70,77,82,-1,-1,-1},
{0,1,8,9,10,14,25,29,32,36,47,56,60,62,67,77,89,-1,-1,-1},
{7,14,19,20,28,31,33,35,41,42,52,54,55,71,72,73,74,78,81,86},
{2,4,6,8,15,24,25,29,33,36,38,55,62,63,67,75,76,77,83,-1},
{4,8,18,21,23,29,31,36,40,41,63,67,68,74,88,-1,-1,-1,-1,-1},
{11,25,41,49,58,59,81,82,88,89,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,13,18,31,33,40,41,50,52,60,64,76,79,86,87,88,90,91,94,-1},
{8,19,41,49,57,58,62,71,73,75,86,89,-1,-1,-1,-1,-1,-1,-1,-1},
{17,23,28,31,35,40,41,51,59,62,64,69,70,80,87,88,96,-1,-1,-1},
{4,10,15,28,39,41,43,44,47,52,56,64,68,72,82,87,88,90,-1,-1},
{2,4,5,16,18,22,26,30,34,35,41,49,50,77,78,80,88,95,98,-1}};


// Typedefs
typedef int[0, numberOfChains - 1] chainId_t;

// Ints and Arrays
int Machines = numberOfMachines;
int numberOfChainsDone = 0;
int tasksDone[numberOfTasks];
bool runnableChains[numberOfChains];

// Channels
broadcast chan startMachines;
broadcast chan chainMachineChan[numberOfChains];
broadcast chan activateChains;
broadcast chan ChainDone[numberOfChains];</declaration>
	<template>
		<name x="5" y="5">Composer</name>
		<declaration>// Place local declarations here.
clock time;</declaration>
		<location id="id0" x="-102" y="-255">
			<name x="-112" y="-289">Init</name>
			<label kind="invariant" x="-246" y="-238">numberOfChainsDone &lt;= numberOfChains</label>
			<label kind="exponentialrate" x="-112" y="-221">0</label>
		</location>
		<location id="id1" x="331" y="-255">
			<name x="321" y="-289">Done</name>
		</location>
		<init ref="id0"/>
		<transition>
			<source ref="id0"/>
			<target ref="id1"/>
			<label kind="guard" x="-17" y="-289">numberOfChainsDone &gt;= numberOfChains</label>
		</transition>
	</template>
	<template>
		<name>Chain</name>
		<parameter>const chainId_t cid</parameter>
		<declaration>clock x;
const int chainSize = globalChainSize[cid];
int index = 0;
int TimeUnit = 2;

bool AllDependenciesDone()
{
    bool dependenciesDone = 1;
    int i;
    for (i = 0; i &lt; maxDependencies; i++)
    {
        int value = dependencies[globalChains[cid][index]][i];
        if (value == -1)
            return dependenciesDone;

        dependenciesDone &amp;= tasksDone[value];
    }
    return dependenciesDone;
}

void DecrementWork(int workDone)
{
    int currentDuration = durations[globalChains[cid][index]];

    if (workDone &gt; currentDuration)
        durations[globalChains[cid][index]] = 0;
    else
        durations[globalChains[cid][index]] -= workDone;
}</declaration>
		<location id="id2" x="-68" y="-238">
			<name x="-78" y="-272">Idle</name>
			<label kind="exponentialrate" x="-51" y="-263">3</label>
		</location>
		<location id="id3" x="-68" y="51">
			<name x="-93" y="68">Running</name>
			<label kind="invariant" x="-127" y="85">x &lt;= chainDuration[cid]</label>
		</location>
		<location id="id4" x="-399" y="-238">
			<name x="-409" y="-272">Done</name>
		</location>
		<init ref="id2"/>
		<transition controllable="false">
			<source ref="id3"/>
			<target ref="id2"/>
			<label kind="select" x="-59" y="-119">chain_id : chainId_t</label>
			<label kind="synchronisation" x="-59" y="-102">ChainDone[chain_id]?</label>
			<label kind="assignment" x="-59" y="-85">DecrementWork(chainDuration[chain_id]),
Machines++</label>
		</transition>
		<transition controllable="false">
			<source ref="id2"/>
			<target ref="id4"/>
			<label kind="guard" x="-357" y="-280">index &gt;= chainSize</label>
			<label kind="assignment" x="-357" y="-263">numberOfChainsDone++</label>
		</transition>
		<transition controllable="false">
			<source ref="id3"/>
			<target ref="id2"/>
			<label kind="guard" x="-433" y="-119">x &gt;= chainDuration[cid]</label>
			<label kind="synchronisation" x="-433" y="-102">ChainDone[cid]!</label>
			<label kind="assignment" x="-433" y="-85">Machines++,
tasksDone[globalChains[cid][index]] = 1,
index++</label>
			<nail x="-170" y="-8"/>
			<nail x="-170" y="-170"/>
		</transition>
		<transition>
			<source ref="id2"/>
			<target ref="id3"/>
			<label kind="guard" x="136" y="-238">index &lt; chainSize &amp;&amp;
Machines &gt; 0 &amp;&amp; AllDependenciesDone()</label>
			<label kind="assignment" x="136" y="-204">chainDuration[cid] = durations[globalChains[cid][index]],
Machines--,
x = 0</label>
			<nail x="127" y="-238"/>
			<nail x="127" y="51"/>
		</transition>
	</template>
	<system>// Place template instantiations here.

// List one or more processes to be composed into a system.
system Composer, Chain;
    </system>
	<queries>
		<query>
			<formula>A[] not deadlock</formula>
			<comment></comment>
		</query>
		<query>
			<formula>strategy TimeSchedule = minE (Composer.time) [&lt;=60] : &lt;&gt;Composer.Done</formula>
			<comment></comment>
		</query>
		<query>
			<formula>simulate 5000 [&lt;=200] {Composer.Done}</formula>
			<comment></comment>
		</query>
		<query>
			<formula>simulate 5000 [&lt;=65] {Composer.Done} under TimeSchedule</formula>
			<comment></comment>
		</query>
		<query>
			<formula>inf{Composer.Done} : Composer.time under TimeSchedule</formula>
			<comment></comment>
		</query>
		<query>
			<formula>A&lt;&gt; Composer.Done</formula>
			<comment></comment>
		</query>
		<query>
			<formula>E&lt;&gt; Composer.Done</formula>
			<comment></comment>
		</query>
	</queries>
</nta>
