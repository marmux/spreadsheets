<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/researchgroup/darts/uppaal/flat-1_2.dtd'>
<nta>
<declaration>//Variables
const int numberOfChains = 35;
const int numberOfTasks = 100;
const int numberOfMachines = 8;
const int maxDependencies = 26;
const int longestChain = 8;
const int globalChainSize[numberOfChains] = {8,3,2,3,3,3,7,4,3,4,2,4,4,3,3,2,3,3,2,3,4,2,2,3,2,1,2,4,2,2,1,1,3,1,1};
const int globalChains[numberOfChains][longestChain] = {
{0,11,18,30,66,78,89,99},
{1,84,92,-1,-1,-1,-1,-1},
{2,94,-1,-1,-1,-1,-1,-1},
{3,81,93,-1,-1,-1,-1,-1},
{4,42,97,-1,-1,-1,-1,-1},
{5,68,79,-1,-1,-1,-1,-1},
{6,19,31,67,77,90,96,-1},
{7,59,82,98,-1,-1,-1,-1},
{8,83,86,-1,-1,-1,-1,-1},
{9,44,51,85,-1,-1,-1,-1},
{10,95,-1,-1,-1,-1,-1,-1},
{12,64,71,87,-1,-1,-1,-1},
{13,48,54,88,-1,-1,-1,-1},
{14,32,73,-1,-1,-1,-1,-1},
{15,56,74,-1,-1,-1,-1,-1},
{16,91,-1,-1,-1,-1,-1,-1},
{17,26,76,-1,-1,-1,-1,-1},
{20,63,80,-1,-1,-1,-1,-1},
{21,69,-1,-1,-1,-1,-1,-1},
{22,70,72,-1,-1,-1,-1,-1},
{23,29,55,62,-1,-1,-1,-1},
{24,58,-1,-1,-1,-1,-1,-1},
{25,50,-1,-1,-1,-1,-1,-1},
{27,53,61,-1,-1,-1,-1,-1},
{28,65,-1,-1,-1,-1,-1,-1},
{33,-1,-1,-1,-1,-1,-1,-1},
{34,57,-1,-1,-1,-1,-1,-1},
{35,41,52,75,-1,-1,-1,-1},
{36,46,-1,-1,-1,-1,-1,-1},
{37,45,-1,-1,-1,-1,-1,-1},
{38,-1,-1,-1,-1,-1,-1,-1},
{39,-1,-1,-1,-1,-1,-1,-1},
{40,47,60,-1,-1,-1,-1,-1},
{43,-1,-1,-1,-1,-1,-1,-1},
{49,-1,-1,-1,-1,-1,-1,-1}};
int chainDuration[numberOfChains] = {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1};
int durations[numberOfTasks] = {5,6,6,7,9,6,7,5,8,12,6,13,6,7,7,4,7,10,6,6,5,7,6,5,5,6,12,6,7,8,12,5,12,5,14,5,9,6,16,7,8,6,5,4,5,6,4,12,12,6,6,6,13,6,9,8,6,12,5,5,14,13,7,6,5,6,6,5,6,3,10,7,4,10,5,5,8,4,10,10,6,7,8,4,5,10,13,12,10,10,5,7,9,6,16,10,12,4,5,5};
const int dependencies[numberOfTasks][maxDependencies] = {
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,4,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,5,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,6,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,5,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,11,13,14,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,4,6,7,10,14,16,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,6,12,14,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,6,8,14,15,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,10,13,14,16,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,4,8,16,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,4,9,11,13,16,17,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,12,14,16,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,6,7,8,16,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,6,11,13,20,21,23,26,28,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,8,18,19,20,26,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,4,10,13,18,19,27,28,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,3,8,12,14,19,21,24,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,9,10,15,17,28,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,4,7,13,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,14,26,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,8,15,28,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,7,17,18,19,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{12,19,20,21,22,26,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,6,19,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{12,14,15,20,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,2,19,20,21,23,28,35,36,38,39,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,2,4,7,11,12,13,29,33,38,39,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,2,8,11,12,23,32,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,5,7,8,9,18,39,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,7,9,18,20,26,37,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{12,18,28,31,36,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,7,19,20,24,26,40,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,3,7,12,13,14,20,23,29,30,32,35,37,39,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,13,28,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,12,13,17,25,37,46,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,5,7,9,22,27,39,40,44,48,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,4,7,20,37,41,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,4,7,13,17,23,27,28,39,41,47,48,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,8,10,14,15,18,20,22,30,33,45,46,48,49,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,2,25,29,31,32,37,44,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,6,7,8,14,15,17,34,35,36,41,43,44,45,47,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,16,17,23,34,39,46,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,2,10,13,17,24,28,32,41,47,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,4,7,13,18,19,32,47,54,57,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,6,10,21,40,47,56,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,5,12,30,37,43,44,47,53,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,30,36,37,47,51,55,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,5,10,14,17,20,22,23,24,30,38,44,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,3,10,12,19,24,44,47,51,53,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{12,13,14,16,21,24,28,31,34,37,46,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,7,8,10,11,13,19,24,26,30,31,37,52,56,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,10,11,26,31,41,42,43,44,47,53,54,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,3,4,5,10,13,16,17,34,36,41,43,44,48,49,56,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,12,16,18,19,21,22,23,25,26,27,30,39,50,53,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{11,12,13,18,22,24,32,42,55,57,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,18,31,32,33,40,48,53,56,61,62,64,65,68,69,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,9,20,22,35,38,54,60,63,67,70,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,5,8,10,13,16,24,32,33,36,41,44,62,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,12,14,41,42,47,48,51,56,57,58,61,62,69,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{13,16,21,23,30,43,44,49,52,63,64,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,8,10,11,13,23,24,25,26,28,29,32,40,43,48,62,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{9,14,17,19,25,29,37,42,45,46,50,53,58,62,64,67,68,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,20,30,32,36,39,45,46,48,49,52,63,66,68,70,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,2,5,7,8,14,17,19,21,31,39,41,56,59,61,64,68,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,8,14,18,23,24,44,50,53,56,59,63,65,69,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,2,3,6,18,23,32,34,38,43,57,59,64,70,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,19,21,26,30,31,46,49,55,59,65,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,8,10,15,18,22,28,30,33,34,38,42,44,48,49,50,53,68,-1,-1,-1,-1,-1,-1,-1,-1},
{1,8,11,16,22,26,32,38,39,41,51,59,61,66,69,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,5,7,11,13,15,20,22,23,25,27,35,36,39,44,47,51,62,63,64,74,-1,-1,-1,-1,-1},
{0,1,4,8,21,29,36,39,41,43,44,52,55,56,59,62,65,67,69,71,75,76,83,-1,-1,-1},
{6,7,8,13,17,22,26,28,31,34,37,38,39,40,44,53,71,76,-1,-1,-1,-1,-1,-1,-1,-1},
{6,12,13,14,21,25,35,36,39,40,41,44,46,50,54,65,81,83,-1,-1,-1,-1,-1,-1,-1,-1},
{3,11,13,22,26,29,32,33,37,40,47,49,56,62,64,66,70,76,78,84,-1,-1,-1,-1,-1,-1},
{4,5,20,22,24,28,29,30,36,40,45,46,56,58,73,77,80,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,12,13,15,16,21,28,35,39,42,44,45,50,55,61,67,80,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,6,10,19,23,31,35,36,40,43,44,45,46,48,58,65,76,78,83,84,90,-1,-1,-1,-1,-1},
{1,3,10,12,15,22,23,38,40,44,48,51,61,68,72,74,81,82,83,-1,-1,-1,-1,-1,-1,-1},
{0,2,3,5,9,15,18,27,39,43,46,52,53,54,57,64,67,80,84,85,90,-1,-1,-1,-1,-1},
{0,8,10,15,18,20,21,37,42,49,56,59,63,64,65,71,76,81,88,-1,-1,-1,-1,-1,-1,-1},
{2,6,19,20,21,22,35,44,49,62,71,72,75,80,81,90,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,2,5,7,10,20,22,28,29,30,32,35,38,42,44,46,51,55,61,65,67,70,73,78,87,90},
{3,4,12,16,17,20,23,24,25,27,31,33,38,45,50,56,57,71,72,74,76,78,82,88,-1,-1},
{3,8,9,12,14,15,27,30,33,41,44,46,49,51,62,65,68,72,76,77,79,81,86,87,89,-1}};


// Typedefs
typedef int[0, numberOfChains - 1] chainId_t;

// Ints and Arrays
int Machines = numberOfMachines;
int numberOfChainsDone = 0;
int tasksDone[numberOfTasks];
bool runnableChains[numberOfChains];

// Channels
broadcast chan startMachines;
broadcast chan chainMachineChan[numberOfChains];
broadcast chan activateChains;
broadcast chan ChainDone[numberOfChains];</declaration>
	<template>
		<name x="5" y="5">Composer</name>
		<declaration>// Place local declarations here.
clock time;</declaration>
		<location id="id0" x="-102" y="-255">
			<name x="-112" y="-289">Init</name>
			<label kind="invariant" x="-246" y="-238">numberOfChainsDone &lt;= numberOfChains</label>
			<label kind="exponentialrate" x="-112" y="-221">0</label>
		</location>
		<location id="id1" x="331" y="-255">
			<name x="321" y="-289">Done</name>
		</location>
		<init ref="id0"/>
		<transition>
			<source ref="id0"/>
			<target ref="id1"/>
			<label kind="guard" x="-17" y="-289">numberOfChainsDone &gt;= numberOfChains</label>
		</transition>
	</template>
	<template>
		<name>Chain</name>
		<parameter>const chainId_t cid</parameter>
		<declaration>clock x;
const int chainSize = globalChainSize[cid];
int index = 0;
int TimeUnit = 2;

bool AllDependenciesDone()
{
    bool dependenciesDone = 1;
    int i;
    for (i = 0; i &lt; maxDependencies; i++)
    {
        int value = dependencies[globalChains[cid][index]][i];
        if (value == -1)
            return dependenciesDone;

        dependenciesDone &amp;= tasksDone[value];
    }
    return dependenciesDone;
}

void DecrementWork(int workDone)
{
    int currentDuration = durations[globalChains[cid][index]];

    if (workDone &gt; currentDuration)
        durations[globalChains[cid][index]] = 0;
    else
        durations[globalChains[cid][index]] -= workDone;
}</declaration>
		<location id="id2" x="-68" y="-238">
			<name x="-78" y="-272">Idle</name>
			<label kind="exponentialrate" x="-51" y="-263">3</label>
		</location>
		<location id="id3" x="-68" y="51">
			<name x="-93" y="68">Running</name>
			<label kind="invariant" x="-127" y="85">x &lt;= chainDuration[cid]</label>
		</location>
		<location id="id4" x="-399" y="-238">
			<name x="-409" y="-272">Done</name>
		</location>
		<init ref="id2"/>
		<transition controllable="false">
			<source ref="id3"/>
			<target ref="id2"/>
			<label kind="select" x="-59" y="-119">chain_id : chainId_t</label>
			<label kind="synchronisation" x="-59" y="-102">ChainDone[chain_id]?</label>
			<label kind="assignment" x="-59" y="-85">DecrementWork(chainDuration[chain_id]),
Machines++</label>
		</transition>
		<transition controllable="false">
			<source ref="id2"/>
			<target ref="id4"/>
			<label kind="guard" x="-357" y="-280">index &gt;= chainSize</label>
			<label kind="assignment" x="-357" y="-263">numberOfChainsDone++</label>
		</transition>
		<transition controllable="false">
			<source ref="id3"/>
			<target ref="id2"/>
			<label kind="guard" x="-433" y="-119">x &gt;= chainDuration[cid]</label>
			<label kind="synchronisation" x="-433" y="-102">ChainDone[cid]!</label>
			<label kind="assignment" x="-433" y="-85">Machines++,
tasksDone[globalChains[cid][index]] = 1,
index++</label>
			<nail x="-170" y="-8"/>
			<nail x="-170" y="-170"/>
		</transition>
		<transition>
			<source ref="id2"/>
			<target ref="id3"/>
			<label kind="guard" x="136" y="-238">index &lt; chainSize &amp;&amp;
Machines &gt; 0 &amp;&amp; AllDependenciesDone()</label>
			<label kind="assignment" x="136" y="-204">chainDuration[cid] = durations[globalChains[cid][index]],
Machines--,
x = 0</label>
			<nail x="127" y="-238"/>
			<nail x="127" y="51"/>
		</transition>
	</template>
	<system>// Place template instantiations here.

// List one or more processes to be composed into a system.
system Composer, Chain;
    </system>
	<queries>
		<query>
			<formula>A[] not deadlock</formula>
			<comment></comment>
		</query>
		<query>
			<formula>strategy TimeSchedule = minE (Composer.time) [&lt;=60] : &lt;&gt;Composer.Done</formula>
			<comment></comment>
		</query>
		<query>
			<formula>simulate 5000 [&lt;=200] {Composer.Done}</formula>
			<comment></comment>
		</query>
		<query>
			<formula>simulate 5000 [&lt;=65] {Composer.Done} under TimeSchedule</formula>
			<comment></comment>
		</query>
		<query>
			<formula>inf{Composer.Done} : Composer.time under TimeSchedule</formula>
			<comment></comment>
		</query>
		<query>
			<formula>A&lt;&gt; Composer.Done</formula>
			<comment></comment>
		</query>
		<query>
			<formula>E&lt;&gt; Composer.Done</formula>
			<comment></comment>
		</query>
	</queries>
</nta>
