<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/researchgroup/darts/uppaal/flat-1_2.dtd'>
<nta>
<declaration>//Variables
const int numberOfChains = 31;
const int numberOfTasks = 100;
const int numberOfMachines = 9;
const int maxDependencies = 16;
const int longestChain = 7;
const int globalChainSize[numberOfChains] = {7,4,4,4,5,7,2,6,3,4,5,6,3,6,1,4,3,2,3,3,2,2,2,1,1,2,2,2,2,1,1};
const int globalChains[numberOfChains][longestChain] = {
{0,9,26,55,59,61,91},
{1,17,73,95,-1,-1,-1},
{2,14,86,87,-1,-1,-1},
{3,10,80,93,-1,-1,-1},
{4,24,41,50,64,-1,-1},
{5,33,53,56,82,96,98},
{6,99,-1,-1,-1,-1,-1},
{7,8,52,58,63,94,-1},
{11,81,88,-1,-1,-1,-1},
{12,71,78,84,-1,-1,-1},
{13,40,62,65,74,-1,-1},
{15,19,31,60,72,92,-1},
{16,35,89,-1,-1,-1,-1},
{18,37,54,76,79,83,-1},
{20,-1,-1,-1,-1,-1,-1},
{21,29,49,69,-1,-1,-1},
{22,66,97,-1,-1,-1,-1},
{23,46,-1,-1,-1,-1,-1},
{25,34,90,-1,-1,-1,-1},
{27,48,77,-1,-1,-1,-1},
{28,70,-1,-1,-1,-1,-1},
{30,32,-1,-1,-1,-1,-1},
{36,39,-1,-1,-1,-1,-1},
{38,-1,-1,-1,-1,-1,-1},
{42,-1,-1,-1,-1,-1,-1},
{43,44,-1,-1,-1,-1,-1},
{45,57,-1,-1,-1,-1,-1},
{47,67,-1,-1,-1,-1,-1},
{51,85,-1,-1,-1,-1,-1},
{68,-1,-1,-1,-1,-1,-1},
{75,-1,-1,-1,-1,-1,-1}};
int chainDuration[numberOfChains] = {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1};
int durations[numberOfTasks] = {5,2,20,7,2,8,8,18,4,6,17,4,7,5,15,18,8,7,2,1,5,7,6,4,7,11,12,4,8,10,10,20,18,8,1,1,4,7,11,5,2,4,5,3,9,8,10,7,7,20,17,18,3,4,10,1,3,7,9,10,7,8,11,4,8,3,17,10,10,16,5,6,6,13,17,5,19,8,9,18,3,9,7,1,1,19,2,8,7,5,8,11,7,9,8,8,11,19,6,6};
const int dependencies[numberOfTasks][maxDependencies] = {
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,3,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,3,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{14,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,6,15,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,9,10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,9,13,14,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{14,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{11,16,21,25,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,28,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,7,19,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{9,12,29,30,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,6,24,28,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{23,25,27,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,12,15,16,22,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{29,35,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,15,18,30,31,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{31,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,6,13,36,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,8,12,13,30,36,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,6,8,20,24,31,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{12,13,15,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,30,33,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{24,43,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{33,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{9,11,12,23,25,32,42,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{12,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{21,27,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{11,12,23,28,29,31,38,48,-1,-1,-1,-1,-1,-1,-1,-1},
{7,24,39,41,45,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,14,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,14,18,38,41,48,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,12,25,33,41,52,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,15,36,37,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,15,22,26,30,44,45,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,15,21,33,37,45,53,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,8,23,45,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,6,25,34,35,38,40,52,53,54,-1,-1,-1,-1,-1,-1},
{11,19,26,39,40,54,55,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,12,24,31,39,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{11,16,25,29,39,41,42,59,-1,-1,-1,-1,-1,-1,-1,-1},
{2,5,21,40,51,54,58,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,25,26,31,37,48,53,58,62,-1,-1,-1,-1,-1,-1,-1},
{3,26,30,50,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,13,16,23,30,41,57,62,-1,-1,-1,-1,-1,-1,-1,-1},
{9,22,28,31,42,44,65,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{16,19,23,47,51,60,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{16,29,50,65,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{31,34,40,42,47,49,65,67,-1,-1,-1,-1,-1,-1,-1,-1},
{19,28,29,32,45,49,59,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,12,26,32,34,55,69,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,20,32,35,39,46,49,55,57,60,62,-1,-1,-1,-1,-1},
{5,16,17,20,34,43,54,65,67,69,-1,-1,-1,-1,-1,-1},
{23,30,34,37,52,58,59,65,-1,-1,-1,-1,-1,-1,-1,-1},
{31,37,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,5,38,43,49,54,68,69,-1,-1,-1,-1,-1,-1,-1,-1},
{21,23,48,58,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{13,23,61,67,68,71,76,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,57,76,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,8,9,10,16,35,52,57,69,71,-1,-1,-1,-1,-1,-1},
{4,11,13,25,28,40,63,80,-1,-1,-1,-1,-1,-1,-1,-1},
{40,56,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{18,21,44,65,79,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,13,16,78,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{51,56,71,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,7,8,10,14,15,28,41,45,46,47,48,74,78,80,83},
{4,18,30,31,32,45,47,75,85,86,-1,-1,-1,-1,-1,-1},
{23,25,34,39,42,47,48,68,81,-1,-1,-1,-1,-1,-1,-1},
{19,27,34,35,37,85,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,33,34,50,51,77,85,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,27,28,55,61,62,66,84,-1,-1,-1,-1,-1,-1,-1,-1},
{0,6,11,21,22,38,72,77,-1,-1,-1,-1,-1,-1,-1,-1},
{5,7,26,35,45,57,60,80,82,-1,-1,-1,-1,-1,-1,-1},
{2,8,11,24,35,63,72,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{11,14,21,43,59,62,73,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,10,13,19,29,32,38,46,50,52,53,77,82,92,-1,-1},
{52,56,60,66,67,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{24,27,30,48,60,68,73,96,-1,-1,-1,-1,-1,-1,-1,-1},
{6,12,16,32,33,34,38,53,67,80,84,85,-1,-1,-1,-1}};


// Typedefs
typedef int[0, numberOfChains - 1] chainId_t;

// Ints and Arrays
int Machines = numberOfMachines;
int numberOfChainsDone = 0;
int tasksDone[numberOfTasks];
bool runnableChains[numberOfChains];

// Channels
broadcast chan startMachines;
broadcast chan chainMachineChan[numberOfChains];
broadcast chan activateChains;
broadcast chan ChainDone[numberOfChains];</declaration>
	<template>
		<name x="5" y="5">Composer</name>
		<declaration>// Place local declarations here.
clock time;</declaration>
		<location id="id0" x="-102" y="-255">
			<name x="-112" y="-289">Init</name>
			<label kind="invariant" x="-246" y="-238">numberOfChainsDone &lt;= numberOfChains</label>
			<label kind="exponentialrate" x="-112" y="-221">0</label>
		</location>
		<location id="id1" x="331" y="-255">
			<name x="321" y="-289">Done</name>
		</location>
		<init ref="id0"/>
		<transition>
			<source ref="id0"/>
			<target ref="id1"/>
			<label kind="guard" x="-17" y="-289">numberOfChainsDone &gt;= numberOfChains</label>
		</transition>
	</template>
	<template>
		<name>Chain</name>
		<parameter>const chainId_t cid</parameter>
		<declaration>clock x;
const int chainSize = globalChainSize[cid];
int index = 0;
int TimeUnit = 2;

bool AllDependenciesDone()
{
    bool dependenciesDone = 1;
    int i;
    for (i = 0; i &lt; maxDependencies; i++)
    {
        int value = dependencies[globalChains[cid][index]][i];
        if (value == -1)
            return dependenciesDone;

        dependenciesDone &amp;= tasksDone[value];
    }
    return dependenciesDone;
}

void DecrementWork(int workDone)
{
    int currentDuration = durations[globalChains[cid][index]];

    if (workDone &gt; currentDuration)
        durations[globalChains[cid][index]] = 0;
    else
        durations[globalChains[cid][index]] -= workDone;
}</declaration>
		<location id="id2" x="-68" y="-238">
			<name x="-78" y="-272">Idle</name>
			<label kind="exponentialrate" x="-51" y="-263">3</label>
		</location>
		<location id="id3" x="-68" y="51">
			<name x="-93" y="68">Running</name>
			<label kind="invariant" x="-127" y="85">x &lt;= chainDuration[cid]</label>
		</location>
		<location id="id4" x="-399" y="-238">
			<name x="-409" y="-272">Done</name>
		</location>
		<init ref="id2"/>
		<transition controllable="false">
			<source ref="id3"/>
			<target ref="id2"/>
			<label kind="select" x="-59" y="-119">chain_id : chainId_t</label>
			<label kind="synchronisation" x="-59" y="-102">ChainDone[chain_id]?</label>
			<label kind="assignment" x="-59" y="-85">DecrementWork(chainDuration[chain_id]),
Machines++</label>
		</transition>
		<transition controllable="false">
			<source ref="id2"/>
			<target ref="id4"/>
			<label kind="guard" x="-357" y="-280">index &gt;= chainSize</label>
			<label kind="assignment" x="-357" y="-263">numberOfChainsDone++</label>
		</transition>
		<transition controllable="false">
			<source ref="id3"/>
			<target ref="id2"/>
			<label kind="guard" x="-433" y="-119">x &gt;= chainDuration[cid]</label>
			<label kind="synchronisation" x="-433" y="-102">ChainDone[cid]!</label>
			<label kind="assignment" x="-433" y="-85">Machines++,
tasksDone[globalChains[cid][index]] = 1,
index++</label>
			<nail x="-170" y="-8"/>
			<nail x="-170" y="-170"/>
		</transition>
		<transition>
			<source ref="id2"/>
			<target ref="id3"/>
			<label kind="guard" x="136" y="-238">index &lt; chainSize &amp;&amp;
Machines &gt; 0 &amp;&amp; AllDependenciesDone()</label>
			<label kind="assignment" x="136" y="-204">chainDuration[cid] = durations[globalChains[cid][index]],
Machines--,
x = 0</label>
			<nail x="127" y="-238"/>
			<nail x="127" y="51"/>
		</transition>
	</template>
	<system>// Place template instantiations here.

// List one or more processes to be composed into a system.
system Composer, Chain;
    </system>
	<queries>
		<query>
			<formula>A[] not deadlock</formula>
			<comment></comment>
		</query>
		<query>
			<formula>strategy TimeSchedule = minE (Composer.time) [&lt;=60] : &lt;&gt;Composer.Done</formula>
			<comment></comment>
		</query>
		<query>
			<formula>simulate 5000 [&lt;=200] {Composer.Done}</formula>
			<comment></comment>
		</query>
		<query>
			<formula>simulate 5000 [&lt;=65] {Composer.Done} under TimeSchedule</formula>
			<comment></comment>
		</query>
		<query>
			<formula>inf{Composer.Done} : Composer.time under TimeSchedule</formula>
			<comment></comment>
		</query>
		<query>
			<formula>A&lt;&gt; Composer.Done</formula>
			<comment></comment>
		</query>
		<query>
			<formula>E&lt;&gt; Composer.Done</formula>
			<comment></comment>
		</query>
	</queries>
</nta>
