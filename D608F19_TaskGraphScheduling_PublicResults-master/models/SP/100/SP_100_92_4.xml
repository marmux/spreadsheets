<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/researchgroup/darts/uppaal/flat-1_2.dtd'>
<nta>
<declaration>//Variables
const int numberOfChains = 36;
const int numberOfTasks = 100;
const int numberOfMachines = 4;
const int maxDependencies = 26;
const int longestChain = 6;
const int globalChainSize[numberOfChains] = {5,6,3,3,3,5,4,2,2,2,4,2,4,3,3,4,4,2,5,3,3,3,2,1,2,2,2,2,2,4,2,2,1,1,1,1};
const int globalChains[numberOfChains][longestChain] = {
{0,13,77,80,98,-1},
{1,34,47,51,91,95},
{2,72,99,-1,-1,-1},
{3,87,96,-1,-1,-1},
{4,92,94,-1,-1,-1},
{5,17,63,75,82,-1},
{6,68,78,84,-1,-1},
{7,85,-1,-1,-1,-1},
{8,62,-1,-1,-1,-1},
{9,81,-1,-1,-1,-1},
{10,48,70,97,-1,-1},
{11,86,-1,-1,-1,-1},
{12,71,74,83,-1,-1},
{14,73,79,-1,-1,-1},
{15,65,90,-1,-1,-1},
{16,31,58,76,-1,-1},
{18,61,64,93,-1,-1},
{19,88,-1,-1,-1,-1},
{20,35,45,52,69,-1},
{21,32,50,-1,-1,-1},
{22,46,89,-1,-1,-1},
{23,38,66,-1,-1,-1},
{24,55,-1,-1,-1,-1},
{25,-1,-1,-1,-1,-1},
{26,60,-1,-1,-1,-1},
{27,57,-1,-1,-1,-1},
{28,56,-1,-1,-1,-1},
{29,53,-1,-1,-1,-1},
{30,39,-1,-1,-1,-1},
{33,40,59,67,-1,-1},
{36,44,-1,-1,-1,-1},
{37,41,-1,-1,-1,-1},
{42,-1,-1,-1,-1,-1},
{43,-1,-1,-1,-1,-1},
{49,-1,-1,-1,-1,-1},
{54,-1,-1,-1,-1,-1}};
int chainDuration[numberOfChains] = {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1};
int durations[numberOfTasks] = {1,10,7,5,2,5,6,3,10,6,7,2,8,5,7,9,5,3,4,4,2,2,10,7,2,3,9,4,10,9,8,2,8,6,3,7,7,1,10,9,5,9,8,2,2,1,9,5,3,8,5,10,8,7,6,8,10,2,1,7,6,3,4,10,6,2,6,1,5,3,4,8,1,7,6,7,4,4,8,6,1,5,8,8,6,9,3,8,5,8,6,6,4,2,5,5,3,1,4,4};
const int dependencies[numberOfTasks][maxDependencies] = {
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,2,3,4,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,3,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,6,9,10,14,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,3,4,5,7,13,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,14,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,5,7,9,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,9,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,4,6,8,12,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,8,10,14,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,2,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,9,12,22,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,12,14,16,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,9,12,19,21,22,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,7,10,17,18,21,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,6,9,18,20,21,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,16,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,2,3,4,6,11,14,16,22,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,2,4,14,18,20,21,24,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,2,4,9,12,14,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,3,4,7,14,15,16,19,21,22,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,8,12,15,17,19,20,24,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,15,17,18,23,24,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,5,8,22,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,5,8,15,19,20,23,29,30,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,10,17,18,30,37,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,3,4,5,11,15,20,33,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,13,21,22,31,37,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,15,18,26,31,33,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{9,30,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,22,31,36,37,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{10,11,12,15,17,19,21,24,27,28,35,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,3,5,14,22,25,26,30,31,32,37,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,2,3,5,8,10,15,34,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,6,10,11,12,13,14,17,25,26,34,36,37,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,5,8,11,27,33,34,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,7,10,11,27,30,32,35,47,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,3,10,12,14,15,28,29,34,39,45,47,48,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,4,15,20,21,22,23,25,29,33,34,43,45,47,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,13,15,20,29,35,36,45,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,3,4,17,18,31,33,35,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,7,11,19,21,24,25,26,36,37,42,46,48,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,3,5,8,12,27,28,30,39,43,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,5,6,10,20,23,27,30,40,43,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,4,15,16,24,28,31,34,36,40,42,47,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,8,21,33,40,42,43,48,49,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{10,18,26,29,31,33,34,38,44,46,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,6,8,9,11,12,16,17,18,30,35,41,42,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,5,8,9,11,12,14,15,18,22,28,29,34,38,46,47,48,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,5,8,11,13,15,17,27,30,34,37,39,40,41,44,45,50,54,-1,-1,-1,-1,-1,-1,-1,-1},
{4,6,7,8,11,15,16,18,20,29,33,36,39,50,51,54,61,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,2,7,10,12,13,15,30,35,37,39,40,43,45,48,52,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,2,9,24,27,30,32,38,43,45,57,61,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,14,15,26,27,29,43,49,59,61,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,5,6,8,17,32,33,34,39,47,48,50,59,60,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,13,23,24,30,33,35,40,45,48,52,53,58,60,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,3,7,8,10,12,19,26,31,34,37,38,44,48,55,61,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,5,10,11,12,14,17,21,24,29,30,31,41,43,47,48,56,60,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,2,3,4,10,16,17,20,22,30,36,38,39,40,47,49,50,52,58,59,-1,-1,-1,-1,-1},
{4,5,8,11,12,14,17,20,23,26,32,37,38,41,42,48,49,52,54,-1,-1,-1,-1,-1,-1,-1},
{0,2,5,7,11,14,18,19,23,26,28,29,42,44,45,52,53,55,60,63,67,69,71,-1,-1,-1},
{0,2,7,8,14,17,19,23,24,32,34,35,45,49,51,54,56,58,59,63,67,-1,-1,-1,-1,-1},
{3,11,12,14,17,25,32,33,35,36,42,47,58,61,66,67,70,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,5,12,13,14,25,29,30,36,38,42,43,44,47,57,68,69,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,3,4,16,18,19,21,37,42,48,50,52,63,66,67,68,70,-1,-1,-1,-1,-1,-1,-1,-1},
{8,11,17,18,19,21,23,24,32,35,43,47,48,49,52,53,55,59,64,71,73,76,-1,-1,-1,-1},
{0,2,5,12,13,21,29,37,38,42,45,58,64,66,67,77,78,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,3,4,5,6,9,13,15,19,20,21,25,26,29,37,43,46,50,55,58,59,61,73,-1,-1,-1},
{5,7,9,17,19,24,25,29,31,34,35,42,45,46,51,52,55,56,62,66,71,75,76,77,-1,-1},
{3,6,10,22,25,28,29,31,32,37,42,47,50,53,58,59,65,71,74,75,77,-1,-1,-1,-1,-1},
{0,7,11,12,20,22,27,30,31,32,39,40,41,43,44,54,57,58,60,63,64,65,75,78,-1,-1},
{2,5,7,12,13,14,19,21,22,23,27,31,32,37,38,39,42,46,53,58,68,69,73,77,-1,-1},
{4,7,8,9,11,14,17,19,20,26,29,30,36,38,41,43,48,51,52,60,66,69,71,-1,-1,-1},
{3,4,7,11,12,14,25,31,33,34,36,40,42,44,46,47,50,54,61,63,68,69,74,75,76,77},
{0,2,6,12,19,20,31,42,46,49,57,58,59,64,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{14,17,19,26,29,30,33,36,40,43,46,47,56,73,74,75,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,7,9,12,14,16,24,26,29,35,37,39,41,43,45,48,53,54,63,65,75,76,-1,-1,-1,-1},
{1,4,6,9,10,11,17,22,23,25,29,30,36,40,43,45,47,51,54,68,69,72,73,75,76,77},
{0,3,4,5,6,15,19,24,25,28,30,34,41,43,54,56,64,66,68,74,77,-1,-1,-1,-1,-1},
{3,5,8,10,13,17,19,20,23,24,35,37,43,48,52,54,59,64,69,-1,-1,-1,-1,-1,-1,-1},
{0,1,15,22,27,29,30,31,36,42,43,44,49,63,67,68,70,71,83,87,92,-1,-1,-1,-1,-1},
{4,9,13,15,23,27,41,46,47,49,51,59,63,66,67,68,69,71,72,73,76,78,79,82,83,91},
{0,11,15,16,17,20,22,31,32,35,38,40,46,47,56,63,67,75,77,87,-1,-1,-1,-1,-1,-1},
{2,9,12,17,25,28,31,34,35,38,39,45,50,52,59,60,63,70,73,86,87,89,91,-1,-1,-1},
{4,11,17,19,22,24,27,31,38,39,40,42,47,50,54,58,64,65,67,73,79,80,81,83,86,-1},
{0,8,9,11,14,15,16,20,22,25,27,36,44,50,54,57,60,62,66,67,68,71,72,76,81,-1}};


// Typedefs
typedef int[0, numberOfChains - 1] chainId_t;

// Ints and Arrays
int Machines = numberOfMachines;
int numberOfChainsDone = 0;
int tasksDone[numberOfTasks];
bool runnableChains[numberOfChains];

// Channels
broadcast chan startMachines;
broadcast chan chainMachineChan[numberOfChains];
broadcast chan activateChains;
broadcast chan ChainDone[numberOfChains];</declaration>
	<template>
		<name x="5" y="5">Composer</name>
		<declaration>// Place local declarations here.
clock time;</declaration>
		<location id="id0" x="-102" y="-255">
			<name x="-112" y="-289">Init</name>
			<label kind="invariant" x="-246" y="-238">numberOfChainsDone &lt;= numberOfChains</label>
			<label kind="exponentialrate" x="-112" y="-221">0</label>
		</location>
		<location id="id1" x="331" y="-255">
			<name x="321" y="-289">Done</name>
		</location>
		<init ref="id0"/>
		<transition>
			<source ref="id0"/>
			<target ref="id1"/>
			<label kind="guard" x="-17" y="-289">numberOfChainsDone &gt;= numberOfChains</label>
		</transition>
	</template>
	<template>
		<name>Chain</name>
		<parameter>const chainId_t cid</parameter>
		<declaration>clock x;
const int chainSize = globalChainSize[cid];
int index = 0;
int TimeUnit = 2;

bool AllDependenciesDone()
{
    bool dependenciesDone = 1;
    int i;
    for (i = 0; i &lt; maxDependencies; i++)
    {
        int value = dependencies[globalChains[cid][index]][i];
        if (value == -1)
            return dependenciesDone;

        dependenciesDone &amp;= tasksDone[value];
    }
    return dependenciesDone;
}

void DecrementWork(int workDone)
{
    int currentDuration = durations[globalChains[cid][index]];

    if (workDone &gt; currentDuration)
        durations[globalChains[cid][index]] = 0;
    else
        durations[globalChains[cid][index]] -= workDone;
}</declaration>
		<location id="id2" x="-68" y="-238">
			<name x="-78" y="-272">Idle</name>
			<label kind="exponentialrate" x="-51" y="-263">3</label>
		</location>
		<location id="id3" x="-68" y="51">
			<name x="-93" y="68">Running</name>
			<label kind="invariant" x="-127" y="85">x &lt;= chainDuration[cid]</label>
		</location>
		<location id="id4" x="-399" y="-238">
			<name x="-409" y="-272">Done</name>
		</location>
		<init ref="id2"/>
		<transition controllable="false">
			<source ref="id3"/>
			<target ref="id2"/>
			<label kind="select" x="-59" y="-119">chain_id : chainId_t</label>
			<label kind="synchronisation" x="-59" y="-102">ChainDone[chain_id]?</label>
			<label kind="assignment" x="-59" y="-85">DecrementWork(chainDuration[chain_id]),
Machines++</label>
		</transition>
		<transition controllable="false">
			<source ref="id2"/>
			<target ref="id4"/>
			<label kind="guard" x="-357" y="-280">index &gt;= chainSize</label>
			<label kind="assignment" x="-357" y="-263">numberOfChainsDone++</label>
		</transition>
		<transition controllable="false">
			<source ref="id3"/>
			<target ref="id2"/>
			<label kind="guard" x="-433" y="-119">x &gt;= chainDuration[cid]</label>
			<label kind="synchronisation" x="-433" y="-102">ChainDone[cid]!</label>
			<label kind="assignment" x="-433" y="-85">Machines++,
tasksDone[globalChains[cid][index]] = 1,
index++</label>
			<nail x="-170" y="-8"/>
			<nail x="-170" y="-170"/>
		</transition>
		<transition>
			<source ref="id2"/>
			<target ref="id3"/>
			<label kind="guard" x="136" y="-238">index &lt; chainSize &amp;&amp;
Machines &gt; 0 &amp;&amp; AllDependenciesDone()</label>
			<label kind="assignment" x="136" y="-204">chainDuration[cid] = durations[globalChains[cid][index]],
Machines--,
x = 0</label>
			<nail x="127" y="-238"/>
			<nail x="127" y="51"/>
		</transition>
	</template>
	<system>// Place template instantiations here.

// List one or more processes to be composed into a system.
system Composer, Chain;
    </system>
	<queries>
		<query>
			<formula>A[] not deadlock</formula>
			<comment></comment>
		</query>
		<query>
			<formula>strategy TimeSchedule = minE (Composer.time) [&lt;=60] : &lt;&gt;Composer.Done</formula>
			<comment></comment>
		</query>
		<query>
			<formula>simulate 5000 [&lt;=200] {Composer.Done}</formula>
			<comment></comment>
		</query>
		<query>
			<formula>simulate 5000 [&lt;=65] {Composer.Done} under TimeSchedule</formula>
			<comment></comment>
		</query>
		<query>
			<formula>inf{Composer.Done} : Composer.time under TimeSchedule</formula>
			<comment></comment>
		</query>
		<query>
			<formula>A&lt;&gt; Composer.Done</formula>
			<comment></comment>
		</query>
		<query>
			<formula>E&lt;&gt; Composer.Done</formula>
			<comment></comment>
		</query>
	</queries>
</nta>
