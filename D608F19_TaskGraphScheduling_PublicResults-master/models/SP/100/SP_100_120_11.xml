<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/researchgroup/darts/uppaal/flat-1_2.dtd'>
<nta>
<declaration>//Variables
const int numberOfChains = 29;
const int numberOfTasks = 100;
const int numberOfMachines = 11;
const int maxDependencies = 15;
const int longestChain = 9;
const int globalChainSize[numberOfChains] = {9,4,3,3,7,6,5,4,4,3,2,7,3,2,5,3,2,2,3,4,2,2,2,3,3,2,3,1,1};
const int globalChains[numberOfChains][longestChain] = {
{0,7,14,20,28,74,76,81,92},
{1,21,86,94,-1,-1,-1,-1,-1},
{2,55,79,-1,-1,-1,-1,-1,-1},
{3,73,91,-1,-1,-1,-1,-1,-1},
{4,11,44,69,75,83,98,-1,-1},
{5,49,56,65,72,78,-1,-1,-1},
{6,42,45,67,96,-1,-1,-1,-1},
{8,85,88,93,-1,-1,-1,-1,-1},
{9,39,57,80,-1,-1,-1,-1,-1},
{10,17,51,-1,-1,-1,-1,-1,-1},
{12,97,-1,-1,-1,-1,-1,-1,-1},
{13,46,60,70,84,95,99,-1,-1},
{15,71,89,-1,-1,-1,-1,-1,-1},
{16,68,-1,-1,-1,-1,-1,-1,-1},
{18,50,61,63,64,-1,-1,-1,-1},
{19,62,90,-1,-1,-1,-1,-1,-1},
{22,87,-1,-1,-1,-1,-1,-1,-1},
{23,37,-1,-1,-1,-1,-1,-1,-1},
{24,38,54,-1,-1,-1,-1,-1,-1},
{25,41,43,66,-1,-1,-1,-1,-1},
{26,32,-1,-1,-1,-1,-1,-1,-1},
{27,52,-1,-1,-1,-1,-1,-1,-1},
{29,48,-1,-1,-1,-1,-1,-1,-1},
{30,59,82,-1,-1,-1,-1,-1,-1},
{31,47,58,-1,-1,-1,-1,-1,-1},
{33,53,-1,-1,-1,-1,-1,-1,-1},
{34,35,40,-1,-1,-1,-1,-1,-1},
{36,-1,-1,-1,-1,-1,-1,-1,-1},
{77,-1,-1,-1,-1,-1,-1,-1,-1}};
int chainDuration[numberOfChains] = {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1};
int durations[numberOfTasks] = {5,1,19,5,16,12,5,7,5,14,20,2,10,8,9,14,10,19,10,6,15,8,5,10,5,9,2,16,2,9,5,13,10,14,5,4,1,13,4,5,9,10,20,10,10,4,3,18,1,16,20,8,1,18,13,5,1,7,3,3,10,3,2,17,8,5,14,7,16,4,7,15,1,5,2,6,7,10,5,12,13,13,11,6,3,4,4,17,8,17,7,16,17,6,11,15,3,11,11,10};
const int dependencies[numberOfTasks][maxDependencies] = {
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,2,4,8,10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,12,15,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,5,10,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,14,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,10,16,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,22,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,15,18,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,7,11,19,20,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,17,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,13,24,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,25,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{15,26,31,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,9,30,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,12,14,22,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{16,31,34,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,3,10,23,30,31,34,-1,-1,-1,-1,-1,-1,-1,-1},
{0,4,5,22,24,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,7,9,34,38,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{21,35,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{10,23,25,30,32,36,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,6,25,28,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,14,34,41,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,2,4,10,11,27,42,43,-1,-1,-1,-1,-1,-1,-1},
{17,20,30,42,43,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,9,12,13,24,29,32,41,-1,-1,-1,-1,-1,-1,-1},
{3,14,16,31,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,10,13,29,30,33,34,-1,-1,-1,-1,-1,-1,-1,-1},
{5,11,13,28,44,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,18,19,21,26,31,37,45,46,-1,-1,-1,-1,-1,-1},
{0,3,4,17,19,24,29,33,36,37,48,-1,-1,-1,-1},
{20,27,41,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{16,17,23,29,33,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{11,20,23,30,34,38,47,-1,-1,-1,-1,-1,-1,-1,-1},
{2,5,11,21,28,40,43,45,48,49,51,-1,-1,-1,-1},
{28,39,42,44,49,51,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{9,16,26,34,35,39,41,51,-1,-1,-1,-1,-1,-1,-1},
{2,19,29,47,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{14,16,29,30,50,58,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,5,7,17,43,46,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,12,14,22,48,50,53,54,-1,-1,-1,-1,-1,-1,-1},
{2,19,39,43,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{10,13,20,29,30,35,57,61,-1,-1,-1,-1,-1,-1,-1},
{22,25,26,27,34,36,42,46,48,52,63,-1,-1,-1,-1},
{1,2,15,32,40,41,45,53,56,60,-1,-1,-1,-1,-1},
{14,24,27,43,47,57,60,-1,-1,-1,-1,-1,-1,-1,-1},
{1,3,7,10,15,22,23,31,34,40,45,57,64,-1,-1},
{3,15,16,50,60,63,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,2,9,11,15,33,39,41,44,49,54,-1,-1,-1,-1},
{1,8,9,19,36,38,60,63,-1,-1,-1,-1,-1,-1,-1},
{11,14,15,33,36,50,56,57,64,-1,-1,-1,-1,-1,-1},
{6,11,25,27,29,41,54,60,62,63,65,-1,-1,-1,-1},
{2,3,7,8,11,13,20,39,42,50,52,59,65,-1,-1},
{0,11,25,28,36,37,45,-1,-1,-1,-1,-1,-1,-1,-1},
{1,6,39,45,48,57,64,69,-1,-1,-1,-1,-1,-1,-1},
{4,22,28,40,43,52,55,74,-1,-1,-1,-1,-1,-1,-1},
{21,43,50,60,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,4,16,26,33,50,58,67,72,-1,-1,-1,-1,-1,-1},
{10,16,22,24,25,30,40,42,43,53,55,63,-1,-1,-1},
{6,13,17,24,31,33,57,58,67,72,74,-1,-1,-1,-1},
{0,7,12,19,27,32,56,76,-1,-1,-1,-1,-1,-1,-1},
{6,59,62,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,3,15,16,26,33,35,39,49,51,62,68,75,82,-1},
{11,38,45,54,56,57,62,70,77,-1,-1,-1,-1,-1,-1},
{4,8,19,40,56,64,76,-1,-1,-1,-1,-1,-1,-1,-1},
{1,6,7,21,26,31,35,46,47,56,62,65,82,-1,-1},
{1,17,22,26,50,53,54,84,-1,-1,-1,-1,-1,-1,-1},
{6,10,15,16,20,32,43,52,57,85,-1,-1,-1,-1,-1},
{1,12,16,19,30,54,61,62,71,77,83,87,-1,-1,-1},
{34,39,47,62,69,70,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{10,31,35,42,47,54,68,73,76,-1,-1,-1,-1,-1,-1},
{14,19,26,33,39,45,47,50,65,71,77,81,89,-1,-1},
{55,58,66,73,84,88,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{15,21,41,65,72,86,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,8,15,30,35,37,58,59,61,63,64,73,75,77,84},
{1,11,12,23,26,54,61,67,71,74,76,-1,-1,-1,-1},
{5,12,13,17,22,33,34,42,46,59,71,82,-1,-1,-1},
{3,4,5,19,26,43,49,57,64,71,83,85,95,-1,-1},
{24,30,31,39,47,55,59,62,95,-1,-1,-1,-1,-1,-1}};


// Typedefs
typedef int[0, numberOfChains - 1] chainId_t;

// Ints and Arrays
int Machines = numberOfMachines;
int numberOfChainsDone = 0;
int tasksDone[numberOfTasks];
bool runnableChains[numberOfChains];

// Channels
broadcast chan startMachines;
broadcast chan chainMachineChan[numberOfChains];
broadcast chan activateChains;
broadcast chan ChainDone[numberOfChains];</declaration>
	<template>
		<name x="5" y="5">Composer</name>
		<declaration>// Place local declarations here.
clock time;</declaration>
		<location id="id0" x="-102" y="-255">
			<name x="-112" y="-289">Init</name>
			<label kind="invariant" x="-246" y="-238">numberOfChainsDone &lt;= numberOfChains</label>
			<label kind="exponentialrate" x="-112" y="-221">0</label>
		</location>
		<location id="id1" x="331" y="-255">
			<name x="321" y="-289">Done</name>
		</location>
		<init ref="id0"/>
		<transition>
			<source ref="id0"/>
			<target ref="id1"/>
			<label kind="guard" x="-17" y="-289">numberOfChainsDone &gt;= numberOfChains</label>
		</transition>
	</template>
	<template>
		<name>Chain</name>
		<parameter>const chainId_t cid</parameter>
		<declaration>clock x;
const int chainSize = globalChainSize[cid];
int index = 0;
int TimeUnit = 2;

bool AllDependenciesDone()
{
    bool dependenciesDone = 1;
    int i;
    for (i = 0; i &lt; maxDependencies; i++)
    {
        int value = dependencies[globalChains[cid][index]][i];
        if (value == -1)
            return dependenciesDone;

        dependenciesDone &amp;= tasksDone[value];
    }
    return dependenciesDone;
}

void DecrementWork(int workDone)
{
    int currentDuration = durations[globalChains[cid][index]];

    if (workDone &gt; currentDuration)
        durations[globalChains[cid][index]] = 0;
    else
        durations[globalChains[cid][index]] -= workDone;
}</declaration>
		<location id="id2" x="-68" y="-238">
			<name x="-78" y="-272">Idle</name>
			<label kind="exponentialrate" x="-51" y="-263">3</label>
		</location>
		<location id="id3" x="-68" y="51">
			<name x="-93" y="68">Running</name>
			<label kind="invariant" x="-127" y="85">x &lt;= chainDuration[cid]</label>
		</location>
		<location id="id4" x="-399" y="-238">
			<name x="-409" y="-272">Done</name>
		</location>
		<init ref="id2"/>
		<transition controllable="false">
			<source ref="id3"/>
			<target ref="id2"/>
			<label kind="select" x="-59" y="-119">chain_id : chainId_t</label>
			<label kind="synchronisation" x="-59" y="-102">ChainDone[chain_id]?</label>
			<label kind="assignment" x="-59" y="-85">DecrementWork(chainDuration[chain_id]),
Machines++</label>
		</transition>
		<transition controllable="false">
			<source ref="id2"/>
			<target ref="id4"/>
			<label kind="guard" x="-357" y="-280">index &gt;= chainSize</label>
			<label kind="assignment" x="-357" y="-263">numberOfChainsDone++</label>
		</transition>
		<transition controllable="false">
			<source ref="id3"/>
			<target ref="id2"/>
			<label kind="guard" x="-433" y="-119">x &gt;= chainDuration[cid]</label>
			<label kind="synchronisation" x="-433" y="-102">ChainDone[cid]!</label>
			<label kind="assignment" x="-433" y="-85">Machines++,
tasksDone[globalChains[cid][index]] = 1,
index++</label>
			<nail x="-170" y="-8"/>
			<nail x="-170" y="-170"/>
		</transition>
		<transition>
			<source ref="id2"/>
			<target ref="id3"/>
			<label kind="guard" x="136" y="-238">index &lt; chainSize &amp;&amp;
Machines &gt; 0 &amp;&amp; AllDependenciesDone()</label>
			<label kind="assignment" x="136" y="-204">chainDuration[cid] = durations[globalChains[cid][index]],
Machines--,
x = 0</label>
			<nail x="127" y="-238"/>
			<nail x="127" y="51"/>
		</transition>
	</template>
	<system>// Place template instantiations here.

// List one or more processes to be composed into a system.
system Composer, Chain;
    </system>
	<queries>
		<query>
			<formula>A[] not deadlock</formula>
			<comment></comment>
		</query>
		<query>
			<formula>strategy TimeSchedule = minE (Composer.time) [&lt;=60] : &lt;&gt;Composer.Done</formula>
			<comment></comment>
		</query>
		<query>
			<formula>simulate 5000 [&lt;=200] {Composer.Done}</formula>
			<comment></comment>
		</query>
		<query>
			<formula>simulate 5000 [&lt;=65] {Composer.Done} under TimeSchedule</formula>
			<comment></comment>
		</query>
		<query>
			<formula>inf{Composer.Done} : Composer.time under TimeSchedule</formula>
			<comment></comment>
		</query>
		<query>
			<formula>A&lt;&gt; Composer.Done</formula>
			<comment></comment>
		</query>
		<query>
			<formula>E&lt;&gt; Composer.Done</formula>
			<comment></comment>
		</query>
	</queries>
</nta>
