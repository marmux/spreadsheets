<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/researchgroup/darts/uppaal/flat-1_2.dtd'>
<nta>
<declaration>//Variables
const int numberOfChains = 25;
const int numberOfTasks = 100;
const int numberOfMachines = 10;
const int maxDependencies = 42;
const int longestChain = 14;
const int globalChainSize[numberOfChains] = {14,8,5,4,4,4,2,5,4,3,2,5,5,4,4,2,4,4,4,3,3,2,2,1,2};
const int globalChains[numberOfChains][longestChain] = {
{0,1,3,8,28,29,34,36,63,64,73,97,98,99},
{2,66,74,75,77,79,94,95,-1,-1,-1,-1,-1,-1},
{4,67,76,87,92,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,80,90,91,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,82,88,96,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,84,89,93,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{9,85,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{10,30,78,83,86,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{11,40,60,81,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{12,62,72,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{13,70,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{14,33,41,54,71,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{15,47,52,61,68,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{16,57,58,65,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{17,48,55,69,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{18,59,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{19,49,53,56,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{20,24,42,51,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{21,35,43,50,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{22,26,37,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{23,32,45,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{25,46,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{27,44,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{31,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{38,39,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1}};
int chainDuration[numberOfChains] = {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1};
int durations[numberOfTasks] = {19,2,7,10,1,1,10,7,18,15,2,4,18,22,3,2,15,11,12,18,1,7,16,19,3,8,23,1,3,33,4,20,3,16,5,8,19,12,3,2,44,6,9,4,5,30,6,6,2,20,6,14,1,24,6,1,3,8,5,6,1,5,3,16,3,1,2,8,1,1,4,1,8,1,25,37,5,34,14,12,13,2,2,2,1,4,7,4,1,3,8,22,3,32,23,9,2,6,3,5};
const int dependencies[numberOfTasks][maxDependencies] = {
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,2,3,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,3,4,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,2,3,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,7,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,3,8,9,10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,12,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,2,3,4,5,8,12,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,3,4,6,7,9,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,7,11,13,14,15,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,4,6,8,11,12,16,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,7,9,10,13,15,17,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,3,4,6,7,10,14,15,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,2,4,6,7,14,15,19,20,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,3,5,8,9,10,13,18,21,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,8,10,12,15,16,21,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,2,4,5,7,9,12,14,17,18,20,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,5,8,12,13,14,17,18,20,22,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,4,6,11,12,13,14,15,16,17,18,20,22,23,25,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,2,3,5,8,12,15,16,19,23,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,3,5,6,8,10,14,18,19,20,22,26,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,2,8,9,11,12,15,18,21,23,28,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,6,7,8,9,10,12,20,27,28,29,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,3,4,6,9,12,13,14,18,21,26,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,6,7,9,10,13,16,17,21,23,24,27,29,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,5,6,7,9,11,13,14,17,20,23,24,25,26,28,29,32,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,3,7,8,9,10,19,20,21,22,23,26,29,30,32,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,3,6,9,10,13,15,17,18,19,21,24,31,32,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,8,9,11,13,15,16,17,18,20,23,25,29,33,34,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,3,6,8,13,14,17,18,19,22,26,27,30,35,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,8,9,10,11,13,16,19,23,24,25,30,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,4,7,8,11,17,19,25,26,27,29,35,38,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,3,4,5,6,9,11,14,17,18,19,21,24,29,30,38,39,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,5,6,8,11,12,15,16,17,18,20,22,23,24,27,28,30,33,36,38,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,3,4,5,9,11,14,18,21,24,29,30,32,33,35,37,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,2,6,8,9,14,17,21,26,27,28,29,32,35,38,40,42,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,8,10,12,16,18,20,22,27,34,36,38,41,42,43,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,3,6,7,12,13,17,23,26,29,31,32,33,42,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,8,10,13,20,21,23,25,26,27,30,33,34,36,38,44,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,2,8,9,10,12,13,15,19,22,27,29,32,33,35,43,44,45,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,2,8,11,15,16,17,22,23,24,25,26,27,34,36,37,39,40,41,42,46,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,4,5,11,12,14,19,23,24,25,27,32,33,34,35,36,38,40,45,46,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,8,10,12,14,17,18,21,22,23,25,26,30,32,35,37,39,40,42,43,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,9,12,14,15,17,21,23,24,25,29,33,34,39,42,43,46,47,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,3,9,11,15,17,18,20,24,26,28,30,36,41,44,46,47,49,50,51,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,3,5,10,11,15,17,20,23,25,26,27,32,34,37,40,42,43,44,49,52,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,2,3,4,5,6,10,11,12,16,17,18,19,24,25,26,35,38,39,41,42,50,51,52,53,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,3,6,7,8,14,18,20,22,25,29,31,37,38,40,42,44,46,48,51,54,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,5,8,21,24,25,28,29,30,33,40,43,44,46,49,53,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,6,7,8,12,13,15,16,21,22,26,27,30,33,37,38,39,41,42,43,45,48,49,53,56,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,5,6,7,10,13,15,17,18,19,20,22,24,27,32,34,40,42,43,48,49,51,52,56,57,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,4,6,8,10,11,16,18,22,23,25,29,30,31,33,35,37,40,43,46,49,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,2,3,5,6,7,10,11,13,14,17,20,21,22,25,26,27,31,36,38,40,47,49,50,52,53,55,56,57,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,6,10,11,12,16,26,28,29,30,39,40,41,42,43,44,45,49,50,51,52,55,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,6,8,9,10,12,13,14,24,25,27,28,31,34,36,37,42,44,46,50,53,55,58,60,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,5,7,8,11,12,13,15,21,22,23,24,27,28,29,30,36,39,41,42,44,47,48,50,52,58,59,60,61,62,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,2,5,7,9,11,15,16,21,23,25,27,29,33,34,36,37,40,41,42,50,51,52,54,55,58,59,60,63,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,6,12,14,16,19,20,21,24,25,27,29,30,34,42,45,56,58,59,60,62,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,2,3,4,12,14,15,16,18,22,23,28,29,31,36,39,42,43,47,48,55,56,57,58,65,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,4,15,19,20,21,26,27,28,29,36,37,38,43,45,46,50,51,53,54,56,59,60,61,62,63,66,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,4,9,15,16,20,22,23,25,28,33,34,43,49,52,55,59,60,61,66,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,10,13,14,23,28,32,38,39,41,48,50,51,53,55,57,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,3,7,12,13,18,20,21,22,23,24,26,31,32,33,35,36,41,43,44,59,62,66,67,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,9,10,11,14,16,27,28,32,34,36,44,47,48,51,52,53,54,57,61,65,67,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,8,11,12,13,14,17,18,19,20,22,23,24,26,27,30,34,36,39,41,42,43,45,47,49,53,58,60,61,62,63,65,66,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,3,7,9,14,18,19,20,22,23,28,29,32,34,35,38,39,43,45,51,52,54,57,61,62,64,67,70,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,2,8,9,10,12,13,14,15,16,20,22,24,26,27,28,36,37,38,43,46,49,50,53,55,62,64,66,67,70,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,4,5,7,9,12,19,20,23,24,26,28,29,30,36,39,41,42,47,49,50,55,56,57,58,64,65,67,69,70,73,74,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,2,14,16,20,22,23,26,29,30,31,33,34,35,36,37,39,41,46,48,51,54,58,60,61,64,65,67,69,74,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,8,11,12,13,17,21,27,29,31,32,34,36,37,38,41,45,46,49,52,53,58,61,62,64,65,68,74,75,76,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,4,10,13,14,15,18,20,24,25,27,29,30,34,35,37,38,42,48,52,55,59,63,65,67,69,71,72,75,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,2,3,6,7,10,12,16,17,18,19,24,29,30,32,34,35,38,39,40,41,42,46,51,52,54,56,61,62,66,72,75,77,78,-1,-1,-1,-1,-1,-1,-1,-1},
{1,4,5,6,8,11,13,17,20,28,29,30,31,38,39,43,44,47,48,54,55,60,66,67,69,72,73,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,10,12,15,18,20,22,28,30,35,37,39,40,42,43,44,45,46,48,49,51,54,57,59,60,65,70,73,75,76,79,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,3,4,5,6,7,10,11,14,16,17,19,20,24,25,28,30,32,36,37,38,39,43,44,45,46,50,52,53,54,55,56,57,59,62,65,68,75,76,-1,-1,-1},
{0,1,4,7,8,9,12,17,21,23,26,30,31,33,40,43,50,56,58,60,63,65,70,72,78,79,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,2,4,7,10,12,13,15,16,17,22,28,34,35,40,42,53,60,62,67,68,69,70,71,72,75,78,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,4,6,8,9,14,20,21,23,26,27,29,30,31,32,33,38,46,48,49,52,53,54,64,71,73,76,78,80,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,4,7,10,11,14,15,16,19,20,22,26,30,32,35,39,45,46,47,51,52,56,57,63,65,69,70,71,72,78,79,81,83,84,-1,-1,-1,-1,-1,-1,-1},
{4,5,8,12,14,15,18,20,21,22,23,24,26,27,31,32,36,40,41,42,45,46,47,48,51,53,54,55,57,63,67,70,73,74,76,78,79,82,84,-1,-1,-1},
{1,3,7,8,10,11,19,20,21,24,30,31,37,38,40,41,42,48,52,53,54,57,58,59,64,67,68,69,72,73,78,79,80,82,83,84,85,-1,-1,-1,-1,-1},
{4,5,9,11,14,16,17,20,23,24,25,36,40,41,46,50,52,53,56,58,59,60,63,65,74,78,80,81,82,83,84,85,86,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,6,11,15,18,20,25,26,28,29,31,33,34,35,37,38,43,44,45,53,55,56,58,61,65,66,70,72,74,76,77,80,81,82,84,85,86,89,-1,-1,-1,-1},
{1,10,11,12,13,23,25,28,29,31,35,40,45,46,48,49,50,51,52,56,58,63,64,68,69,71,74,75,83,84,86,88,90,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,5,7,9,13,14,19,20,22,27,28,32,38,39,40,43,45,46,47,52,53,56,61,63,64,68,69,72,75,76,78,79,81,82,86,87,90,-1,-1,-1,-1,-1},
{2,5,7,10,13,17,24,26,32,35,37,40,42,43,44,47,49,52,56,58,59,65,66,68,69,72,76,78,82,83,85,87,89,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,3,4,5,6,8,12,19,22,25,27,29,30,31,32,33,34,35,40,41,42,43,45,54,59,67,72,75,77,79,80,82,86,87,88,89,92,-1,-1,-1,-1,-1},
{3,6,7,9,10,12,19,20,27,28,30,36,39,42,43,47,52,53,54,55,60,63,65,67,69,71,80,82,83,84,85,86,87,90,91,93,94,-1,-1,-1,-1,-1},
{0,6,9,11,13,16,18,24,25,26,27,30,33,36,38,41,42,44,47,50,53,56,60,61,70,71,77,79,80,81,85,86,88,89,93,-1,-1,-1,-1,-1,-1,-1},
{0,1,2,4,5,6,16,18,19,20,22,23,27,28,30,34,35,37,42,45,49,50,51,52,54,55,57,60,61,62,64,66,70,73,76,77,80,90,93,94,95,96},
{0,1,4,5,15,18,19,21,23,24,31,34,38,40,42,44,49,52,54,56,60,61,64,67,71,72,73,74,78,79,80,83,87,92,93,95,96,97,-1,-1,-1,-1},
{10,13,15,17,24,25,28,30,32,33,38,39,40,43,44,45,47,53,54,57,58,59,61,62,63,67,68,69,72,77,84,87,89,90,96,98,-1,-1,-1,-1,-1,-1}};


// Typedefs
typedef int[0, numberOfChains - 1] chainId_t;

// Ints and Arrays
int Machines = numberOfMachines;
int numberOfChainsDone = 0;
int tasksDone[numberOfTasks];
bool runnableChains[numberOfChains];

// Channels
broadcast chan startMachines;
broadcast chan chainMachineChan[numberOfChains];
broadcast chan activateChains;
broadcast chan ChainDone[numberOfChains];</declaration>
	<template>
		<name x="5" y="5">Composer</name>
		<declaration>// Place local declarations here.
clock time;</declaration>
		<location id="id0" x="-102" y="-255">
			<name x="-112" y="-289">Init</name>
			<label kind="invariant" x="-246" y="-238">numberOfChainsDone &lt;= numberOfChains</label>
			<label kind="exponentialrate" x="-112" y="-221">0</label>
		</location>
		<location id="id1" x="331" y="-255">
			<name x="321" y="-289">Done</name>
		</location>
		<init ref="id0"/>
		<transition>
			<source ref="id0"/>
			<target ref="id1"/>
			<label kind="guard" x="-17" y="-289">numberOfChainsDone &gt;= numberOfChains</label>
		</transition>
	</template>
	<template>
		<name>Chain</name>
		<parameter>const chainId_t cid</parameter>
		<declaration>clock x;
const int chainSize = globalChainSize[cid];
int index = 0;
int TimeUnit = 2;

bool AllDependenciesDone()
{
    bool dependenciesDone = 1;
    int i;
    for (i = 0; i &lt; maxDependencies; i++)
    {
        int value = dependencies[globalChains[cid][index]][i];
        if (value == -1)
            return dependenciesDone;

        dependenciesDone &amp;= tasksDone[value];
    }
    return dependenciesDone;
}

void DecrementWork(int workDone)
{
    int currentDuration = durations[globalChains[cid][index]];

    if (workDone &gt; currentDuration)
        durations[globalChains[cid][index]] = 0;
    else
        durations[globalChains[cid][index]] -= workDone;
}</declaration>
		<location id="id2" x="-68" y="-238">
			<name x="-78" y="-272">Idle</name>
			<label kind="exponentialrate" x="-51" y="-263">3</label>
		</location>
		<location id="id3" x="-68" y="51">
			<name x="-93" y="68">Running</name>
			<label kind="invariant" x="-127" y="85">x &lt;= chainDuration[cid]</label>
		</location>
		<location id="id4" x="-399" y="-238">
			<name x="-409" y="-272">Done</name>
		</location>
		<init ref="id2"/>
		<transition controllable="false">
			<source ref="id3"/>
			<target ref="id2"/>
			<label kind="select" x="-59" y="-119">chain_id : chainId_t</label>
			<label kind="synchronisation" x="-59" y="-102">ChainDone[chain_id]?</label>
			<label kind="assignment" x="-59" y="-85">DecrementWork(chainDuration[chain_id]),
Machines++</label>
		</transition>
		<transition controllable="false">
			<source ref="id2"/>
			<target ref="id4"/>
			<label kind="guard" x="-357" y="-280">index &gt;= chainSize</label>
			<label kind="assignment" x="-357" y="-263">numberOfChainsDone++</label>
		</transition>
		<transition controllable="false">
			<source ref="id3"/>
			<target ref="id2"/>
			<label kind="guard" x="-433" y="-119">x &gt;= chainDuration[cid]</label>
			<label kind="synchronisation" x="-433" y="-102">ChainDone[cid]!</label>
			<label kind="assignment" x="-433" y="-85">Machines++,
tasksDone[globalChains[cid][index]] = 1,
index++</label>
			<nail x="-170" y="-8"/>
			<nail x="-170" y="-170"/>
		</transition>
		<transition>
			<source ref="id2"/>
			<target ref="id3"/>
			<label kind="guard" x="136" y="-238">index &lt; chainSize &amp;&amp;
Machines &gt; 0 &amp;&amp; AllDependenciesDone()</label>
			<label kind="assignment" x="136" y="-204">chainDuration[cid] = durations[globalChains[cid][index]],
Machines--,
x = 0</label>
			<nail x="127" y="-238"/>
			<nail x="127" y="51"/>
		</transition>
	</template>
	<system>// Place template instantiations here.

// List one or more processes to be composed into a system.
system Composer, Chain;
    </system>
	<queries>
		<query>
			<formula>A[] not deadlock</formula>
			<comment></comment>
		</query>
		<query>
			<formula>strategy TimeSchedule = minE (Composer.time) [&lt;=60] : &lt;&gt;Composer.Done</formula>
			<comment></comment>
		</query>
		<query>
			<formula>simulate 5000 [&lt;=200] {Composer.Done}</formula>
			<comment></comment>
		</query>
		<query>
			<formula>simulate 5000 [&lt;=65] {Composer.Done} under TimeSchedule</formula>
			<comment></comment>
		</query>
		<query>
			<formula>inf{Composer.Done} : Composer.time under TimeSchedule</formula>
			<comment></comment>
		</query>
		<query>
			<formula>A&lt;&gt; Composer.Done</formula>
			<comment></comment>
		</query>
		<query>
			<formula>E&lt;&gt; Composer.Done</formula>
			<comment></comment>
		</query>
	</queries>
</nta>
