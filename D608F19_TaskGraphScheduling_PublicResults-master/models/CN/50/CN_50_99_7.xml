<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/researchgroup/darts/uppaal/flat-1_2.dtd'>
<nta>
<declaration>//Variables
const int numberOfChains = 21;
const int numberOfTasks = 50;
const int numberOfMachines = 7;
const int maxDependencies = 14;
const int longestChain = 5;
const int globalChainSize[numberOfChains] = {5,2,3,2,3,3,3,3,5,2,3,2,2,1,2,2,1,2,1,2,1};
const int globalChains[numberOfChains][longestChain] = {
{0,14,27,31,49},
{1,47,-1,-1,-1},
{2,12,48,-1,-1},
{3,39,-1,-1,-1},
{4,30,42,-1,-1},
{5,23,43,-1,-1},
{6,26,40,-1,-1},
{7,34,41,-1,-1},
{8,19,22,38,45},
{9,25,-1,-1,-1},
{10,35,44,-1,-1},
{11,46,-1,-1,-1},
{13,29,-1,-1,-1},
{15,-1,-1,-1,-1},
{16,37,-1,-1,-1},
{17,36,-1,-1,-1},
{18,-1,-1,-1,-1},
{20,33,-1,-1,-1},
{21,-1,-1,-1,-1},
{24,32,-1,-1,-1},
{28,-1,-1,-1,-1}};
int chainDuration[numberOfChains] = {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1};
int durations[numberOfTasks] = {7,14,20,4,3,18,11,12,7,13,7,4,3,9,16,19,19,5,12,11,6,18,18,3,12,8,20,16,17,4,16,4,9,19,17,10,5,12,13,9,19,20,10,8,12,14,2,10,16,4};
const int dependencies[numberOfTasks][maxDependencies] = {
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,2,6,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,3,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,5,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,6,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,7,12,19,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,5,6,10,13,14,16,17,-1,-1,-1,-1,-1,-1},
{0,6,7,19,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,8,9,19,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,3,6,14,19,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,5,8,11,14,17,20,-1,-1,-1,-1,-1,-1,-1},
{0,2,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,7,12,13,21,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,2,4,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,2,4,14,19,21,25,27,-1,-1,-1,-1,-1,-1},
{0,4,6,7,24,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,5,8,20,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,3,6,7,13,21,24,27,29,-1,-1,-1,-1,-1},
{0,6,10,18,21,22,-1,-1,-1,-1,-1,-1,-1,-1},
{16,17,19,20,23,30,-1,-1,-1,-1,-1,-1,-1,-1},
{2,9,10,16,19,20,21,24,28,-1,-1,-1,-1,-1},
{2,3,13,14,21,22,-1,-1,-1,-1,-1,-1,-1,-1},
{0,3,7,11,12,13,14,22,23,26,28,29,35,37},
{1,6,15,26,29,32,34,35,37,38,-1,-1,-1,-1},
{0,5,16,18,20,25,27,29,34,38,-1,-1,-1,-1},
{1,15,16,27,29,30,33,-1,-1,-1,-1,-1,-1,-1},
{8,9,13,19,21,23,25,27,28,30,36,-1,-1,-1},
{2,9,13,17,24,32,35,-1,-1,-1,-1,-1,-1,-1},
{1,9,12,14,38,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{9,11,26,34,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,8,10,11,15,22,27,33,36,-1,-1,-1,-1},
{1,5,10,12,14,16,17,23,26,27,-1,-1,-1,-1},
{5,11,20,23,24,31,32,-1,-1,-1,-1,-1,-1,-1}};


int availableMachines = numberOfMachines;

// Typedefs
typedef int[0, numberOfChains - 1] chainId_t;

// Ints and Arrays
int numberOfChainsDone = 0;
int tasksDone[numberOfTasks];
bool runnableChains[numberOfChains];
bool assignmentChoice[numberOfChains];

// Channels
broadcast chan startMachines;
broadcast chan chainMachineChan[numberOfChains];
broadcast chan activateChains;</declaration>
	<template>
		<name x="5" y="5">Composer</name>
		<declaration>// Place local declarations here.
clock time;</declaration>
		<location id="id0" x="-102" y="-255">
			<name x="-112" y="-289">Init</name>
			<label kind="invariant" x="-246" y="-238">numberOfChainsDone &lt;= numberOfChains
            &amp;&amp; cost' == 1</label>
		</location>
		<location id="id1" x="331" y="-255">
			<name x="321" y="-289">Done</name>
		</location>
		<init ref="id0"/>
		<transition>
			<source ref="id0"/>
			<target ref="id1"/>
			<label kind="guard" x="-17" y="-289">numberOfChainsDone &gt;= numberOfChains</label>
		</transition>
	</template>
	<template>
		<name>Chain</name>
		<parameter>const chainId_t cid</parameter>
		<declaration>clock x;
const int chainSize = globalChainSize[cid];
int index = 0;

bool AllDependenciesDone()
{
    bool dependenciesDone = 1;
    int i;
    for (i = 0; i &lt; maxDependencies; i++)
    {
        int value = dependencies[globalChains[cid][index]][i];
        if (value == -1)
            return dependenciesDone;

        dependenciesDone &amp;= tasksDone[value];
    }
    return dependenciesDone;
}</declaration>
		<location id="id2" x="-68" y="-238">
			<name x="-78" y="-272">Idle</name>
		</location>
		<location id="id3" x="-76" y="51">
			<name x="-102" y="68">Running</name>
			<label kind="invariant" x="-178" y="85">x &lt;= durations[globalChains[cid][index]]</label>
		</location>
		<location id="id4" x="-450" y="-238">
			<name x="-460" y="-272">Done</name>
		</location>
		<init ref="id2"/>
		<transition>
			<source ref="id2"/>
			<target ref="id4"/>
			<label kind="guard" x="-399" y="-280">index &gt;= chainSize &amp;&amp;
x &gt;= durations[globalChains[cid][index - 1]]</label>
			<label kind="assignment" x="-399" y="-238">numberOfChainsDone++</label>
		</transition>
		<transition>
			<source ref="id3"/>
			<target ref="id2"/>
			<label kind="guard" x="-450" y="-127">x &gt;= durations[globalChains[cid][index]]</label>
			<label kind="assignment" x="-450" y="-110">availableMachines++,
tasksDone[globalChains[cid][index]] = 1,
index++</label>
			<nail x="-161" y="-85"/>
		</transition>
		<transition>
			<source ref="id2"/>
			<target ref="id3"/>
			<label kind="guard" x="34" y="-127">index &lt; chainSize &amp;&amp;
availableMachines &gt; 0 &amp;&amp; AllDependenciesDone()</label>
			<label kind="assignment" x="34" y="-85">availableMachines--,
x = 0</label>
			<nail x="17" y="-85"/>
		</transition>
	</template>
	<system>// Place template instantiations here.

// List one or more processes to be composed into a system.
system Composer, Chain;
    </system>
	<queries>
		<query>
			<formula>strategy TimeSchedule = minE (Composer.time) [&lt;=57] : &lt;&gt;Composer.Done</formula>
			<comment></comment>
		</query>
		<query>
			<formula>inf{Composer.Done} : Composer.time</formula>
			<comment></comment>
		</query>
		<query>
			<formula>A&lt;&gt; Composer.Done</formula>
			<comment></comment>
		</query>
		<query>
			<formula>E&lt;&gt; Composer.Done</formula>
			<comment></comment>
		</query>
	</queries>
</nta>
