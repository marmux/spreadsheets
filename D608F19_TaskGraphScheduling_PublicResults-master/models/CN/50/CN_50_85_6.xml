<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/researchgroup/darts/uppaal/flat-1_2.dtd'>
<nta>
<declaration>//Variables
const int numberOfChains = 15;
const int numberOfTasks = 50;
const int numberOfMachines = 6;
const int maxDependencies = 16;
const int longestChain = 8;
const int globalChainSize[numberOfChains] = {8,6,2,5,4,4,3,6,3,3,1,1,2,1,1};
const int globalChains[numberOfChains][longestChain] = {
{0,4,30,31,34,37,46,49},
{1,35,38,40,43,48,-1,-1},
{2,47,-1,-1,-1,-1,-1,-1},
{3,5,7,17,44,-1,-1,-1},
{6,11,23,45,-1,-1,-1,-1},
{8,18,33,41,-1,-1,-1,-1},
{9,27,42,-1,-1,-1,-1,-1},
{10,12,25,26,32,36,-1,-1},
{13,21,28,-1,-1,-1,-1,-1},
{14,29,39,-1,-1,-1,-1,-1},
{15,-1,-1,-1,-1,-1,-1,-1},
{16,-1,-1,-1,-1,-1,-1,-1},
{19,24,-1,-1,-1,-1,-1,-1},
{20,-1,-1,-1,-1,-1,-1,-1},
{22,-1,-1,-1,-1,-1,-1,-1}};
int chainDuration[numberOfChains] = {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1};
int durations[numberOfTasks] = {16,14,9,12,12,9,9,6,9,9,7,12,10,10,13,11,8,11,7,13,10,9,7,11,13,12,11,10,5,11,15,13,9,15,17,7,10,11,15,7,10,13,13,11,15,9,13,14,11,12};
const int dependencies[numberOfTasks][maxDependencies] = {
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,3,4,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,2,6,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,8,9,10,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,6,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,5,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,7,9,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,5,6,7,10,13,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,6,8,14,17,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,11,18,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,6,9,11,12,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,5,13,18,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,7,12,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,5,6,9,11,12,16,21,-1,-1,-1,-1,-1,-1,-1,-1},
{1,3,7,19,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,5,10,11,12,14,15,23,24,-1,-1,-1,-1,-1,-1,-1},
{4,9,18,20,22,25,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,3,7,9,10,16,21,22,23,24,-1,-1,-1,-1,-1,-1},
{3,16,17,21,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,3,6,11,14,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,2,4,5,9,11,14,15,20,-1,-1,-1,-1,-1,-1,-1},
{0,1,2,8,10,13,14,23,24,28,30,-1,-1,-1,-1,-1},
{7,9,13,14,18,19,24,26,-1,-1,-1,-1,-1,-1,-1,-1},
{2,9,11,15,18,27,28,31,-1,-1,-1,-1,-1,-1,-1,-1},
{0,3,5,6,8,10,16,17,18,24,31,-1,-1,-1,-1,-1},
{0,1,3,4,16,19,20,21,27,33,-1,-1,-1,-1,-1,-1},
{13,15,18,22,30,32,35,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,10,13,18,20,23,25,27,28,31,34,36,-1,-1,-1,-1},
{5,20,21,22,29,30,31,33,35,-1,-1,-1,-1,-1,-1,-1},
{10,15,17,24,29,33,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,5,8,13,14,17,27,31,32,33,35,38,-1,-1,-1,-1},
{8,15,16,19,21,30,33,38,39,-1,-1,-1,-1,-1,-1,-1},
{3,4,11,12,15,19,22,23,25,27,28,-1,-1,-1,-1,-1},
{2,7,8,15,16,19,22,27,31,34,35,40,41,-1,-1,-1},
{2,11,17,25,36,37,38,39,42,-1,-1,-1,-1,-1,-1,-1},
{5,8,12,23,24,29,30,33,38,39,40,-1,-1,-1,-1,-1},
{0,1,3,4,7,12,14,15,19,25,27,32,37,38,39,40},
{1,2,6,10,22,23,24,25,28,36,37,38,40,42,45,-1},
{1,2,8,12,19,23,24,27,30,34,41,42,43,44,45,-1},
{0,2,5,10,20,21,22,24,31,39,46,47,-1,-1,-1,-1}};


int availableMachines = numberOfMachines;

// Typedefs
typedef int[0, numberOfChains - 1] chainId_t;

// Ints and Arrays
int numberOfChainsDone = 0;
int tasksDone[numberOfTasks];
bool runnableChains[numberOfChains];
bool assignmentChoice[numberOfChains];

// Channels
broadcast chan startMachines;
broadcast chan chainMachineChan[numberOfChains];
broadcast chan activateChains;</declaration>
	<template>
		<name x="5" y="5">Composer</name>
		<declaration>// Place local declarations here.
clock time;</declaration>
		<location id="id0" x="-102" y="-255">
			<name x="-112" y="-289">Init</name>
			<label kind="invariant" x="-246" y="-238">numberOfChainsDone &lt;= numberOfChains
            &amp;&amp; cost' == 1</label>
		</location>
		<location id="id1" x="331" y="-255">
			<name x="321" y="-289">Done</name>
		</location>
		<init ref="id0"/>
		<transition>
			<source ref="id0"/>
			<target ref="id1"/>
			<label kind="guard" x="-17" y="-289">numberOfChainsDone &gt;= numberOfChains</label>
		</transition>
	</template>
	<template>
		<name>Chain</name>
		<parameter>const chainId_t cid</parameter>
		<declaration>clock x;
const int chainSize = globalChainSize[cid];
int index = 0;

bool AllDependenciesDone()
{
    bool dependenciesDone = 1;
    int i;
    for (i = 0; i &lt; maxDependencies; i++)
    {
        int value = dependencies[globalChains[cid][index]][i];
        if (value == -1)
            return dependenciesDone;

        dependenciesDone &amp;= tasksDone[value];
    }
    return dependenciesDone;
}</declaration>
		<location id="id2" x="-68" y="-238">
			<name x="-78" y="-272">Idle</name>
		</location>
		<location id="id3" x="-76" y="51">
			<name x="-102" y="68">Running</name>
			<label kind="invariant" x="-178" y="85">x &lt;= durations[globalChains[cid][index]]</label>
		</location>
		<location id="id4" x="-450" y="-238">
			<name x="-460" y="-272">Done</name>
		</location>
		<init ref="id2"/>
		<transition>
			<source ref="id2"/>
			<target ref="id4"/>
			<label kind="guard" x="-399" y="-280">index &gt;= chainSize &amp;&amp;
x &gt;= durations[globalChains[cid][index - 1]]</label>
			<label kind="assignment" x="-399" y="-238">numberOfChainsDone++</label>
		</transition>
		<transition>
			<source ref="id3"/>
			<target ref="id2"/>
			<label kind="guard" x="-450" y="-127">x &gt;= durations[globalChains[cid][index]]</label>
			<label kind="assignment" x="-450" y="-110">availableMachines++,
tasksDone[globalChains[cid][index]] = 1,
index++</label>
			<nail x="-161" y="-85"/>
		</transition>
		<transition>
			<source ref="id2"/>
			<target ref="id3"/>
			<label kind="guard" x="34" y="-127">index &lt; chainSize &amp;&amp;
availableMachines &gt; 0 &amp;&amp; AllDependenciesDone()</label>
			<label kind="assignment" x="34" y="-85">availableMachines--,
x = 0</label>
			<nail x="17" y="-85"/>
		</transition>
	</template>
	<system>// Place template instantiations here.

// List one or more processes to be composed into a system.
system Composer, Chain;
    </system>
	<queries>
		<query>
			<formula>strategy TimeSchedule = minE (Composer.time) [&lt;=57] : &lt;&gt;Composer.Done</formula>
			<comment></comment>
		</query>
		<query>
			<formula>inf{Composer.Done} : Composer.time</formula>
			<comment></comment>
		</query>
		<query>
			<formula>A&lt;&gt; Composer.Done</formula>
			<comment></comment>
		</query>
		<query>
			<formula>E&lt;&gt; Composer.Done</formula>
			<comment></comment>
		</query>
	</queries>
</nta>
