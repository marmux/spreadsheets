<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/researchgroup/darts/uppaal/flat-1_2.dtd'>
<nta>
<declaration>//Variables
const int numberOfChains = 16;
const int numberOfTasks = 50;
const int numberOfMachines = 10;
const int maxDependencies = 8;
const int longestChain = 9;
const int globalChainSize[numberOfChains] = {9,2,5,2,4,5,2,2,6,2,1,3,2,1,2,2};
const int globalChains[numberOfChains][longestChain] = {
{0,2,4,6,14,26,33,41,45},
{1,49,-1,-1,-1,-1,-1,-1,-1},
{3,27,34,35,37,-1,-1,-1,-1},
{5,16,-1,-1,-1,-1,-1,-1,-1},
{7,15,43,46,-1,-1,-1,-1,-1},
{8,11,18,25,42,-1,-1,-1,-1},
{9,44,-1,-1,-1,-1,-1,-1,-1},
{10,13,-1,-1,-1,-1,-1,-1,-1},
{12,21,24,32,39,48,-1,-1,-1},
{17,19,-1,-1,-1,-1,-1,-1,-1},
{20,-1,-1,-1,-1,-1,-1,-1,-1},
{22,29,40,-1,-1,-1,-1,-1,-1},
{23,47,-1,-1,-1,-1,-1,-1,-1},
{28,-1,-1,-1,-1,-1,-1,-1,-1},
{30,36,-1,-1,-1,-1,-1,-1,-1},
{31,38,-1,-1,-1,-1,-1,-1,-1}};
int chainDuration[numberOfChains] = {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1};
int durations[numberOfTasks] = {11,12,1,4,1,9,4,10,35,4,9,6,4,12,10,47,17,2,4,20,4,16,2,30,28,2,9,7,6,1,2,5,1,25,23,11,14,1,19,6,5,10,2,1,12,2,12,1,4,8};
const int dependencies[numberOfTasks][maxDependencies] = {
{-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1},
{0,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1},
{2,3,-1,-1,-1,-1,-1,-1},
{4,-1,-1,-1,-1,-1,-1,-1},
{2,4,-1,-1,-1,-1,-1,-1},
{4,-1,-1,-1,-1,-1,-1,-1},
{6,-1,-1,-1,-1,-1,-1,-1},
{4,-1,-1,-1,-1,-1,-1,-1},
{3,-1,-1,-1,-1,-1,-1,-1},
{7,8,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1},
{10,-1,-1,-1,-1,-1,-1,-1},
{0,5,6,-1,-1,-1,-1,-1},
{2,7,-1,-1,-1,-1,-1,-1},
{5,11,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1},
{9,11,12,14,-1,-1,-1,-1},
{2,15,17,-1,-1,-1,-1,-1},
{3,17,-1,-1,-1,-1,-1,-1},
{5,8,12,-1,-1,-1,-1,-1},
{9,-1,-1,-1,-1,-1,-1,-1},
{8,11,-1,-1,-1,-1,-1,-1},
{2,3,21,-1,-1,-1,-1,-1},
{6,7,12,18,-1,-1,-1,-1},
{1,2,5,8,14,-1,-1,-1},
{3,4,8,11,20,24,26,-1},
{11,27,-1,-1,-1,-1,-1,-1},
{6,22,26,-1,-1,-1,-1,-1},
{9,12,-1,-1,-1,-1,-1,-1},
{12,17,-1,-1,-1,-1,-1,-1},
{24,30,-1,-1,-1,-1,-1,-1},
{0,3,14,22,26,-1,-1,-1},
{1,5,10,18,24,27,29,32},
{14,28,34,-1,-1,-1,-1,-1},
{25,29,30,-1,-1,-1,-1,-1},
{12,13,18,21,22,28,35,-1},
{11,21,30,31,-1,-1,-1,-1},
{0,1,12,22,32,-1,-1,-1},
{0,22,23,26,29,30,-1,-1},
{20,23,27,32,33,-1,-1,-1},
{7,15,23,25,-1,-1,-1,-1},
{4,15,34,36,-1,-1,-1,-1},
{7,9,14,-1,-1,-1,-1,-1},
{18,19,26,41,-1,-1,-1,-1},
{10,23,24,43,-1,-1,-1,-1},
{3,23,31,-1,-1,-1,-1,-1},
{1,28,30,39,47,-1,-1,-1},
{1,2,4,16,30,39,47,48}};


int availableMachines = numberOfMachines;

// Typedefs
typedef int[0, numberOfChains - 1] chainId_t;

// Ints and Arrays
int numberOfChainsDone = 0;
int tasksDone[numberOfTasks];
bool runnableChains[numberOfChains];
bool assignmentChoice[numberOfChains];

// Channels
broadcast chan startMachines;
broadcast chan chainMachineChan[numberOfChains];
broadcast chan activateChains;</declaration>
	<template>
		<name x="5" y="5">Composer</name>
		<declaration>// Place local declarations here.
clock time;</declaration>
		<location id="id0" x="-102" y="-255">
			<name x="-112" y="-289">Init</name>
			<label kind="invariant" x="-246" y="-238">numberOfChainsDone &lt;= numberOfChains
            &amp;&amp; cost' == 1</label>
		</location>
		<location id="id1" x="331" y="-255">
			<name x="321" y="-289">Done</name>
		</location>
		<init ref="id0"/>
		<transition>
			<source ref="id0"/>
			<target ref="id1"/>
			<label kind="guard" x="-17" y="-289">numberOfChainsDone &gt;= numberOfChains</label>
		</transition>
	</template>
	<template>
		<name>Chain</name>
		<parameter>const chainId_t cid</parameter>
		<declaration>clock x;
const int chainSize = globalChainSize[cid];
int index = 0;

bool AllDependenciesDone()
{
    bool dependenciesDone = 1;
    int i;
    for (i = 0; i &lt; maxDependencies; i++)
    {
        int value = dependencies[globalChains[cid][index]][i];
        if (value == -1)
            return dependenciesDone;

        dependenciesDone &amp;= tasksDone[value];
    }
    return dependenciesDone;
}</declaration>
		<location id="id2" x="-68" y="-238">
			<name x="-78" y="-272">Idle</name>
		</location>
		<location id="id3" x="-76" y="51">
			<name x="-102" y="68">Running</name>
			<label kind="invariant" x="-178" y="85">x &lt;= durations[globalChains[cid][index]]</label>
		</location>
		<location id="id4" x="-450" y="-238">
			<name x="-460" y="-272">Done</name>
		</location>
		<init ref="id2"/>
		<transition>
			<source ref="id2"/>
			<target ref="id4"/>
			<label kind="guard" x="-399" y="-280">index &gt;= chainSize &amp;&amp;
x &gt;= durations[globalChains[cid][index - 1]]</label>
			<label kind="assignment" x="-399" y="-238">numberOfChainsDone++</label>
		</transition>
		<transition>
			<source ref="id3"/>
			<target ref="id2"/>
			<label kind="guard" x="-450" y="-127">x &gt;= durations[globalChains[cid][index]]</label>
			<label kind="assignment" x="-450" y="-110">availableMachines++,
tasksDone[globalChains[cid][index]] = 1,
index++</label>
			<nail x="-161" y="-85"/>
		</transition>
		<transition>
			<source ref="id2"/>
			<target ref="id3"/>
			<label kind="guard" x="34" y="-127">index &lt; chainSize &amp;&amp;
availableMachines &gt; 0 &amp;&amp; AllDependenciesDone()</label>
			<label kind="assignment" x="34" y="-85">availableMachines--,
x = 0</label>
			<nail x="17" y="-85"/>
		</transition>
	</template>
	<system>// Place template instantiations here.

// List one or more processes to be composed into a system.
system Composer, Chain;
    </system>
	<queries>
		<query>
			<formula>strategy TimeSchedule = minE (Composer.time) [&lt;=57] : &lt;&gt;Composer.Done</formula>
			<comment></comment>
		</query>
		<query>
			<formula>inf{Composer.Done} : Composer.time</formula>
			<comment></comment>
		</query>
		<query>
			<formula>A&lt;&gt; Composer.Done</formula>
			<comment></comment>
		</query>
		<query>
			<formula>E&lt;&gt; Composer.Done</formula>
			<comment></comment>
		</query>
	</queries>
</nta>
