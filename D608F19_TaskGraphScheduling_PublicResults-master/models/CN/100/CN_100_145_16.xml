<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/researchgroup/darts/uppaal/flat-1_2.dtd'>
<nta>
<declaration>//Variables
const int numberOfChains = 47;
const int numberOfTasks = 100;
const int numberOfMachines = 16;
const int maxDependencies = 10;
const int longestChain = 8;
const int globalChainSize[numberOfChains] = {8,3,2,3,3,2,4,3,2,3,2,3,4,4,2,2,2,3,2,2,3,2,2,4,1,2,1,2,3,1,1,2,2,1,1,1,1,2,1,1,1,1,1,1,1,1,1};
const int globalChains[numberOfChains][longestChain] = {
{0,11,27,42,47,66,75,90},
{1,72,83,-1,-1,-1,-1,-1},
{2,87,-1,-1,-1,-1,-1,-1},
{3,73,88,-1,-1,-1,-1,-1},
{4,67,91,-1,-1,-1,-1,-1},
{5,31,-1,-1,-1,-1,-1,-1},
{6,53,62,86,-1,-1,-1,-1},
{7,10,61,-1,-1,-1,-1,-1},
{8,76,-1,-1,-1,-1,-1,-1},
{9,74,92,-1,-1,-1,-1,-1},
{12,96,-1,-1,-1,-1,-1,-1},
{13,80,95,-1,-1,-1,-1,-1},
{14,50,56,99,-1,-1,-1,-1},
{15,19,44,93,-1,-1,-1,-1},
{16,64,-1,-1,-1,-1,-1,-1},
{17,33,-1,-1,-1,-1,-1,-1},
{18,69,-1,-1,-1,-1,-1,-1},
{20,29,89,-1,-1,-1,-1,-1},
{21,97,-1,-1,-1,-1,-1,-1},
{22,63,-1,-1,-1,-1,-1,-1},
{23,49,58,-1,-1,-1,-1,-1},
{24,68,-1,-1,-1,-1,-1,-1},
{25,40,-1,-1,-1,-1,-1,-1},
{26,35,46,78,-1,-1,-1,-1},
{28,-1,-1,-1,-1,-1,-1,-1},
{30,54,-1,-1,-1,-1,-1,-1},
{32,-1,-1,-1,-1,-1,-1,-1},
{34,94,-1,-1,-1,-1,-1,-1},
{36,70,85,-1,-1,-1,-1,-1},
{37,-1,-1,-1,-1,-1,-1,-1},
{38,-1,-1,-1,-1,-1,-1,-1},
{39,82,-1,-1,-1,-1,-1,-1},
{41,71,-1,-1,-1,-1,-1,-1},
{43,-1,-1,-1,-1,-1,-1,-1},
{45,-1,-1,-1,-1,-1,-1,-1},
{48,-1,-1,-1,-1,-1,-1,-1},
{51,-1,-1,-1,-1,-1,-1,-1},
{52,81,-1,-1,-1,-1,-1,-1},
{55,-1,-1,-1,-1,-1,-1,-1},
{57,-1,-1,-1,-1,-1,-1,-1},
{59,-1,-1,-1,-1,-1,-1,-1},
{60,-1,-1,-1,-1,-1,-1,-1},
{65,-1,-1,-1,-1,-1,-1,-1},
{77,-1,-1,-1,-1,-1,-1,-1},
{79,-1,-1,-1,-1,-1,-1,-1},
{84,-1,-1,-1,-1,-1,-1,-1},
{98,-1,-1,-1,-1,-1,-1,-1}};
int chainDuration[numberOfChains] = {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1};
int durations[numberOfTasks] = {11,12,14,5,5,7,6,4,5,4,6,7,5,6,10,7,14,7,7,9,15,8,6,8,14,6,10,16,10,13,5,12,5,7,9,4,5,14,4,3,12,6,15,13,8,12,6,10,15,8,7,5,14,5,5,4,8,5,5,5,5,10,13,4,11,9,5,5,11,7,11,5,6,6,7,6,5,11,6,7,3,11,11,10,6,9,5,18,8,7,3,4,5,9,8,5,7,7,9,11};
const int dependencies[numberOfTasks][maxDependencies] = {
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,7,-1,-1,-1,-1,-1,-1,-1,-1},
{0,5,-1,-1,-1,-1,-1,-1,-1,-1},
{6,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{9,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,15,-1,-1,-1,-1,-1,-1,-1,-1},
{16,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{12,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{9,17,-1,-1,-1,-1,-1,-1,-1,-1},
{8,10,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{9,11,18,-1,-1,-1,-1,-1,-1,-1},
{8,11,-1,-1,-1,-1,-1,-1,-1,-1},
{11,20,-1,-1,-1,-1,-1,-1,-1,-1},
{10,11,-1,-1,-1,-1,-1,-1,-1,-1},
{1,5,17,-1,-1,-1,-1,-1,-1,-1},
{13,20,-1,-1,-1,-1,-1,-1,-1,-1},
{10,16,17,-1,-1,-1,-1,-1,-1,-1},
{18,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{17,20,26,-1,-1,-1,-1,-1,-1,-1},
{4,30,-1,-1,-1,-1,-1,-1,-1,-1},
{11,18,-1,-1,-1,-1,-1,-1,-1,-1},
{9,26,-1,-1,-1,-1,-1,-1,-1,-1},
{10,18,-1,-1,-1,-1,-1,-1,-1,-1},
{10,25,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{14,16,27,-1,-1,-1,-1,-1,-1,-1},
{21,34,-1,-1,-1,-1,-1,-1,-1,-1},
{1,19,-1,-1,-1,-1,-1,-1,-1,-1},
{21,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{14,19,34,35,-1,-1,-1,-1,-1,-1},
{3,6,33,42,-1,-1,-1,-1,-1,-1},
{11,36,-1,-1,-1,-1,-1,-1,-1,-1},
{12,15,23,-1,-1,-1,-1,-1,-1,-1},
{14,23,25,27,30,37,-1,-1,-1,-1},
{13,44,-1,-1,-1,-1,-1,-1,-1,-1},
{26,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,6,29,32,36,-1,-1,-1,-1,-1},
{2,18,30,-1,-1,-1,-1,-1,-1,-1},
{10,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,25,34,38,50,51,54,-1,-1,-1},
{25,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,17,32,34,37,38,41,49,-1,-1},
{5,7,-1,-1,-1,-1,-1,-1,-1,-1},
{11,41,-1,-1,-1,-1,-1,-1,-1,-1},
{1,6,10,17,34,-1,-1,-1,-1,-1},
{16,29,32,53,-1,-1,-1,-1,-1,-1},
{17,22,39,51,-1,-1,-1,-1,-1,-1},
{0,12,16,32,37,45,51,-1,-1,-1},
{4,50,-1,-1,-1,-1,-1,-1,-1,-1},
{6,8,12,27,47,49,65,-1,-1,-1},
{4,33,46,47,-1,-1,-1,-1,-1,-1},
{1,24,25,26,36,49,55,-1,-1,-1},
{5,10,18,29,40,-1,-1,-1,-1,-1},
{4,6,36,-1,-1,-1,-1,-1,-1,-1},
{7,21,41,59,-1,-1,-1,-1,-1,-1},
{1,17,26,27,32,36,39,64,-1,-1},
{0,3,16,26,28,45,60,-1,-1,-1},
{5,9,32,38,44,48,69,-1,-1,-1},
{6,17,23,28,38,47,52,66,68,-1},
{4,8,12,18,42,46,52,54,65,-1},
{7,30,-1,-1,-1,-1,-1,-1,-1,-1},
{19,46,-1,-1,-1,-1,-1,-1,-1,-1},
{9,47,-1,-1,-1,-1,-1,-1,-1,-1},
{13,22,50,65,67,-1,-1,-1,-1,-1},
{52,60,62,-1,-1,-1,-1,-1,-1,-1},
{39,45,60,-1,-1,-1,-1,-1,-1,-1},
{5,43,67,72,74,-1,-1,-1,-1,-1},
{16,19,49,-1,-1,-1,-1,-1,-1,-1},
{46,70,71,-1,-1,-1,-1,-1,-1,-1},
{1,17,34,39,62,66,-1,-1,-1,-1},
{2,3,14,16,18,35,42,45,61,79},
{12,19,27,29,52,59,63,73,-1,-1},
{4,9,16,21,29,35,-1,-1,-1,-1},
{8,12,24,51,67,69,73,75,-1,-1},
{0,4,6,38,51,54,63,67,81,-1},
{5,9,24,30,34,51,74,-1,-1,-1},
{9,12,22,24,44,46,49,71,-1,-1},
{3,34,73,-1,-1,-1,-1,-1,-1,-1},
{19,24,37,43,65,69,80,-1,-1,-1},
{1,9,12,21,35,48,58,63,-1,-1},
{11,21,32,47,67,-1,-1,-1,-1,-1},
{12,62,73,-1,-1,-1,-1,-1,-1,-1},
{12,18,41,56,58,63,77,-1,-1,-1}};


int availableMachines = numberOfMachines;

// Typedefs
typedef int[0, numberOfChains - 1] chainId_t;

// Ints and Arrays
int numberOfChainsDone = 0;
int tasksDone[numberOfTasks];
bool runnableChains[numberOfChains];
bool assignmentChoice[numberOfChains];

// Channels
broadcast chan startMachines;
broadcast chan chainMachineChan[numberOfChains];
broadcast chan activateChains;</declaration>
	<template>
		<name x="5" y="5">Composer</name>
		<declaration>// Place local declarations here.
clock time;</declaration>
		<location id="id0" x="-102" y="-255">
			<name x="-112" y="-289">Init</name>
			<label kind="invariant" x="-246" y="-238">numberOfChainsDone &lt;= numberOfChains
            &amp;&amp; cost' == 1</label>
		</location>
		<location id="id1" x="331" y="-255">
			<name x="321" y="-289">Done</name>
		</location>
		<init ref="id0"/>
		<transition>
			<source ref="id0"/>
			<target ref="id1"/>
			<label kind="guard" x="-17" y="-289">numberOfChainsDone &gt;= numberOfChains</label>
		</transition>
	</template>
	<template>
		<name>Chain</name>
		<parameter>const chainId_t cid</parameter>
		<declaration>clock x;
const int chainSize = globalChainSize[cid];
int index = 0;

bool AllDependenciesDone()
{
    bool dependenciesDone = 1;
    int i;
    for (i = 0; i &lt; maxDependencies; i++)
    {
        int value = dependencies[globalChains[cid][index]][i];
        if (value == -1)
            return dependenciesDone;

        dependenciesDone &amp;= tasksDone[value];
    }
    return dependenciesDone;
}</declaration>
		<location id="id2" x="-68" y="-238">
			<name x="-78" y="-272">Idle</name>
		</location>
		<location id="id3" x="-76" y="51">
			<name x="-102" y="68">Running</name>
			<label kind="invariant" x="-178" y="85">x &lt;= durations[globalChains[cid][index]]</label>
		</location>
		<location id="id4" x="-450" y="-238">
			<name x="-460" y="-272">Done</name>
		</location>
		<init ref="id2"/>
		<transition>
			<source ref="id2"/>
			<target ref="id4"/>
			<label kind="guard" x="-399" y="-280">index &gt;= chainSize &amp;&amp;
x &gt;= durations[globalChains[cid][index - 1]]</label>
			<label kind="assignment" x="-399" y="-238">numberOfChainsDone++</label>
		</transition>
		<transition>
			<source ref="id3"/>
			<target ref="id2"/>
			<label kind="guard" x="-450" y="-127">x &gt;= durations[globalChains[cid][index]]</label>
			<label kind="assignment" x="-450" y="-110">availableMachines++,
tasksDone[globalChains[cid][index]] = 1,
index++</label>
			<nail x="-161" y="-85"/>
		</transition>
		<transition>
			<source ref="id2"/>
			<target ref="id3"/>
			<label kind="guard" x="34" y="-127">index &lt; chainSize &amp;&amp;
availableMachines &gt; 0 &amp;&amp; AllDependenciesDone()</label>
			<label kind="assignment" x="34" y="-85">availableMachines--,
x = 0</label>
			<nail x="17" y="-85"/>
		</transition>
	</template>
	<system>// Place template instantiations here.

// List one or more processes to be composed into a system.
system Composer, Chain;
    </system>
	<queries>
		<query>
			<formula>strategy TimeSchedule = minE (Composer.time) [&lt;=57] : &lt;&gt;Composer.Done</formula>
			<comment></comment>
		</query>
		<query>
			<formula>inf{Composer.Done} : Composer.time</formula>
			<comment></comment>
		</query>
		<query>
			<formula>A&lt;&gt; Composer.Done</formula>
			<comment></comment>
		</query>
		<query>
			<formula>E&lt;&gt; Composer.Done</formula>
			<comment></comment>
		</query>
	</queries>
</nta>
