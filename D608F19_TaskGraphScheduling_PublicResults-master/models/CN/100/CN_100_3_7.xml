<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/researchgroup/darts/uppaal/flat-1_2.dtd'>
<nta>
<declaration>//Variables
const int numberOfChains = 30;
const int numberOfTasks = 100;
const int numberOfMachines = 7;
const int maxDependencies = 19;
const int longestChain = 8;
const int globalChainSize[numberOfChains] = {8,5,2,4,3,3,5,2,6,5,3,4,4,4,4,2,6,2,2,3,4,4,2,2,3,3,1,1,2,1};
const int globalChains[numberOfChains][longestChain] = {
{0,5,18,49,57,69,75,97},
{1,29,51,96,98,-1,-1,-1},
{2,95,-1,-1,-1,-1,-1,-1},
{3,63,77,91,-1,-1,-1,-1},
{4,92,94,-1,-1,-1,-1,-1},
{6,70,99,-1,-1,-1,-1,-1},
{7,15,58,65,88,-1,-1,-1},
{8,71,-1,-1,-1,-1,-1,-1},
{9,26,66,72,79,86,-1,-1},
{10,60,82,85,89,-1,-1,-1},
{11,68,87,-1,-1,-1,-1,-1},
{12,28,39,83,-1,-1,-1,-1},
{13,61,64,76,-1,-1,-1,-1},
{14,74,78,81,-1,-1,-1,-1},
{16,27,52,80,-1,-1,-1,-1},
{17,93,-1,-1,-1,-1,-1,-1},
{19,24,46,56,73,84,-1,-1},
{20,90,-1,-1,-1,-1,-1,-1},
{21,48,-1,-1,-1,-1,-1,-1},
{22,41,67,-1,-1,-1,-1,-1},
{23,34,47,62,-1,-1,-1,-1},
{25,38,45,54,-1,-1,-1,-1},
{30,59,-1,-1,-1,-1,-1,-1},
{31,55,-1,-1,-1,-1,-1,-1},
{32,33,37,-1,-1,-1,-1,-1},
{35,42,50,-1,-1,-1,-1,-1},
{36,-1,-1,-1,-1,-1,-1,-1},
{40,-1,-1,-1,-1,-1,-1,-1},
{43,44,-1,-1,-1,-1,-1,-1},
{53,-1,-1,-1,-1,-1,-1,-1}};
int chainDuration[numberOfChains] = {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1};
int durations[numberOfTasks] = {1,9,10,3,1,1,8,5,2,5,1,10,10,7,5,8,2,5,3,5,9,3,3,6,3,10,1,9,10,1,4,6,2,1,8,8,10,3,10,1,3,4,6,2,2,1,9,8,6,6,2,4,3,9,4,5,7,5,8,1,2,6,3,10,3,5,5,9,9,9,8,2,2,3,6,9,5,1,10,9,4,1,2,5,2,4,1,6,6,3,10,9,10,7,3,8,9,10,2,4};
const int dependencies[numberOfTasks][maxDependencies] = {
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,6,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,6,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,4,6,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,5,14,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,15,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,2,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{12,19,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{14,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,10,14,17,19,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,8,9,11,21,24,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,14,16,21,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,5,10,12,16,17,27,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,10,17,26,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,3,16,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,26,28,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,3,7,13,17,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{9,18,31,32,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,9,13,20,23,30,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,5,14,15,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,27,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,5,28,32,33,36,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,12,14,23,25,31,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{11,15,17,24,28,29,36,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{9,11,13,31,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,8,12,22,26,33,36,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,20,22,25,35,36,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,22,31,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{20,43,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,14,31,38,42,44,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,11,12,15,24,34,41,42,43,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{10,15,18,19,22,25,34,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,10,21,28,29,32,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,7,9,18,29,30,36,37,41,47,-1,-1,-1,-1,-1,-1,-1,-1},
{7,18,23,39,42,43,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,2,25,26,29,39,40,42,43,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,15,20,27,34,35,44,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{13,17,21,31,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,19,22,24,39,43,45,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,20,21,24,27,31,34,42,44,53,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,15,23,33,35,44,46,54,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,7,13,18,21,42,43,49,51,56,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,6,9,10,12,15,16,23,29,33,41,42,46,52,53,-1,-1,-1,-1},
{0,1,30,42,43,53,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,10,12,29,34,37,40,51,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{13,17,25,28,29,38,39,44,51,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,7,25,35,39,47,57,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,3,5,10,15,32,33,55,60,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,13,16,18,50,54,61,62,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,9,13,29,46,51,58,60,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,4,8,13,24,26,27,40,42,53,60,62,-1,-1,-1,-1,-1,-1,-1},
{9,15,24,39,41,50,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,10,11,16,28,29,43,57,59,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,5,18,19,44,53,57,67,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,5,6,36,37,57,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,8,11,24,32,41,63,70,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,8,12,13,22,28,34,56,57,60,66,68,-1,-1,-1,-1,-1,-1,-1},
{1,10,23,50,53,54,56,57,65,67,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,14,34,35,37,43,44,47,49,53,61,65,-1,-1,-1,-1,-1,-1,-1},
{17,21,25,30,34,42,65,68,69,70,71,-1,-1,-1,-1,-1,-1,-1,-1},
{11,17,25,26,39,46,64,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{21,28,33,35,39,50,51,56,63,67,70,73,75,-1,-1,-1,-1,-1,-1},
{0,7,14,29,34,46,55,61,73,74,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{22,25,30,45,46,47,56,66,68,72,74,75,78,-1,-1,-1,-1,-1,-1},
{44,45,52,66,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,9,11,18,21,36,37,50,55,56,66,67,73,78,-1,-1,-1,-1,-1},
{1,25,27,28,33,54,56,60,66,67,72,73,78,-1,-1,-1,-1,-1,-1},
{7,8,20,22,25,30,34,39,50,65,66,-1,-1,-1,-1,-1,-1,-1,-1},
{28,33,38,40,46,73,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,14,15,31,62,68,69,82,83,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,7,35,54,56,63,76,79,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{13,20,40,54,56,61,68,83,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{10,11,15,25,26,27,29,30,32,44,51,59,65,74,78,79,87,-1,-1},
{0,10,19,33,47,58,64,68,79,83,85,-1,-1,-1,-1,-1,-1,-1,-1},
{4,15,20,29,34,35,42,45,48,74,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,20,21,28,31,37,41,46,63,69,76,77,80,86,-1,-1,-1,-1,-1},
{3,4,13,25,32,37,46,48,63,64,69,78,80,84,-1,-1,-1,-1,-1},
{4,13,17,25,26,32,34,59,60,75,78,-1,-1,-1,-1,-1,-1,-1,-1},
{1,4,9,21,26,30,31,37,47,50,54,75,85,86,89,92,-1,-1,-1},
{2,15,18,29,31,33,35,36,42,54,56,61,68,80,-1,-1,-1,-1,-1},
{24,31,38,46,49,51,53,57,62,63,67,79,-1,-1,-1,-1,-1,-1,-1},
{0,5,14,24,35,40,45,50,54,60,66,70,75,79,81,83,87,91,92},
{3,5,7,8,31,37,38,41,51,62,66,81,87,89,90,96,-1,-1,-1},
{0,6,13,17,34,36,40,41,45,51,55,70,72,77,89,93,-1,-1,-1}};


int availableMachines = numberOfMachines;

// Typedefs
typedef int[0, numberOfChains - 1] chainId_t;

// Ints and Arrays
int numberOfChainsDone = 0;
int tasksDone[numberOfTasks];
bool runnableChains[numberOfChains];
bool assignmentChoice[numberOfChains];

// Channels
broadcast chan startMachines;
broadcast chan chainMachineChan[numberOfChains];
broadcast chan activateChains;</declaration>
	<template>
		<name x="5" y="5">Composer</name>
		<declaration>// Place local declarations here.
clock time;</declaration>
		<location id="id0" x="-102" y="-255">
			<name x="-112" y="-289">Init</name>
			<label kind="invariant" x="-246" y="-238">numberOfChainsDone &lt;= numberOfChains
            &amp;&amp; cost' == 1</label>
		</location>
		<location id="id1" x="331" y="-255">
			<name x="321" y="-289">Done</name>
		</location>
		<init ref="id0"/>
		<transition>
			<source ref="id0"/>
			<target ref="id1"/>
			<label kind="guard" x="-17" y="-289">numberOfChainsDone &gt;= numberOfChains</label>
		</transition>
	</template>
	<template>
		<name>Chain</name>
		<parameter>const chainId_t cid</parameter>
		<declaration>clock x;
const int chainSize = globalChainSize[cid];
int index = 0;

bool AllDependenciesDone()
{
    bool dependenciesDone = 1;
    int i;
    for (i = 0; i &lt; maxDependencies; i++)
    {
        int value = dependencies[globalChains[cid][index]][i];
        if (value == -1)
            return dependenciesDone;

        dependenciesDone &amp;= tasksDone[value];
    }
    return dependenciesDone;
}</declaration>
		<location id="id2" x="-68" y="-238">
			<name x="-78" y="-272">Idle</name>
		</location>
		<location id="id3" x="-76" y="51">
			<name x="-102" y="68">Running</name>
			<label kind="invariant" x="-178" y="85">x &lt;= durations[globalChains[cid][index]]</label>
		</location>
		<location id="id4" x="-450" y="-238">
			<name x="-460" y="-272">Done</name>
		</location>
		<init ref="id2"/>
		<transition>
			<source ref="id2"/>
			<target ref="id4"/>
			<label kind="guard" x="-399" y="-280">index &gt;= chainSize &amp;&amp;
x &gt;= durations[globalChains[cid][index - 1]]</label>
			<label kind="assignment" x="-399" y="-238">numberOfChainsDone++</label>
		</transition>
		<transition>
			<source ref="id3"/>
			<target ref="id2"/>
			<label kind="guard" x="-450" y="-127">x &gt;= durations[globalChains[cid][index]]</label>
			<label kind="assignment" x="-450" y="-110">availableMachines++,
tasksDone[globalChains[cid][index]] = 1,
index++</label>
			<nail x="-161" y="-85"/>
		</transition>
		<transition>
			<source ref="id2"/>
			<target ref="id3"/>
			<label kind="guard" x="34" y="-127">index &lt; chainSize &amp;&amp;
availableMachines &gt; 0 &amp;&amp; AllDependenciesDone()</label>
			<label kind="assignment" x="34" y="-85">availableMachines--,
x = 0</label>
			<nail x="17" y="-85"/>
		</transition>
	</template>
	<system>// Place template instantiations here.

// List one or more processes to be composed into a system.
system Composer, Chain;
    </system>
	<queries>
		<query>
			<formula>strategy TimeSchedule = minE (Composer.time) [&lt;=57] : &lt;&gt;Composer.Done</formula>
			<comment></comment>
		</query>
		<query>
			<formula>inf{Composer.Done} : Composer.time</formula>
			<comment></comment>
		</query>
		<query>
			<formula>A&lt;&gt; Composer.Done</formula>
			<comment></comment>
		</query>
		<query>
			<formula>E&lt;&gt; Composer.Done</formula>
			<comment></comment>
		</query>
	</queries>
</nta>
