<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/researchgroup/darts/uppaal/flat-1_2.dtd'>
<nta>
<declaration>//Variables
const int numberOfChains = 40;
const int numberOfTasks = 100;
const int numberOfMachines = 3;
const int maxDependencies = 11;
const int longestChain = 6;
const int globalChainSize[numberOfChains] = {5,5,3,3,5,3,4,6,2,3,4,2,2,5,3,1,2,4,1,3,3,2,3,1,3,2,2,1,4,2,2,1,1,1,1,1,1,1,1,1};
const int globalChains[numberOfChains][longestChain] = {
{0,40,47,71,90,-1},
{1,21,42,81,98,-1},
{2,57,78,-1,-1,-1},
{3,48,82,-1,-1,-1},
{4,49,56,68,95,-1},
{5,63,99,-1,-1,-1},
{6,61,86,87,-1,-1},
{7,24,35,75,83,93},
{8,66,-1,-1,-1,-1},
{9,76,97,-1,-1,-1},
{10,25,55,80,-1,-1},
{11,62,-1,-1,-1,-1},
{12,88,-1,-1,-1,-1},
{13,23,31,77,92,-1},
{14,73,89,-1,-1,-1},
{15,-1,-1,-1,-1,-1},
{16,65,-1,-1,-1,-1},
{17,30,53,96,-1,-1},
{18,-1,-1,-1,-1,-1},
{19,67,94,-1,-1,-1},
{20,74,84,-1,-1,-1},
{22,59,-1,-1,-1,-1},
{26,45,52,-1,-1,-1},
{27,-1,-1,-1,-1,-1},
{28,34,60,-1,-1,-1},
{29,85,-1,-1,-1,-1},
{32,70,-1,-1,-1,-1},
{33,-1,-1,-1,-1,-1},
{36,46,69,72,-1,-1},
{37,51,-1,-1,-1,-1},
{38,43,-1,-1,-1,-1},
{39,-1,-1,-1,-1,-1},
{41,-1,-1,-1,-1,-1},
{44,-1,-1,-1,-1,-1},
{50,-1,-1,-1,-1,-1},
{54,-1,-1,-1,-1,-1},
{58,-1,-1,-1,-1,-1},
{64,-1,-1,-1,-1,-1},
{79,-1,-1,-1,-1,-1},
{91,-1,-1,-1,-1,-1}};
int chainDuration[numberOfChains] = {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1};
int durations[numberOfTasks] = {8,3,3,21,13,6,13,5,10,8,8,5,3,6,4,33,13,3,7,1,9,4,3,11,8,4,7,7,3,3,5,3,2,2,47,6,13,10,7,9,19,14,19,3,4,13,3,12,9,8,4,11,9,3,28,43,19,13,7,3,2,6,16,5,15,20,9,28,14,6,6,6,30,6,4,6,6,9,4,2,13,1,4,4,26,4,2,18,8,7,5,2,10,11,9,2,18,3,2,16};
const int dependencies[numberOfTasks][maxDependencies] = {
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,6,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,8,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,9,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,13,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,7,18,-1,-1,-1,-1,-1,-1,-1,-1},
{4,10,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{13,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{16,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,17,27,-1,-1,-1,-1,-1,-1,-1,-1},
{4,19,23,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,26,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{22,28,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,6,13,16,24,-1,-1,-1,-1,-1,-1},
{3,8,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{13,29,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{24,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,2,13,15,-1,-1,-1,-1,-1,-1,-1},
{24,28,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{14,21,33,35,37,-1,-1,-1,-1,-1,-1},
{31,38,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,26,35,-1,-1,-1,-1,-1,-1,-1,-1},
{9,29,36,-1,-1,-1,-1,-1,-1,-1,-1},
{8,40,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,7,40,-1,-1,-1,-1,-1,-1,-1,-1},
{4,9,21,-1,-1,-1,-1,-1,-1,-1,-1},
{0,9,29,-1,-1,-1,-1,-1,-1,-1,-1},
{36,37,45,-1,-1,-1,-1,-1,-1,-1,-1},
{7,41,45,-1,-1,-1,-1,-1,-1,-1,-1},
{19,30,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{13,25,30,43,47,-1,-1,-1,-1,-1,-1},
{9,12,45,49,-1,-1,-1,-1,-1,-1,-1},
{1,2,22,23,27,-1,-1,-1,-1,-1,-1},
{2,7,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{22,26,47,-1,-1,-1,-1,-1,-1,-1,-1},
{11,17,34,41,-1,-1,-1,-1,-1,-1,-1},
{3,4,6,27,50,-1,-1,-1,-1,-1,-1},
{0,11,25,-1,-1,-1,-1,-1,-1,-1,-1},
{5,10,38,48,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{9,16,27,51,58,-1,-1,-1,-1,-1,-1},
{2,8,10,12,22,35,46,51,59,-1,-1},
{19,28,29,37,-1,-1,-1,-1,-1,-1,-1},
{18,28,35,42,43,46,56,-1,-1,-1,-1},
{12,34,37,46,-1,-1,-1,-1,-1,-1,-1},
{28,32,35,64,-1,-1,-1,-1,-1,-1,-1},
{3,34,35,40,47,-1,-1,-1,-1,-1,-1},
{26,30,64,69,-1,-1,-1,-1,-1,-1,-1},
{14,16,21,39,55,-1,-1,-1,-1,-1,-1},
{4,6,20,39,50,-1,-1,-1,-1,-1,-1},
{1,15,24,28,35,-1,-1,-1,-1,-1,-1},
{2,6,9,33,41,63,65,69,-1,-1,-1},
{7,25,31,44,58,-1,-1,-1,-1,-1,-1},
{25,47,51,57,66,-1,-1,-1,-1,-1,-1},
{56,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{10,17,28,41,45,55,57,-1,-1,-1,-1},
{23,27,32,40,42,51,74,75,-1,-1,-1},
{3,14,24,27,31,48,51,57,63,67,72},
{7,13,16,41,55,72,75,-1,-1,-1,-1},
{16,21,27,43,74,-1,-1,-1,-1,-1,-1},
{7,24,26,29,36,-1,-1,-1,-1,-1,-1},
{45,61,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{34,37,55,86,-1,-1,-1,-1,-1,-1,-1},
{12,24,28,31,45,54,86,-1,-1,-1,-1},
{4,30,45,73,84,-1,-1,-1,-1,-1,-1},
{3,29,39,46,62,66,71,72,-1,-1,-1},
{31,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{12,18,75,77,79,-1,-1,-1,-1,-1,-1},
{0,2,8,48,74,83,-1,-1,-1,-1,-1},
{12,14,31,36,67,72,-1,-1,-1,-1,-1},
{13,34,68,75,-1,-1,-1,-1,-1,-1,-1},
{6,18,28,50,53,64,71,84,-1,-1,-1},
{11,13,76,-1,-1,-1,-1,-1,-1,-1,-1},
{1,4,31,35,50,61,75,81,84,-1,-1},
{4,10,57,63,-1,-1,-1,-1,-1,-1,-1}};


int availableMachines = numberOfMachines;

// Typedefs
typedef int[0, numberOfChains - 1] chainId_t;

// Ints and Arrays
int numberOfChainsDone = 0;
int tasksDone[numberOfTasks];
bool runnableChains[numberOfChains];
bool assignmentChoice[numberOfChains];

// Channels
broadcast chan startMachines;
broadcast chan chainMachineChan[numberOfChains];
broadcast chan activateChains;</declaration>
	<template>
		<name x="5" y="5">Composer</name>
		<declaration>// Place local declarations here.
clock time;</declaration>
		<location id="id0" x="-102" y="-255">
			<name x="-112" y="-289">Init</name>
			<label kind="invariant" x="-246" y="-238">numberOfChainsDone &lt;= numberOfChains
            &amp;&amp; cost' == 1</label>
		</location>
		<location id="id1" x="331" y="-255">
			<name x="321" y="-289">Done</name>
		</location>
		<init ref="id0"/>
		<transition>
			<source ref="id0"/>
			<target ref="id1"/>
			<label kind="guard" x="-17" y="-289">numberOfChainsDone &gt;= numberOfChains</label>
		</transition>
	</template>
	<template>
		<name>Chain</name>
		<parameter>const chainId_t cid</parameter>
		<declaration>clock x;
const int chainSize = globalChainSize[cid];
int index = 0;

bool AllDependenciesDone()
{
    bool dependenciesDone = 1;
    int i;
    for (i = 0; i &lt; maxDependencies; i++)
    {
        int value = dependencies[globalChains[cid][index]][i];
        if (value == -1)
            return dependenciesDone;

        dependenciesDone &amp;= tasksDone[value];
    }
    return dependenciesDone;
}</declaration>
		<location id="id2" x="-68" y="-238">
			<name x="-78" y="-272">Idle</name>
		</location>
		<location id="id3" x="-76" y="51">
			<name x="-102" y="68">Running</name>
			<label kind="invariant" x="-178" y="85">x &lt;= durations[globalChains[cid][index]]</label>
		</location>
		<location id="id4" x="-450" y="-238">
			<name x="-460" y="-272">Done</name>
		</location>
		<init ref="id2"/>
		<transition>
			<source ref="id2"/>
			<target ref="id4"/>
			<label kind="guard" x="-399" y="-280">index &gt;= chainSize &amp;&amp;
x &gt;= durations[globalChains[cid][index - 1]]</label>
			<label kind="assignment" x="-399" y="-238">numberOfChainsDone++</label>
		</transition>
		<transition>
			<source ref="id3"/>
			<target ref="id2"/>
			<label kind="guard" x="-450" y="-127">x &gt;= durations[globalChains[cid][index]]</label>
			<label kind="assignment" x="-450" y="-110">availableMachines++,
tasksDone[globalChains[cid][index]] = 1,
index++</label>
			<nail x="-161" y="-85"/>
		</transition>
		<transition>
			<source ref="id2"/>
			<target ref="id3"/>
			<label kind="guard" x="34" y="-127">index &lt; chainSize &amp;&amp;
availableMachines &gt; 0 &amp;&amp; AllDependenciesDone()</label>
			<label kind="assignment" x="34" y="-85">availableMachines--,
x = 0</label>
			<nail x="17" y="-85"/>
		</transition>
	</template>
	<system>// Place template instantiations here.

// List one or more processes to be composed into a system.
system Composer, Chain;
    </system>
	<queries>
		<query>
			<formula>strategy TimeSchedule = minE (Composer.time) [&lt;=57] : &lt;&gt;Composer.Done</formula>
			<comment></comment>
		</query>
		<query>
			<formula>inf{Composer.Done} : Composer.time</formula>
			<comment></comment>
		</query>
		<query>
			<formula>A&lt;&gt; Composer.Done</formula>
			<comment></comment>
		</query>
		<query>
			<formula>E&lt;&gt; Composer.Done</formula>
			<comment></comment>
		</query>
	</queries>
</nta>
