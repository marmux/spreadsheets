<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/researchgroup/darts/uppaal/flat-1_2.dtd'>
<nta>
<declaration>//Variables
const int numberOfChains = 28;
const int numberOfTasks = 100;
const int numberOfMachines = 16;
const int maxDependencies = 22;
const int longestChain = 8;
const int globalChainSize[numberOfChains] = {4,7,5,6,3,4,8,4,6,2,3,3,6,3,3,5,4,3,3,2,2,1,4,3,1,2,2,1};
const int globalChains[numberOfChains][longestChain] = {
{0,12,95,99,-1,-1,-1,-1},
{1,20,52,69,72,97,98,-1},
{2,77,84,85,94,-1,-1,-1},
{3,59,67,80,83,92,-1,-1},
{4,86,88,-1,-1,-1,-1,-1},
{5,74,93,96,-1,-1,-1,-1},
{6,28,32,34,51,63,79,87},
{7,58,89,91,-1,-1,-1,-1},
{8,31,43,56,66,68,-1,-1},
{9,61,-1,-1,-1,-1,-1,-1},
{10,57,65,-1,-1,-1,-1,-1},
{11,39,49,-1,-1,-1,-1,-1},
{13,48,62,64,81,90,-1,-1},
{14,24,71,-1,-1,-1,-1,-1},
{15,46,73,-1,-1,-1,-1,-1},
{16,26,35,55,60,-1,-1,-1},
{17,22,29,76,-1,-1,-1,-1},
{18,36,38,-1,-1,-1,-1,-1},
{19,50,53,-1,-1,-1,-1,-1},
{21,70,-1,-1,-1,-1,-1,-1},
{23,78,-1,-1,-1,-1,-1,-1},
{25,-1,-1,-1,-1,-1,-1,-1},
{27,40,41,45,-1,-1,-1,-1},
{30,37,47,-1,-1,-1,-1,-1},
{33,-1,-1,-1,-1,-1,-1,-1},
{42,75,-1,-1,-1,-1,-1,-1},
{44,82,-1,-1,-1,-1,-1,-1},
{54,-1,-1,-1,-1,-1,-1,-1}};
int chainDuration[numberOfChains] = {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1};
int durations[numberOfTasks] = {11,4,2,2,3,1,12,16,8,1,6,3,3,10,6,19,6,12,6,1,12,1,5,4,1,3,9,1,9,1,7,15,15,6,31,4,9,4,6,3,6,12,3,24,8,23,1,18,8,2,9,6,19,2,3,14,11,3,4,11,1,2,2,2,5,1,15,66,5,3,3,2,2,6,17,29,5,16,7,1,7,18,3,24,3,9,5,5,12,1,9,16,8,10,4,2,7,1,2,14};
const int dependencies[numberOfTasks][maxDependencies] = {
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,11,13,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,14,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,4,14,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,7,10,15,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,8,13,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,8,15,16,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,5,7,17,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,6,10,13,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,7,9,12,14,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{12,15,18,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,9,12,16,21,24,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{11,17,19,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,6,9,12,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,10,22,26,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{19,22,24,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,5,6,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,4,6,14,28,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,16,22,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,5,6,8,29,32,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,2,11,13,23,26,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,7,18,20,31,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,27,30,34,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,9,11,19,26,36,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,2,11,13,17,25,31,32,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,23,24,27,29,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{10,12,13,21,30,31,40,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{17,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,4,8,13,20,24,31,35,41,42,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,24,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,6,35,37,41,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,2,6,10,15,19,21,33,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{11,13,37,41,46,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,8,9,13,28,29,32,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,2,13,15,31,39,41,45,48,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,15,16,19,26,27,29,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,6,7,10,22,34,40,44,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,9,19,20,30,39,41,48,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{14,20,23,35,50,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{42,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,5,17,30,34,35,42,45,46,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,6,13,15,16,20,43,53,54,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,10,20,21,31,34,41,47,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,4,6,7,9,11,22,26,30,36,41,42,47,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,3,11,16,19,20,30,45,49,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,10,17,25,35,36,50,51,55,56,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,2,3,9,13,18,25,31,35,41,50,55,58,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,15,28,48,50,59,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,14,17,18,19,28,29,30,45,47,50,51,54,55,56,-1,-1,-1,-1,-1,-1,-1},
{6,8,36,52,59,62,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,15,16,19,29,45,47,57,59,64,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,16,18,23,29,34,37,41,42,45,56,59,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,8,9,18,20,27,33,46,59,62,66,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{10,11,15,24,27,30,33,36,43,56,66,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,3,11,17,25,27,52,53,54,60,68,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,6,10,11,21,30,45,47,67,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,3,17,24,27,30,47,48,69,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,14,17,25,40,42,46,48,52,59,63,64,65,66,68,69,-1,-1,-1,-1,-1,-1},
{3,9,12,17,18,29,32,36,45,46,47,50,55,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,5,22,24,30,41,59,68,73,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,4,11,12,31,42,44,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{11,24,29,38,40,52,55,58,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,3,4,24,26,27,36,41,52,53,69,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,16,23,33,44,45,52,67,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,14,63,65,68,78,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,6,8,9,15,18,19,20,23,28,30,34,35,39,51,60,64,66,67,72,75,76},
{2,12,17,29,32,42,45,48,55,64,71,75,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,3,27,39,44,46,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,13,25,26,35,38,39,48,61,72,80,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{12,17,20,23,41,44,63,77,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{12,23,30,31,33,35,37,41,45,46,51,52,58,69,75,82,84,-1,-1,-1,-1,-1},
{0,4,5,9,28,30,33,35,48,59,60,62,70,78,83,-1,-1,-1,-1,-1,-1,-1},
{0,19,25,57,59,61,76,79,81,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,14,41,49,55,61,65,76,78,80,83,86,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{25,28,33,42,48,50,57,58,59,61,64,83,84,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{14,21,37,56,60,71,74,76,81,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,4,9,27,39,54,76,89,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,6,8,12,13,17,19,26,28,39,47,49,51,55,68,70,72,78,83,88,89,-1},
{16,28,49,50,57,58,59,65,71,74,76,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,3,8,25,33,35,39,54,63,77,78,80,85,89,-1,-1,-1,-1,-1,-1,-1,-1},
{0,12,31,33,36,38,40,42,50,59,64,67,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,10,12,14,21,24,26,44,56,65,67,72,93,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{11,12,13,19,28,38,41,42,48,52,55,62,71,72,76,77,83,85,91,-1,-1,-1},
{1,8,22,24,25,33,54,84,86,95,97,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{12,18,26,38,50,69,74,77,80,89,95,97,98,-1,-1,-1,-1,-1,-1,-1,-1,-1}};


int availableMachines = numberOfMachines;

// Typedefs
typedef int[0, numberOfChains - 1] chainId_t;

// Ints and Arrays
int numberOfChainsDone = 0;
int tasksDone[numberOfTasks];
bool runnableChains[numberOfChains];
bool assignmentChoice[numberOfChains];

// Channels
broadcast chan startMachines;
broadcast chan chainMachineChan[numberOfChains];
broadcast chan activateChains;</declaration>
	<template>
		<name x="5" y="5">Composer</name>
		<declaration>// Place local declarations here.
clock time;</declaration>
		<location id="id0" x="-102" y="-255">
			<name x="-112" y="-289">Init</name>
			<label kind="invariant" x="-246" y="-238">numberOfChainsDone &lt;= numberOfChains
            &amp;&amp; cost' == 1</label>
		</location>
		<location id="id1" x="331" y="-255">
			<name x="321" y="-289">Done</name>
		</location>
		<init ref="id0"/>
		<transition>
			<source ref="id0"/>
			<target ref="id1"/>
			<label kind="guard" x="-17" y="-289">numberOfChainsDone &gt;= numberOfChains</label>
		</transition>
	</template>
	<template>
		<name>Chain</name>
		<parameter>const chainId_t cid</parameter>
		<declaration>clock x;
const int chainSize = globalChainSize[cid];
int index = 0;

bool AllDependenciesDone()
{
    bool dependenciesDone = 1;
    int i;
    for (i = 0; i &lt; maxDependencies; i++)
    {
        int value = dependencies[globalChains[cid][index]][i];
        if (value == -1)
            return dependenciesDone;

        dependenciesDone &amp;= tasksDone[value];
    }
    return dependenciesDone;
}</declaration>
		<location id="id2" x="-68" y="-238">
			<name x="-78" y="-272">Idle</name>
		</location>
		<location id="id3" x="-76" y="51">
			<name x="-102" y="68">Running</name>
			<label kind="invariant" x="-178" y="85">x &lt;= durations[globalChains[cid][index]]</label>
		</location>
		<location id="id4" x="-450" y="-238">
			<name x="-460" y="-272">Done</name>
		</location>
		<init ref="id2"/>
		<transition>
			<source ref="id2"/>
			<target ref="id4"/>
			<label kind="guard" x="-399" y="-280">index &gt;= chainSize &amp;&amp;
x &gt;= durations[globalChains[cid][index - 1]]</label>
			<label kind="assignment" x="-399" y="-238">numberOfChainsDone++</label>
		</transition>
		<transition>
			<source ref="id3"/>
			<target ref="id2"/>
			<label kind="guard" x="-450" y="-127">x &gt;= durations[globalChains[cid][index]]</label>
			<label kind="assignment" x="-450" y="-110">availableMachines++,
tasksDone[globalChains[cid][index]] = 1,
index++</label>
			<nail x="-161" y="-85"/>
		</transition>
		<transition>
			<source ref="id2"/>
			<target ref="id3"/>
			<label kind="guard" x="34" y="-127">index &lt; chainSize &amp;&amp;
availableMachines &gt; 0 &amp;&amp; AllDependenciesDone()</label>
			<label kind="assignment" x="34" y="-85">availableMachines--,
x = 0</label>
			<nail x="17" y="-85"/>
		</transition>
	</template>
	<system>// Place template instantiations here.

// List one or more processes to be composed into a system.
system Composer, Chain;
    </system>
	<queries>
		<query>
			<formula>strategy TimeSchedule = minE (Composer.time) [&lt;=57] : &lt;&gt;Composer.Done</formula>
			<comment></comment>
		</query>
		<query>
			<formula>inf{Composer.Done} : Composer.time</formula>
			<comment></comment>
		</query>
		<query>
			<formula>A&lt;&gt; Composer.Done</formula>
			<comment></comment>
		</query>
		<query>
			<formula>E&lt;&gt; Composer.Done</formula>
			<comment></comment>
		</query>
	</queries>
</nta>
