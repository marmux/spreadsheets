<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/researchgroup/darts/uppaal/flat-1_2.dtd'>
<nta>
<declaration>//Variables
const int numberOfChains = 33;
const int numberOfTasks = 100;
const int numberOfMachines = 10;
const int maxDependencies = 13;
const int longestChain = 7;
const int globalChainSize[numberOfChains] = {7,7,4,6,4,5,2,4,5,6,2,3,3,3,2,5,3,3,3,3,3,2,2,1,1,2,1,2,1,2,1,1,1};
const int globalChains[numberOfChains][longestChain] = {
{0,3,33,40,45,52,83},
{1,55,66,73,77,94,99},
{2,5,46,90,-1,-1,-1},
{4,44,74,75,85,95,-1},
{6,89,93,96,-1,-1,-1},
{7,24,51,60,97,-1,-1},
{8,84,-1,-1,-1,-1,-1},
{9,68,81,88,-1,-1,-1},
{10,35,50,64,91,-1,-1},
{11,18,37,49,70,76,-1},
{12,71,-1,-1,-1,-1,-1},
{13,29,98,-1,-1,-1,-1},
{14,42,87,-1,-1,-1,-1},
{15,69,82,-1,-1,-1,-1},
{16,28,-1,-1,-1,-1,-1},
{17,48,61,72,86,-1,-1},
{19,41,79,-1,-1,-1,-1},
{20,65,67,-1,-1,-1,-1},
{21,43,56,-1,-1,-1,-1},
{22,59,92,-1,-1,-1,-1},
{23,58,63,-1,-1,-1,-1},
{25,53,-1,-1,-1,-1,-1},
{26,54,-1,-1,-1,-1,-1},
{27,-1,-1,-1,-1,-1,-1},
{30,-1,-1,-1,-1,-1,-1},
{31,38,-1,-1,-1,-1,-1},
{32,-1,-1,-1,-1,-1,-1},
{34,57,-1,-1,-1,-1,-1},
{36,-1,-1,-1,-1,-1,-1},
{39,78,-1,-1,-1,-1,-1},
{47,-1,-1,-1,-1,-1,-1},
{62,-1,-1,-1,-1,-1,-1},
{80,-1,-1,-1,-1,-1,-1}};
int chainDuration[numberOfChains] = {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1};
int durations[numberOfTasks] = {29,1,11,22,30,10,2,19,32,2,6,18,11,8,2,14,28,2,4,3,2,3,1,2,14,3,1,1,1,6,12,6,6,43,9,2,7,19,10,9,4,16,16,8,16,7,1,13,6,3,18,26,10,4,9,2,7,2,25,17,10,7,3,11,10,8,19,16,18,30,17,35,3,27,7,7,5,9,22,47,17,5,2,14,6,10,1,13,15,5,1,26,8,2,13,4,6,2,13,11};
const int dependencies[numberOfTasks][maxDependencies] = {
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{9,14,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,13,14,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,7,11,12,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,18,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,14,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{15,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,5,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{14,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,9,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{15,25,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,5,9,16,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,12,13,17,19,-1,-1,-1,-1,-1,-1,-1,-1},
{5,26,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,6,12,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,7,20,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,13,29,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,10,20,23,30,33,34,-1,-1,-1,-1,-1,-1},
{12,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{11,14,18,19,21,24,32,-1,-1,-1,-1,-1,-1},
{16,26,31,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{25,29,33,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,15,31,33,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,11,19,29,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,5,7,14,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,6,21,29,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,14,25,31,33,34,42,-1,-1,-1,-1,-1,-1},
{4,8,9,15,33,40,-1,-1,-1,-1,-1,-1,-1},
{2,5,6,20,33,-1,-1,-1,-1,-1,-1,-1,-1},
{6,33,39,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{14,17,18,23,34,37,-1,-1,-1,-1,-1,-1,-1},
{6,12,18,25,26,31,37,40,-1,-1,-1,-1,-1},
{18,19,35,37,44,-1,-1,-1,-1,-1,-1,-1,-1},
{0,6,21,22,24,26,35,39,42,47,-1,-1,-1},
{42,45,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{13,25,29,37,38,-1,-1,-1,-1,-1,-1,-1,-1},
{14,17,19,26,31,36,-1,-1,-1,-1,-1,-1,-1},
{1,3,13,16,36,-1,-1,-1,-1,-1,-1,-1,-1},
{24,25,26,43,44,-1,-1,-1,-1,-1,-1,-1,-1},
{8,34,35,41,49,-1,-1,-1,-1,-1,-1,-1,-1},
{8,16,23,41,54,-1,-1,-1,-1,-1,-1,-1,-1},
{14,22,38,39,49,50,52,-1,-1,-1,-1,-1,-1},
{4,15,24,30,33,34,51,56,-1,-1,-1,-1,-1},
{6,18,25,44,48,54,59,-1,-1,-1,-1,-1,-1},
{11,25,40,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,14,18,58,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,16,20,27,43,47,50,54,55,56,-1,-1,-1},
{7,11,20,21,35,43,54,-1,-1,-1,-1,-1,-1},
{0,18,20,26,55,62,-1,-1,-1,-1,-1,-1,-1},
{65,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,9,14,16,24,29,60,-1,-1,-1,-1,-1,-1},
{9,15,18,22,39,47,53,54,56,67,-1,-1,-1},
{5,16,23,36,49,51,55,62,-1,-1,-1,-1,-1},
{12,15,27,37,46,49,50,59,-1,-1,-1,-1,-1},
{5,7,15,19,22,25,36,39,43,61,-1,-1,-1},
{4,5,10,14,21,29,36,49,66,68,69,-1,-1},
{0,6,10,17,30,34,37,44,48,51,54,56,63},
{11,21,30,37,66,71,74,-1,-1,-1,-1,-1,-1},
{9,18,33,47,70,-1,-1,-1,-1,-1,-1,-1,-1},
{18,33,36,43,44,48,65,68,72,73,-1,-1,-1},
{39,47,60,66,75,-1,-1,-1,-1,-1,-1,-1,-1},
{1,7,15,16,41,47,-1,-1,-1,-1,-1,-1,-1},
{10,20,21,42,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,14,15,20,27,31,36,43,49,68,-1,-1,-1},
{16,17,18,37,45,69,-1,-1,-1,-1,-1,-1,-1},
{1,15,25,26,40,47,52,64,73,78,80,81,-1},
{7,8,41,58,63,73,-1,-1,-1,-1,-1,-1,-1},
{13,17,44,46,51,63,64,72,75,79,-1,-1,-1},
{19,26,47,51,67,72,-1,-1,-1,-1,-1,-1,-1},
{1,13,42,47,54,73,-1,-1,-1,-1,-1,-1,-1},
{6,12,13,15,38,50,57,59,70,71,78,81,85},
{6,21,29,33,40,41,43,51,54,62,-1,-1,-1},
{0,11,25,42,46,56,64,74,81,89,-1,-1,-1},
{15,21,28,38,62,63,64,82,-1,-1,-1,-1,-1},
{3,14,30,35,47,49,59,-1,-1,-1,-1,-1,-1},
{4,27,55,81,88,89,-1,-1,-1,-1,-1,-1,-1},
{16,26,29,32,35,56,63,67,70,72,74,77,-1},
{9,10,18,23,25,31,52,55,81,85,-1,-1,-1},
{4,8,24,41,48,51,64,76,88,93,-1,-1,-1},
{7,12,24,29,37,57,60,64,73,-1,-1,-1,-1},
{16,17,29,47,48,49,53,67,81,85,-1,-1,-1},
{14,66,70,75,90,94,-1,-1,-1,-1,-1,-1,-1}};


int availableMachines = numberOfMachines;

// Typedefs
typedef int[0, numberOfChains - 1] chainId_t;

// Ints and Arrays
int numberOfChainsDone = 0;
int tasksDone[numberOfTasks];
bool runnableChains[numberOfChains];
bool assignmentChoice[numberOfChains];

// Channels
broadcast chan startMachines;
broadcast chan chainMachineChan[numberOfChains];
broadcast chan activateChains;</declaration>
	<template>
		<name x="5" y="5">Composer</name>
		<declaration>// Place local declarations here.
clock time;</declaration>
		<location id="id0" x="-102" y="-255">
			<name x="-112" y="-289">Init</name>
			<label kind="invariant" x="-246" y="-238">numberOfChainsDone &lt;= numberOfChains
            &amp;&amp; cost' == 1</label>
		</location>
		<location id="id1" x="331" y="-255">
			<name x="321" y="-289">Done</name>
		</location>
		<init ref="id0"/>
		<transition>
			<source ref="id0"/>
			<target ref="id1"/>
			<label kind="guard" x="-17" y="-289">numberOfChainsDone &gt;= numberOfChains</label>
		</transition>
	</template>
	<template>
		<name>Chain</name>
		<parameter>const chainId_t cid</parameter>
		<declaration>clock x;
const int chainSize = globalChainSize[cid];
int index = 0;

bool AllDependenciesDone()
{
    bool dependenciesDone = 1;
    int i;
    for (i = 0; i &lt; maxDependencies; i++)
    {
        int value = dependencies[globalChains[cid][index]][i];
        if (value == -1)
            return dependenciesDone;

        dependenciesDone &amp;= tasksDone[value];
    }
    return dependenciesDone;
}</declaration>
		<location id="id2" x="-68" y="-238">
			<name x="-78" y="-272">Idle</name>
		</location>
		<location id="id3" x="-76" y="51">
			<name x="-102" y="68">Running</name>
			<label kind="invariant" x="-178" y="85">x &lt;= durations[globalChains[cid][index]]</label>
		</location>
		<location id="id4" x="-450" y="-238">
			<name x="-460" y="-272">Done</name>
		</location>
		<init ref="id2"/>
		<transition>
			<source ref="id2"/>
			<target ref="id4"/>
			<label kind="guard" x="-399" y="-280">index &gt;= chainSize &amp;&amp;
x &gt;= durations[globalChains[cid][index - 1]]</label>
			<label kind="assignment" x="-399" y="-238">numberOfChainsDone++</label>
		</transition>
		<transition>
			<source ref="id3"/>
			<target ref="id2"/>
			<label kind="guard" x="-450" y="-127">x &gt;= durations[globalChains[cid][index]]</label>
			<label kind="assignment" x="-450" y="-110">availableMachines++,
tasksDone[globalChains[cid][index]] = 1,
index++</label>
			<nail x="-161" y="-85"/>
		</transition>
		<transition>
			<source ref="id2"/>
			<target ref="id3"/>
			<label kind="guard" x="34" y="-127">index &lt; chainSize &amp;&amp;
availableMachines &gt; 0 &amp;&amp; AllDependenciesDone()</label>
			<label kind="assignment" x="34" y="-85">availableMachines--,
x = 0</label>
			<nail x="17" y="-85"/>
		</transition>
	</template>
	<system>// Place template instantiations here.

// List one or more processes to be composed into a system.
system Composer, Chain;
    </system>
	<queries>
		<query>
			<formula>strategy TimeSchedule = minE (Composer.time) [&lt;=57] : &lt;&gt;Composer.Done</formula>
			<comment></comment>
		</query>
		<query>
			<formula>inf{Composer.Done} : Composer.time</formula>
			<comment></comment>
		</query>
		<query>
			<formula>A&lt;&gt; Composer.Done</formula>
			<comment></comment>
		</query>
		<query>
			<formula>E&lt;&gt; Composer.Done</formula>
			<comment></comment>
		</query>
	</queries>
</nta>
