<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/researchgroup/darts/uppaal/flat-1_2.dtd'>
<nta>
<declaration>//Variables
const int numberOfChains = 38;
const int numberOfTasks = 100;
const int numberOfMachines = 3;
const int maxDependencies = 21;
const int longestChain = 7;
const int globalChainSize[numberOfChains] = {7,2,5,3,4,3,2,3,4,3,3,3,2,4,3,4,2,4,2,2,2,4,2,4,4,3,1,1,2,2,2,2,1,1,1,1,1,1};
const int globalChains[numberOfChains][longestChain] = {
{0,19,22,63,78,81,91},
{1,92,-1,-1,-1,-1,-1},
{2,21,71,84,97,-1,-1},
{3,89,98,-1,-1,-1,-1},
{4,56,90,93,-1,-1,-1},
{5,47,94,-1,-1,-1,-1},
{6,70,-1,-1,-1,-1,-1},
{7,62,99,-1,-1,-1,-1},
{8,28,44,80,-1,-1,-1},
{9,73,83,-1,-1,-1,-1},
{10,67,82,-1,-1,-1,-1},
{11,52,87,-1,-1,-1,-1},
{12,69,-1,-1,-1,-1,-1},
{13,79,86,95,-1,-1,-1},
{14,61,75,-1,-1,-1,-1},
{15,29,57,88,-1,-1,-1},
{16,55,-1,-1,-1,-1,-1},
{17,23,64,74,-1,-1,-1},
{18,66,-1,-1,-1,-1,-1},
{20,96,-1,-1,-1,-1,-1},
{24,60,-1,-1,-1,-1,-1},
{25,33,50,68,-1,-1,-1},
{26,72,-1,-1,-1,-1,-1},
{27,39,54,59,-1,-1,-1},
{30,42,45,85,-1,-1,-1},
{31,46,76,-1,-1,-1,-1},
{32,-1,-1,-1,-1,-1,-1},
{34,-1,-1,-1,-1,-1,-1},
{35,65,-1,-1,-1,-1,-1},
{36,49,-1,-1,-1,-1,-1},
{37,77,-1,-1,-1,-1,-1},
{38,43,-1,-1,-1,-1,-1},
{40,-1,-1,-1,-1,-1,-1},
{41,-1,-1,-1,-1,-1,-1},
{48,-1,-1,-1,-1,-1,-1},
{51,-1,-1,-1,-1,-1,-1},
{53,-1,-1,-1,-1,-1,-1},
{58,-1,-1,-1,-1,-1,-1}};
int chainDuration[numberOfChains] = {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1};
int durations[numberOfTasks] = {5,4,4,6,4,4,4,5,5,6,4,5,7,7,5,5,5,5,7,7,4,7,7,7,5,4,8,5,8,6,6,5,5,6,5,6,6,5,6,6,6,6,7,8,4,7,6,4,6,5,5,7,6,6,5,6,7,5,4,5,5,7,5,5,7,4,5,6,7,6,6,6,8,5,8,5,5,6,6,8,6,5,5,6,5,6,4,6,6,4,6,7,7,4,6,5,8,4,6,4};
const int dependencies[numberOfTasks][maxDependencies] = {
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,2,3,4,10,12,14,15,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,2,3,17,19,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{9,11,13,16,17,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,8,9,16,20,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,15,18,20,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,8,19,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,10,11,13,15,16,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,2,18,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,9,13,16,17,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,12,15,17,20,30,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{10,15,25,27,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,18,21,31,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{10,13,16,21,24,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{11,17,20,24,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,12,24,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,20,21,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,8,21,26,27,29,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{14,17,23,26,31,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,6,13,24,30,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,5,14,16,18,27,30,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{9,15,25,27,30,38,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,7,10,13,21,26,28,31,34,36,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,26,32,34,36,41,42,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{13,16,17,26,30,31,37,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,5,9,18,19,28,32,40,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{13,16,26,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{10,21,25,27,31,36,37,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,16,32,33,39,40,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{16,25,31,39,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,5,10,11,13,15,17,31,35,38,44,45,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{10,15,22,28,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,4,14,17,23,36,39,48,51,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,15,16,18,29,31,38,40,42,44,50,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,4,14,16,19,21,24,32,36,41,44,46,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,9,11,19,23,25,29,50,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,9,13,27,33,37,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{9,19,27,31,39,40,41,48,49,54,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{12,15,17,20,22,24,26,27,33,35,49,54,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,14,19,23,26,41,42,43,51,52,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,5,7,16,17,19,20,27,35,46,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,18,19,21,22,28,31,42,48,55,56,57,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,9,15,16,23,24,25,30,32,33,44,51,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,18,22,23,31,35,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,9,14,18,20,23,25,34,35,49,57,59,61,-1,-1,-1,-1,-1,-1,-1,-1},
{7,10,15,19,20,21,31,33,43,49,50,62,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,11,15,36,40,42,44,48,50,53,64,65,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{10,12,16,26,34,47,48,53,63,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,6,20,24,25,27,31,48,55,56,60,64,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,2,7,8,13,16,19,21,27,35,41,44,46,56,60,62,64,-1,-1,-1,-1},
{10,16,20,26,29,40,51,58,61,64,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,4,7,9,12,24,27,30,31,36,37,40,50,51,58,61,62,-1,-1,-1,-1},
{4,8,12,18,24,25,27,29,32,34,37,45,51,59,61,64,-1,-1,-1,-1,-1},
{1,7,10,18,33,42,47,48,50,53,57,58,61,-1,-1,-1,-1,-1,-1,-1,-1},
{6,26,28,46,49,56,65,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,8,10,20,37,44,56,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{16,22,23,24,32,34,36,49,50,63,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,10,13,16,17,19,25,26,28,29,32,39,40,46,49,51,55,56,58,61,-1},
{5,11,12,21,22,28,31,40,44,45,51,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,7,12,17,19,34,51,53,54,58,64,66,72,78,-1,-1,-1,-1,-1,-1},
{2,11,14,29,31,35,55,60,67,69,71,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,6,7,9,16,21,23,32,35,42,45,58,60,61,73,76,-1,-1,-1,-1,-1},
{1,9,13,17,18,22,26,34,36,40,52,56,67,71,73,-1,-1,-1,-1,-1,-1},
{1,14,36,37,38,40,45,47,50,77,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,8,15,18,32,34,37,39,48,50,52,53,54,60,61,62,68,73,75,76,79},
{5,7,11,17,21,22,25,29,40,50,51,52,57,60,76,79,-1,-1,-1,-1,-1},
{4,15,17,21,27,28,32,37,46,57,61,66,68,-1,-1,-1,-1,-1,-1,-1,-1},
{1,3,6,8,18,23,42,47,50,56,61,77,78,-1,-1,-1,-1,-1,-1,-1,-1},
{1,4,13,14,25,27,31,41,43,44,47,51,56,63,69,-1,-1,-1,-1,-1,-1},
{0,3,9,16,24,28,30,42,49,53,55,56,68,75,81,82,85,87,88,-1,-1},
{1,23,31,37,38,41,43,56,58,63,81,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,12,13,22,24,34,38,48,59,60,65,67,68,81,83,90,-1,-1,-1,-1,-1},
{0,6,10,14,22,33,34,45,47,57,58,60,67,68,72,88,-1,-1,-1,-1,-1},
{10,15,16,19,21,28,29,53,60,66,74,86,88,-1,-1,-1,-1,-1,-1,-1,-1},
{8,10,15,16,18,20,22,24,31,33,48,53,58,-1,-1,-1,-1,-1,-1,-1,-1},
{5,9,21,28,46,65,70,71,73,78,84,90,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,9,10,27,28,40,42,45,46,47,62,63,76,78,80,83,89,-1,-1,-1,-1},
{1,10,21,24,38,39,43,53,56,57,60,61,62,66,69,74,75,78,79,-1,-1}};


int availableMachines = numberOfMachines;

// Typedefs
typedef int[0, numberOfChains - 1] chainId_t;

// Ints and Arrays
int numberOfChainsDone = 0;
int tasksDone[numberOfTasks];
bool runnableChains[numberOfChains];
bool assignmentChoice[numberOfChains];

// Channels
broadcast chan startMachines;
broadcast chan chainMachineChan[numberOfChains];
broadcast chan activateChains;</declaration>
	<template>
		<name x="5" y="5">Composer</name>
		<declaration>// Place local declarations here.
clock time;</declaration>
		<location id="id0" x="-102" y="-255">
			<name x="-112" y="-289">Init</name>
			<label kind="invariant" x="-246" y="-238">numberOfChainsDone &lt;= numberOfChains
            &amp;&amp; cost' == 1</label>
		</location>
		<location id="id1" x="331" y="-255">
			<name x="321" y="-289">Done</name>
		</location>
		<init ref="id0"/>
		<transition>
			<source ref="id0"/>
			<target ref="id1"/>
			<label kind="guard" x="-17" y="-289">numberOfChainsDone &gt;= numberOfChains</label>
		</transition>
	</template>
	<template>
		<name>Chain</name>
		<parameter>const chainId_t cid</parameter>
		<declaration>clock x;
const int chainSize = globalChainSize[cid];
int index = 0;

bool AllDependenciesDone()
{
    bool dependenciesDone = 1;
    int i;
    for (i = 0; i &lt; maxDependencies; i++)
    {
        int value = dependencies[globalChains[cid][index]][i];
        if (value == -1)
            return dependenciesDone;

        dependenciesDone &amp;= tasksDone[value];
    }
    return dependenciesDone;
}</declaration>
		<location id="id2" x="-68" y="-238">
			<name x="-78" y="-272">Idle</name>
		</location>
		<location id="id3" x="-76" y="51">
			<name x="-102" y="68">Running</name>
			<label kind="invariant" x="-178" y="85">x &lt;= durations[globalChains[cid][index]]</label>
		</location>
		<location id="id4" x="-450" y="-238">
			<name x="-460" y="-272">Done</name>
		</location>
		<init ref="id2"/>
		<transition>
			<source ref="id2"/>
			<target ref="id4"/>
			<label kind="guard" x="-399" y="-280">index &gt;= chainSize &amp;&amp;
x &gt;= durations[globalChains[cid][index - 1]]</label>
			<label kind="assignment" x="-399" y="-238">numberOfChainsDone++</label>
		</transition>
		<transition>
			<source ref="id3"/>
			<target ref="id2"/>
			<label kind="guard" x="-450" y="-127">x &gt;= durations[globalChains[cid][index]]</label>
			<label kind="assignment" x="-450" y="-110">availableMachines++,
tasksDone[globalChains[cid][index]] = 1,
index++</label>
			<nail x="-161" y="-85"/>
		</transition>
		<transition>
			<source ref="id2"/>
			<target ref="id3"/>
			<label kind="guard" x="34" y="-127">index &lt; chainSize &amp;&amp;
availableMachines &gt; 0 &amp;&amp; AllDependenciesDone()</label>
			<label kind="assignment" x="34" y="-85">availableMachines--,
x = 0</label>
			<nail x="17" y="-85"/>
		</transition>
	</template>
	<system>// Place template instantiations here.

// List one or more processes to be composed into a system.
system Composer, Chain;
    </system>
	<queries>
		<query>
			<formula>strategy TimeSchedule = minE (Composer.time) [&lt;=57] : &lt;&gt;Composer.Done</formula>
			<comment></comment>
		</query>
		<query>
			<formula>inf{Composer.Done} : Composer.time</formula>
			<comment></comment>
		</query>
		<query>
			<formula>A&lt;&gt; Composer.Done</formula>
			<comment></comment>
		</query>
		<query>
			<formula>E&lt;&gt; Composer.Done</formula>
			<comment></comment>
		</query>
	</queries>
</nta>
