<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/researchgroup/darts/uppaal/flat-1_2.dtd'>
<nta>
<declaration>//Variables
const int numberOfChains = 32;
const int numberOfTasks = 100;
const int numberOfMachines = 6;
const int maxDependencies = 18;
const int longestChain = 7;
const int globalChainSize[numberOfChains] = {5,4,3,4,5,4,7,2,3,3,5,4,3,3,5,5,5,2,4,2,3,2,2,3,1,3,2,1,1,1,1,2};
const int globalChains[numberOfChains][longestChain] = {
{0,10,25,61,98,-1,-1},
{1,58,76,89,-1,-1,-1},
{2,35,93,-1,-1,-1,-1},
{3,18,81,95,-1,-1,-1},
{4,59,68,86,90,-1,-1},
{5,31,72,91,-1,-1,-1},
{6,29,50,62,73,78,92},
{7,96,-1,-1,-1,-1,-1},
{8,84,97,-1,-1,-1,-1},
{9,75,80,-1,-1,-1,-1},
{11,37,47,85,99,-1,-1},
{12,51,74,83,-1,-1,-1},
{13,34,88,-1,-1,-1,-1},
{14,53,77,-1,-1,-1,-1},
{15,19,49,65,69,-1,-1},
{16,26,52,63,79,-1,-1},
{17,45,64,87,94,-1,-1},
{20,42,-1,-1,-1,-1,-1},
{21,30,40,43,-1,-1,-1},
{22,70,-1,-1,-1,-1,-1},
{23,46,66,-1,-1,-1,-1},
{24,56,-1,-1,-1,-1,-1},
{27,71,-1,-1,-1,-1,-1},
{28,38,44,-1,-1,-1,-1},
{32,-1,-1,-1,-1,-1,-1},
{33,41,82,-1,-1,-1,-1},
{36,60,-1,-1,-1,-1,-1},
{39,-1,-1,-1,-1,-1,-1},
{48,-1,-1,-1,-1,-1,-1},
{54,-1,-1,-1,-1,-1,-1},
{55,-1,-1,-1,-1,-1,-1},
{57,67,-1,-1,-1,-1,-1}};
int chainDuration[numberOfChains] = {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1};
int durations[numberOfTasks] = {1,1,2,7,3,1,3,52,10,1,15,4,10,2,2,7,6,3,3,8,8,6,3,2,17,2,3,15,12,7,1,1,14,3,7,46,8,8,2,16,5,42,16,3,3,8,24,1,5,2,11,4,10,13,1,13,2,20,4,3,2,7,1,4,16,10,10,28,3,3,30,3,33,3,17,9,1,4,5,4,2,6,3,3,2,4,1,4,12,23,26,9,10,1,2,8,7,8,1,2};
const int dependencies[numberOfTasks][maxDependencies] = {
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,2,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{11,14,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,3,12,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,7,11,14,15,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,4,16,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,3,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,9,14,16,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,22,23,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,9,10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,8,12,14,16,19,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,7,10,14,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{14,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,4,6,7,8,9,12,15,19,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,9,14,15,21,22,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,8,10,11,18,21,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,21,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,9,11,13,28,30,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,9,16,18,23,25,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{15,16,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,4,7,8,11,24,27,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,7,12,15,23,28,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,14,19,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,4,9,14,19,27,30,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,7,18,33,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,2,9,15,20,21,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,7,13,21,26,38,40,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{18,20,24,27,38,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,3,5,11,16,17,33,38,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,6,8,10,21,23,33,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,10,13,33,37,38,41,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,14,20,24,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,15,18,19,23,24,29,30,34,38,-1,-1,-1,-1,-1,-1,-1,-1},
{1,5,13,16,29,33,35,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{12,23,29,31,33,37,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,19,26,31,35,41,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,5,8,14,26,29,30,36,38,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,5,9,18,23,26,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,9,11,26,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,16,17,20,24,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{10,15,19,22,28,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,6,10,18,24,31,33,34,43,47,57,-1,-1,-1,-1,-1,-1},
{4,5,12,14,25,27,35,41,50,54,56,-1,-1,-1,-1,-1,-1,-1},
{0,27,36,41,51,53,55,57,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,3,9,14,16,18,21,25,29,36,40,41,48,52,-1,-1,-1,-1},
{5,6,7,11,22,31,32,38,45,50,-1,-1,-1,-1,-1,-1,-1,-1},
{4,5,7,11,48,51,52,56,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{12,14,31,45,52,54,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{15,20,30,39,49,53,57,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{21,40,46,51,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,36,57,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,17,25,31,36,37,46,53,59,60,65,66,-1,-1,-1,-1,-1,-1},
{13,14,18,19,23,34,52,65,66,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{12,17,19,22,23,33,37,38,44,50,54,60,65,67,-1,-1,-1,-1},
{3,25,27,31,36,40,53,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,4,8,11,20,31,33,34,41,45,58,-1,-1,-1,-1,-1,-1,-1},
{2,18,19,22,23,26,33,39,49,62,-1,-1,-1,-1,-1,-1,-1,-1},
{3,4,11,14,22,25,26,29,42,51,60,63,67,-1,-1,-1,-1,-1},
{4,7,9,12,19,28,30,33,36,38,39,44,52,58,59,67,-1,-1},
{3,4,18,22,24,34,36,41,42,43,58,61,-1,-1,-1,-1,-1,-1},
{2,5,13,16,41,45,46,53,59,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,18,22,23,26,33,37,45,50,51,73,74,-1,-1,-1,-1,-1,-1},
{3,8,21,44,45,51,54,59,61,63,-1,-1,-1,-1,-1,-1,-1,-1},
{2,6,23,29,51,54,58,63,75,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,16,18,19,25,28,43,44,49,60,70,-1,-1,-1,-1,-1,-1,-1},
{12,18,28,35,37,41,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{26,37,46,51,55,62,70,74,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,7,8,9,12,14,31,33,42,43,53,62,64,-1,-1,-1,-1,-1},
{0,9,14,31,44,47,52,56,65,69,77,-1,-1,-1,-1,-1,-1,-1},
{4,8,11,21,23,25,32,38,45,60,64,66,68,71,-1,-1,-1,-1},
{0,15,22,23,32,36,41,44,47,48,63,64,71,-1,-1,-1,-1,-1},
{5,23,26,28,31,34,47,69,70,75,-1,-1,-1,-1,-1,-1,-1,-1},
{1,3,18,28,35,38,39,55,56,59,71,72,73,76,83,85,87,88},
{2,6,17,22,28,29,34,43,47,54,55,60,71,79,85,86,-1,-1},
{6,13,20,27,30,37,49,50,72,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,9,20,23,26,32,38,42,54,56,59,63,65,73,76,78,82,87},
{0,1,9,24,33,35,36,51,56,84,-1,-1,-1,-1,-1,-1,-1,-1},
{2,6,8,21,27,32,39,55,64,87,-1,-1,-1,-1,-1,-1,-1,-1},
{5,23,25,36,42,46,49,55,59,62,75,78,81,85,-1,-1,-1,-1},
{3,7,29,54,56,61,64,66,67,68,71,74,75,79,83,85,-1,-1},
{20,21,24,26,27,40,41,47,53,60,68,76,84,-1,-1,-1,-1,-1},
{9,10,17,19,26,30,37,40,42,49,57,61,77,78,79,84,-1,-1},
{6,19,20,48,49,54,63,65,68,70,74,75,81,85,-1,-1,-1,-1}};


int availableMachines = numberOfMachines;

// Typedefs
typedef int[0, numberOfChains - 1] chainId_t;

// Ints and Arrays
int numberOfChainsDone = 0;
int tasksDone[numberOfTasks];
bool runnableChains[numberOfChains];
bool assignmentChoice[numberOfChains];

// Channels
broadcast chan startMachines;
broadcast chan chainMachineChan[numberOfChains];
broadcast chan activateChains;</declaration>
	<template>
		<name x="5" y="5">Composer</name>
		<declaration>// Place local declarations here.
clock time;</declaration>
		<location id="id0" x="-102" y="-255">
			<name x="-112" y="-289">Init</name>
			<label kind="invariant" x="-246" y="-238">numberOfChainsDone &lt;= numberOfChains
            &amp;&amp; cost' == 1</label>
		</location>
		<location id="id1" x="331" y="-255">
			<name x="321" y="-289">Done</name>
		</location>
		<init ref="id0"/>
		<transition>
			<source ref="id0"/>
			<target ref="id1"/>
			<label kind="guard" x="-17" y="-289">numberOfChainsDone &gt;= numberOfChains</label>
		</transition>
	</template>
	<template>
		<name>Chain</name>
		<parameter>const chainId_t cid</parameter>
		<declaration>clock x;
const int chainSize = globalChainSize[cid];
int index = 0;

bool AllDependenciesDone()
{
    bool dependenciesDone = 1;
    int i;
    for (i = 0; i &lt; maxDependencies; i++)
    {
        int value = dependencies[globalChains[cid][index]][i];
        if (value == -1)
            return dependenciesDone;

        dependenciesDone &amp;= tasksDone[value];
    }
    return dependenciesDone;
}</declaration>
		<location id="id2" x="-68" y="-238">
			<name x="-78" y="-272">Idle</name>
		</location>
		<location id="id3" x="-76" y="51">
			<name x="-102" y="68">Running</name>
			<label kind="invariant" x="-178" y="85">x &lt;= durations[globalChains[cid][index]]</label>
		</location>
		<location id="id4" x="-450" y="-238">
			<name x="-460" y="-272">Done</name>
		</location>
		<init ref="id2"/>
		<transition>
			<source ref="id2"/>
			<target ref="id4"/>
			<label kind="guard" x="-399" y="-280">index &gt;= chainSize &amp;&amp;
x &gt;= durations[globalChains[cid][index - 1]]</label>
			<label kind="assignment" x="-399" y="-238">numberOfChainsDone++</label>
		</transition>
		<transition>
			<source ref="id3"/>
			<target ref="id2"/>
			<label kind="guard" x="-450" y="-127">x &gt;= durations[globalChains[cid][index]]</label>
			<label kind="assignment" x="-450" y="-110">availableMachines++,
tasksDone[globalChains[cid][index]] = 1,
index++</label>
			<nail x="-161" y="-85"/>
		</transition>
		<transition>
			<source ref="id2"/>
			<target ref="id3"/>
			<label kind="guard" x="34" y="-127">index &lt; chainSize &amp;&amp;
availableMachines &gt; 0 &amp;&amp; AllDependenciesDone()</label>
			<label kind="assignment" x="34" y="-85">availableMachines--,
x = 0</label>
			<nail x="17" y="-85"/>
		</transition>
	</template>
	<system>// Place template instantiations here.

// List one or more processes to be composed into a system.
system Composer, Chain;
    </system>
	<queries>
		<query>
			<formula>strategy TimeSchedule = minE (Composer.time) [&lt;=57] : &lt;&gt;Composer.Done</formula>
			<comment></comment>
		</query>
		<query>
			<formula>inf{Composer.Done} : Composer.time</formula>
			<comment></comment>
		</query>
		<query>
			<formula>A&lt;&gt; Composer.Done</formula>
			<comment></comment>
		</query>
		<query>
			<formula>E&lt;&gt; Composer.Done</formula>
			<comment></comment>
		</query>
	</queries>
</nta>
