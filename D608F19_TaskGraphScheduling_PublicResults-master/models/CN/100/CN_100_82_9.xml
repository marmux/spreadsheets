<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/researchgroup/darts/uppaal/flat-1_2.dtd'>
<nta>
<declaration>//Variables
const int numberOfChains = 25;
const int numberOfTasks = 100;
const int numberOfMachines = 9;
const int maxDependencies = 23;
const int longestChain = 9;
const int globalChainSize[numberOfChains] = {9,6,9,7,3,5,3,3,4,3,4,3,3,5,4,3,3,4,5,2,6,2,2,1,1};
const int globalChains[numberOfChains][longestChain] = {
{0,3,14,60,67,69,85,93,99},
{1,15,55,92,96,98,-1,-1,-1},
{2,43,56,70,74,81,90,95,97},
{4,59,84,88,89,91,94,-1,-1},
{5,80,83,-1,-1,-1,-1,-1,-1},
{6,44,66,75,87,-1,-1,-1,-1},
{7,11,53,-1,-1,-1,-1,-1,-1},
{8,79,86,-1,-1,-1,-1,-1,-1},
{9,17,42,82,-1,-1,-1,-1,-1},
{10,48,64,-1,-1,-1,-1,-1,-1},
{12,16,73,78,-1,-1,-1,-1,-1},
{13,62,71,-1,-1,-1,-1,-1,-1},
{18,76,77,-1,-1,-1,-1,-1,-1},
{19,40,54,57,61,-1,-1,-1,-1},
{20,24,25,68,-1,-1,-1,-1,-1},
{21,32,37,-1,-1,-1,-1,-1,-1},
{22,47,72,-1,-1,-1,-1,-1,-1},
{23,51,58,63,-1,-1,-1,-1,-1},
{26,38,45,46,50,-1,-1,-1,-1},
{27,65,-1,-1,-1,-1,-1,-1,-1},
{28,29,30,35,41,52,-1,-1,-1},
{31,49,-1,-1,-1,-1,-1,-1,-1},
{33,34,-1,-1,-1,-1,-1,-1,-1},
{36,-1,-1,-1,-1,-1,-1,-1,-1},
{39,-1,-1,-1,-1,-1,-1,-1,-1}};
int chainDuration[numberOfChains] = {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1};
int durations[numberOfTasks] = {6,4,7,5,6,6,7,7,5,6,6,4,6,6,5,6,5,6,5,6,4,7,5,6,5,6,6,5,7,5,6,4,6,6,7,5,5,5,5,6,6,7,8,5,6,5,5,6,6,3,6,5,5,6,7,7,6,7,4,4,3,6,8,7,5,6,5,4,7,7,5,6,6,6,5,4,7,7,6,4,6,5,5,7,4,7,6,7,5,7,5,4,4,6,6,4,7,3,3,4};
const int dependencies[numberOfTasks][maxDependencies] = {
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,2,4,5,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{10,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,3,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,3,7,8,11,12,13,14,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,7,8,10,12,14,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,8,9,10,11,14,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{11,13,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,2,16,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{13,14,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,7,8,10,11,21,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,10,16,18,22,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,5,7,12,13,20,22,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,8,10,11,17,20,21,24,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,6,9,14,16,20,24,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,16,22,24,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,10,18,19,23,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,10,16,18,21,28,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,3,4,17,23,27,29,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,5,6,19,22,25,27,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,8,10,12,15,18,21,22,24,26,27,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,13,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,3,4,12,17,24,29,33,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,6,8,16,19,21,30,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,3,8,16,33,35,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,10,14,18,19,21,25,30,32,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,7,8,11,19,26,31,32,33,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,8,18,25,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,5,14,16,17,18,19,28,37,38,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{9,15,18,25,30,33,35,36,39,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,2,5,8,9,17,19,22,26,29,31,33,37,39,40,41,-1,-1,-1,-1,-1,-1,-1},
{1,2,5,15,16,31,38,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,5,6,9,11,12,18,23,33,37,38,40,43,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,7,10,18,19,28,29,38,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,6,15,17,28,32,39,41,45,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,7,10,14,18,20,22,34,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,6,7,8,10,16,18,22,30,35,36,39,42,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,8,18,20,29,31,43,47,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{14,17,30,38,45,46,48,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,11,16,18,22,23,28,30,36,39,44,47,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{9,15,24,28,33,41,46,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,5,7,11,17,24,34,37,39,43,44,47,52,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,10,13,14,28,33,35,39,40,50,52,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,3,5,7,9,15,19,23,24,37,43,48,54,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,5,6,14,16,26,31,36,37,39,42,43,44,47,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,20,29,30,32,34,36,37,41,42,44,54,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,8,9,15,17,21,31,35,45,51,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,19,26,32,33,35,37,43,44,49,51,55,56,58,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,3,4,7,12,14,16,18,20,28,30,32,33,36,37,38,41,49,51,56,-1,-1,-1},
{7,11,14,18,19,22,24,25,31,36,43,45,47,50,52,57,-1,-1,-1,-1,-1,-1,-1},
{0,7,9,13,14,19,20,37,42,47,49,58,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{14,25,31,39,40,41,56,58,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,4,8,16,17,19,36,39,48,55,57,63,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{23,24,27,32,39,40,43,44,52,60,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,5,11,16,18,24,25,30,44,54,55,56,58,62,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,4,6,10,14,28,30,37,39,40,52,54,60,63,64,-1,-1,-1,-1,-1,-1,-1,-1},
{7,11,18,24,25,27,31,32,55,59,65,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,23,30,35,39,47,51,52,53,54,57,60,64,67,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,5,9,18,21,22,28,33,37,38,40,56,57,58,59,60,66,67,-1,-1,-1,-1,-1},
{16,21,25,27,30,35,47,60,61,62,63,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,3,4,5,17,24,25,26,34,45,47,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,13,15,16,17,23,25,26,40,42,48,59,63,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,2,6,7,8,9,11,12,20,22,24,28,36,38,58,60,61,70,72,-1,-1,-1,-1},
{8,19,24,26,28,33,37,52,61,64,66,70,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,15,16,18,22,25,30,31,33,36,37,39,40,45,46,48,54,59,63,67,-1,-1,-1},
{5,8,22,23,30,32,36,38,50,59,65,70,72,76,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,13,25,29,39,40,48,50,51,55,62,65,73,74,77,-1,-1,-1,-1,-1,-1,-1,-1},
{3,5,8,13,21,31,37,45,63,70,72,74,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,5,11,20,22,26,27,31,43,53,54,56,67,77,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,10,15,18,28,32,35,46,50,52,59,67,74,78,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,7,9,10,16,18,20,21,29,40,42,43,48,55,57,58,-1,-1,-1,-1,-1,-1,-1},
{0,9,18,22,25,26,35,40,49,53,55,58,61,71,80,-1,-1,-1,-1,-1,-1,-1,-1},
{0,4,5,9,14,16,19,25,27,30,33,34,39,41,46,49,59,63,66,68,70,79,-1},
{4,5,8,14,33,36,39,41,45,46,48,50,51,60,61,63,69,74,75,-1,-1,-1,-1},
{0,6,11,21,22,31,40,42,44,49,52,57,60,64,79,-1,-1,-1,-1,-1,-1,-1,-1},
{1,5,9,19,22,26,27,29,31,36,37,39,45,47,54,65,69,73,75,77,81,82,84},
{0,4,11,15,17,21,31,33,51,64,68,74,75,83,84,87,-1,-1,-1,-1,-1,-1,-1},
{1,11,12,16,18,23,27,29,39,44,49,59,71,74,76,87,88,-1,-1,-1,-1,-1,-1},
{1,8,25,37,45,47,55,56,59,71,80,81,84,86,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,3,6,8,9,11,13,16,25,27,30,36,41,48,50,58,59,65,81,89,-1,-1,-1},
{0,1,2,10,11,12,16,23,25,27,31,32,33,39,40,47,49,53,54,55,60,82,88},
{16,17,22,25,29,32,35,36,40,45,50,51,54,69,84,85,86,87,89,90,-1,-1,-1},
{4,20,23,28,34,35,38,39,40,41,43,47,51,55,62,63,68,78,79,86,91,-1,-1},
{6,8,11,13,20,22,25,27,31,32,34,35,42,45,47,60,64,68,72,75,76,79,90},
{5,10,15,18,19,22,24,30,35,38,40,43,47,49,57,58,66,68,82,92,93,94,-1},
{12,15,19,20,21,25,39,44,51,73,74,78,85,87,93,95,-1,-1,-1,-1,-1,-1,-1},
{6,19,22,26,28,33,45,46,47,48,56,68,78,81,92,96,-1,-1,-1,-1,-1,-1,-1},
{3,5,10,19,32,35,40,41,46,54,60,75,77,78,91,93,98,-1,-1,-1,-1,-1,-1}};


int availableMachines = numberOfMachines;

// Typedefs
typedef int[0, numberOfChains - 1] chainId_t;

// Ints and Arrays
int numberOfChainsDone = 0;
int tasksDone[numberOfTasks];
bool runnableChains[numberOfChains];
bool assignmentChoice[numberOfChains];

// Channels
broadcast chan startMachines;
broadcast chan chainMachineChan[numberOfChains];
broadcast chan activateChains;</declaration>
	<template>
		<name x="5" y="5">Composer</name>
		<declaration>// Place local declarations here.
clock time;</declaration>
		<location id="id0" x="-102" y="-255">
			<name x="-112" y="-289">Init</name>
			<label kind="invariant" x="-246" y="-238">numberOfChainsDone &lt;= numberOfChains
            &amp;&amp; cost' == 1</label>
		</location>
		<location id="id1" x="331" y="-255">
			<name x="321" y="-289">Done</name>
		</location>
		<init ref="id0"/>
		<transition>
			<source ref="id0"/>
			<target ref="id1"/>
			<label kind="guard" x="-17" y="-289">numberOfChainsDone &gt;= numberOfChains</label>
		</transition>
	</template>
	<template>
		<name>Chain</name>
		<parameter>const chainId_t cid</parameter>
		<declaration>clock x;
const int chainSize = globalChainSize[cid];
int index = 0;

bool AllDependenciesDone()
{
    bool dependenciesDone = 1;
    int i;
    for (i = 0; i &lt; maxDependencies; i++)
    {
        int value = dependencies[globalChains[cid][index]][i];
        if (value == -1)
            return dependenciesDone;

        dependenciesDone &amp;= tasksDone[value];
    }
    return dependenciesDone;
}</declaration>
		<location id="id2" x="-68" y="-238">
			<name x="-78" y="-272">Idle</name>
		</location>
		<location id="id3" x="-76" y="51">
			<name x="-102" y="68">Running</name>
			<label kind="invariant" x="-178" y="85">x &lt;= durations[globalChains[cid][index]]</label>
		</location>
		<location id="id4" x="-450" y="-238">
			<name x="-460" y="-272">Done</name>
		</location>
		<init ref="id2"/>
		<transition>
			<source ref="id2"/>
			<target ref="id4"/>
			<label kind="guard" x="-399" y="-280">index &gt;= chainSize &amp;&amp;
x &gt;= durations[globalChains[cid][index - 1]]</label>
			<label kind="assignment" x="-399" y="-238">numberOfChainsDone++</label>
		</transition>
		<transition>
			<source ref="id3"/>
			<target ref="id2"/>
			<label kind="guard" x="-450" y="-127">x &gt;= durations[globalChains[cid][index]]</label>
			<label kind="assignment" x="-450" y="-110">availableMachines++,
tasksDone[globalChains[cid][index]] = 1,
index++</label>
			<nail x="-161" y="-85"/>
		</transition>
		<transition>
			<source ref="id2"/>
			<target ref="id3"/>
			<label kind="guard" x="34" y="-127">index &lt; chainSize &amp;&amp;
availableMachines &gt; 0 &amp;&amp; AllDependenciesDone()</label>
			<label kind="assignment" x="34" y="-85">availableMachines--,
x = 0</label>
			<nail x="17" y="-85"/>
		</transition>
	</template>
	<system>// Place template instantiations here.

// List one or more processes to be composed into a system.
system Composer, Chain;
    </system>
	<queries>
		<query>
			<formula>strategy TimeSchedule = minE (Composer.time) [&lt;=57] : &lt;&gt;Composer.Done</formula>
			<comment></comment>
		</query>
		<query>
			<formula>inf{Composer.Done} : Composer.time</formula>
			<comment></comment>
		</query>
		<query>
			<formula>A&lt;&gt; Composer.Done</formula>
			<comment></comment>
		</query>
		<query>
			<formula>E&lt;&gt; Composer.Done</formula>
			<comment></comment>
		</query>
	</queries>
</nta>
