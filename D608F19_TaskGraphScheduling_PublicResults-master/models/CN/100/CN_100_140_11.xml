<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/researchgroup/darts/uppaal/flat-1_2.dtd'>
<nta>
<declaration>//Variables
const int numberOfChains = 35;
const int numberOfTasks = 100;
const int numberOfMachines = 11;
const int maxDependencies = 21;
const int longestChain = 6;
const int globalChainSize[numberOfChains] = {6,2,2,4,6,3,3,5,5,4,2,3,4,3,4,4,5,3,3,2,3,3,2,1,2,2,1,2,3,1,2,1,1,2,1};
const int globalChains[numberOfChains][longestChain] = {
{0,11,33,48,64,95},
{1,97,-1,-1,-1,-1},
{2,82,-1,-1,-1,-1},
{3,29,73,93,-1,-1},
{4,28,45,77,83,90},
{5,85,99,-1,-1,-1},
{6,40,92,-1,-1,-1},
{7,51,60,75,98,-1},
{8,46,69,86,96,-1},
{9,61,78,80,-1,-1},
{10,81,-1,-1,-1,-1},
{12,59,91,-1,-1,-1},
{13,38,74,89,-1,-1},
{14,65,87,-1,-1,-1},
{15,18,53,76,-1,-1},
{16,41,66,71,-1,-1},
{17,21,57,63,79,-1},
{19,68,84,-1,-1,-1},
{20,72,94,-1,-1,-1},
{22,88,-1,-1,-1,-1},
{23,37,52,-1,-1,-1},
{24,58,62,-1,-1,-1},
{25,50,-1,-1,-1,-1},
{26,-1,-1,-1,-1,-1},
{27,55,-1,-1,-1,-1},
{30,56,-1,-1,-1,-1},
{31,-1,-1,-1,-1,-1},
{32,34,-1,-1,-1,-1},
{35,47,70,-1,-1,-1},
{36,-1,-1,-1,-1,-1},
{39,49,-1,-1,-1,-1},
{42,-1,-1,-1,-1,-1},
{43,-1,-1,-1,-1,-1},
{44,54,-1,-1,-1,-1},
{67,-1,-1,-1,-1,-1}};
int chainDuration[numberOfChains] = {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1};
int durations[numberOfTasks] = {11,16,9,15,2,6,3,24,1,4,11,3,5,4,12,5,3,1,19,19,11,1,1,1,20,13,4,3,20,23,5,4,2,1,6,9,2,1,33,6,2,18,11,4,13,26,6,1,5,2,15,6,16,10,24,9,5,3,11,42,1,1,11,6,6,2,4,12,3,10,6,1,10,9,3,1,18,30,10,29,1,8,8,1,1,14,10,4,3,15,15,5,26,5,2,52,2,3,4,11};
const int dependencies[numberOfTasks][maxDependencies] = {
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,7,12,15,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,14,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,5,17,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{17,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,16,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,15,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,10,12,14,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,8,25,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,4,14,19,22,25,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,3,7,13,15,20,24,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{14,15,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{10,19,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,9,13,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,11,16,20,22,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{14,28,32,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,10,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{14,23,25,27,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,22,23,24,25,26,28,30,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,7,9,10,13,20,23,25,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{10,16,23,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,4,6,9,16,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,7,10,15,16,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,6,10,16,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{24,30,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{9,12,29,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,8,11,14,17,18,19,24,28,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,5,8,19,21,40,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,8,25,35,39,42,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{11,20,33,39,43,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{13,20,35,39,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,9,11,16,25,30,38,42,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,6,7,22,27,38,44,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{24,33,34,37,38,40,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,12,15,18,22,25,27,32,40,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,18,19,22,44,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,12,16,27,33,43,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,15,30,31,36,38,40,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,13,14,15,21,31,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{12,14,24,29,41,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,8,9,12,14,16,21,27,31,49,52,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,6,7,25,42,47,51,54,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,9,18,20,24,25,26,29,41,46,50,55,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{25,27,51,58,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{17,22,23,33,35,36,40,43,55,57,58,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,13,17,18,21,31,33,38,42,47,48,56,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,7,8,12,14,15,16,19,22,57,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,10,30,33,38,41,42,47,52,54,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,24,39,41,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{13,14,19,20,22,26,41,43,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,6,9,11,13,15,16,23,32,34,35,38,46,54,61,66,-1,-1,-1,-1,-1},
{5,21,35,44,47,48,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,5,38,47,59,66,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,9,14,20,22,35,36,37,39,59,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,2,5,9,12,15,25,29,45,55,58,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,13,18,28,33,36,38,41,46,62,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,11,13,18,24,30,41,60,61,67,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,18,21,24,38,53,57,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,16,17,21,33,37,42,45,49,56,57,61,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,32,33,34,42,51,52,61,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,31,54,63,69,74,75,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{11,16,17,19,20,22,34,45,47,48,50,74,78,-1,-1,-1,-1,-1,-1,-1,-1},
{4,10,11,30,42,44,47,66,69,75,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,7,11,30,35,48,58,66,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,39,45,62,65,66,72,74,77,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{16,36,50,65,68,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,5,8,23,24,30,34,39,42,44,47,50,55,77,-1,-1,-1,-1,-1,-1,-1},
{3,4,20,43,46,51,61,69,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,25,31,33,35,47,53,57,62,63,65,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{22,29,37,39,47,58,65,66,74,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,8,10,14,32,35,42,72,74,75,76,87,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{14,17,42,47,54,65,66,70,71,80,83,87,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,8,11,15,27,29,43,58,59,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,6,13,15,40,41,43,48,61,62,67,74,80,84,86,-1,-1,-1,-1,-1,-1},
{4,5,15,18,25,28,31,42,45,49,56,59,66,67,71,73,84,86,-1,-1,-1},
{8,21,22,37,43,50,52,55,72,88,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,18,19,25,29,34,35,51,56,61,63,64,72,75,76,-1,-1,-1,-1,-1,-1},
{1,22,34,41,50,56,58,62,66,72,77,86,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,7,8,9,10,12,24,29,30,33,37,42,45,48,51,53,65,67,68,75,85},
{6,11,28,39,41,51,59,66,75,87,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,7,18,24,33,34,56,59,61,62,76,80,85,86,87,-1,-1,-1,-1,-1,-1}};


int availableMachines = numberOfMachines;

// Typedefs
typedef int[0, numberOfChains - 1] chainId_t;

// Ints and Arrays
int numberOfChainsDone = 0;
int tasksDone[numberOfTasks];
bool runnableChains[numberOfChains];
bool assignmentChoice[numberOfChains];

// Channels
broadcast chan startMachines;
broadcast chan chainMachineChan[numberOfChains];
broadcast chan activateChains;</declaration>
	<template>
		<name x="5" y="5">Composer</name>
		<declaration>// Place local declarations here.
clock time;</declaration>
		<location id="id0" x="-102" y="-255">
			<name x="-112" y="-289">Init</name>
			<label kind="invariant" x="-246" y="-238">numberOfChainsDone &lt;= numberOfChains
            &amp;&amp; cost' == 1</label>
		</location>
		<location id="id1" x="331" y="-255">
			<name x="321" y="-289">Done</name>
		</location>
		<init ref="id0"/>
		<transition>
			<source ref="id0"/>
			<target ref="id1"/>
			<label kind="guard" x="-17" y="-289">numberOfChainsDone &gt;= numberOfChains</label>
		</transition>
	</template>
	<template>
		<name>Chain</name>
		<parameter>const chainId_t cid</parameter>
		<declaration>clock x;
const int chainSize = globalChainSize[cid];
int index = 0;

bool AllDependenciesDone()
{
    bool dependenciesDone = 1;
    int i;
    for (i = 0; i &lt; maxDependencies; i++)
    {
        int value = dependencies[globalChains[cid][index]][i];
        if (value == -1)
            return dependenciesDone;

        dependenciesDone &amp;= tasksDone[value];
    }
    return dependenciesDone;
}</declaration>
		<location id="id2" x="-68" y="-238">
			<name x="-78" y="-272">Idle</name>
		</location>
		<location id="id3" x="-76" y="51">
			<name x="-102" y="68">Running</name>
			<label kind="invariant" x="-178" y="85">x &lt;= durations[globalChains[cid][index]]</label>
		</location>
		<location id="id4" x="-450" y="-238">
			<name x="-460" y="-272">Done</name>
		</location>
		<init ref="id2"/>
		<transition>
			<source ref="id2"/>
			<target ref="id4"/>
			<label kind="guard" x="-399" y="-280">index &gt;= chainSize &amp;&amp;
x &gt;= durations[globalChains[cid][index - 1]]</label>
			<label kind="assignment" x="-399" y="-238">numberOfChainsDone++</label>
		</transition>
		<transition>
			<source ref="id3"/>
			<target ref="id2"/>
			<label kind="guard" x="-450" y="-127">x &gt;= durations[globalChains[cid][index]]</label>
			<label kind="assignment" x="-450" y="-110">availableMachines++,
tasksDone[globalChains[cid][index]] = 1,
index++</label>
			<nail x="-161" y="-85"/>
		</transition>
		<transition>
			<source ref="id2"/>
			<target ref="id3"/>
			<label kind="guard" x="34" y="-127">index &lt; chainSize &amp;&amp;
availableMachines &gt; 0 &amp;&amp; AllDependenciesDone()</label>
			<label kind="assignment" x="34" y="-85">availableMachines--,
x = 0</label>
			<nail x="17" y="-85"/>
		</transition>
	</template>
	<system>// Place template instantiations here.

// List one or more processes to be composed into a system.
system Composer, Chain;
    </system>
	<queries>
		<query>
			<formula>strategy TimeSchedule = minE (Composer.time) [&lt;=57] : &lt;&gt;Composer.Done</formula>
			<comment></comment>
		</query>
		<query>
			<formula>inf{Composer.Done} : Composer.time</formula>
			<comment></comment>
		</query>
		<query>
			<formula>A&lt;&gt; Composer.Done</formula>
			<comment></comment>
		</query>
		<query>
			<formula>E&lt;&gt; Composer.Done</formula>
			<comment></comment>
		</query>
	</queries>
</nta>
