<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/researchgroup/darts/uppaal/flat-1_2.dtd'>
<nta>
<declaration>//Variables
const int numberOfChains = 37;
const int numberOfTasks = 100;
const int numberOfMachines = 10;
const int maxDependencies = 23;
const int longestChain = 6;
const int globalChainSize[numberOfChains] = {5,6,4,3,3,2,2,4,2,3,2,3,3,4,3,3,2,3,2,3,4,4,2,4,4,2,2,2,1,1,2,3,2,2,1,1,1};
const int globalChains[numberOfChains][longestChain] = {
{0,14,39,85,93,-1},
{1,50,63,71,79,91},
{2,48,87,99,-1,-1},
{3,88,94,-1,-1,-1},
{4,83,96,-1,-1,-1},
{5,80,-1,-1,-1,-1},
{6,95,-1,-1,-1,-1},
{7,44,65,86,-1,-1},
{8,89,-1,-1,-1,-1},
{9,82,92,-1,-1,-1},
{10,81,-1,-1,-1,-1},
{11,70,77,-1,-1,-1},
{12,27,46,-1,-1,-1},
{13,55,67,97,-1,-1},
{15,75,78,-1,-1,-1},
{16,38,84,-1,-1,-1},
{17,76,-1,-1,-1,-1},
{18,40,64,-1,-1,-1},
{19,66,-1,-1,-1,-1},
{20,60,72,-1,-1,-1},
{21,49,74,98,-1,-1},
{22,37,61,68,-1,-1},
{23,90,-1,-1,-1,-1},
{24,32,58,62,-1,-1},
{25,33,54,59,-1,-1},
{26,52,-1,-1,-1,-1},
{28,41,-1,-1,-1,-1},
{29,69,-1,-1,-1,-1},
{30,-1,-1,-1,-1,-1},
{31,-1,-1,-1,-1,-1},
{34,45,-1,-1,-1,-1},
{35,42,47,-1,-1,-1},
{36,53,-1,-1,-1,-1},
{43,57,-1,-1,-1,-1},
{51,-1,-1,-1,-1,-1},
{56,-1,-1,-1,-1,-1},
{73,-1,-1,-1,-1,-1}};
int chainDuration[numberOfChains] = {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1};
int durations[numberOfTasks] = {1,10,2,3,2,4,4,3,3,5,4,5,1,2,6,8,8,1,2,4,5,4,5,2,10,2,4,5,1,1,8,4,3,2,2,1,4,6,13,2,4,15,19,4,9,11,2,4,3,5,10,6,1,3,6,10,4,5,7,4,3,1,13,3,2,9,7,4,5,11,6,1,1,3,5,4,3,1,1,25,3,1,1,24,2,3,4,4,6,1,2,3,5,6,3,2,6,2,3,5};
const int dependencies[numberOfTasks][maxDependencies] = {
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,4,10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,4,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,11,15,18,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{12,15,16,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{12,13,14,18,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,8,12,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,5,7,8,12,17,18,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{11,16,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,8,11,14,17,29,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{20,21,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,5,21,24,26,27,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,12,24,25,27,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,16,17,21,24,29,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,6,9,10,27,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,7,13,22,25,28,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,12,18,20,22,26,27,29,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,3,4,12,16,21,26,27,33,34,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,14,16,20,30,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,6,10,12,14,16,18,19,23,25,31,33,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,6,10,23,27,28,29,31,37,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{10,17,19,21,35,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{11,14,19,22,24,32,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,6,7,14,17,25,27,28,40,43,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,5,9,19,27,34,35,42,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,3,8,10,12,18,21,27,31,33,34,40,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,10,21,24,29,36,42,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,2,6,10,16,18,21,24,27,29,38,39,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,10,14,18,21,27,28,33,34,35,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,3,5,12,26,33,38,39,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,18,23,24,25,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{24,26,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,5,27,36,40,43,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{13,18,26,29,33,38,43,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,4,9,10,13,18,30,32,35,36,42,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{11,17,29,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,16,23,25,39,43,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{11,12,13,15,19,21,29,32,42,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,2,17,24,32,43,53,54,55,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,10,20,23,26,28,36,39,47,48,51,55,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,12,20,21,37,38,41,44,45,47,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,9,17,22,39,58,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,9,10,11,14,26,28,32,36,39,42,50,51,53,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,6,7,15,22,25,28,38,40,49,54,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,2,9,18,22,25,31,32,33,36,37,41,44,46,55,-1,-1,-1,-1,-1,-1,-1},
{9,15,17,19,21,30,34,38,44,48,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,4,7,16,27,32,35,37,55,58,63,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,8,10,18,45,61,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,12,13,20,29,30,49,50,51,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{9,10,11,14,24,30,31,36,37,38,39,47,53,55,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,5,11,16,20,27,29,34,35,39,47,50,51,52,61,63,65,-1,-1,-1,-1,-1,-1},
{0,4,7,20,27,28,32,37,44,53,59,60,62,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,27,28,39,48,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,7,11,14,15,19,37,41,49,57,58,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,10,11,15,19,30,31,38,39,42,55,59,60,62,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{10,16,17,18,22,26,27,29,36,41,55,56,63,67,72,-1,-1,-1,-1,-1,-1,-1,-1},
{4,8,9,14,19,27,31,37,54,58,62,70,72,73,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,9,15,25,35,38,40,43,49,55,64,70,72,75,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,2,17,24,27,28,32,33,40,45,50,52,57,63,71,-1,-1,-1,-1,-1,-1,-1,-1},
{0,4,5,9,19,26,35,37,52,54,71,73,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,10,16,23,29,37,42,44,52,56,57,61,63,67,68,70,71,-1,-1,-1,-1,-1,-1},
{1,4,6,9,10,16,35,41,43,45,46,48,58,69,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,4,6,14,16,17,18,28,34,35,42,43,44,47,48,54,55,60,73,-1,-1,-1,-1},
{0,7,31,38,39,43,55,67,72,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,3,5,10,14,18,20,21,22,25,39,40,47,54,57,62,63,64,65,69,-1,-1,-1},
{2,4,7,19,21,29,30,35,36,40,49,52,54,56,57,60,62,64,65,68,72,74,75},
{2,3,4,6,9,26,28,33,38,39,44,45,47,48,49,50,54,57,59,66,73,-1,-1},
{3,6,8,10,11,13,17,26,33,35,36,39,48,51,54,57,58,63,71,-1,-1,-1,-1},
{2,5,6,8,13,23,26,35,39,41,42,46,51,60,61,72,-1,-1,-1,-1,-1,-1,-1},
{9,14,21,23,27,32,33,36,40,43,44,52,56,69,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,5,10,16,26,37,41,49,63,65,77,79,80,81,85,-1,-1,-1,-1,-1,-1,-1,-1},
{6,17,25,27,28,77,79,82,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,3,6,14,21,27,29,50,60,64,73,75,81,85,88,89,-1,-1,-1,-1,-1,-1,-1},
{6,7,15,19,24,29,36,40,47,54,60,67,68,73,75,85,88,89,-1,-1,-1,-1,-1},
{3,6,11,15,19,20,23,25,37,38,40,52,63,65,71,87,-1,-1,-1,-1,-1,-1,-1},
{11,25,37,39,41,47,53,57,65,81,83,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,4,15,23,27,33,34,35,43,47,54,55,67,69,70,76,-1,-1,-1,-1,-1,-1,-1},
{5,11,13,28,30,31,35,39,51,54,57,58,63,68,74,-1,-1,-1,-1,-1,-1,-1,-1},
{3,6,15,18,24,28,38,43,45,46,55,63,66,77,79,81,85,87,-1,-1,-1,-1,-1}};


int availableMachines = numberOfMachines;

// Typedefs
typedef int[0, numberOfChains - 1] chainId_t;

// Ints and Arrays
int numberOfChainsDone = 0;
int tasksDone[numberOfTasks];
bool runnableChains[numberOfChains];
bool assignmentChoice[numberOfChains];

// Channels
broadcast chan startMachines;
broadcast chan chainMachineChan[numberOfChains];
broadcast chan activateChains;</declaration>
	<template>
		<name x="5" y="5">Composer</name>
		<declaration>// Place local declarations here.
clock time;</declaration>
		<location id="id0" x="-102" y="-255">
			<name x="-112" y="-289">Init</name>
			<label kind="invariant" x="-246" y="-238">numberOfChainsDone &lt;= numberOfChains
            &amp;&amp; cost' == 1</label>
		</location>
		<location id="id1" x="331" y="-255">
			<name x="321" y="-289">Done</name>
		</location>
		<init ref="id0"/>
		<transition>
			<source ref="id0"/>
			<target ref="id1"/>
			<label kind="guard" x="-17" y="-289">numberOfChainsDone &gt;= numberOfChains</label>
		</transition>
	</template>
	<template>
		<name>Chain</name>
		<parameter>const chainId_t cid</parameter>
		<declaration>clock x;
const int chainSize = globalChainSize[cid];
int index = 0;

bool AllDependenciesDone()
{
    bool dependenciesDone = 1;
    int i;
    for (i = 0; i &lt; maxDependencies; i++)
    {
        int value = dependencies[globalChains[cid][index]][i];
        if (value == -1)
            return dependenciesDone;

        dependenciesDone &amp;= tasksDone[value];
    }
    return dependenciesDone;
}</declaration>
		<location id="id2" x="-68" y="-238">
			<name x="-78" y="-272">Idle</name>
		</location>
		<location id="id3" x="-76" y="51">
			<name x="-102" y="68">Running</name>
			<label kind="invariant" x="-178" y="85">x &lt;= durations[globalChains[cid][index]]</label>
		</location>
		<location id="id4" x="-450" y="-238">
			<name x="-460" y="-272">Done</name>
		</location>
		<init ref="id2"/>
		<transition>
			<source ref="id2"/>
			<target ref="id4"/>
			<label kind="guard" x="-399" y="-280">index &gt;= chainSize &amp;&amp;
x &gt;= durations[globalChains[cid][index - 1]]</label>
			<label kind="assignment" x="-399" y="-238">numberOfChainsDone++</label>
		</transition>
		<transition>
			<source ref="id3"/>
			<target ref="id2"/>
			<label kind="guard" x="-450" y="-127">x &gt;= durations[globalChains[cid][index]]</label>
			<label kind="assignment" x="-450" y="-110">availableMachines++,
tasksDone[globalChains[cid][index]] = 1,
index++</label>
			<nail x="-161" y="-85"/>
		</transition>
		<transition>
			<source ref="id2"/>
			<target ref="id3"/>
			<label kind="guard" x="34" y="-127">index &lt; chainSize &amp;&amp;
availableMachines &gt; 0 &amp;&amp; AllDependenciesDone()</label>
			<label kind="assignment" x="34" y="-85">availableMachines--,
x = 0</label>
			<nail x="17" y="-85"/>
		</transition>
	</template>
	<system>// Place template instantiations here.

// List one or more processes to be composed into a system.
system Composer, Chain;
    </system>
	<queries>
		<query>
			<formula>strategy TimeSchedule = minE (Composer.time) [&lt;=57] : &lt;&gt;Composer.Done</formula>
			<comment></comment>
		</query>
		<query>
			<formula>inf{Composer.Done} : Composer.time</formula>
			<comment></comment>
		</query>
		<query>
			<formula>A&lt;&gt; Composer.Done</formula>
			<comment></comment>
		</query>
		<query>
			<formula>E&lt;&gt; Composer.Done</formula>
			<comment></comment>
		</query>
	</queries>
</nta>
