<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/researchgroup/darts/uppaal/flat-1_2.dtd'>
<nta>
<declaration>//Variables
const int numberOfChains = 48;
const int numberOfTasks = 100;
const int numberOfMachines = 6;
const int maxDependencies = 8;
const int longestChain = 5;
const int globalChainSize[numberOfChains] = {3,3,3,3,3,2,4,3,5,3,4,4,5,3,2,2,3,2,1,3,3,1,1,1,1,2,2,2,2,2,2,1,1,1,2,1,2,1,1,2,1,1,1,1,1,1,1,1};
const int globalChains[numberOfChains][longestChain] = {
{0,70,72,-1,-1},
{1,92,96,-1,-1},
{2,83,94,-1,-1},
{3,19,90,-1,-1},
{4,91,97,-1,-1},
{5,93,-1,-1,-1},
{6,57,64,99,-1},
{7,53,78,-1,-1},
{8,66,76,87,98},
{9,62,82,-1,-1},
{10,38,48,88,-1},
{11,21,47,89,-1},
{12,27,40,54,79},
{13,34,74,-1,-1},
{14,52,-1,-1,-1},
{15,73,-1,-1,-1},
{16,26,55,-1,-1},
{17,30,-1,-1,-1},
{18,-1,-1,-1,-1},
{20,44,63,-1,-1},
{22,51,86,-1,-1},
{23,-1,-1,-1,-1},
{24,-1,-1,-1,-1},
{25,-1,-1,-1,-1},
{28,-1,-1,-1,-1},
{29,60,-1,-1,-1},
{31,85,-1,-1,-1},
{32,39,-1,-1,-1},
{33,68,-1,-1,-1},
{35,95,-1,-1,-1},
{36,65,-1,-1,-1},
{37,-1,-1,-1,-1},
{41,-1,-1,-1,-1},
{42,-1,-1,-1,-1},
{43,56,-1,-1,-1},
{45,-1,-1,-1,-1},
{46,77,-1,-1,-1},
{49,-1,-1,-1,-1},
{50,-1,-1,-1,-1},
{58,61,-1,-1,-1},
{59,-1,-1,-1,-1},
{67,-1,-1,-1,-1},
{69,-1,-1,-1,-1},
{71,-1,-1,-1,-1},
{75,-1,-1,-1,-1},
{80,-1,-1,-1,-1},
{81,-1,-1,-1,-1},
{84,-1,-1,-1,-1}};
int chainDuration[numberOfChains] = {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1};
int durations[numberOfTasks] = {17,1,14,11,7,31,2,6,1,9,8,30,11,5,41,21,3,12,6,4,1,5,24,7,3,4,35,8,12,10,9,21,14,13,10,3,10,2,13,23,12,19,6,19,8,4,3,9,7,9,9,2,4,4,4,6,11,11,1,5,14,14,20,22,1,5,11,14,3,2,1,4,1,28,24,36,6,5,11,1,1,8,3,2,1,5,18,2,10,17,19,3,10,2,46,3,15,3,16,12};
const int dependencies[numberOfTasks][maxDependencies] = {
{-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1},
{3,-1,-1,-1,-1,-1,-1,-1},
{9,-1,-1,-1,-1,-1,-1,-1},
{7,-1,-1,-1,-1,-1,-1,-1},
{7,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1},
{2,3,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1},
{1,11,20,-1,-1,-1,-1,-1},
{2,3,-1,-1,-1,-1,-1,-1},
{4,-1,-1,-1,-1,-1,-1,-1},
{12,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1},
{16,-1,-1,-1,-1,-1,-1,-1},
{9,12,16,-1,-1,-1,-1,-1},
{19,-1,-1,-1,-1,-1,-1,-1},
{15,-1,-1,-1,-1,-1,-1,-1},
{15,17,-1,-1,-1,-1,-1,-1},
{19,-1,-1,-1,-1,-1,-1,-1},
{15,-1,-1,-1,-1,-1,-1,-1},
{5,-1,-1,-1,-1,-1,-1,-1},
{2,13,-1,-1,-1,-1,-1,-1},
{6,-1,-1,-1,-1,-1,-1,-1},
{2,-1,-1,-1,-1,-1,-1,-1},
{3,-1,-1,-1,-1,-1,-1,-1},
{10,22,-1,-1,-1,-1,-1,-1},
{3,32,-1,-1,-1,-1,-1,-1},
{10,27,30,-1,-1,-1,-1,-1},
{2,-1,-1,-1,-1,-1,-1,-1},
{2,4,-1,-1,-1,-1,-1,-1},
{32,-1,-1,-1,-1,-1,-1,-1},
{13,15,20,-1,-1,-1,-1,-1},
{22,-1,-1,-1,-1,-1,-1,-1},
{2,-1,-1,-1,-1,-1,-1,-1},
{15,21,37,-1,-1,-1,-1,-1},
{8,38,-1,-1,-1,-1,-1,-1},
{16,-1,-1,-1,-1,-1,-1,-1},
{10,-1,-1,-1,-1,-1,-1,-1},
{21,22,28,-1,-1,-1,-1,-1},
{14,38,-1,-1,-1,-1,-1,-1},
{4,7,34,-1,-1,-1,-1,-1},
{30,40,-1,-1,-1,-1,-1,-1},
{7,26,42,-1,-1,-1,-1,-1},
{8,43,-1,-1,-1,-1,-1,-1},
{1,3,6,20,31,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1},
{9,22,-1,-1,-1,-1,-1,-1},
{27,29,35,-1,-1,-1,-1,-1},
{32,58,-1,-1,-1,-1,-1,-1},
{6,9,-1,-1,-1,-1,-1,-1},
{4,22,23,44,-1,-1,-1,-1},
{45,57,-1,-1,-1,-1,-1,-1},
{3,36,59,-1,-1,-1,-1,-1},
{4,8,9,21,48,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1},
{16,22,33,-1,-1,-1,-1,-1},
{9,20,-1,-1,-1,-1,-1,-1},
{0,6,16,22,-1,-1,-1,-1},
{17,-1,-1,-1,-1,-1,-1,-1},
{9,29,44,58,67,70,-1,-1},
{7,8,15,37,-1,-1,-1,-1},
{34,49,55,57,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1},
{10,13,15,19,25,36,66,-1},
{9,46,64,-1,-1,-1,-1,-1},
{14,15,43,53,59,-1,-1,-1},
{28,31,40,54,60,-1,-1,-1},
{19,46,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1},
{7,62,73,-1,-1,-1,-1,-1},
{2,34,45,48,70,-1,-1,-1},
{36,-1,-1,-1,-1,-1,-1,-1},
{31,59,61,64,-1,-1,-1,-1},
{17,51,71,-1,-1,-1,-1,-1},
{17,35,76,-1,-1,-1,-1,-1},
{5,9,20,28,48,-1,-1,-1},
{37,45,47,70,-1,-1,-1,-1},
{0,19,49,55,64,76,79,80},
{1,4,13,19,32,66,-1,-1},
{1,11,17,34,39,54,70,-1},
{5,91,-1,-1,-1,-1,-1,-1},
{25,64,69,71,83,-1,-1,-1},
{17,35,43,61,-1,-1,-1,-1},
{21,38,47,74,92,-1,-1,-1},
{0,6,30,68,85,91,-1,-1},
{12,25,57,87,-1,-1,-1,-1},
{11,64,92,-1,-1,-1,-1,-1}};


int availableMachines = numberOfMachines;

// Typedefs
typedef int[0, numberOfChains - 1] chainId_t;

// Ints and Arrays
int numberOfChainsDone = 0;
int tasksDone[numberOfTasks];
bool runnableChains[numberOfChains];
bool assignmentChoice[numberOfChains];

// Channels
broadcast chan startMachines;
broadcast chan chainMachineChan[numberOfChains];
broadcast chan activateChains;</declaration>
	<template>
		<name x="5" y="5">Composer</name>
		<declaration>// Place local declarations here.
clock time;</declaration>
		<location id="id0" x="-102" y="-255">
			<name x="-112" y="-289">Init</name>
			<label kind="invariant" x="-246" y="-238">numberOfChainsDone &lt;= numberOfChains
            &amp;&amp; cost' == 1</label>
		</location>
		<location id="id1" x="331" y="-255">
			<name x="321" y="-289">Done</name>
		</location>
		<init ref="id0"/>
		<transition>
			<source ref="id0"/>
			<target ref="id1"/>
			<label kind="guard" x="-17" y="-289">numberOfChainsDone &gt;= numberOfChains</label>
		</transition>
	</template>
	<template>
		<name>Chain</name>
		<parameter>const chainId_t cid</parameter>
		<declaration>clock x;
const int chainSize = globalChainSize[cid];
int index = 0;

bool AllDependenciesDone()
{
    bool dependenciesDone = 1;
    int i;
    for (i = 0; i &lt; maxDependencies; i++)
    {
        int value = dependencies[globalChains[cid][index]][i];
        if (value == -1)
            return dependenciesDone;

        dependenciesDone &amp;= tasksDone[value];
    }
    return dependenciesDone;
}</declaration>
		<location id="id2" x="-68" y="-238">
			<name x="-78" y="-272">Idle</name>
		</location>
		<location id="id3" x="-76" y="51">
			<name x="-102" y="68">Running</name>
			<label kind="invariant" x="-178" y="85">x &lt;= durations[globalChains[cid][index]]</label>
		</location>
		<location id="id4" x="-450" y="-238">
			<name x="-460" y="-272">Done</name>
		</location>
		<init ref="id2"/>
		<transition>
			<source ref="id2"/>
			<target ref="id4"/>
			<label kind="guard" x="-399" y="-280">index &gt;= chainSize &amp;&amp;
x &gt;= durations[globalChains[cid][index - 1]]</label>
			<label kind="assignment" x="-399" y="-238">numberOfChainsDone++</label>
		</transition>
		<transition>
			<source ref="id3"/>
			<target ref="id2"/>
			<label kind="guard" x="-450" y="-127">x &gt;= durations[globalChains[cid][index]]</label>
			<label kind="assignment" x="-450" y="-110">availableMachines++,
tasksDone[globalChains[cid][index]] = 1,
index++</label>
			<nail x="-161" y="-85"/>
		</transition>
		<transition>
			<source ref="id2"/>
			<target ref="id3"/>
			<label kind="guard" x="34" y="-127">index &lt; chainSize &amp;&amp;
availableMachines &gt; 0 &amp;&amp; AllDependenciesDone()</label>
			<label kind="assignment" x="34" y="-85">availableMachines--,
x = 0</label>
			<nail x="17" y="-85"/>
		</transition>
	</template>
	<system>// Place template instantiations here.

// List one or more processes to be composed into a system.
system Composer, Chain;
    </system>
	<queries>
		<query>
			<formula>strategy TimeSchedule = minE (Composer.time) [&lt;=57] : &lt;&gt;Composer.Done</formula>
			<comment></comment>
		</query>
		<query>
			<formula>inf{Composer.Done} : Composer.time</formula>
			<comment></comment>
		</query>
		<query>
			<formula>A&lt;&gt; Composer.Done</formula>
			<comment></comment>
		</query>
		<query>
			<formula>E&lt;&gt; Composer.Done</formula>
			<comment></comment>
		</query>
	</queries>
</nta>
