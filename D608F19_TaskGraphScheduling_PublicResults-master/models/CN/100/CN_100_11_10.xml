<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/researchgroup/darts/uppaal/flat-1_2.dtd'>
<nta>
<declaration>//Variables
const int numberOfChains = 36;
const int numberOfTasks = 100;
const int numberOfMachines = 10;
const int maxDependencies = 13;
const int longestChain = 7;
const int globalChainSize[numberOfChains] = {7,2,3,6,6,4,4,2,4,6,2,3,4,3,2,2,2,2,4,4,2,1,3,5,1,2,1,2,3,2,1,1,1,1,1,1};
const int globalChains[numberOfChains][longestChain] = {
{0,2,9,21,28,40,96},
{1,88,-1,-1,-1,-1,-1},
{3,44,95,-1,-1,-1,-1},
{4,41,48,62,63,82,-1},
{5,33,70,72,73,92,-1},
{6,79,87,98,-1,-1,-1},
{7,15,76,94,-1,-1,-1},
{8,89,-1,-1,-1,-1,-1},
{10,32,64,69,-1,-1,-1},
{11,51,78,91,97,99,-1},
{12,77,-1,-1,-1,-1,-1},
{13,20,75,-1,-1,-1,-1},
{14,27,30,90,-1,-1,-1},
{16,45,68,-1,-1,-1,-1},
{17,93,-1,-1,-1,-1,-1},
{18,58,-1,-1,-1,-1,-1},
{19,85,-1,-1,-1,-1,-1},
{22,81,-1,-1,-1,-1,-1},
{23,46,67,84,-1,-1,-1},
{24,56,59,74,-1,-1,-1},
{25,57,-1,-1,-1,-1,-1},
{26,-1,-1,-1,-1,-1,-1},
{29,55,66,-1,-1,-1,-1},
{31,39,47,52,83,-1,-1},
{34,-1,-1,-1,-1,-1,-1},
{35,53,-1,-1,-1,-1,-1},
{36,-1,-1,-1,-1,-1,-1},
{37,42,-1,-1,-1,-1,-1},
{38,54,65,-1,-1,-1,-1},
{43,71,-1,-1,-1,-1,-1},
{49,-1,-1,-1,-1,-1,-1},
{50,-1,-1,-1,-1,-1,-1},
{60,-1,-1,-1,-1,-1,-1},
{61,-1,-1,-1,-1,-1,-1},
{80,-1,-1,-1,-1,-1,-1},
{86,-1,-1,-1,-1,-1,-1}};
int chainDuration[numberOfChains] = {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1};
int durations[numberOfTasks] = {1,6,6,6,5,10,4,7,9,7,2,8,6,2,3,2,4,6,6,3,9,1,14,2,3,6,6,1,3,1,3,1,1,3,6,3,17,3,9,3,4,7,21,2,3,7,7,13,1,6,3,2,22,1,6,3,2,3,19,10,4,4,5,3,3,5,16,23,5,12,16,2,2,1,1,1,5,1,1,6,9,5,1,5,7,9,3,10,13,10,1,9,3,1,2,6,6,6,4,2};
const int dependencies[numberOfTasks][maxDependencies] = {
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,2,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{13,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,6,7,13,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{16,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{11,13,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,12,13,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,12,17,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,17,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{9,11,22,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{12,14,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,21,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,27,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{13,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,10,12,16,28,-1,-1,-1,-1,-1,-1,-1,-1},
{0,5,7,26,31,-1,-1,-1,-1,-1,-1,-1,-1},
{20,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{10,21,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,19,20,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,14,17,31,38,-1,-1,-1,-1,-1,-1,-1,-1},
{0,10,12,15,16,28,-1,-1,-1,-1,-1,-1,-1},
{1,4,17,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,35,37,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,9,16,18,30,37,-1,-1,-1,-1,-1,-1,-1},
{2,3,7,16,25,38,-1,-1,-1,-1,-1,-1,-1},
{23,36,39,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{18,39,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,10,19,32,37,41,42,-1,-1,-1,-1,-1,-1},
{15,32,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{9,11,25,31,32,46,-1,-1,-1,-1,-1,-1,-1},
{6,9,42,47,49,-1,-1,-1,-1,-1,-1,-1,-1},
{17,19,35,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{38,44,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,11,29,46,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,10,11,24,29,54,-1,-1,-1,-1,-1,-1,-1},
{25,46,53,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{10,13,17,18,29,50,-1,-1,-1,-1,-1,-1,-1},
{13,53,56,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{35,44,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,19,24,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,14,41,48,55,-1,-1,-1,-1,-1,-1,-1,-1},
{8,9,10,17,26,28,30,32,33,38,53,62,-1},
{8,13,21,32,35,61,-1,-1,-1,-1,-1,-1,-1},
{12,18,24,54,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,14,18,31,36,55,-1,-1,-1,-1,-1,-1,-1},
{0,13,19,29,39,46,53,55,-1,-1,-1,-1,-1},
{16,21,27,36,45,58,-1,-1,-1,-1,-1,-1,-1},
{8,23,64,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,28,33,37,59,62,-1,-1,-1,-1,-1,-1,-1},
{40,43,61,67,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{29,43,48,52,58,60,70,71,-1,-1,-1,-1,-1},
{14,26,48,62,65,66,72,-1,-1,-1,-1,-1,-1},
{2,4,35,37,59,72,-1,-1,-1,-1,-1,-1,-1},
{1,13,20,29,50,58,64,-1,-1,-1,-1,-1,-1},
{7,9,11,15,45,54,-1,-1,-1,-1,-1,-1,-1},
{12,21,38,51,52,56,65,75,-1,-1,-1,-1,-1},
{10,23,51,52,60,63,-1,-1,-1,-1,-1,-1,-1},
{6,16,33,37,44,53,-1,-1,-1,-1,-1,-1,-1},
{7,12,16,40,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{12,16,22,44,50,51,53,57,-1,-1,-1,-1,-1},
{6,12,25,31,36,43,44,48,50,60,63,66,-1},
{4,14,19,52,54,-1,-1,-1,-1,-1,-1,-1,-1},
{9,10,25,29,47,49,65,67,72,80,-1,-1,-1},
{9,19,20,61,73,-1,-1,-1,-1,-1,-1,-1,-1},
{25,28,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{18,19,21,48,64,67,79,-1,-1,-1,-1,-1,-1},
{1,6,31,39,40,43,49,-1,-1,-1,-1,-1,-1},
{8,16,19,53,58,62,70,78,-1,-1,-1,-1,-1},
{1,5,19,30,34,-1,-1,-1,-1,-1,-1,-1,-1},
{8,24,30,47,71,78,84,-1,-1,-1,-1,-1,-1},
{10,41,54,62,64,73,80,-1,-1,-1,-1,-1,-1},
{6,17,58,65,70,73,-1,-1,-1,-1,-1,-1,-1},
{5,15,42,43,53,64,67,68,76,89,91,-1,-1},
{0,6,13,15,29,35,44,45,46,52,64,70,92},
{0,2,24,33,40,42,48,54,57,71,76,-1,-1},
{3,18,36,52,64,67,74,91,-1,-1,-1,-1,-1},
{9,11,14,20,73,78,87,-1,-1,-1,-1,-1,-1},
{3,18,21,81,86,87,97,-1,-1,-1,-1,-1,-1}};


int availableMachines = numberOfMachines;

// Typedefs
typedef int[0, numberOfChains - 1] chainId_t;

// Ints and Arrays
int numberOfChainsDone = 0;
int tasksDone[numberOfTasks];
bool runnableChains[numberOfChains];
bool assignmentChoice[numberOfChains];

// Channels
broadcast chan startMachines;
broadcast chan chainMachineChan[numberOfChains];
broadcast chan activateChains;</declaration>
	<template>
		<name x="5" y="5">Composer</name>
		<declaration>// Place local declarations here.
clock time;</declaration>
		<location id="id0" x="-102" y="-255">
			<name x="-112" y="-289">Init</name>
			<label kind="invariant" x="-246" y="-238">numberOfChainsDone &lt;= numberOfChains
            &amp;&amp; cost' == 1</label>
		</location>
		<location id="id1" x="331" y="-255">
			<name x="321" y="-289">Done</name>
		</location>
		<init ref="id0"/>
		<transition>
			<source ref="id0"/>
			<target ref="id1"/>
			<label kind="guard" x="-17" y="-289">numberOfChainsDone &gt;= numberOfChains</label>
		</transition>
	</template>
	<template>
		<name>Chain</name>
		<parameter>const chainId_t cid</parameter>
		<declaration>clock x;
const int chainSize = globalChainSize[cid];
int index = 0;

bool AllDependenciesDone()
{
    bool dependenciesDone = 1;
    int i;
    for (i = 0; i &lt; maxDependencies; i++)
    {
        int value = dependencies[globalChains[cid][index]][i];
        if (value == -1)
            return dependenciesDone;

        dependenciesDone &amp;= tasksDone[value];
    }
    return dependenciesDone;
}</declaration>
		<location id="id2" x="-68" y="-238">
			<name x="-78" y="-272">Idle</name>
		</location>
		<location id="id3" x="-76" y="51">
			<name x="-102" y="68">Running</name>
			<label kind="invariant" x="-178" y="85">x &lt;= durations[globalChains[cid][index]]</label>
		</location>
		<location id="id4" x="-450" y="-238">
			<name x="-460" y="-272">Done</name>
		</location>
		<init ref="id2"/>
		<transition>
			<source ref="id2"/>
			<target ref="id4"/>
			<label kind="guard" x="-399" y="-280">index &gt;= chainSize &amp;&amp;
x &gt;= durations[globalChains[cid][index - 1]]</label>
			<label kind="assignment" x="-399" y="-238">numberOfChainsDone++</label>
		</transition>
		<transition>
			<source ref="id3"/>
			<target ref="id2"/>
			<label kind="guard" x="-450" y="-127">x &gt;= durations[globalChains[cid][index]]</label>
			<label kind="assignment" x="-450" y="-110">availableMachines++,
tasksDone[globalChains[cid][index]] = 1,
index++</label>
			<nail x="-161" y="-85"/>
		</transition>
		<transition>
			<source ref="id2"/>
			<target ref="id3"/>
			<label kind="guard" x="34" y="-127">index &lt; chainSize &amp;&amp;
availableMachines &gt; 0 &amp;&amp; AllDependenciesDone()</label>
			<label kind="assignment" x="34" y="-85">availableMachines--,
x = 0</label>
			<nail x="17" y="-85"/>
		</transition>
	</template>
	<system>// Place template instantiations here.

// List one or more processes to be composed into a system.
system Composer, Chain;
    </system>
	<queries>
		<query>
			<formula>strategy TimeSchedule = minE (Composer.time) [&lt;=57] : &lt;&gt;Composer.Done</formula>
			<comment></comment>
		</query>
		<query>
			<formula>inf{Composer.Done} : Composer.time</formula>
			<comment></comment>
		</query>
		<query>
			<formula>A&lt;&gt; Composer.Done</formula>
			<comment></comment>
		</query>
		<query>
			<formula>E&lt;&gt; Composer.Done</formula>
			<comment></comment>
		</query>
	</queries>
</nta>
