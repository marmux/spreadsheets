<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/researchgroup/darts/uppaal/flat-1_2.dtd'>
<nta>
<declaration>//Variables
const int numberOfChains = 30;
const int numberOfTasks = 100;
const int numberOfMachines = 2;
const int maxDependencies = 21;
const int longestChain = 9;
const int globalChainSize[numberOfChains] = {7,4,4,3,2,3,3,3,2,9,3,7,8,5,2,8,1,3,3,2,3,6,1,1,2,1,1,1,1,1};
const int globalChains[numberOfChains][longestChain] = {
{0,7,9,31,66,98,99,-1,-1},
{1,39,67,91,-1,-1,-1,-1,-1},
{2,50,94,96,-1,-1,-1,-1,-1},
{3,82,87,-1,-1,-1,-1,-1,-1},
{4,93,-1,-1,-1,-1,-1,-1,-1},
{5,69,77,-1,-1,-1,-1,-1,-1},
{6,70,83,-1,-1,-1,-1,-1,-1},
{8,84,85,-1,-1,-1,-1,-1,-1},
{10,88,-1,-1,-1,-1,-1,-1,-1},
{11,38,65,74,78,86,90,92,97},
{12,75,81,-1,-1,-1,-1,-1,-1},
{13,48,58,60,71,72,95,-1,-1},
{14,19,28,51,56,73,80,89,-1},
{15,20,41,54,55,-1,-1,-1,-1},
{16,63,-1,-1,-1,-1,-1,-1,-1},
{17,33,44,49,57,64,68,76,-1},
{18,-1,-1,-1,-1,-1,-1,-1,-1},
{21,43,52,-1,-1,-1,-1,-1,-1},
{22,34,59,-1,-1,-1,-1,-1,-1},
{23,62,-1,-1,-1,-1,-1,-1,-1},
{24,27,46,-1,-1,-1,-1,-1,-1},
{25,35,36,42,47,53,-1,-1,-1},
{26,-1,-1,-1,-1,-1,-1,-1,-1},
{29,-1,-1,-1,-1,-1,-1,-1,-1},
{30,40,-1,-1,-1,-1,-1,-1,-1},
{32,-1,-1,-1,-1,-1,-1,-1,-1},
{37,-1,-1,-1,-1,-1,-1,-1,-1},
{45,-1,-1,-1,-1,-1,-1,-1,-1},
{61,-1,-1,-1,-1,-1,-1,-1,-1},
{79,-1,-1,-1,-1,-1,-1,-1,-1}};
int chainDuration[numberOfChains] = {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1};
int durations[numberOfTasks] = {8,14,10,15,7,12,7,15,11,10,16,11,10,16,10,8,11,12,13,13,14,4,11,14,13,15,7,13,10,10,9,18,11,9,8,11,11,11,12,10,10,13,10,9,16,9,12,9,14,13,8,12,8,12,12,5,12,11,11,14,10,12,15,12,14,11,9,11,13,12,14,17,13,10,11,14,5,14,17,8,13,7,13,6,5,7,13,8,11,18,16,11,9,9,8,13,12,7,15,7};
const int dependencies[numberOfTasks][maxDependencies] = {
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,6,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,13,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,13,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{10,13,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,8,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,4,9,14,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,11,15,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{13,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,7,15,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,2,24,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{23,24,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{15,19,22,24,26,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,12,16,19,20,23,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,13,14,20,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,5,6,9,18,26,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,28,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,12,16,17,21,28,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,3,16,22,27,32,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,11,25,30,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{35,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{28,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,4,6,11,14,25,28,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,9,13,15,17,20,36,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,25,30,39,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,5,6,12,20,21,34,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{15,23,24,29,36,38,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{14,21,29,30,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,9,21,28,33,43,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{13,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{15,23,27,32,36,40,44,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,21,37,42,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,6,9,10,13,16,23,24,26,34,47,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,5,11,12,25,35,44,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,2,6,20,25,26,34,45,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,9,14,28,30,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,37,41,43,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,17,26,40,47,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,6,16,20,28,32,33,40,41,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,10,11,14,16,20,23,27,30,35,40,44,54,-1,-1,-1,-1,-1,-1,-1,-1},
{0,9,13,14,15,20,26,33,34,41,42,46,51,-1,-1,-1,-1,-1,-1,-1,-1},
{20,26,28,36,46,49,52,53,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{15,32,33,48,51,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{23,24,26,31,33,34,35,51,56,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,6,21,25,27,30,34,35,41,50,55,57,58,59,-1,-1,-1,-1,-1,-1,-1},
{41,54,60,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{17,22,23,28,31,37,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,9,16,19,28,34,40,45,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{11,14,25,28,30,33,40,52,57,62,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,2,12,18,21,29,38,39,58,62,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,19,31,34,52,53,54,65,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,17,18,22,31,37,39,41,54,57,61,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{14,17,21,25,27,36,37,40,42,52,64,67,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,5,15,20,22,25,37,40,65,67,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,6,11,26,33,37,50,63,64,66,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,6,27,55,60,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,29,32,36,51,52,58,64,71,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,10,27,32,47,50,54,56,61,63,70,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,17,38,40,44,57,61,65,70,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,4,6,12,16,20,26,31,33,35,41,55,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,18,21,32,44,56,58,59,68,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,10,11,15,18,24,34,37,58,59,66,69,72,-1,-1,-1,-1,-1,-1,-1,-1},
{2,5,11,16,17,19,20,21,40,43,46,49,54,62,66,71,74,76,-1,-1,-1},
{43,56,72,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,8,11,16,25,54,55,56,64,73,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{21,24,26,29,33,34,37,49,60,71,74,75,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,9,30,47,50,69,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,7,9,15,18,34,45,52,70,78,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,8,21,22,27,37,49,51,54,57,70,82,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,7,8,23,24,25,26,30,41,60,70,79,84,-1,-1,-1,-1,-1,-1,-1,-1},
{3,8,14,15,19,22,33,38,58,60,61,63,78,84,-1,-1,-1,-1,-1,-1,-1},
{2,8,14,16,17,21,49,50,65,71,80,82,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,6,10,16,19,23,24,26,29,32,40,43,44,46,48,49,66,75,79,80,84},
{13,29,30,33,36,45,53,54,63,73,76,80,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,5,7,12,23,24,30,33,49,52,56,62,79,86,-1,-1,-1,-1,-1,-1,-1},
{0,2,3,16,24,29,31,33,64,67,69,83,89,-1,-1,-1,-1,-1,-1,-1,-1},
{6,17,38,53,58,59,90,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,3,4,12,13,17,31,32,33,62,80,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,5,7,14,17,22,26,31,36,50,51,59,62,68,75,79,81,-1,-1,-1,-1},
{2,18,37,41,44,62,63,71,72,92,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,8,10,11,24,28,35,41,43,61,66,70,74,76,77,87,94,95,-1,-1,-1},
{9,29,31,32,37,51,56,71,76,92,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,3,6,14,16,24,25,40,45,46,63,66,72,80,87,88,95,-1,-1,-1},
{6,15,18,24,30,38,41,45,51,61,74,77,78,80,82,88,96,98,-1,-1,-1}};


int availableMachines = numberOfMachines;

// Typedefs
typedef int[0, numberOfChains - 1] chainId_t;

// Ints and Arrays
int numberOfChainsDone = 0;
int tasksDone[numberOfTasks];
bool runnableChains[numberOfChains];
bool assignmentChoice[numberOfChains];

// Channels
broadcast chan startMachines;
broadcast chan chainMachineChan[numberOfChains];
broadcast chan activateChains;</declaration>
	<template>
		<name x="5" y="5">Composer</name>
		<declaration>// Place local declarations here.
clock time;</declaration>
		<location id="id0" x="-102" y="-255">
			<name x="-112" y="-289">Init</name>
			<label kind="invariant" x="-246" y="-238">numberOfChainsDone &lt;= numberOfChains
            &amp;&amp; cost' == 1</label>
		</location>
		<location id="id1" x="331" y="-255">
			<name x="321" y="-289">Done</name>
		</location>
		<init ref="id0"/>
		<transition>
			<source ref="id0"/>
			<target ref="id1"/>
			<label kind="guard" x="-17" y="-289">numberOfChainsDone &gt;= numberOfChains</label>
		</transition>
	</template>
	<template>
		<name>Chain</name>
		<parameter>const chainId_t cid</parameter>
		<declaration>clock x;
const int chainSize = globalChainSize[cid];
int index = 0;

bool AllDependenciesDone()
{
    bool dependenciesDone = 1;
    int i;
    for (i = 0; i &lt; maxDependencies; i++)
    {
        int value = dependencies[globalChains[cid][index]][i];
        if (value == -1)
            return dependenciesDone;

        dependenciesDone &amp;= tasksDone[value];
    }
    return dependenciesDone;
}</declaration>
		<location id="id2" x="-68" y="-238">
			<name x="-78" y="-272">Idle</name>
		</location>
		<location id="id3" x="-76" y="51">
			<name x="-102" y="68">Running</name>
			<label kind="invariant" x="-178" y="85">x &lt;= durations[globalChains[cid][index]]</label>
		</location>
		<location id="id4" x="-450" y="-238">
			<name x="-460" y="-272">Done</name>
		</location>
		<init ref="id2"/>
		<transition>
			<source ref="id2"/>
			<target ref="id4"/>
			<label kind="guard" x="-399" y="-280">index &gt;= chainSize &amp;&amp;
x &gt;= durations[globalChains[cid][index - 1]]</label>
			<label kind="assignment" x="-399" y="-238">numberOfChainsDone++</label>
		</transition>
		<transition>
			<source ref="id3"/>
			<target ref="id2"/>
			<label kind="guard" x="-450" y="-127">x &gt;= durations[globalChains[cid][index]]</label>
			<label kind="assignment" x="-450" y="-110">availableMachines++,
tasksDone[globalChains[cid][index]] = 1,
index++</label>
			<nail x="-161" y="-85"/>
		</transition>
		<transition>
			<source ref="id2"/>
			<target ref="id3"/>
			<label kind="guard" x="34" y="-127">index &lt; chainSize &amp;&amp;
availableMachines &gt; 0 &amp;&amp; AllDependenciesDone()</label>
			<label kind="assignment" x="34" y="-85">availableMachines--,
x = 0</label>
			<nail x="17" y="-85"/>
		</transition>
	</template>
	<system>// Place template instantiations here.

// List one or more processes to be composed into a system.
system Composer, Chain;
    </system>
	<queries>
		<query>
			<formula>strategy TimeSchedule = minE (Composer.time) [&lt;=57] : &lt;&gt;Composer.Done</formula>
			<comment></comment>
		</query>
		<query>
			<formula>inf{Composer.Done} : Composer.time</formula>
			<comment></comment>
		</query>
		<query>
			<formula>A&lt;&gt; Composer.Done</formula>
			<comment></comment>
		</query>
		<query>
			<formula>E&lt;&gt; Composer.Done</formula>
			<comment></comment>
		</query>
	</queries>
</nta>
