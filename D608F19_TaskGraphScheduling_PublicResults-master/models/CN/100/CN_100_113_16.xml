<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/researchgroup/darts/uppaal/flat-1_2.dtd'>
<nta>
<declaration>//Variables
const int numberOfChains = 33;
const int numberOfTasks = 100;
const int numberOfMachines = 16;
const int maxDependencies = 27;
const int longestChain = 6;
const int globalChainSize[numberOfChains] = {6,4,2,3,3,6,3,3,4,2,3,4,4,3,4,2,4,3,4,3,4,3,3,2,2,4,1,2,2,2,2,2,1};
const int globalChains[numberOfChains][longestChain] = {
{0,13,52,55,65,99},
{1,18,33,95,-1,-1},
{2,96,-1,-1,-1,-1},
{3,79,83,-1,-1,-1},
{4,90,98,-1,-1,-1},
{5,31,48,54,78,88},
{6,37,97,-1,-1,-1},
{7,81,86,-1,-1,-1},
{8,23,61,93,-1,-1},
{9,94,-1,-1,-1,-1},
{10,67,84,-1,-1,-1},
{11,43,60,82,-1,-1},
{12,42,68,87,-1,-1},
{14,41,85,-1,-1,-1},
{15,57,66,89,-1,-1},
{16,63,-1,-1,-1,-1},
{17,69,76,92,-1,-1},
{19,53,80,-1,-1,-1},
{20,30,35,91,-1,-1},
{21,36,49,-1,-1,-1},
{22,45,70,77,-1,-1},
{24,73,74,-1,-1,-1},
{25,44,71,-1,-1,-1},
{26,75,-1,-1,-1,-1},
{27,72,-1,-1,-1,-1},
{28,47,59,64,-1,-1},
{29,-1,-1,-1,-1,-1},
{32,51,-1,-1,-1,-1},
{34,62,-1,-1,-1,-1},
{38,50,-1,-1,-1,-1},
{39,56,-1,-1,-1,-1},
{40,58,-1,-1,-1,-1},
{46,-1,-1,-1,-1,-1}};
int chainDuration[numberOfChains] = {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1};
int durations[numberOfTasks] = {6,5,5,6,5,6,5,5,7,7,6,6,6,5,7,7,5,6,4,4,4,5,6,6,6,4,7,5,7,5,6,6,6,7,4,5,6,7,6,4,5,4,7,7,3,7,5,5,5,6,6,6,6,7,6,4,6,7,4,6,3,5,5,6,7,4,3,6,5,3,7,5,5,6,5,5,5,7,6,6,6,6,5,3,6,4,5,6,4,4,5,7,5,6,5,6,4,5,5,7};
const int dependencies[numberOfTasks][maxDependencies] = {
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,2,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,6,8,10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,3,6,7,8,9,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,6,12,23,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,8,17,20,22,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,12,16,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,12,13,14,15,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,3,16,17,24,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{9,10,12,15,16,20,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,4,5,7,18,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,9,14,16,17,23,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,10,13,18,24,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{11,22,23,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,7,10,17,20,25,26,29,30,31,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,9,17,19,21,27,32,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,4,5,6,7,12,13,16,21,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,11,13,19,24,25,30,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,4,10,12,15,23,25,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,6,11,13,30,32,33,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,8,11,12,14,16,23,24,26,34,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,6,9,12,20,21,22,23,30,31,32,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,2,10,11,12,14,16,23,33,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,2,9,12,16,22,24,25,29,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,2,15,20,22,23,26,28,33,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{13,17,30,32,35,40,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,13,22,28,33,34,35,42,43,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,9,13,14,16,25,31,43,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,15,17,18,19,26,28,35,36,38,41,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,13,15,19,34,38,41,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,13,17,24,28,32,33,34,40,45,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,3,5,7,13,14,20,22,29,42,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,8,10,14,19,20,28,33,39,40,42,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,3,4,10,15,22,27,30,35,45,48,53,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{19,23,25,38,39,42,47,52,53,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{22,25,27,30,39,40,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,4,10,12,15,24,27,32,33,36,40,43,44,45,49,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,8,14,40,45,47,53,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,13,22,27,30,33,40,47,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,2,11,17,19,20,27,33,37,39,42,43,44,49,53,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,3,5,15,19,23,27,29,34,35,47,48,51,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,12,15,22,28,32,34,37,38,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,11,16,17,18,22,27,31,35,40,47,51,53,57,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,20,33,39,42,57,58,59,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,8,11,13,19,24,31,47,51,55,57,58,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,12,18,37,38,39,42,43,45,47,53,56,57,62,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,7,8,10,11,17,18,22,27,29,36,41,45,48,49,60,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,7,10,12,14,17,18,19,35,36,42,44,49,50,51,61,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{15,16,17,34,37,45,53,54,55,56,57,62,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{9,12,16,24,31,45,48,51,60,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,5,7,16,18,19,34,42,44,50,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,9,10,17,27,38,43,46,54,55,62,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,9,10,13,23,24,25,26,32,33,46,50,53,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,6,17,27,28,31,35,38,41,45,46,51,62,71,73,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,12,17,19,20,26,28,34,36,40,46,65,72,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,3,4,11,26,28,36,40,45,62,64,69,70,73,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,24,30,36,43,55,59,60,69,70,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,7,8,11,12,17,18,19,35,48,49,54,55,64,66,68,73,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,5,13,17,29,31,36,41,44,45,49,55,61,63,70,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{12,18,19,20,22,28,29,31,44,53,55,66,68,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,8,11,20,25,32,33,36,37,39,40,43,44,45,46,49,51,52,55,58,60,64,-1,-1,-1,-1,-1},
{8,9,10,11,16,19,20,22,24,25,39,42,48,56,60,62,65,68,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,6,12,13,20,22,32,37,41,53,63,65,69,70,74,78,79,80,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,16,22,26,34,36,39,40,44,47,48,55,56,57,60,64,65,67,73,-1,-1,-1,-1,-1,-1,-1,-1},
{1,5,11,15,18,25,27,29,37,41,42,43,53,63,69,73,75,76,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,10,17,19,23,27,29,34,35,36,41,53,54,56,64,74,79,80,81,-1,-1,-1,-1,-1,-1,-1,-1},
{3,7,8,10,34,67,68,71,76,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{9,18,19,36,47,49,50,53,56,61,64,68,69,78,79,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,11,12,16,17,33,45,51,55,66,81,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,4,6,9,12,13,14,22,24,28,36,39,40,48,50,53,54,75,79,-1,-1,-1,-1,-1,-1,-1,-1},
{4,8,10,11,19,27,34,35,38,45,47,50,62,65,68,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{10,11,13,17,20,23,30,34,66,76,77,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,5,6,7,14,17,19,24,32,38,44,49,56,61,64,66,72,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,8,9,11,14,17,18,21,24,25,34,37,47,48,57,60,67,82,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,2,7,9,15,17,18,20,24,28,31,32,33,43,45,48,61,63,65,67,68,69,72,73,77,80,89},
{2,3,5,12,18,23,28,29,33,45,46,48,50,52,53,56,59,61,67,73,85,87,88,91,94,-1,-1},
{3,6,13,22,27,29,36,37,38,40,44,57,69,70,75,79,84,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,7,12,15,20,27,32,37,42,43,47,48,55,57,58,59,63,64,68,75,86,87,90,-1,-1,-1,-1},
{0,3,8,17,26,30,35,49,53,54,55,62,65,66,71,72,73,74,78,82,84,93,-1,-1,-1,-1,-1}};


int availableMachines = numberOfMachines;

// Typedefs
typedef int[0, numberOfChains - 1] chainId_t;

// Ints and Arrays
int numberOfChainsDone = 0;
int tasksDone[numberOfTasks];
bool runnableChains[numberOfChains];
bool assignmentChoice[numberOfChains];

// Channels
broadcast chan startMachines;
broadcast chan chainMachineChan[numberOfChains];
broadcast chan activateChains;</declaration>
	<template>
		<name x="5" y="5">Composer</name>
		<declaration>// Place local declarations here.
clock time;</declaration>
		<location id="id0" x="-102" y="-255">
			<name x="-112" y="-289">Init</name>
			<label kind="invariant" x="-246" y="-238">numberOfChainsDone &lt;= numberOfChains
            &amp;&amp; cost' == 1</label>
		</location>
		<location id="id1" x="331" y="-255">
			<name x="321" y="-289">Done</name>
		</location>
		<init ref="id0"/>
		<transition>
			<source ref="id0"/>
			<target ref="id1"/>
			<label kind="guard" x="-17" y="-289">numberOfChainsDone &gt;= numberOfChains</label>
		</transition>
	</template>
	<template>
		<name>Chain</name>
		<parameter>const chainId_t cid</parameter>
		<declaration>clock x;
const int chainSize = globalChainSize[cid];
int index = 0;

bool AllDependenciesDone()
{
    bool dependenciesDone = 1;
    int i;
    for (i = 0; i &lt; maxDependencies; i++)
    {
        int value = dependencies[globalChains[cid][index]][i];
        if (value == -1)
            return dependenciesDone;

        dependenciesDone &amp;= tasksDone[value];
    }
    return dependenciesDone;
}</declaration>
		<location id="id2" x="-68" y="-238">
			<name x="-78" y="-272">Idle</name>
		</location>
		<location id="id3" x="-76" y="51">
			<name x="-102" y="68">Running</name>
			<label kind="invariant" x="-178" y="85">x &lt;= durations[globalChains[cid][index]]</label>
		</location>
		<location id="id4" x="-450" y="-238">
			<name x="-460" y="-272">Done</name>
		</location>
		<init ref="id2"/>
		<transition>
			<source ref="id2"/>
			<target ref="id4"/>
			<label kind="guard" x="-399" y="-280">index &gt;= chainSize &amp;&amp;
x &gt;= durations[globalChains[cid][index - 1]]</label>
			<label kind="assignment" x="-399" y="-238">numberOfChainsDone++</label>
		</transition>
		<transition>
			<source ref="id3"/>
			<target ref="id2"/>
			<label kind="guard" x="-450" y="-127">x &gt;= durations[globalChains[cid][index]]</label>
			<label kind="assignment" x="-450" y="-110">availableMachines++,
tasksDone[globalChains[cid][index]] = 1,
index++</label>
			<nail x="-161" y="-85"/>
		</transition>
		<transition>
			<source ref="id2"/>
			<target ref="id3"/>
			<label kind="guard" x="34" y="-127">index &lt; chainSize &amp;&amp;
availableMachines &gt; 0 &amp;&amp; AllDependenciesDone()</label>
			<label kind="assignment" x="34" y="-85">availableMachines--,
x = 0</label>
			<nail x="17" y="-85"/>
		</transition>
	</template>
	<system>// Place template instantiations here.

// List one or more processes to be composed into a system.
system Composer, Chain;
    </system>
	<queries>
		<query>
			<formula>strategy TimeSchedule = minE (Composer.time) [&lt;=57] : &lt;&gt;Composer.Done</formula>
			<comment></comment>
		</query>
		<query>
			<formula>inf{Composer.Done} : Composer.time</formula>
			<comment></comment>
		</query>
		<query>
			<formula>A&lt;&gt; Composer.Done</formula>
			<comment></comment>
		</query>
		<query>
			<formula>E&lt;&gt; Composer.Done</formula>
			<comment></comment>
		</query>
	</queries>
</nta>
