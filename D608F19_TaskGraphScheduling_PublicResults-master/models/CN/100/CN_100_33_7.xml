<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/researchgroup/darts/uppaal/flat-1_2.dtd'>
<nta>
<declaration>//Variables
const int numberOfChains = 34;
const int numberOfTasks = 100;
const int numberOfMachines = 7;
const int maxDependencies = 20;
const int longestChain = 6;
const int globalChainSize[numberOfChains] = {6,5,3,4,4,3,3,2,6,3,4,5,5,2,4,2,2,4,3,2,3,3,2,2,3,3,2,1,1,2,2,2,1,1};
const int globalChains[numberOfChains][longestChain] = {
{0,16,29,69,88,96},
{1,49,73,90,93,-1},
{2,82,97,-1,-1,-1},
{3,57,83,92,-1,-1},
{4,7,43,94,-1,-1},
{5,76,95,-1,-1,-1},
{6,86,98,-1,-1,-1},
{8,87,-1,-1,-1,-1},
{9,17,51,59,71,89},
{10,74,80,-1,-1,-1},
{11,58,67,79,-1,-1},
{12,23,31,52,91,-1},
{13,20,63,68,99,-1},
{14,77,-1,-1,-1,-1},
{15,56,75,78,-1,-1},
{18,85,-1,-1,-1,-1},
{19,81,-1,-1,-1,-1},
{21,28,48,53,-1,-1},
{22,38,54,-1,-1,-1},
{24,46,-1,-1,-1,-1},
{25,47,61,-1,-1,-1},
{26,40,62,-1,-1,-1},
{27,45,-1,-1,-1,-1},
{30,72,-1,-1,-1,-1},
{32,60,84,-1,-1,-1},
{33,36,55,-1,-1,-1},
{34,64,-1,-1,-1,-1},
{35,-1,-1,-1,-1,-1},
{37,-1,-1,-1,-1,-1},
{39,70,-1,-1,-1,-1},
{41,66,-1,-1,-1,-1},
{42,65,-1,-1,-1,-1},
{44,-1,-1,-1,-1,-1},
{50,-1,-1,-1,-1,-1}};
int chainDuration[numberOfChains] = {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1};
int durations[numberOfTasks] = {10,9,1,10,7,4,8,1,2,10,1,1,10,6,4,9,5,10,4,5,8,5,2,10,7,1,10,3,7,3,3,10,6,8,8,9,1,6,1,4,7,4,2,5,10,9,1,6,6,10,9,6,1,10,1,8,9,10,9,7,3,9,9,2,7,3,4,9,3,1,10,5,10,3,10,4,6,10,8,10,6,3,2,9,9,1,9,1,4,7,8,2,1,7,5,8,3,1,3,4};
const int dependencies[numberOfTasks][maxDependencies] = {
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,3,4,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,12,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,12,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,8,9,11,12,13,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{9,12,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,8,11,14,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,10,11,13,14,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,3,8,14,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{9,10,11,12,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,13,14,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,14,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{12,15,21,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,17,19,20,21,25,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,11,13,14,16,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,13,16,20,24,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,10,12,22,23,25,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,14,16,19,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,18,21,26,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{15,21,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,9,12,17,18,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{13,25,33,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,3,18,23,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,14,16,18,20,22,26,34,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,12,30,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,3,10,14,26,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,8,9,10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{11,12,18,19,29,36,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,3,7,13,14,20,30,32,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,22,36,40,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,9,12,21,24,27,39,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{15,18,20,21,22,24,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{11,16,21,22,25,33,34,40,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,10,14,21,28,31,37,40,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,3,5,27,35,38,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{10,23,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,7,11,17,20,21,22,23,25,29,31,32,-1,-1,-1,-1,-1,-1,-1,-1},
{3,23,31,41,42,43,50,51,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{12,13,21,24,36,45,48,49,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{12,14,16,19,33,35,38,39,50,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,11,19,23,28,36,41,42,51,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,9,10,15,22,30,37,43,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,3,4,7,16,19,26,28,32,38,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,10,11,18,21,26,29,35,41,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,9,12,16,23,30,39,47,51,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{9,19,25,27,32,34,37,41,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{13,14,23,27,31,34,44,47,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,7,25,27,33,36,39,40,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{10,13,15,20,23,33,46,51,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,23,24,34,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,16,26,36,42,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,7,15,26,27,41,49,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,7,30,36,37,46,47,58,60,61,66,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,7,12,18,31,34,35,37,38,39,41,53,54,58,63,-1,-1,-1,-1,-1},
{16,20,29,34,37,45,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{23,39,40,44,60,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,6,22,23,26,30,41,45,51,52,59,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,19,28,29,30,33,37,66,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,2,3,8,9,12,22,25,27,34,45,49,52,53,54,60,66,-1,-1,-1},
{1,4,9,10,15,27,30,39,47,52,59,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,20,23,28,32,34,35,36,40,51,52,56,66,-1,-1,-1,-1,-1,-1,-1},
{2,5,22,45,47,51,54,56,63,67,68,73,75,-1,-1,-1,-1,-1,-1,-1},
{14,23,27,29,33,34,36,41,42,45,46,48,50,63,65,69,75,-1,-1,-1},
{6,8,14,24,30,32,38,42,45,51,62,66,73,75,-1,-1,-1,-1,-1,-1},
{1,10,13,19,21,23,29,43,46,48,55,62,65,67,70,-1,-1,-1,-1,-1},
{1,13,19,21,26,27,32,56,58,60,74,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,19,32,39,40,41,43,49,51,56,61,70,72,-1,-1,-1,-1,-1,-1,-1},
{0,2,12,13,14,21,22,36,37,39,54,59,69,70,74,75,-1,-1,-1,-1},
{9,10,16,17,18,22,24,33,41,50,57,67,71,-1,-1,-1,-1,-1,-1,-1},
{13,33,42,52,60,68,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,10,15,18,21,26,27,28,30,33,36,47,57,60,70,73,-1,-1,-1,-1},
{4,6,7,16,41,54,55,66,67,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,16,21,23,28,34,43,44,46,48,49,50,65,-1,-1,-1,-1,-1,-1,-1},
{0,1,5,7,9,17,28,29,32,34,35,45,53,67,69,70,-1,-1,-1,-1},
{2,6,7,8,24,26,36,37,42,45,70,71,-1,-1,-1,-1,-1,-1,-1,-1},
{3,4,17,18,21,23,24,25,31,40,56,60,68,69,73,-1,-1,-1,-1,-1},
{7,17,21,23,24,31,39,40,45,46,51,52,53,65,-1,-1,-1,-1,-1,-1},
{3,9,11,14,16,18,22,26,27,32,34,39,51,55,61,64,66,83,89,91},
{13,23,25,27,35,39,48,50,58,80,89,90,-1,-1,-1,-1,-1,-1,-1,-1},
{1,2,6,7,23,27,33,38,41,43,62,64,74,80,85,-1,-1,-1,-1,-1},
{7,11,20,22,23,34,44,56,66,76,82,83,86,91,-1,-1,-1,-1,-1,-1},
{20,27,28,31,35,38,43,53,54,55,72,76,79,81,83,88,90,91,-1,-1},
{15,22,49,54,58,82,83,86,88,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,12,40,41,43,55,86,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{20,32,42,46,50,56,59,60,61,62,64,68,76,83,-1,-1,-1,-1,-1,-1}};


int availableMachines = numberOfMachines;

// Typedefs
typedef int[0, numberOfChains - 1] chainId_t;

// Ints and Arrays
int numberOfChainsDone = 0;
int tasksDone[numberOfTasks];
bool runnableChains[numberOfChains];
bool assignmentChoice[numberOfChains];

// Channels
broadcast chan startMachines;
broadcast chan chainMachineChan[numberOfChains];
broadcast chan activateChains;</declaration>
	<template>
		<name x="5" y="5">Composer</name>
		<declaration>// Place local declarations here.
clock time;</declaration>
		<location id="id0" x="-102" y="-255">
			<name x="-112" y="-289">Init</name>
			<label kind="invariant" x="-246" y="-238">numberOfChainsDone &lt;= numberOfChains
            &amp;&amp; cost' == 1</label>
		</location>
		<location id="id1" x="331" y="-255">
			<name x="321" y="-289">Done</name>
		</location>
		<init ref="id0"/>
		<transition>
			<source ref="id0"/>
			<target ref="id1"/>
			<label kind="guard" x="-17" y="-289">numberOfChainsDone &gt;= numberOfChains</label>
		</transition>
	</template>
	<template>
		<name>Chain</name>
		<parameter>const chainId_t cid</parameter>
		<declaration>clock x;
const int chainSize = globalChainSize[cid];
int index = 0;

bool AllDependenciesDone()
{
    bool dependenciesDone = 1;
    int i;
    for (i = 0; i &lt; maxDependencies; i++)
    {
        int value = dependencies[globalChains[cid][index]][i];
        if (value == -1)
            return dependenciesDone;

        dependenciesDone &amp;= tasksDone[value];
    }
    return dependenciesDone;
}</declaration>
		<location id="id2" x="-68" y="-238">
			<name x="-78" y="-272">Idle</name>
		</location>
		<location id="id3" x="-76" y="51">
			<name x="-102" y="68">Running</name>
			<label kind="invariant" x="-178" y="85">x &lt;= durations[globalChains[cid][index]]</label>
		</location>
		<location id="id4" x="-450" y="-238">
			<name x="-460" y="-272">Done</name>
		</location>
		<init ref="id2"/>
		<transition>
			<source ref="id2"/>
			<target ref="id4"/>
			<label kind="guard" x="-399" y="-280">index &gt;= chainSize &amp;&amp;
x &gt;= durations[globalChains[cid][index - 1]]</label>
			<label kind="assignment" x="-399" y="-238">numberOfChainsDone++</label>
		</transition>
		<transition>
			<source ref="id3"/>
			<target ref="id2"/>
			<label kind="guard" x="-450" y="-127">x &gt;= durations[globalChains[cid][index]]</label>
			<label kind="assignment" x="-450" y="-110">availableMachines++,
tasksDone[globalChains[cid][index]] = 1,
index++</label>
			<nail x="-161" y="-85"/>
		</transition>
		<transition>
			<source ref="id2"/>
			<target ref="id3"/>
			<label kind="guard" x="34" y="-127">index &lt; chainSize &amp;&amp;
availableMachines &gt; 0 &amp;&amp; AllDependenciesDone()</label>
			<label kind="assignment" x="34" y="-85">availableMachines--,
x = 0</label>
			<nail x="17" y="-85"/>
		</transition>
	</template>
	<system>// Place template instantiations here.

// List one or more processes to be composed into a system.
system Composer, Chain;
    </system>
	<queries>
		<query>
			<formula>strategy TimeSchedule = minE (Composer.time) [&lt;=57] : &lt;&gt;Composer.Done</formula>
			<comment></comment>
		</query>
		<query>
			<formula>inf{Composer.Done} : Composer.time</formula>
			<comment></comment>
		</query>
		<query>
			<formula>A&lt;&gt; Composer.Done</formula>
			<comment></comment>
		</query>
		<query>
			<formula>E&lt;&gt; Composer.Done</formula>
			<comment></comment>
		</query>
	</queries>
</nta>
