<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/researchgroup/darts/uppaal/flat-1_2.dtd'>
<nta>
<declaration>//Variables
const int numberOfChains = 43;
const int numberOfTasks = 100;
const int numberOfMachines = 11;
const int maxDependencies = 12;
const int longestChain = 5;
const int globalChainSize[numberOfChains] = {5,3,2,3,5,3,2,3,3,3,2,5,3,2,3,4,3,5,2,3,2,1,2,2,2,2,2,2,3,1,1,1,3,1,1,2,1,2,1,1,1,1,1};
const int globalChains[numberOfChains][longestChain] = {
{0,17,65,89,98},
{1,49,75,-1,-1},
{2,90,-1,-1,-1},
{3,50,72,-1,-1},
{4,52,61,73,95},
{5,15,97,-1,-1},
{6,33,-1,-1,-1},
{7,42,94,-1,-1},
{8,67,83,-1,-1},
{9,34,57,-1,-1},
{10,99,-1,-1,-1},
{11,25,51,59,69},
{12,86,96,-1,-1},
{13,93,-1,-1,-1},
{14,26,91,-1,-1},
{16,54,68,87,-1},
{18,39,84,-1,-1},
{19,29,45,70,92},
{20,76,-1,-1,-1},
{21,40,64,-1,-1},
{22,43,-1,-1,-1},
{23,-1,-1,-1,-1},
{24,48,-1,-1,-1},
{27,88,-1,-1,-1},
{28,71,-1,-1,-1},
{30,77,-1,-1,-1},
{31,85,-1,-1,-1},
{32,62,-1,-1,-1},
{35,58,81,-1,-1},
{36,-1,-1,-1,-1},
{37,-1,-1,-1,-1},
{38,-1,-1,-1,-1},
{41,55,80,-1,-1},
{44,-1,-1,-1,-1},
{46,-1,-1,-1,-1},
{47,63,-1,-1,-1},
{53,-1,-1,-1,-1},
{56,78,-1,-1,-1},
{60,-1,-1,-1,-1},
{66,-1,-1,-1,-1},
{74,-1,-1,-1,-1},
{79,-1,-1,-1,-1},
{82,-1,-1,-1,-1}};
int chainDuration[numberOfChains] = {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1};
int durations[numberOfTasks] = {3,14,9,11,9,9,15,15,10,13,16,3,12,16,4,3,16,20,12,6,3,17,12,10,16,8,5,7,6,4,2,2,19,4,4,3,8,18,18,5,5,3,11,18,16,19,8,4,4,13,15,19,4,14,7,1,8,5,20,8,7,2,19,18,10,5,15,8,18,18,1,7,7,18,2,8,11,2,20,12,16,12,3,3,13,15,1,19,16,19,15,6,14,1,3,2,17,9,7,20};
const int dependencies[numberOfTasks][maxDependencies] = {
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,5,7,8,10,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,10,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{21,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,11,14,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,20,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{18,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{13,19,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,15,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,20,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,6,25,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{9,15,28,29,-1,-1,-1,-1,-1,-1,-1,-1},
{8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,18,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,14,18,21,22,27,29,-1,-1,-1,-1,-1},
{0,5,21,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{21,30,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,7,13,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,22,28,30,-1,-1,-1,-1,-1,-1,-1,-1},
{18,27,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{18,23,26,29,-1,-1,-1,-1,-1,-1,-1,-1},
{11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,20,24,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,14,22,27,-1,-1,-1,-1,-1,-1,-1},
{2,3,9,18,-1,-1,-1,-1,-1,-1,-1,-1},
{2,18,25,28,-1,-1,-1,-1,-1,-1,-1,-1},
{2,4,25,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,6,16,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,41,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,25,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,8,14,34,35,37,48,54,-1,-1,-1,-1},
{12,16,35,52,-1,-1,-1,-1,-1,-1,-1,-1},
{3,14,48,51,55,-1,-1,-1,-1,-1,-1,-1},
{18,42,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,20,29,33,41,52,-1,-1,-1,-1,-1,-1},
{2,14,28,32,35,41,-1,-1,-1,-1,-1,-1},
{6,45,47,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{32,40,58,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,17,31,33,35,55,56,58,59,-1,-1,-1},
{3,47,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,8,61,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{10,12,22,32,38,54,-1,-1,-1,-1,-1,-1},
{40,45,59,60,-1,-1,-1,-1,-1,-1,-1,-1},
{19,25,40,45,56,-1,-1,-1,-1,-1,-1,-1},
{2,16,20,28,38,-1,-1,-1,-1,-1,-1,-1},
{1,4,22,41,46,50,51,-1,-1,-1,-1,-1},
{0,8,41,52,55,61,-1,-1,-1,-1,-1,-1},
{25,26,29,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{33,46,49,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{18,20,25,27,29,44,55,63,-1,-1,-1,-1},
{14,25,30,38,67,-1,-1,-1,-1,-1,-1,-1},
{49,56,68,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{68,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,21,30,55,56,-1,-1,-1,-1,-1,-1,-1},
{12,14,34,58,-1,-1,-1,-1,-1,-1,-1,-1},
{52,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,26,29,43,49,54,62,66,67,70,74,-1},
{10,20,29,31,39,46,-1,-1,-1,-1,-1,-1},
{27,31,50,62,-1,-1,-1,-1,-1,-1,-1,-1},
{12,23,49,51,71,-1,-1,-1,-1,-1,-1,-1},
{0,10,27,30,38,41,68,-1,-1,-1,-1,-1},
{3,6,14,27,53,79,80,-1,-1,-1,-1,-1},
{3,30,44,52,65,71,-1,-1,-1,-1,-1,-1},
{2,3,11,14,15,24,26,34,46,60,65,79},
{10,14,20,24,26,43,61,66,79,-1,-1,-1},
{6,26,30,70,-1,-1,-1,-1,-1,-1,-1,-1},
{4,9,13,23,40,63,64,78,-1,-1,-1,-1},
{1,10,11,12,17,37,41,42,44,58,86,-1},
{10,48,52,62,73,77,80,-1,-1,-1,-1,-1},
{31,54,74,86,88,91,92,-1,-1,-1,-1,-1},
{5,14,15,25,48,51,60,61,70,-1,-1,-1},
{12,13,54,72,80,89,-1,-1,-1,-1,-1,-1},
{2,10,11,28,48,49,64,-1,-1,-1,-1,-1}};


int availableMachines = numberOfMachines;

// Typedefs
typedef int[0, numberOfChains - 1] chainId_t;

// Ints and Arrays
int numberOfChainsDone = 0;
int tasksDone[numberOfTasks];
bool runnableChains[numberOfChains];
bool assignmentChoice[numberOfChains];

// Channels
broadcast chan startMachines;
broadcast chan chainMachineChan[numberOfChains];
broadcast chan activateChains;</declaration>
	<template>
		<name x="5" y="5">Composer</name>
		<declaration>// Place local declarations here.
clock time;</declaration>
		<location id="id0" x="-102" y="-255">
			<name x="-112" y="-289">Init</name>
			<label kind="invariant" x="-246" y="-238">numberOfChainsDone &lt;= numberOfChains
            &amp;&amp; cost' == 1</label>
		</location>
		<location id="id1" x="331" y="-255">
			<name x="321" y="-289">Done</name>
		</location>
		<init ref="id0"/>
		<transition>
			<source ref="id0"/>
			<target ref="id1"/>
			<label kind="guard" x="-17" y="-289">numberOfChainsDone &gt;= numberOfChains</label>
		</transition>
	</template>
	<template>
		<name>Chain</name>
		<parameter>const chainId_t cid</parameter>
		<declaration>clock x;
const int chainSize = globalChainSize[cid];
int index = 0;

bool AllDependenciesDone()
{
    bool dependenciesDone = 1;
    int i;
    for (i = 0; i &lt; maxDependencies; i++)
    {
        int value = dependencies[globalChains[cid][index]][i];
        if (value == -1)
            return dependenciesDone;

        dependenciesDone &amp;= tasksDone[value];
    }
    return dependenciesDone;
}</declaration>
		<location id="id2" x="-68" y="-238">
			<name x="-78" y="-272">Idle</name>
		</location>
		<location id="id3" x="-76" y="51">
			<name x="-102" y="68">Running</name>
			<label kind="invariant" x="-178" y="85">x &lt;= durations[globalChains[cid][index]]</label>
		</location>
		<location id="id4" x="-450" y="-238">
			<name x="-460" y="-272">Done</name>
		</location>
		<init ref="id2"/>
		<transition>
			<source ref="id2"/>
			<target ref="id4"/>
			<label kind="guard" x="-399" y="-280">index &gt;= chainSize &amp;&amp;
x &gt;= durations[globalChains[cid][index - 1]]</label>
			<label kind="assignment" x="-399" y="-238">numberOfChainsDone++</label>
		</transition>
		<transition>
			<source ref="id3"/>
			<target ref="id2"/>
			<label kind="guard" x="-450" y="-127">x &gt;= durations[globalChains[cid][index]]</label>
			<label kind="assignment" x="-450" y="-110">availableMachines++,
tasksDone[globalChains[cid][index]] = 1,
index++</label>
			<nail x="-161" y="-85"/>
		</transition>
		<transition>
			<source ref="id2"/>
			<target ref="id3"/>
			<label kind="guard" x="34" y="-127">index &lt; chainSize &amp;&amp;
availableMachines &gt; 0 &amp;&amp; AllDependenciesDone()</label>
			<label kind="assignment" x="34" y="-85">availableMachines--,
x = 0</label>
			<nail x="17" y="-85"/>
		</transition>
	</template>
	<system>// Place template instantiations here.

// List one or more processes to be composed into a system.
system Composer, Chain;
    </system>
	<queries>
		<query>
			<formula>strategy TimeSchedule = minE (Composer.time) [&lt;=57] : &lt;&gt;Composer.Done</formula>
			<comment></comment>
		</query>
		<query>
			<formula>inf{Composer.Done} : Composer.time</formula>
			<comment></comment>
		</query>
		<query>
			<formula>A&lt;&gt; Composer.Done</formula>
			<comment></comment>
		</query>
		<query>
			<formula>E&lt;&gt; Composer.Done</formula>
			<comment></comment>
		</query>
	</queries>
</nta>
