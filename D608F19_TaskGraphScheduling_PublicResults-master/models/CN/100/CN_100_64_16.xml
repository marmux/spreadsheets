<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/researchgroup/darts/uppaal/flat-1_2.dtd'>
<nta>
<declaration>//Variables
const int numberOfChains = 25;
const int numberOfTasks = 100;
const int numberOfMachines = 16;
const int maxDependencies = 32;
const int longestChain = 14;
const int globalChainSize[numberOfChains] = {14,4,2,3,4,9,6,5,2,4,3,6,5,4,3,4,3,3,4,2,2,3,3,1,1};
const int globalChains[numberOfChains][longestChain] = {
{0,3,5,44,51,78,85,87,92,94,95,96,97,99},
{1,57,88,90,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,98,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,86,91,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,74,84,93,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,17,21,25,35,55,58,60,82,-1,-1,-1,-1,-1},
{8,46,69,80,81,89,-1,-1,-1,-1,-1,-1,-1,-1},
{9,24,59,63,83,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{10,79,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{11,37,64,77,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{12,62,76,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{13,40,54,70,71,75,-1,-1,-1,-1,-1,-1,-1,-1},
{14,49,52,66,68,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{15,20,67,73,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{16,29,61,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{18,31,38,48,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{19,65,72,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{22,39,56,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{23,27,45,47,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{26,28,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{30,50,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{32,43,53,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{33,34,41,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{36,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{42,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1}};
int chainDuration[numberOfChains] = {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1};
int durations[numberOfTasks] = {10,8,4,1,1,3,3,10,5,8,6,8,8,10,2,6,10,1,1,10,9,4,3,6,7,8,10,8,2,9,6,1,1,8,1,7,9,1,6,1,4,8,10,10,2,2,9,8,10,7,1,10,4,4,10,2,3,1,7,6,10,3,6,3,5,6,9,1,5,2,8,8,5,1,10,4,7,4,7,4,9,6,3,9,10,1,3,9,10,3,1,6,5,9,6,4,9,9,9,8};
const int dependencies[numberOfTasks][maxDependencies] = {
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,2,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,3,4,7,10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,7,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,8,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,3,8,9,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,3,4,11,13,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,11,14,15,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,2,4,6,7,10,13,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,2,9,13,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,9,15,16,18,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,2,3,7,9,12,13,15,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,2,4,5,8,10,17,19,20,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,2,3,4,14,15,16,20,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,4,9,11,17,18,21,22,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,2,4,5,8,9,16,17,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,3,4,11,13,15,17,21,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,2,10,16,18,25,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,7,11,16,19,21,22,23,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,3,6,14,18,22,25,26,27,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,2,8,13,16,18,19,20,21,22,24,26,27,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,17,18,29,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,7,9,12,13,15,16,18,21,24,26,28,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,18,19,23,25,26,29,30,31,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,11,12,15,17,18,24,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,6,7,10,19,20,22,27,31,33,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,3,6,7,8,11,16,17,22,25,27,30,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,11,13,17,22,26,29,31,33,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,3,6,9,11,12,17,18,20,23,25,29,33,34,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,9,11,12,13,15,17,23,28,31,35,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,6,10,11,13,15,17,18,22,27,31,36,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,4,5,8,10,13,14,15,17,18,20,22,24,25,26,28,33,34,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,6,9,15,18,19,20,27,34,36,37,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,12,14,15,24,30,33,35,38,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,9,10,14,15,19,20,32,37,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,2,3,4,5,7,8,13,20,21,27,33,34,37,38,39,43,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,5,10,16,17,24,27,28,29,31,32,36,37,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,2,4,7,8,11,14,16,20,23,25,27,29,39,42,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,3,6,8,11,21,22,25,27,30,31,34,36,42,43,45,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,3,9,15,16,17,18,20,26,27,32,38,40,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,4,7,8,11,14,21,27,28,34,37,42,48,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,4,8,12,14,19,24,26,30,31,34,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,3,5,6,8,9,10,13,15,17,19,21,22,26,36,37,40,44,45,49,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,5,7,8,9,13,15,16,17,18,20,24,26,36,38,39,41,48,49,50,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,3,18,19,20,21,33,34,36,42,43,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,3,5,12,13,26,32,35,38,39,40,43,47,53,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,6,10,11,12,15,16,17,19,20,21,25,27,28,31,34,35,37,44,46,47,49,53,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,2,3,6,8,12,26,27,32,38,39,42,45,50,53,55,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,2,3,4,5,7,10,16,20,23,24,27,32,41,42,46,47,54,55,56,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,7,10,17,18,19,20,21,27,29,30,35,37,42,45,46,48,51,55,56,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,2,3,8,10,14,18,22,24,26,32,33,35,39,41,43,46,50,54,57,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,2,4,6,9,11,12,15,16,18,22,24,25,26,30,35,38,42,43,55,56,58,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,12,14,16,29,32,34,35,44,48,49,53,54,60,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,6,7,8,12,16,23,27,28,29,30,34,35,41,42,43,46,48,49,53,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,5,9,11,21,25,27,30,35,49,56,58,59,62,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,17,19,21,22,24,26,29,31,34,35,37,43,47,48,50,51,52,53,55,56,57,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,6,12,14,19,22,25,26,27,32,34,36,45,49,50,55,60,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,2,14,15,17,23,27,30,31,36,37,39,45,47,49,52,54,55,59,65,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{9,12,19,20,22,25,28,33,35,43,48,49,52,55,64,65,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,4,8,13,15,16,19,23,24,32,33,34,35,48,50,61,63,65,66,67,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,7,8,18,21,22,28,31,34,40,42,44,45,46,49,55,56,57,62,63,64,65,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{9,10,16,18,20,21,23,24,26,29,30,40,41,43,45,47,48,52,54,56,58,61,62,65,-1,-1,-1,-1,-1,-1,-1,-1},
{0,9,10,15,16,26,29,31,37,41,43,50,52,55,58,61,64,65,68,69,70,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,7,8,12,16,20,23,26,56,57,59,64,65,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,13,15,18,23,26,33,34,37,44,45,46,54,56,67,69,70,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,4,6,7,9,12,17,19,25,28,29,35,36,37,38,44,54,58,60,62,63,69,70,72,-1,-1,-1,-1,-1,-1,-1},
{15,18,19,22,25,30,36,39,41,46,47,48,51,52,53,54,55,65,68,71,74,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,5,6,14,18,22,23,28,29,32,35,37,42,43,44,46,52,53,54,60,61,62,73,-1,-1,-1,-1,-1,-1,-1,-1},
{2,8,10,16,17,18,20,21,25,28,29,36,43,51,55,61,64,72,75,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,2,4,5,15,17,23,25,26,28,30,37,42,51,52,56,61,63,65,66,69,72,73,74,77,-1,-1,-1,-1,-1,-1,-1},
{3,4,9,10,12,13,14,16,26,33,34,41,43,44,45,49,53,55,59,63,68,69,70,71,72,77,-1,-1,-1,-1,-1,-1},
{13,14,15,16,17,18,24,28,30,33,35,37,52,53,58,59,60,66,69,72,73,74,77,79,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,4,12,13,14,15,16,17,19,27,31,35,37,43,45,54,58,61,64,66,68,73,77,78,80,-1,-1,-1,-1,-1,-1},
{1,7,9,10,22,25,29,30,32,35,36,38,40,41,48,49,55,60,61,65,70,72,74,78,-1,-1,-1,-1,-1,-1,-1,-1},
{1,7,9,12,16,19,24,25,27,29,31,34,37,40,41,42,44,45,52,58,60,62,63,66,72,75,77,-1,-1,-1,-1,-1},
{0,3,8,12,19,21,22,25,35,38,39,45,49,51,55,59,60,63,68,69,70,72,74,76,79,81,83,-1,-1,-1,-1,-1},
{3,5,6,9,10,11,15,16,19,22,23,24,28,30,32,34,38,42,46,58,60,62,65,66,68,70,72,73,74,78,80,-1},
{4,5,8,10,13,14,18,24,26,27,28,35,44,47,48,50,53,56,57,58,60,70,71,72,73,74,76,78,-1,-1,-1,-1},
{4,9,12,14,17,19,26,28,29,41,45,49,53,54,58,60,62,64,70,73,74,76,78,79,82,85,86,-1,-1,-1,-1,-1},
{0,1,8,12,14,17,20,23,24,42,43,46,50,51,52,53,55,56,57,60,62,63,71,74,78,79,-1,-1,-1,-1,-1,-1},
{1,9,15,18,22,25,28,35,36,37,40,47,50,52,74,79,81,83,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,10,15,16,18,20,21,23,24,25,27,30,31,33,35,36,42,45,47,49,51,53,56,62,71,72,74,76,77,83,88,89},
{0,6,8,22,24,28,30,33,34,40,50,58,59,61,62,67,68,73,80,82,86,87,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,2,8,9,13,14,19,23,25,31,38,40,42,46,47,48,50,51,56,58,60,62,66,67,71,78,81,86,87,88,-1},
{1,6,25,30,31,34,41,46,60,62,68,70,82,84,89,92,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,3,6,8,10,16,17,21,27,32,34,43,44,48,58,63,64,75,78,83,87,91,92,93,-1,-1,-1,-1,-1,-1,-1,-1},
{12,13,16,19,20,24,25,27,30,33,36,38,40,43,51,52,56,59,63,72,74,75,80,83,86,89,90,94,-1,-1,-1,-1},
{0,4,7,10,11,13,16,19,21,24,29,30,31,42,43,46,47,49,50,51,52,54,58,63,71,75,80,87,91,92,95,-1},
{0,1,4,5,6,9,11,14,16,21,26,27,35,36,38,41,44,45,53,58,59,60,71,73,77,80,82,86,87,89,96,-1},
{1,2,3,9,11,13,14,18,23,29,31,36,37,45,48,50,57,58,61,69,71,75,77,80,82,89,91,95,96,-1,-1,-1},
{2,5,6,10,13,14,24,25,26,27,31,32,33,43,44,46,53,59,81,82,83,87,88,90,95,96,97,-1,-1,-1,-1,-1}};


int availableMachines = numberOfMachines;

// Typedefs
typedef int[0, numberOfChains - 1] chainId_t;

// Ints and Arrays
int numberOfChainsDone = 0;
int tasksDone[numberOfTasks];
bool runnableChains[numberOfChains];
bool assignmentChoice[numberOfChains];

// Channels
broadcast chan startMachines;
broadcast chan chainMachineChan[numberOfChains];
broadcast chan activateChains;</declaration>
	<template>
		<name x="5" y="5">Composer</name>
		<declaration>// Place local declarations here.
clock time;</declaration>
		<location id="id0" x="-102" y="-255">
			<name x="-112" y="-289">Init</name>
			<label kind="invariant" x="-246" y="-238">numberOfChainsDone &lt;= numberOfChains
            &amp;&amp; cost' == 1</label>
		</location>
		<location id="id1" x="331" y="-255">
			<name x="321" y="-289">Done</name>
		</location>
		<init ref="id0"/>
		<transition>
			<source ref="id0"/>
			<target ref="id1"/>
			<label kind="guard" x="-17" y="-289">numberOfChainsDone &gt;= numberOfChains</label>
		</transition>
	</template>
	<template>
		<name>Chain</name>
		<parameter>const chainId_t cid</parameter>
		<declaration>clock x;
const int chainSize = globalChainSize[cid];
int index = 0;

bool AllDependenciesDone()
{
    bool dependenciesDone = 1;
    int i;
    for (i = 0; i &lt; maxDependencies; i++)
    {
        int value = dependencies[globalChains[cid][index]][i];
        if (value == -1)
            return dependenciesDone;

        dependenciesDone &amp;= tasksDone[value];
    }
    return dependenciesDone;
}</declaration>
		<location id="id2" x="-68" y="-238">
			<name x="-78" y="-272">Idle</name>
		</location>
		<location id="id3" x="-76" y="51">
			<name x="-102" y="68">Running</name>
			<label kind="invariant" x="-178" y="85">x &lt;= durations[globalChains[cid][index]]</label>
		</location>
		<location id="id4" x="-450" y="-238">
			<name x="-460" y="-272">Done</name>
		</location>
		<init ref="id2"/>
		<transition>
			<source ref="id2"/>
			<target ref="id4"/>
			<label kind="guard" x="-399" y="-280">index &gt;= chainSize &amp;&amp;
x &gt;= durations[globalChains[cid][index - 1]]</label>
			<label kind="assignment" x="-399" y="-238">numberOfChainsDone++</label>
		</transition>
		<transition>
			<source ref="id3"/>
			<target ref="id2"/>
			<label kind="guard" x="-450" y="-127">x &gt;= durations[globalChains[cid][index]]</label>
			<label kind="assignment" x="-450" y="-110">availableMachines++,
tasksDone[globalChains[cid][index]] = 1,
index++</label>
			<nail x="-161" y="-85"/>
		</transition>
		<transition>
			<source ref="id2"/>
			<target ref="id3"/>
			<label kind="guard" x="34" y="-127">index &lt; chainSize &amp;&amp;
availableMachines &gt; 0 &amp;&amp; AllDependenciesDone()</label>
			<label kind="assignment" x="34" y="-85">availableMachines--,
x = 0</label>
			<nail x="17" y="-85"/>
		</transition>
	</template>
	<system>// Place template instantiations here.

// List one or more processes to be composed into a system.
system Composer, Chain;
    </system>
	<queries>
		<query>
			<formula>strategy TimeSchedule = minE (Composer.time) [&lt;=57] : &lt;&gt;Composer.Done</formula>
			<comment></comment>
		</query>
		<query>
			<formula>inf{Composer.Done} : Composer.time</formula>
			<comment></comment>
		</query>
		<query>
			<formula>A&lt;&gt; Composer.Done</formula>
			<comment></comment>
		</query>
		<query>
			<formula>E&lt;&gt; Composer.Done</formula>
			<comment></comment>
		</query>
	</queries>
</nta>
