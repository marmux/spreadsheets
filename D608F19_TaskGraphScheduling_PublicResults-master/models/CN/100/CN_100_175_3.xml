<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/researchgroup/darts/uppaal/flat-1_2.dtd'>
<nta>
<declaration>//Variables
const int numberOfChains = 37;
const int numberOfTasks = 100;
const int numberOfMachines = 3;
const int maxDependencies = 22;
const int longestChain = 5;
const int globalChainSize[numberOfChains] = {5,3,3,5,3,4,2,3,5,5,3,2,2,3,4,3,3,2,4,3,3,3,2,3,1,2,3,2,2,2,2,2,1,1,1,1,2};
const int globalChains[numberOfChains][longestChain] = {
{0,9,46,85,96},
{1,82,93,-1,-1},
{2,22,90,-1,-1},
{3,40,51,89,98},
{4,49,68,-1,-1},
{5,63,77,86,-1},
{6,99,-1,-1,-1},
{7,58,91,-1,-1},
{8,44,57,80,94},
{10,31,56,74,81},
{11,32,95,-1,-1},
{12,97,-1,-1,-1},
{13,84,-1,-1,-1},
{14,48,92,-1,-1},
{15,61,79,88,-1},
{16,54,87,-1,-1},
{17,53,60,-1,-1},
{18,66,-1,-1,-1},
{19,52,71,83,-1},
{20,65,72,-1,-1},
{21,62,73,-1,-1},
{23,36,70,-1,-1},
{24,75,-1,-1,-1},
{25,43,76,-1,-1},
{26,-1,-1,-1,-1},
{27,50,-1,-1,-1},
{28,35,78,-1,-1},
{29,69,-1,-1,-1},
{30,67,-1,-1,-1},
{33,64,-1,-1,-1},
{34,59,-1,-1,-1},
{37,47,-1,-1,-1},
{38,-1,-1,-1,-1},
{39,-1,-1,-1,-1},
{41,-1,-1,-1,-1},
{42,-1,-1,-1,-1},
{45,55,-1,-1,-1}};
int chainDuration[numberOfChains] = {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1};
int durations[numberOfTasks] = {5,12,13,8,14,5,13,10,3,7,6,6,5,6,6,8,11,7,14,12,6,5,5,14,7,6,5,4,6,15,4,13,11,6,10,6,7,14,6,16,8,5,5,6,4,11,9,7,6,5,14,8,6,11,5,4,4,14,16,5,7,8,9,5,4,13,9,5,6,6,13,12,6,6,13,5,6,5,8,6,11,12,10,15,6,5,13,4,6,6,6,7,6,7,10,6,13,7,4,6};
const int dependencies[numberOfTasks][maxDependencies] = {
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,4,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,2,4,10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{10,12,17,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{9,12,16,18,20,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,9,21,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,20,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{9,10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,11,13,16,19,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,7,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,28,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,6,7,9,10,24,26,27,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,7,11,13,21,23,25,28,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,15,20,22,24,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,19,24,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,8,10,14,20,28,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,6,11,19,20,23,25,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,14,15,19,24,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{16,30,32,37,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,16,19,27,37,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,4,9,10,11,17,22,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{13,18,23,24,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{9,20,23,32,33,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,9,11,12,24,25,30,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,4,6,7,8,10,12,14,30,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{11,15,21,23,36,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,9,13,15,17,18,20,21,22,30,31,33,34,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,14,23,28,33,37,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,9,10,12,14,23,33,35,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,2,3,4,19,20,26,27,37,44,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{18,19,27,37,43,48,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,10,12,18,28,30,31,35,36,39,40,42,46,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,3,5,7,10,19,20,27,30,35,36,38,47,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{9,15,17,22,26,29,33,35,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,6,7,16,25,27,30,46,48,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{16,19,28,32,44,45,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,17,19,20,23,28,29,31,40,42,44,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,3,4,16,23,30,38,44,45,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,4,7,10,17,21,22,30,40,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,11,21,34,39,41,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,13,17,33,39,42,46,53,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,6,8,10,15,23,27,49,52,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,21,23,35,41,43,49,50,57,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,2,5,9,11,13,42,44,54,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{14,16,24,27,33,42,45,47,53,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,12,13,15,20,24,41,42,47,48,57,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,7,16,17,18,23,26,34,59,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{30,31,34,53,55,56,57,59,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,2,5,7,16,20,21,44,49,56,62,64,66,67,-1,-1,-1,-1,-1,-1,-1,-1},
{12,18,29,43,47,48,59,61,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{10,12,17,23,28,32,35,36,38,39,42,47,55,59,-1,-1,-1,-1,-1,-1,-1,-1},
{2,5,17,18,20,23,28,29,30,41,48,52,55,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,9,11,19,26,37,45,47,64,65,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{18,22,23,59,61,62,64,67,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{11,12,14,16,22,23,29,31,33,36,38,39,43,44,51,52,55,56,62,65,-1,-1},
{1,23,24,28,29,30,39,41,45,54,55,56,57,59,65,67,-1,-1,-1,-1,-1,-1},
{4,7,14,16,27,38,41,43,44,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{9,11,17,19,22,26,42,44,53,63,64,66,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{11,18,21,29,31,33,35,45,55,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,15,16,17,22,30,35,48,56,61,62,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,8,9,15,33,35,48,52,57,58,69,73,76,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,6,12,13,23,43,46,48,50,55,71,73,74,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,9,15,18,22,42,47,52,58,61,62,75,76,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,33,42,54,61,70,71,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,13,17,20,21,26,37,38,44,56,62,77,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,6,7,8,11,16,31,34,40,41,46,51,66,69,72,74,-1,-1,-1,-1,-1,-1},
{0,1,7,12,16,18,30,32,43,50,62,64,70,75,77,-1,-1,-1,-1,-1,-1,-1},
{5,6,7,23,30,37,43,48,54,63,70,78,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,20,31,37,40,45,49,50,67,69,79,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,6,17,18,26,28,30,32,46,47,51,56,59,65,-1,-1,-1,-1,-1,-1,-1,-1},
{0,5,6,7,9,19,22,31,43,44,57,59,60,76,78,-1,-1,-1,-1,-1,-1,-1},
{8,10,15,16,22,32,34,45,46,50,58,66,74,75,76,77,-1,-1,-1,-1,-1,-1},
{8,10,16,25,29,34,36,43,48,53,57,58,61,66,71,83,88,89,-1,-1,-1,-1},
{3,8,15,16,21,29,30,34,36,48,51,56,61,65,72,77,79,80,82,85,88,89},
{3,9,11,21,25,35,46,50,62,66,80,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,8,19,27,28,32,34,38,45,46,51,52,61,62,69,70,-1,-1,-1,-1,-1,-1},
{3,4,10,22,25,28,29,30,36,40,46,49,54,60,66,72,78,83,84,85,-1,-1},
{10,12,19,34,35,37,41,51,57,62,65,72,75,76,77,80,-1,-1,-1,-1,-1,-1},
{1,8,9,11,16,19,21,34,38,42,52,56,58,72,86,89,-1,-1,-1,-1,-1,-1},
{6,10,15,20,25,28,34,41,49,51,53,54,62,66,71,72,87,89,-1,-1,-1,-1}};


int availableMachines = numberOfMachines;

// Typedefs
typedef int[0, numberOfChains - 1] chainId_t;

// Ints and Arrays
int numberOfChainsDone = 0;
int tasksDone[numberOfTasks];
bool runnableChains[numberOfChains];
bool assignmentChoice[numberOfChains];

// Channels
broadcast chan startMachines;
broadcast chan chainMachineChan[numberOfChains];
broadcast chan activateChains;</declaration>
	<template>
		<name x="5" y="5">Composer</name>
		<declaration>// Place local declarations here.
clock time;</declaration>
		<location id="id0" x="-102" y="-255">
			<name x="-112" y="-289">Init</name>
			<label kind="invariant" x="-246" y="-238">numberOfChainsDone &lt;= numberOfChains
            &amp;&amp; cost' == 1</label>
		</location>
		<location id="id1" x="331" y="-255">
			<name x="321" y="-289">Done</name>
		</location>
		<init ref="id0"/>
		<transition>
			<source ref="id0"/>
			<target ref="id1"/>
			<label kind="guard" x="-17" y="-289">numberOfChainsDone &gt;= numberOfChains</label>
		</transition>
	</template>
	<template>
		<name>Chain</name>
		<parameter>const chainId_t cid</parameter>
		<declaration>clock x;
const int chainSize = globalChainSize[cid];
int index = 0;

bool AllDependenciesDone()
{
    bool dependenciesDone = 1;
    int i;
    for (i = 0; i &lt; maxDependencies; i++)
    {
        int value = dependencies[globalChains[cid][index]][i];
        if (value == -1)
            return dependenciesDone;

        dependenciesDone &amp;= tasksDone[value];
    }
    return dependenciesDone;
}</declaration>
		<location id="id2" x="-68" y="-238">
			<name x="-78" y="-272">Idle</name>
		</location>
		<location id="id3" x="-76" y="51">
			<name x="-102" y="68">Running</name>
			<label kind="invariant" x="-178" y="85">x &lt;= durations[globalChains[cid][index]]</label>
		</location>
		<location id="id4" x="-450" y="-238">
			<name x="-460" y="-272">Done</name>
		</location>
		<init ref="id2"/>
		<transition>
			<source ref="id2"/>
			<target ref="id4"/>
			<label kind="guard" x="-399" y="-280">index &gt;= chainSize &amp;&amp;
x &gt;= durations[globalChains[cid][index - 1]]</label>
			<label kind="assignment" x="-399" y="-238">numberOfChainsDone++</label>
		</transition>
		<transition>
			<source ref="id3"/>
			<target ref="id2"/>
			<label kind="guard" x="-450" y="-127">x &gt;= durations[globalChains[cid][index]]</label>
			<label kind="assignment" x="-450" y="-110">availableMachines++,
tasksDone[globalChains[cid][index]] = 1,
index++</label>
			<nail x="-161" y="-85"/>
		</transition>
		<transition>
			<source ref="id2"/>
			<target ref="id3"/>
			<label kind="guard" x="34" y="-127">index &lt; chainSize &amp;&amp;
availableMachines &gt; 0 &amp;&amp; AllDependenciesDone()</label>
			<label kind="assignment" x="34" y="-85">availableMachines--,
x = 0</label>
			<nail x="17" y="-85"/>
		</transition>
	</template>
	<system>// Place template instantiations here.

// List one or more processes to be composed into a system.
system Composer, Chain;
    </system>
	<queries>
		<query>
			<formula>strategy TimeSchedule = minE (Composer.time) [&lt;=57] : &lt;&gt;Composer.Done</formula>
			<comment></comment>
		</query>
		<query>
			<formula>inf{Composer.Done} : Composer.time</formula>
			<comment></comment>
		</query>
		<query>
			<formula>A&lt;&gt; Composer.Done</formula>
			<comment></comment>
		</query>
		<query>
			<formula>E&lt;&gt; Composer.Done</formula>
			<comment></comment>
		</query>
	</queries>
</nta>
