<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/researchgroup/darts/uppaal/flat-1_2.dtd'>
<nta>
<declaration>//Variables
const int numberOfChains = 38;
const int numberOfTasks = 100;
const int numberOfMachines = 10;
const int maxDependencies = 18;
const int longestChain = 7;
const int globalChainSize[numberOfChains] = {7,3,2,3,2,3,3,2,4,2,3,4,4,4,4,4,3,3,3,3,2,3,2,2,3,3,2,2,2,2,1,2,3,1,1,1,1,1};
const int globalChains[numberOfChains][longestChain] = {
{0,17,33,44,63,86,98},
{1,54,95,-1,-1,-1,-1},
{2,79,-1,-1,-1,-1,-1},
{3,68,73,-1,-1,-1,-1},
{4,87,-1,-1,-1,-1,-1},
{5,23,94,-1,-1,-1,-1},
{6,46,96,-1,-1,-1,-1},
{7,99,-1,-1,-1,-1,-1},
{8,34,82,93,-1,-1,-1},
{9,91,-1,-1,-1,-1,-1},
{10,35,69,-1,-1,-1,-1},
{11,65,78,92,-1,-1,-1},
{12,45,80,97,-1,-1,-1},
{13,24,60,75,-1,-1,-1},
{14,66,81,88,-1,-1,-1},
{15,59,83,90,-1,-1,-1},
{16,62,85,-1,-1,-1,-1},
{18,55,89,-1,-1,-1,-1},
{19,28,51,-1,-1,-1,-1},
{20,40,84,-1,-1,-1,-1},
{21,61,-1,-1,-1,-1,-1},
{22,67,77,-1,-1,-1,-1},
{25,53,-1,-1,-1,-1,-1},
{26,74,-1,-1,-1,-1,-1},
{27,49,71,-1,-1,-1,-1},
{29,57,64,-1,-1,-1,-1},
{30,70,-1,-1,-1,-1,-1},
{31,38,-1,-1,-1,-1,-1},
{32,50,-1,-1,-1,-1,-1},
{36,58,-1,-1,-1,-1,-1},
{37,-1,-1,-1,-1,-1,-1},
{39,56,-1,-1,-1,-1,-1},
{41,72,76,-1,-1,-1,-1},
{42,-1,-1,-1,-1,-1,-1},
{43,-1,-1,-1,-1,-1,-1},
{47,-1,-1,-1,-1,-1,-1},
{48,-1,-1,-1,-1,-1,-1},
{52,-1,-1,-1,-1,-1,-1}};
int chainDuration[numberOfChains] = {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1};
int durations[numberOfTasks] = {7,1,6,3,9,9,4,10,8,9,1,5,6,7,7,10,10,6,5,3,4,4,5,1,1,1,5,3,2,9,1,4,9,3,2,1,2,1,9,1,9,3,6,9,7,3,1,7,7,9,7,1,3,9,7,4,10,10,3,5,7,6,9,7,4,8,3,1,9,4,4,7,9,8,4,8,6,2,4,1,3,8,3,1,7,10,3,7,3,4,3,1,1,2,1,7,3,1,7,5};
const int dependencies[numberOfTasks][maxDependencies] = {
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,2,7,12,13,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,14,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{14,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,6,13,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,4,5,6,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,7,8,11,13,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{12,15,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,11,12,15,19,22,26,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,6,16,21,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,12,25,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,8,9,21,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{10,13,24,26,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,6,12,13,15,16,17,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,4,7,8,20,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,7,10,11,13,14,23,27,29,32,-1,-1,-1,-1,-1,-1,-1,-1},
{19,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,7,19,25,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,14,15,22,25,31,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,9,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,8,9,20,31,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,21,24,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{14,21,22,28,30,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,7,12,27,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{11,17,33,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,5,8,12,19,21,22,24,31,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,6,13,20,22,23,24,31,33,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,19,23,26,27,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,4,8,12,22,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,7,13,15,19,27,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{21,27,29,32,37,39,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{16,21,22,28,29,31,32,34,42,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{29,40,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,10,11,12,19,25,37,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,15,18,19,33,37,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,14,18,19,23,30,38,39,46,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,20,25,39,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{21,23,29,40,42,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,16,36,44,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,11,15,27,29,30,40,42,45,46,47,50,-1,-1,-1,-1,-1,-1},
{1,7,10,13,20,24,26,29,31,36,55,58,-1,-1,-1,-1,-1,-1},
{4,7,13,19,21,29,35,39,41,43,48,53,-1,-1,-1,-1,-1,-1},
{1,3,13,16,22,29,31,34,36,37,41,53,55,56,-1,-1,-1,-1},
{11,25,27,33,43,44,56,58,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,9,16,21,36,42,49,57,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,5,11,15,44,46,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{10,14,31,37,42,43,44,45,46,48,52,57,-1,-1,-1,-1,-1,-1},
{4,5,12,20,21,22,27,32,39,52,53,-1,-1,-1,-1,-1,-1,-1},
{0,2,3,7,22,24,26,32,45,48,55,58,-1,-1,-1,-1,-1,-1},
{3,5,9,14,15,25,29,35,38,46,53,-1,-1,-1,-1,-1,-1,-1},
{1,5,9,12,13,30,49,52,56,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,14,21,22,24,33,43,49,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,16,17,41,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{9,13,23,35,37,47,68,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,26,35,36,37,39,40,42,52,57,67,-1,-1,-1,-1,-1,-1,-1},
{10,12,15,16,17,27,28,29,31,33,49,59,60,61,67,71,-1,-1},
{1,4,6,24,42,72,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{14,21,22,34,38,46,49,56,62,67,-1,-1,-1,-1,-1,-1,-1,-1},
{5,6,16,20,23,25,33,42,48,56,65,66,-1,-1,-1,-1,-1,-1},
{1,2,4,12,14,17,26,29,30,37,71,-1,-1,-1,-1,-1,-1,-1},
{5,7,8,19,22,29,45,46,50,64,72,-1,-1,-1,-1,-1,-1,-1},
{4,10,18,23,28,34,53,64,66,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,10,17,21,23,30,34,45,52,55,56,58,62,66,69,-1,-1,-1},
{7,16,20,29,40,46,55,59,61,65,66,-1,-1,-1,-1,-1,-1,-1},
{6,29,40,46,57,68,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,32,39,41,46,59,60,62,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,9,15,29,32,33,41,51,52,63,66,70,82,-1,-1,-1,-1,-1},
{2,4,12,15,20,44,47,55,62,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{12,14,24,30,42,45,52,57,72,74,77,81,84,-1,-1,-1,-1,-1},
{7,8,14,38,48,55,57,74,77,84,-1,-1,-1,-1,-1,-1,-1,-1},
{4,14,24,25,47,60,61,62,63,83,-1,-1,-1,-1,-1,-1,-1,-1},
{0,3,4,9,34,47,49,53,60,69,72,74,75,78,81,-1,-1,-1},
{8,11,16,17,20,24,26,50,78,80,82,-1,-1,-1,-1,-1,-1,-1},
{3,4,8,14,37,38,45,48,53,70,81,82,83,-1,-1,-1,-1,-1},
{2,10,12,20,23,31,33,40,41,42,63,64,66,72,74,80,82,-1},
{6,7,9,10,33,49,54,60,73,78,83,-1,-1,-1,-1,-1,-1,-1},
{4,11,17,18,19,22,23,39,46,51,55,56,61,63,69,74,-1,-1},
{1,12,15,18,22,26,37,44,45,53,72,77,78,80,-1,-1,-1,-1},
{7,12,21,24,25,32,41,43,54,58,59,69,70,72,74,83,86,88},
{2,7,13,19,25,30,32,37,54,56,58,63,-1,-1,-1,-1,-1,-1}};


int availableMachines = numberOfMachines;

// Typedefs
typedef int[0, numberOfChains - 1] chainId_t;

// Ints and Arrays
int numberOfChainsDone = 0;
int tasksDone[numberOfTasks];
bool runnableChains[numberOfChains];
bool assignmentChoice[numberOfChains];

// Channels
broadcast chan startMachines;
broadcast chan chainMachineChan[numberOfChains];
broadcast chan activateChains;</declaration>
	<template>
		<name x="5" y="5">Composer</name>
		<declaration>// Place local declarations here.
clock time;</declaration>
		<location id="id0" x="-102" y="-255">
			<name x="-112" y="-289">Init</name>
			<label kind="invariant" x="-246" y="-238">numberOfChainsDone &lt;= numberOfChains
            &amp;&amp; cost' == 1</label>
		</location>
		<location id="id1" x="331" y="-255">
			<name x="321" y="-289">Done</name>
		</location>
		<init ref="id0"/>
		<transition>
			<source ref="id0"/>
			<target ref="id1"/>
			<label kind="guard" x="-17" y="-289">numberOfChainsDone &gt;= numberOfChains</label>
		</transition>
	</template>
	<template>
		<name>Chain</name>
		<parameter>const chainId_t cid</parameter>
		<declaration>clock x;
const int chainSize = globalChainSize[cid];
int index = 0;

bool AllDependenciesDone()
{
    bool dependenciesDone = 1;
    int i;
    for (i = 0; i &lt; maxDependencies; i++)
    {
        int value = dependencies[globalChains[cid][index]][i];
        if (value == -1)
            return dependenciesDone;

        dependenciesDone &amp;= tasksDone[value];
    }
    return dependenciesDone;
}</declaration>
		<location id="id2" x="-68" y="-238">
			<name x="-78" y="-272">Idle</name>
		</location>
		<location id="id3" x="-76" y="51">
			<name x="-102" y="68">Running</name>
			<label kind="invariant" x="-178" y="85">x &lt;= durations[globalChains[cid][index]]</label>
		</location>
		<location id="id4" x="-450" y="-238">
			<name x="-460" y="-272">Done</name>
		</location>
		<init ref="id2"/>
		<transition>
			<source ref="id2"/>
			<target ref="id4"/>
			<label kind="guard" x="-399" y="-280">index &gt;= chainSize &amp;&amp;
x &gt;= durations[globalChains[cid][index - 1]]</label>
			<label kind="assignment" x="-399" y="-238">numberOfChainsDone++</label>
		</transition>
		<transition>
			<source ref="id3"/>
			<target ref="id2"/>
			<label kind="guard" x="-450" y="-127">x &gt;= durations[globalChains[cid][index]]</label>
			<label kind="assignment" x="-450" y="-110">availableMachines++,
tasksDone[globalChains[cid][index]] = 1,
index++</label>
			<nail x="-161" y="-85"/>
		</transition>
		<transition>
			<source ref="id2"/>
			<target ref="id3"/>
			<label kind="guard" x="34" y="-127">index &lt; chainSize &amp;&amp;
availableMachines &gt; 0 &amp;&amp; AllDependenciesDone()</label>
			<label kind="assignment" x="34" y="-85">availableMachines--,
x = 0</label>
			<nail x="17" y="-85"/>
		</transition>
	</template>
	<system>// Place template instantiations here.

// List one or more processes to be composed into a system.
system Composer, Chain;
    </system>
	<queries>
		<query>
			<formula>strategy TimeSchedule = minE (Composer.time) [&lt;=57] : &lt;&gt;Composer.Done</formula>
			<comment></comment>
		</query>
		<query>
			<formula>inf{Composer.Done} : Composer.time</formula>
			<comment></comment>
		</query>
		<query>
			<formula>A&lt;&gt; Composer.Done</formula>
			<comment></comment>
		</query>
		<query>
			<formula>E&lt;&gt; Composer.Done</formula>
			<comment></comment>
		</query>
	</queries>
</nta>
