<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/researchgroup/darts/uppaal/flat-1_2.dtd'>
<nta>
<declaration>//Variables
const int numberOfChains = 38;
const int numberOfTasks = 100;
const int numberOfMachines = 10;
const int maxDependencies = 12;
const int longestChain = 6;
const int globalChainSize[numberOfChains] = {5,3,4,3,3,6,5,2,3,4,2,3,6,3,2,2,2,2,3,2,2,3,2,3,3,2,1,2,2,2,2,2,2,1,1,2,1,2};
const int globalChains[numberOfChains][longestChain] = {
{0,41,61,74,88,-1},
{1,84,92,-1,-1,-1},
{2,56,77,87,-1,-1},
{3,35,99,-1,-1,-1},
{4,14,96,-1,-1,-1},
{5,11,46,60,73,91},
{6,18,36,69,86,-1},
{7,93,-1,-1,-1,-1},
{8,52,78,-1,-1,-1},
{9,70,80,97,-1,-1},
{10,85,-1,-1,-1,-1},
{12,31,90,-1,-1,-1},
{13,28,54,62,82,98},
{15,75,83,-1,-1,-1},
{16,94,-1,-1,-1,-1},
{17,55,-1,-1,-1,-1},
{19,58,-1,-1,-1,-1},
{20,65,-1,-1,-1,-1},
{21,49,57,-1,-1,-1},
{22,89,-1,-1,-1,-1},
{23,63,-1,-1,-1,-1},
{24,47,81,-1,-1,-1},
{25,30,-1,-1,-1,-1},
{26,43,48,-1,-1,-1},
{27,32,72,-1,-1,-1},
{29,76,-1,-1,-1,-1},
{33,-1,-1,-1,-1,-1},
{34,42,-1,-1,-1,-1},
{37,71,-1,-1,-1,-1},
{38,45,-1,-1,-1,-1},
{39,50,-1,-1,-1,-1},
{40,51,-1,-1,-1,-1},
{44,64,-1,-1,-1,-1},
{53,-1,-1,-1,-1,-1},
{59,-1,-1,-1,-1,-1},
{66,79,-1,-1,-1,-1},
{67,-1,-1,-1,-1,-1},
{68,95,-1,-1,-1,-1}};
int chainDuration[numberOfChains] = {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1};
int durations[numberOfTasks] = {15,8,2,3,26,2,10,4,9,12,1,1,33,2,3,9,1,3,8,3,8,9,4,9,4,4,2,2,3,4,2,7,13,8,8,21,7,5,5,5,15,3,8,2,10,11,2,7,24,24,9,10,7,18,2,1,10,10,4,3,3,3,8,4,28,1,29,9,32,12,2,2,14,4,1,6,3,7,4,6,4,9,1,2,16,9,24,2,3,9,7,3,8,7,8,9,3,4,4,7};
const int dependencies[numberOfTasks][maxDependencies] = {
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,5,7,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,5,6,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,13,14,17,-1,-1,-1,-1,-1,-1,-1,-1},
{10,16,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{9,12,22,25,-1,-1,-1,-1,-1,-1,-1,-1},
{9,10,12,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{20,25,27,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,13,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,18,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,22,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,18,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{13,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,6,20,25,-1,-1,-1,-1,-1,-1,-1},
{34,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,22,26,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,12,21,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,16,38,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,11,12,14,16,22,39,-1,-1,-1,-1,-1},
{15,24,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{15,26,28,43,-1,-1,-1,-1,-1,-1,-1,-1},
{4,13,21,26,31,34,37,40,-1,-1,-1,-1},
{27,32,39,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,40,43,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,8,20,28,35,42,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{13,16,22,28,30,34,37,39,-1,-1,-1,-1},
{4,11,17,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,2,15,25,26,48,50,51,54,-1,-1,-1},
{15,42,47,49,51,52,-1,-1,-1,-1,-1,-1},
{19,28,30,32,49,-1,-1,-1,-1,-1,-1,-1},
{37,40,44,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{34,35,38,46,-1,-1,-1,-1,-1,-1,-1,-1},
{14,23,40,41,43,50,51,-1,-1,-1,-1,-1},
{2,25,31,41,48,53,54,-1,-1,-1,-1,-1},
{3,23,38,39,44,-1,-1,-1,-1,-1,-1,-1},
{12,31,35,44,53,59,-1,-1,-1,-1,-1,-1},
{10,17,20,26,32,43,52,63,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{40,54,62,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{28,44,61,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{18,21,36,46,48,52,-1,-1,-1,-1,-1,-1},
{6,9,24,25,27,31,44,55,69,-1,-1,-1},
{4,9,21,37,69,-1,-1,-1,-1,-1,-1,-1},
{25,29,32,33,39,41,-1,-1,-1,-1,-1,-1},
{2,7,19,24,42,43,47,59,60,66,-1,-1},
{0,7,13,17,22,34,46,60,61,68,69,-1},
{10,15,20,33,46,48,50,51,59,-1,-1,-1},
{25,27,29,34,50,-1,-1,-1,-1,-1,-1,-1},
{18,22,26,38,56,-1,-1,-1,-1,-1,-1,-1},
{18,23,25,30,52,-1,-1,-1,-1,-1,-1,-1},
{1,10,31,66,-1,-1,-1,-1,-1,-1,-1,-1},
{13,15,44,58,70,73,-1,-1,-1,-1,-1,-1},
{6,31,44,47,67,69,-1,-1,-1,-1,-1,-1},
{26,32,44,52,59,62,69,-1,-1,-1,-1,-1},
{4,21,23,39,49,51,69,75,-1,-1,-1,-1},
{1,9,16,28,34,35,50,61,64,65,76,-1},
{8,10,11,15,28,37,45,50,66,-1,-1,-1},
{28,32,33,36,38,40,46,48,58,67,69,-1},
{0,4,9,19,20,23,26,49,52,53,76,77},
{12,16,22,29,31,60,63,74,-1,-1,-1,-1},
{3,8,22,48,69,79,-1,-1,-1,-1,-1,-1},
{4,31,32,36,61,75,79,-1,-1,-1,-1,-1},
{4,27,35,36,47,52,62,63,73,75,80,-1},
{15,43,60,84,85,-1,-1,-1,-1,-1,-1,-1},
{7,22,27,50,73,77,78,83,84,-1,-1,-1},
{8,16,18,22,25,34,40,72,-1,-1,-1,-1},
{8,62,68,77,-1,-1,-1,-1,-1,-1,-1,-1},
{14,22,41,43,58,70,77,-1,-1,-1,-1,-1},
{2,3,9,15,24,26,66,80,83,-1,-1,-1},
{6,15,21,24,26,41,43,50,64,68,82,83},
{2,5,34,35,38,58,59,66,-1,-1,-1,-1}};


int availableMachines = numberOfMachines;

// Typedefs
typedef int[0, numberOfChains - 1] chainId_t;

// Ints and Arrays
int numberOfChainsDone = 0;
int tasksDone[numberOfTasks];
bool runnableChains[numberOfChains];
bool assignmentChoice[numberOfChains];

// Channels
broadcast chan startMachines;
broadcast chan chainMachineChan[numberOfChains];
broadcast chan activateChains;</declaration>
	<template>
		<name x="5" y="5">Composer</name>
		<declaration>// Place local declarations here.
clock time;</declaration>
		<location id="id0" x="-102" y="-255">
			<name x="-112" y="-289">Init</name>
			<label kind="invariant" x="-246" y="-238">numberOfChainsDone &lt;= numberOfChains
            &amp;&amp; cost' == 1</label>
		</location>
		<location id="id1" x="331" y="-255">
			<name x="321" y="-289">Done</name>
		</location>
		<init ref="id0"/>
		<transition>
			<source ref="id0"/>
			<target ref="id1"/>
			<label kind="guard" x="-17" y="-289">numberOfChainsDone &gt;= numberOfChains</label>
		</transition>
	</template>
	<template>
		<name>Chain</name>
		<parameter>const chainId_t cid</parameter>
		<declaration>clock x;
const int chainSize = globalChainSize[cid];
int index = 0;

bool AllDependenciesDone()
{
    bool dependenciesDone = 1;
    int i;
    for (i = 0; i &lt; maxDependencies; i++)
    {
        int value = dependencies[globalChains[cid][index]][i];
        if (value == -1)
            return dependenciesDone;

        dependenciesDone &amp;= tasksDone[value];
    }
    return dependenciesDone;
}</declaration>
		<location id="id2" x="-68" y="-238">
			<name x="-78" y="-272">Idle</name>
		</location>
		<location id="id3" x="-76" y="51">
			<name x="-102" y="68">Running</name>
			<label kind="invariant" x="-178" y="85">x &lt;= durations[globalChains[cid][index]]</label>
		</location>
		<location id="id4" x="-450" y="-238">
			<name x="-460" y="-272">Done</name>
		</location>
		<init ref="id2"/>
		<transition>
			<source ref="id2"/>
			<target ref="id4"/>
			<label kind="guard" x="-399" y="-280">index &gt;= chainSize &amp;&amp;
x &gt;= durations[globalChains[cid][index - 1]]</label>
			<label kind="assignment" x="-399" y="-238">numberOfChainsDone++</label>
		</transition>
		<transition>
			<source ref="id3"/>
			<target ref="id2"/>
			<label kind="guard" x="-450" y="-127">x &gt;= durations[globalChains[cid][index]]</label>
			<label kind="assignment" x="-450" y="-110">availableMachines++,
tasksDone[globalChains[cid][index]] = 1,
index++</label>
			<nail x="-161" y="-85"/>
		</transition>
		<transition>
			<source ref="id2"/>
			<target ref="id3"/>
			<label kind="guard" x="34" y="-127">index &lt; chainSize &amp;&amp;
availableMachines &gt; 0 &amp;&amp; AllDependenciesDone()</label>
			<label kind="assignment" x="34" y="-85">availableMachines--,
x = 0</label>
			<nail x="17" y="-85"/>
		</transition>
	</template>
	<system>// Place template instantiations here.

// List one or more processes to be composed into a system.
system Composer, Chain;
    </system>
	<queries>
		<query>
			<formula>strategy TimeSchedule = minE (Composer.time) [&lt;=57] : &lt;&gt;Composer.Done</formula>
			<comment></comment>
		</query>
		<query>
			<formula>inf{Composer.Done} : Composer.time</formula>
			<comment></comment>
		</query>
		<query>
			<formula>A&lt;&gt; Composer.Done</formula>
			<comment></comment>
		</query>
		<query>
			<formula>E&lt;&gt; Composer.Done</formula>
			<comment></comment>
		</query>
	</queries>
</nta>
