<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/researchgroup/darts/uppaal/flat-1_2.dtd'>
<nta>
<declaration>//Variables
const int numberOfChains = 160;
const int numberOfTasks = 300;
const int numberOfMachines = 2;
const int maxDependencies = 5;
const int longestChain = 6;
const int globalChainSize[numberOfChains] = {2,2,1,3,3,2,2,2,1,1,1,5,4,4,1,2,6,2,4,4,5,4,2,3,1,1,1,2,2,1,2,2,1,2,3,1,4,3,2,4,2,5,2,5,1,2,2,4,3,2,2,1,2,1,1,3,3,3,3,4,1,3,2,1,1,2,3,1,2,1,4,2,2,1,4,2,1,4,3,3,1,3,2,2,2,2,1,1,2,2,1,1,2,4,1,1,2,2,2,2,2,1,1,1,1,2,1,1,1,1,2,1,3,2,3,1,1,1,1,1,1,1,1,1,1,1,2,2,1,1,1,1,1,1,1,1,1,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1};
const int globalChains[numberOfChains][longestChain] = {
{0,98,-1,-1,-1,-1},
{1,128,-1,-1,-1,-1},
{2,-1,-1,-1,-1,-1},
{3,51,82,-1,-1,-1},
{4,135,280,-1,-1,-1},
{5,155,-1,-1,-1,-1},
{6,36,-1,-1,-1,-1},
{7,118,-1,-1,-1,-1},
{8,-1,-1,-1,-1,-1},
{9,-1,-1,-1,-1,-1},
{10,-1,-1,-1,-1,-1},
{11,43,112,192,228,-1},
{12,40,217,247,-1,-1},
{13,109,123,179,-1,-1},
{14,-1,-1,-1,-1,-1},
{15,97,-1,-1,-1,-1},
{16,49,89,142,207,221},
{17,70,-1,-1,-1,-1},
{18,71,226,234,-1,-1},
{19,106,150,232,-1,-1},
{20,54,264,281,284,-1},
{21,126,144,190,-1,-1},
{22,121,-1,-1,-1,-1},
{23,37,55,-1,-1,-1},
{24,-1,-1,-1,-1,-1},
{25,-1,-1,-1,-1,-1},
{26,-1,-1,-1,-1,-1},
{27,211,-1,-1,-1,-1},
{28,66,-1,-1,-1,-1},
{29,-1,-1,-1,-1,-1},
{30,75,-1,-1,-1,-1},
{31,146,-1,-1,-1,-1},
{32,-1,-1,-1,-1,-1},
{33,80,-1,-1,-1,-1},
{34,209,291,-1,-1,-1},
{35,-1,-1,-1,-1,-1},
{38,68,148,172,-1,-1},
{39,52,249,-1,-1,-1},
{41,285,-1,-1,-1,-1},
{42,129,130,282,-1,-1},
{44,238,-1,-1,-1,-1},
{45,59,188,237,251,-1},
{46,125,-1,-1,-1,-1},
{47,168,185,244,277,-1},
{48,-1,-1,-1,-1,-1},
{50,60,-1,-1,-1,-1},
{53,214,-1,-1,-1,-1},
{56,93,174,269,-1,-1},
{57,137,276,-1,-1,-1},
{58,290,-1,-1,-1,-1},
{61,236,-1,-1,-1,-1},
{62,-1,-1,-1,-1,-1},
{63,74,-1,-1,-1,-1},
{64,-1,-1,-1,-1,-1},
{65,-1,-1,-1,-1,-1},
{67,120,139,-1,-1,-1},
{69,243,248,-1,-1,-1},
{72,239,268,-1,-1,-1},
{73,92,108,-1,-1,-1},
{76,231,260,273,-1,-1},
{77,-1,-1,-1,-1,-1},
{78,197,206,-1,-1,-1},
{79,110,-1,-1,-1,-1},
{81,-1,-1,-1,-1,-1},
{83,-1,-1,-1,-1,-1},
{84,133,-1,-1,-1,-1},
{85,250,279,-1,-1,-1},
{86,-1,-1,-1,-1,-1},
{87,267,-1,-1,-1,-1},
{88,-1,-1,-1,-1,-1},
{90,182,218,254,-1,-1},
{91,102,-1,-1,-1,-1},
{94,298,-1,-1,-1,-1},
{95,-1,-1,-1,-1,-1},
{96,159,200,270,-1,-1},
{99,272,-1,-1,-1,-1},
{100,-1,-1,-1,-1,-1},
{101,122,136,245,-1,-1},
{103,115,208,-1,-1,-1},
{104,157,215,-1,-1,-1},
{105,-1,-1,-1,-1,-1},
{107,213,289,-1,-1,-1},
{111,286,-1,-1,-1,-1},
{113,201,-1,-1,-1,-1},
{114,263,-1,-1,-1,-1},
{116,296,-1,-1,-1,-1},
{117,-1,-1,-1,-1,-1},
{119,-1,-1,-1,-1,-1},
{124,223,-1,-1,-1,-1},
{127,145,-1,-1,-1,-1},
{131,-1,-1,-1,-1,-1},
{132,-1,-1,-1,-1,-1},
{134,240,-1,-1,-1,-1},
{138,140,255,287,-1,-1},
{141,-1,-1,-1,-1,-1},
{143,-1,-1,-1,-1,-1},
{147,266,-1,-1,-1,-1},
{149,203,-1,-1,-1,-1},
{151,242,-1,-1,-1,-1},
{152,187,-1,-1,-1,-1},
{153,195,-1,-1,-1,-1},
{154,-1,-1,-1,-1,-1},
{156,-1,-1,-1,-1,-1},
{158,-1,-1,-1,-1,-1},
{160,-1,-1,-1,-1,-1},
{161,278,-1,-1,-1,-1},
{162,-1,-1,-1,-1,-1},
{163,-1,-1,-1,-1,-1},
{164,-1,-1,-1,-1,-1},
{165,-1,-1,-1,-1,-1},
{166,205,-1,-1,-1,-1},
{167,-1,-1,-1,-1,-1},
{169,177,274,-1,-1,-1},
{170,196,-1,-1,-1,-1},
{171,198,224,-1,-1,-1},
{173,-1,-1,-1,-1,-1},
{175,-1,-1,-1,-1,-1},
{176,-1,-1,-1,-1,-1},
{178,-1,-1,-1,-1,-1},
{180,-1,-1,-1,-1,-1},
{181,-1,-1,-1,-1,-1},
{183,-1,-1,-1,-1,-1},
{184,-1,-1,-1,-1,-1},
{186,-1,-1,-1,-1,-1},
{189,-1,-1,-1,-1,-1},
{191,-1,-1,-1,-1,-1},
{193,194,-1,-1,-1,-1},
{199,256,-1,-1,-1,-1},
{202,-1,-1,-1,-1,-1},
{204,-1,-1,-1,-1,-1},
{210,-1,-1,-1,-1,-1},
{212,-1,-1,-1,-1,-1},
{216,-1,-1,-1,-1,-1},
{219,-1,-1,-1,-1,-1},
{220,-1,-1,-1,-1,-1},
{222,-1,-1,-1,-1,-1},
{225,-1,-1,-1,-1,-1},
{227,295,-1,-1,-1,-1},
{229,262,-1,-1,-1,-1},
{230,-1,-1,-1,-1,-1},
{233,-1,-1,-1,-1,-1},
{235,-1,-1,-1,-1,-1},
{241,-1,-1,-1,-1,-1},
{246,-1,-1,-1,-1,-1},
{252,-1,-1,-1,-1,-1},
{253,-1,-1,-1,-1,-1},
{257,-1,-1,-1,-1,-1},
{258,-1,-1,-1,-1,-1},
{259,-1,-1,-1,-1,-1},
{261,-1,-1,-1,-1,-1},
{265,-1,-1,-1,-1,-1},
{271,-1,-1,-1,-1,-1},
{275,-1,-1,-1,-1,-1},
{283,-1,-1,-1,-1,-1},
{288,-1,-1,-1,-1,-1},
{292,-1,-1,-1,-1,-1},
{293,-1,-1,-1,-1,-1},
{294,-1,-1,-1,-1,-1},
{297,-1,-1,-1,-1,-1},
{299,-1,-1,-1,-1,-1}};
int chainDuration[numberOfChains] = {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1};
int durations[numberOfTasks] = {5,5,7,5,8,8,13,6,11,10,10,9,12,4,6,9,11,5,9,5,5,11,5,12,6,5,6,14,5,5,8,5,7,6,9,10,8,5,7,6,10,12,6,17,4,5,9,6,5,8,5,5,4,6,10,6,8,4,13,15,5,9,5,5,5,4,6,4,6,3,6,7,5,12,10,5,7,4,5,8,9,7,6,4,6,11,12,12,6,13,7,12,6,8,11,7,14,7,6,6,6,9,9,10,5,9,5,13,5,13,10,5,10,10,15,10,5,6,12,10,12,15,10,4,5,8,12,3,6,8,4,5,10,11,10,5,10,13,9,4,6,6,3,7,5,6,13,16,11,12,5,4,11,5,14,13,7,7,13,15,7,6,8,11,8,11,10,5,5,5,4,9,15,4,5,6,6,10,7,6,14,11,5,13,14,4,9,4,5,13,4,6,4,15,12,10,6,8,5,10,6,4,4,16,8,7,9,12,12,5,6,4,4,5,5,10,5,12,9,8,13,7,8,5,4,7,6,16,7,15,14,6,16,7,5,5,7,8,7,8,5,10,6,5,6,11,6,10,5,12,5,12,8,5,5,8,6,5,6,8,7,10,4,10,5,5,5,13,6,5,6,14,5,10,14,5,8,5,10,10,11,7,5,7,14,5,11,5,7,13,9,6,13,7,6,10,7,6,5,5};
const int dependencies[numberOfTasks][maxDependencies] = {
{-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1},
{6,25,-1,-1,-1},
{23,-1,-1,-1,-1},
{-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1},
{12,-1,-1,-1,-1},
{-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1},
{11,34,-1,-1,-1},
{-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1},
{16,-1,-1,-1,-1},
{-1,-1,-1,-1,-1},
{3,-1,-1,-1,-1},
{39,-1,-1,-1,-1},
{45,-1,-1,-1,-1},
{20,-1,-1,-1,-1},
{37,-1,-1,-1,-1},
{-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1},
{7,45,-1,-1,-1},
{50,-1,-1,-1,-1},
{-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1},
{28,-1,-1,-1,-1},
{-1,-1,-1,-1,-1},
{38,-1,-1,-1,-1},
{-1,-1,-1,-1,-1},
{17,-1,-1,-1,-1},
{18,-1,-1,-1,-1},
{-1,-1,-1,-1,-1},
{53,-1,-1,-1,-1},
{63,-1,-1,-1,-1},
{30,-1,-1,-1,-1},
{-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1},
{22,-1,-1,-1,-1},
{33,-1,-1,-1,-1},
{-1,-1,-1,-1,-1},
{51,57,-1,-1,-1},
{-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1},
{38,-1,-1,-1,-1},
{-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1},
{49,-1,-1,-1,-1},
{-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1},
{12,73,-1,-1,-1},
{12,56,-1,-1,-1},
{23,-1,-1,-1,-1},
{17,-1,-1,-1,-1},
{-1,-1,-1,-1,-1},
{15,90,-1,-1,-1},
{0,-1,-1,-1,-1},
{-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1},
{33,-1,-1,-1,-1},
{91,-1,-1,-1,-1},
{18,-1,-1,-1,-1},
{-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1},
{19,-1,-1,-1,-1},
{-1,-1,-1,-1,-1},
{92,-1,-1,-1,-1},
{13,-1,-1,-1,-1},
{79,103,-1,-1,-1},
{-1,-1,-1,-1,-1},
{43,-1,-1,-1,-1},
{38,-1,-1,-1,-1},
{63,-1,-1,-1,-1},
{103,-1,-1,-1,-1},
{-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1},
{7,51,-1,-1,-1},
{-1,-1,-1,-1,-1},
{67,-1,-1,-1,-1},
{22,43,86,88,-1},
{101,-1,-1,-1,-1},
{109,-1,-1,-1,-1},
{-1,-1,-1,-1,-1},
{46,-1,-1,-1,-1},
{21,-1,-1,-1,-1},
{53,-1,-1,-1,-1},
{1,33,120,-1,-1},
{42,64,111,-1,-1},
{129,-1,-1,-1,-1},
{-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1},
{84,-1,-1,-1,-1},
{-1,-1,-1,-1,-1},
{4,-1,-1,-1,-1},
{122,-1,-1,-1,-1},
{57,88,-1,-1,-1},
{-1,-1,-1,-1,-1},
{120,-1,-1,-1,-1},
{138,-1,-1,-1,-1},
{37,-1,-1,-1,-1},
{89,104,110,-1,-1},
{-1,-1,-1,-1,-1},
{25,126,-1,-1,-1},
{127,-1,-1,-1,-1},
{19,31,-1,-1,-1},
{-1,-1,-1,-1,-1},
{68,136,-1,-1,-1},
{31,-1,-1,-1,-1},
{64,106,-1,-1,-1},
{-1,-1,-1,-1,-1},
{15,-1,-1,-1,-1},
{49,-1,-1,-1,-1},
{-1,-1,-1,-1,-1},
{3,5,-1,-1,-1},
{-1,-1,-1,-1,-1},
{104,-1,-1,-1,-1},
{-1,-1,-1,-1,-1},
{89,96,-1,-1,-1},
{120,-1,-1,-1,-1},
{-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1},
{22,-1,-1,-1,-1},
{47,-1,-1,-1,-1},
{15,-1,-1,-1,-1},
{-1,-1,-1,-1,-1},
{126,-1,-1,-1,-1},
{12,148,-1,-1,-1},
{-1,-1,-1,-1,-1},
{3,93,133,-1,-1},
{127,-1,-1,-1,-1},
{-1,-1,-1,-1,-1},
{47,169,-1,-1,-1},
{91,-1,-1,-1,-1},
{123,-1,-1,-1,-1},
{-1,-1,-1,-1,-1},
{92,-1,-1,-1,-1},
{90,173,-1,-1,-1},
{-1,-1,-1,-1,-1},
{93,-1,-1,-1,-1},
{31,168,-1,-1,-1},
{-1,-1,-1,-1,-1},
{150,152,-1,-1,-1},
{59,151,-1,-1,-1},
{-1,-1,-1,-1,-1},
{75,144,187,-1,-1},
{103,-1,-1,-1,-1},
{112,175,-1,-1,-1},
{-1,-1,-1,-1,-1},
{193,-1,-1,-1,-1},
{153,-1,-1,-1,-1},
{170,-1,-1,-1,-1},
{78,83,194,-1,-1},
{53,171,-1,-1,-1},
{-1,-1,-1,-1,-1},
{114,159,161,-1,-1},
{113,119,-1,-1,-1},
{-1,-1,-1,-1,-1},
{144,149,153,193,-1},
{-1,-1,-1,-1,-1},
{166,-1,-1,-1,-1},
{87,171,197,-1,-1},
{45,85,142,-1,-1},
{38,114,115,-1,-1},
{34,162,174,191,-1},
{44,-1,-1,-1,-1},
{27,-1,-1,-1,-1},
{87,-1,-1,-1,-1},
{72,107,-1,-1,-1},
{30,53,76,108,194},
{157,195,-1,-1,-1},
{126,-1,-1,-1,-1},
{40,-1,-1,-1,-1},
{159,182,199,-1,-1},
{168,-1,-1,-1,-1},
{-1,-1,-1,-1,-1},
{207,-1,-1,-1,-1},
{127,-1,-1,-1,-1},
{124,-1,-1,-1,-1},
{198,-1,-1,-1,-1},
{78,-1,-1,-1,-1},
{71,122,175,-1,-1},
{113,-1,-1,-1,-1},
{67,192,195,223,-1},
{166,-1,-1,-1,-1},
{23,169,-1,-1,-1},
{76,162,201,-1,-1},
{109,150,208,-1,-1},
{-1,-1,-1,-1,-1},
{42,226,-1,-1,-1},
{19,-1,-1,-1,-1},
{61,-1,-1,-1,-1},
{16,120,188,-1,-1},
{44,89,237,-1,-1},
{61,72,83,164,-1},
{134,225,-1,-1,-1},
{-1,-1,-1,-1,-1},
{151,171,-1,-1,-1},
{22,69,-1,-1,-1},
{185,-1,-1,-1,-1},
{87,107,136,164,-1},
{11,-1,-1,-1,-1},
{57,92,132,166,217},
{243,-1,-1,-1,-1},
{52,-1,-1,-1,-1},
{85,94,195,237,-1},
{28,113,237,-1,-1},
{-1,-1,-1,-1,-1},
{19,-1,-1,-1,-1},
{15,218,-1,-1,-1},
{140,-1,-1,-1,-1},
{199,-1,-1,-1,-1},
{250,-1,-1,-1,-1},
{-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1},
{43,84,91,231,-1},
{150,-1,-1,-1,-1},
{168,229,257,-1,-1},
{114,-1,-1,-1,-1},
{54,76,-1,-1,-1},
{-1,-1,-1,-1,-1},
{147,-1,-1,-1,-1},
{16,87,169,-1,-1},
{178,239,-1,-1,-1},
{0,169,174,-1,-1},
{200,219,-1,-1,-1},
{-1,-1,-1,-1,-1},
{99,-1,-1,-1,-1},
{201,260,-1,-1,-1},
{177,-1,-1,-1,-1},
{-1,-1,-1,-1,-1},
{137,-1,-1,-1,-1},
{244,272,-1,-1,-1},
{161,191,-1,-1,-1},
{28,250,-1,-1,-1},
{135,163,262,278,-1},
{192,264,-1,-1,-1},
{130,-1,-1,-1,-1},
{-1,-1,-1,-1,-1},
{12,120,281,-1,-1},
{41,-1,-1,-1,-1},
{63,111,-1,-1,-1},
{246,255,260,-1,-1},
{144,-1,-1,-1,-1},
{42,213,-1,-1,-1},
{58,208,-1,-1,-1},
{104,173,209,218,226},
{-1,-1,-1,-1,-1},
{59,93,-1,-1,-1},
{227,-1,-1,-1,-1},
{130,227,-1,-1,-1},
{116,175,-1,-1,-1},
{-1,-1,-1,-1,-1},
{94,-1,-1,-1,-1},
{-1,-1,-1,-1,-1}};


int availableMachines = numberOfMachines;

// Typedefs
typedef int[0, numberOfChains - 1] chainId_t;

// Ints and Arrays
int numberOfChainsDone = 0;
int tasksDone[numberOfTasks];
bool runnableChains[numberOfChains];
bool assignmentChoice[numberOfChains];

// Channels
broadcast chan startMachines;
broadcast chan chainMachineChan[numberOfChains];
broadcast chan activateChains;</declaration>
	<template>
		<name x="5" y="5">Composer</name>
		<declaration>// Place local declarations here.
clock time;</declaration>
		<location id="id0" x="-102" y="-255">
			<name x="-112" y="-289">Init</name>
			<label kind="invariant" x="-246" y="-238">numberOfChainsDone &lt;= numberOfChains
            &amp;&amp; cost' == 1</label>
		</location>
		<location id="id1" x="331" y="-255">
			<name x="321" y="-289">Done</name>
		</location>
		<init ref="id0"/>
		<transition>
			<source ref="id0"/>
			<target ref="id1"/>
			<label kind="guard" x="-17" y="-289">numberOfChainsDone &gt;= numberOfChains</label>
		</transition>
	</template>
	<template>
		<name>Chain</name>
		<parameter>const chainId_t cid</parameter>
		<declaration>clock x;
const int chainSize = globalChainSize[cid];
int index = 0;

bool AllDependenciesDone()
{
    bool dependenciesDone = 1;
    int i;
    for (i = 0; i &lt; maxDependencies; i++)
    {
        int value = dependencies[globalChains[cid][index]][i];
        if (value == -1)
            return dependenciesDone;

        dependenciesDone &amp;= tasksDone[value];
    }
    return dependenciesDone;
}</declaration>
		<location id="id2" x="-68" y="-238">
			<name x="-78" y="-272">Idle</name>
		</location>
		<location id="id3" x="-76" y="51">
			<name x="-102" y="68">Running</name>
			<label kind="invariant" x="-178" y="85">x &lt;= durations[globalChains[cid][index]]</label>
		</location>
		<location id="id4" x="-450" y="-238">
			<name x="-460" y="-272">Done</name>
		</location>
		<init ref="id2"/>
		<transition>
			<source ref="id2"/>
			<target ref="id4"/>
			<label kind="guard" x="-399" y="-280">index &gt;= chainSize &amp;&amp;
x &gt;= durations[globalChains[cid][index - 1]]</label>
			<label kind="assignment" x="-399" y="-238">numberOfChainsDone++</label>
		</transition>
		<transition>
			<source ref="id3"/>
			<target ref="id2"/>
			<label kind="guard" x="-450" y="-127">x &gt;= durations[globalChains[cid][index]]</label>
			<label kind="assignment" x="-450" y="-110">availableMachines++,
tasksDone[globalChains[cid][index]] = 1,
index++</label>
			<nail x="-161" y="-85"/>
		</transition>
		<transition>
			<source ref="id2"/>
			<target ref="id3"/>
			<label kind="guard" x="34" y="-127">index &lt; chainSize &amp;&amp;
availableMachines &gt; 0 &amp;&amp; AllDependenciesDone()</label>
			<label kind="assignment" x="34" y="-85">availableMachines--,
x = 0</label>
			<nail x="17" y="-85"/>
		</transition>
	</template>
	<system>// Place template instantiations here.

// List one or more processes to be composed into a system.
system Composer, Chain;
    </system>
	<queries>
		<query>
			<formula>strategy TimeSchedule = minE (Composer.time) [&lt;=57] : &lt;&gt;Composer.Done</formula>
			<comment></comment>
		</query>
		<query>
			<formula>inf{Composer.Done} : Composer.time</formula>
			<comment></comment>
		</query>
		<query>
			<formula>A&lt;&gt; Composer.Done</formula>
			<comment></comment>
		</query>
		<query>
			<formula>E&lt;&gt; Composer.Done</formula>
			<comment></comment>
		</query>
	</queries>
</nta>
