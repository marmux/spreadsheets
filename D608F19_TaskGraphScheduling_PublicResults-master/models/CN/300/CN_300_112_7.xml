<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/researchgroup/darts/uppaal/flat-1_2.dtd'>
<nta>
<declaration>//Variables
const int numberOfChains = 162;
const int numberOfTasks = 300;
const int numberOfMachines = 7;
const int maxDependencies = 7;
const int longestChain = 7;
const int globalChainSize[numberOfChains] = {2,5,2,3,4,4,5,4,2,3,3,3,2,2,2,2,2,1,1,2,1,2,4,1,3,3,1,3,2,2,3,3,3,1,1,3,1,3,2,1,3,2,2,3,3,1,3,1,2,3,5,2,2,2,7,2,2,2,3,2,2,4,2,1,1,2,3,4,1,1,1,1,1,1,2,1,1,3,2,2,1,2,1,3,3,2,2,2,1,1,1,1,3,3,1,1,3,1,1,2,2,3,2,1,2,1,3,1,3,2,1,1,1,1,2,1,1,1,2,1,1,1,2,1,1,2,1,1,1,1,1,2,2,1,1,2,1,1,1,1,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1};
const int globalChains[numberOfChains][longestChain] = {
{0,181,-1,-1,-1,-1,-1},
{1,131,205,236,295,-1,-1},
{2,167,-1,-1,-1,-1,-1},
{3,44,184,-1,-1,-1,-1},
{4,73,155,172,-1,-1,-1},
{5,55,151,189,-1,-1,-1},
{6,46,76,248,270,-1,-1},
{7,95,157,299,-1,-1,-1},
{8,190,-1,-1,-1,-1,-1},
{9,173,201,-1,-1,-1,-1},
{10,208,246,-1,-1,-1,-1},
{11,15,209,-1,-1,-1,-1},
{12,285,-1,-1,-1,-1,-1},
{13,125,-1,-1,-1,-1,-1},
{14,31,-1,-1,-1,-1,-1},
{16,213,-1,-1,-1,-1,-1},
{17,252,-1,-1,-1,-1,-1},
{18,-1,-1,-1,-1,-1,-1},
{19,-1,-1,-1,-1,-1,-1},
{20,251,-1,-1,-1,-1,-1},
{21,-1,-1,-1,-1,-1,-1},
{22,296,-1,-1,-1,-1,-1},
{23,38,43,71,-1,-1,-1},
{24,-1,-1,-1,-1,-1,-1},
{25,179,242,-1,-1,-1,-1},
{26,64,122,-1,-1,-1,-1},
{27,-1,-1,-1,-1,-1,-1},
{28,268,282,-1,-1,-1,-1},
{29,166,-1,-1,-1,-1,-1},
{30,243,-1,-1,-1,-1,-1},
{32,94,240,-1,-1,-1,-1},
{33,187,269,-1,-1,-1,-1},
{34,81,193,-1,-1,-1,-1},
{35,-1,-1,-1,-1,-1,-1},
{36,-1,-1,-1,-1,-1,-1},
{37,169,241,-1,-1,-1,-1},
{39,-1,-1,-1,-1,-1,-1},
{40,87,175,-1,-1,-1,-1},
{41,217,-1,-1,-1,-1,-1},
{42,-1,-1,-1,-1,-1,-1},
{45,111,271,-1,-1,-1,-1},
{47,263,-1,-1,-1,-1,-1},
{48,139,-1,-1,-1,-1,-1},
{49,148,277,-1,-1,-1,-1},
{50,68,221,-1,-1,-1,-1},
{51,-1,-1,-1,-1,-1,-1},
{52,174,276,-1,-1,-1,-1},
{53,-1,-1,-1,-1,-1,-1},
{54,113,-1,-1,-1,-1,-1},
{56,107,121,-1,-1,-1,-1},
{57,150,177,232,255,-1,-1},
{58,293,-1,-1,-1,-1,-1},
{59,65,-1,-1,-1,-1,-1},
{60,100,-1,-1,-1,-1,-1},
{61,82,96,116,223,267,275},
{62,72,-1,-1,-1,-1,-1},
{63,233,-1,-1,-1,-1,-1},
{66,90,-1,-1,-1,-1,-1},
{67,109,130,-1,-1,-1,-1},
{69,164,-1,-1,-1,-1,-1},
{70,203,-1,-1,-1,-1,-1},
{74,135,265,284,-1,-1,-1},
{75,249,-1,-1,-1,-1,-1},
{77,-1,-1,-1,-1,-1,-1},
{78,-1,-1,-1,-1,-1,-1},
{79,254,-1,-1,-1,-1,-1},
{80,119,204,-1,-1,-1,-1},
{83,102,147,230,-1,-1,-1},
{84,-1,-1,-1,-1,-1,-1},
{85,-1,-1,-1,-1,-1,-1},
{86,-1,-1,-1,-1,-1,-1},
{88,-1,-1,-1,-1,-1,-1},
{89,-1,-1,-1,-1,-1,-1},
{91,-1,-1,-1,-1,-1,-1},
{92,123,-1,-1,-1,-1,-1},
{93,-1,-1,-1,-1,-1,-1},
{97,-1,-1,-1,-1,-1,-1},
{98,163,257,-1,-1,-1,-1},
{99,222,-1,-1,-1,-1,-1},
{101,105,-1,-1,-1,-1,-1},
{103,-1,-1,-1,-1,-1,-1},
{104,229,-1,-1,-1,-1,-1},
{106,-1,-1,-1,-1,-1,-1},
{108,140,227,-1,-1,-1,-1},
{110,117,152,-1,-1,-1,-1},
{112,129,-1,-1,-1,-1,-1},
{114,244,-1,-1,-1,-1,-1},
{115,216,-1,-1,-1,-1,-1},
{118,-1,-1,-1,-1,-1,-1},
{120,-1,-1,-1,-1,-1,-1},
{124,-1,-1,-1,-1,-1,-1},
{126,-1,-1,-1,-1,-1,-1},
{127,210,273,-1,-1,-1,-1},
{128,185,219,-1,-1,-1,-1},
{132,-1,-1,-1,-1,-1,-1},
{133,-1,-1,-1,-1,-1,-1},
{134,186,202,-1,-1,-1,-1},
{136,-1,-1,-1,-1,-1,-1},
{137,-1,-1,-1,-1,-1,-1},
{138,199,-1,-1,-1,-1,-1},
{141,176,-1,-1,-1,-1,-1},
{142,171,207,-1,-1,-1,-1},
{143,231,-1,-1,-1,-1,-1},
{144,-1,-1,-1,-1,-1,-1},
{145,266,-1,-1,-1,-1,-1},
{146,-1,-1,-1,-1,-1,-1},
{149,215,237,-1,-1,-1,-1},
{153,-1,-1,-1,-1,-1,-1},
{154,206,260,-1,-1,-1,-1},
{156,228,-1,-1,-1,-1,-1},
{158,-1,-1,-1,-1,-1,-1},
{159,-1,-1,-1,-1,-1,-1},
{160,-1,-1,-1,-1,-1,-1},
{161,-1,-1,-1,-1,-1,-1},
{162,272,-1,-1,-1,-1,-1},
{165,-1,-1,-1,-1,-1,-1},
{168,-1,-1,-1,-1,-1,-1},
{170,-1,-1,-1,-1,-1,-1},
{178,288,-1,-1,-1,-1,-1},
{180,-1,-1,-1,-1,-1,-1},
{182,-1,-1,-1,-1,-1,-1},
{183,-1,-1,-1,-1,-1,-1},
{188,290,-1,-1,-1,-1,-1},
{191,-1,-1,-1,-1,-1,-1},
{192,-1,-1,-1,-1,-1,-1},
{194,264,-1,-1,-1,-1,-1},
{195,-1,-1,-1,-1,-1,-1},
{196,-1,-1,-1,-1,-1,-1},
{197,-1,-1,-1,-1,-1,-1},
{198,-1,-1,-1,-1,-1,-1},
{200,-1,-1,-1,-1,-1,-1},
{211,291,-1,-1,-1,-1,-1},
{212,298,-1,-1,-1,-1,-1},
{214,-1,-1,-1,-1,-1,-1},
{218,-1,-1,-1,-1,-1,-1},
{220,247,-1,-1,-1,-1,-1},
{224,-1,-1,-1,-1,-1,-1},
{225,-1,-1,-1,-1,-1,-1},
{226,-1,-1,-1,-1,-1,-1},
{234,-1,-1,-1,-1,-1,-1},
{235,245,-1,-1,-1,-1,-1},
{238,-1,-1,-1,-1,-1,-1},
{239,-1,-1,-1,-1,-1,-1},
{250,-1,-1,-1,-1,-1,-1},
{253,-1,-1,-1,-1,-1,-1},
{256,-1,-1,-1,-1,-1,-1},
{258,-1,-1,-1,-1,-1,-1},
{259,-1,-1,-1,-1,-1,-1},
{261,-1,-1,-1,-1,-1,-1},
{262,-1,-1,-1,-1,-1,-1},
{274,-1,-1,-1,-1,-1,-1},
{278,-1,-1,-1,-1,-1,-1},
{279,-1,-1,-1,-1,-1,-1},
{280,-1,-1,-1,-1,-1,-1},
{281,-1,-1,-1,-1,-1,-1},
{283,-1,-1,-1,-1,-1,-1},
{286,-1,-1,-1,-1,-1,-1},
{287,-1,-1,-1,-1,-1,-1},
{289,-1,-1,-1,-1,-1,-1},
{292,-1,-1,-1,-1,-1,-1},
{294,-1,-1,-1,-1,-1,-1},
{297,-1,-1,-1,-1,-1,-1}};
int chainDuration[numberOfChains] = {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1};
int durations[numberOfTasks] = {5,4,7,7,7,6,5,5,7,6,3,5,5,4,6,4,6,5,4,5,5,7,6,5,5,5,5,5,5,4,6,3,5,7,6,7,5,6,4,6,4,5,6,8,6,4,5,5,6,6,7,3,5,5,4,5,7,6,4,7,5,8,7,6,5,7,7,5,6,6,5,5,6,7,6,6,5,5,7,5,6,6,7,4,5,6,7,5,6,6,7,7,6,6,4,4,6,5,5,5,5,5,6,6,7,5,5,6,5,7,6,5,6,5,5,5,6,5,5,4,6,7,7,6,6,6,6,8,5,5,6,5,7,4,8,4,7,3,7,5,7,5,6,4,4,5,6,7,5,7,5,7,8,4,6,5,6,5,5,5,5,7,5,4,7,6,5,6,4,5,4,5,6,4,5,6,6,7,4,6,6,7,5,6,5,7,7,7,6,5,6,4,6,5,5,4,5,5,6,5,5,4,5,5,5,6,7,4,4,7,6,5,4,6,6,7,7,6,5,6,6,5,7,6,7,6,5,5,6,7,6,4,5,7,4,5,4,6,5,6,6,5,6,5,5,7,6,3,6,6,7,6,6,5,5,5,4,5,6,4,8,5,5,5,6,6,4,6,5,5,6,6,5,4,5,6,6,6,6,6,5,6,5,6,5,6,6,7,5,4,7,4,6,4,6,6,4,7,6,5};
const int dependencies[numberOfTasks][maxDependencies] = {
{-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1},
{11,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1},
{14,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1},
{23,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1},
{38,-1,-1,-1,-1,-1,-1},
{3,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1},
{6,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1},
{5,-1,-1,-1,-1,-1,-1},
{3,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1},
{6,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1},
{6,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1},
{26,-1,-1,-1,-1,-1,-1},
{59,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1},
{50,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1},
{43,-1,-1,-1,-1,-1,-1},
{62,-1,-1,-1,-1,-1,-1},
{4,37,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1},
{46,48,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1},
{58,-1,-1,-1,-1,-1,-1},
{34,-1,-1,-1,-1,-1,-1},
{61,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1},
{40,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1},
{66,-1,-1,-1,-1,-1,-1},
{59,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1},
{32,80,-1,-1,-1,-1,-1},
{7,-1,-1,-1,-1,-1,-1},
{82,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1},
{60,79,-1,-1,-1,-1,-1},
{59,-1,-1,-1,-1,-1,-1},
{83,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1},
{60,-1,-1,-1,-1,-1,-1},
{101,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1},
{56,70,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1},
{41,67,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1},
{45,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1},
{54,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1},
{23,96,-1,-1,-1,-1,-1},
{110,-1,-1,-1,-1,-1,-1},
{11,-1,-1,-1,-1,-1,-1},
{30,80,-1,-1,-1,-1,-1},
{47,-1,-1,-1,-1,-1,-1},
{70,96,107,-1,-1,-1,-1},
{7,64,94,-1,-1,-1,-1},
{92,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1},
{13,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1},
{112,-1,-1,-1,-1,-1,-1},
{14,109,-1,-1,-1,-1,-1},
{1,76,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1},
{3,-1,-1,-1,-1,-1,-1},
{74,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1},
{48,-1,-1,-1,-1,-1,-1},
{28,108,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1},
{102,-1,-1,-1,-1,-1,-1},
{49,-1,-1,-1,-1,-1,-1},
{14,-1,-1,-1,-1,-1,-1},
{57,108,-1,-1,-1,-1,-1},
{55,123,-1,-1,-1,-1,-1},
{117,-1,-1,-1,-1,-1,-1},
{59,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1},
{73,-1,-1,-1,-1,-1,-1},
{80,-1,-1,-1,-1,-1,-1},
{95,-1,-1,-1,-1,-1,-1},
{101,-1,-1,-1,-1,-1,-1},
{107,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1},
{28,-1,-1,-1,-1,-1,-1},
{57,-1,-1,-1,-1,-1,-1},
{56,98,-1,-1,-1,-1,-1},
{69,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1},
{29,72,107,-1,-1,-1,-1},
{2,16,94,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1},
{28,37,117,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1},
{142,-1,-1,-1,-1,-1,-1},
{142,155,-1,-1,-1,-1,-1},
{9,-1,-1,-1,-1,-1,-1},
{3,52,-1,-1,-1,-1,-1},
{59,87,94,-1,-1,-1,-1},
{48,141,-1,-1,-1,-1,-1},
{150,160,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1},
{25,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1},
{0,38,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1},
{44,94,-1,-1,-1,-1,-1},
{128,-1,-1,-1,-1,-1,-1},
{4,134,-1,-1,-1,-1,-1},
{33,87,163,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1},
{140,151,-1,-1,-1,-1,-1},
{8,45,46,106,124,-1,-1},
{-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1},
{64,81,151,161,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1},
{68,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1},
{138,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1},
{46,173,-1,-1,-1,-1,-1},
{186,-1,-1,-1,-1,-1,-1},
{28,70,165,-1,-1,-1,-1},
{11,83,97,115,119,-1,-1},
{131,-1,-1,-1,-1,-1,-1},
{55,154,-1,-1,-1,-1,-1},
{69,156,171,-1,-1,-1,-1},
{10,-1,-1,-1,-1,-1,-1},
{15,-1,-1,-1,-1,-1,-1},
{127,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1},
{16,138,183,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1},
{149,-1,-1,-1,-1,-1,-1},
{56,115,170,192,-1,-1,-1},
{41,131,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1},
{66,185,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1},
{45,68,156,168,204,-1,-1},
{46,99,160,-1,-1,-1,-1},
{116,-1,-1,-1,-1,-1,-1},
{128,178,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1},
{37,140,-1,-1,-1,-1,-1},
{127,156,-1,-1,-1,-1,-1},
{104,-1,-1,-1,-1,-1,-1},
{147,-1,-1,-1,-1,-1,-1},
{143,173,-1,-1,-1,-1,-1},
{158,177,227,-1,-1,-1,-1},
{63,204,222,-1,-1,-1,-1},
{10,70,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1},
{205,-1,-1,-1,-1,-1,-1},
{98,215,-1,-1,-1,-1,-1},
{54,-1,-1,-1,-1,-1,-1},
{87,-1,-1,-1,-1,-1,-1},
{94,155,169,-1,-1,-1,-1},
{169,-1,-1,-1,-1,-1,-1},
{171,179,-1,-1,-1,-1,-1},
{6,30,61,162,168,-1,-1},
{50,114,-1,-1,-1,-1,-1},
{150,235,-1,-1,-1,-1,-1},
{208,-1,-1,-1,-1,-1,-1},
{4,215,220,-1,-1,-1,-1},
{76,203,-1,-1,-1,-1,-1},
{75,160,237,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1},
{20,81,113,145,159,-1,-1},
{17,-1,-1,-1,-1,-1,-1},
{94,178,-1,-1,-1,-1,-1},
{79,97,-1,-1,-1,-1,-1},
{128,232,250,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1},
{37,163,-1,-1,-1,-1,-1},
{117,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1},
{206,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1},
{25,-1,-1,-1,-1,-1,-1},
{13,47,133,238,-1,-1,-1},
{194,-1,-1,-1,-1,-1,-1},
{135,192,-1,-1,-1,-1,-1},
{145,-1,-1,-1,-1,-1,-1},
{223,-1,-1,-1,-1,-1,-1},
{28,43,102,112,183,215,220},
{48,187,-1,-1,-1,-1,-1},
{84,102,248,-1,-1,-1,-1},
{90,94,111,-1,-1,-1,-1},
{46,162,-1,-1,-1,-1,-1},
{210,234,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1},
{102,207,267,-1,-1,-1,-1},
{174,195,-1,-1,-1,-1,-1},
{148,258,-1,-1,-1,-1,-1},
{29,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1},
{95,-1,-1,-1,-1,-1,-1},
{114,-1,-1,-1,-1,-1,-1},
{196,268,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1},
{63,195,265,-1,-1,-1,-1},
{12,30,114,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1},
{69,-1,-1,-1,-1,-1,-1},
{13,178,215,-1,-1,-1,-1},
{104,-1,-1,-1,-1,-1,-1},
{188,-1,-1,-1,-1,-1,-1},
{211,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1},
{58,232,-1,-1,-1,-1,-1},
{57,141,-1,-1,-1,-1,-1},
{65,236,-1,-1,-1,-1,-1},
{22,60,62,85,255,-1,-1},
{28,-1,-1,-1,-1,-1,-1},
{212,-1,-1,-1,-1,-1,-1},
{56,120,157,-1,-1,-1,-1}};


int availableMachines = numberOfMachines;

// Typedefs
typedef int[0, numberOfChains - 1] chainId_t;

// Ints and Arrays
int numberOfChainsDone = 0;
int tasksDone[numberOfTasks];
bool runnableChains[numberOfChains];
bool assignmentChoice[numberOfChains];

// Channels
broadcast chan startMachines;
broadcast chan chainMachineChan[numberOfChains];
broadcast chan activateChains;</declaration>
	<template>
		<name x="5" y="5">Composer</name>
		<declaration>// Place local declarations here.
clock time;</declaration>
		<location id="id0" x="-102" y="-255">
			<name x="-112" y="-289">Init</name>
			<label kind="invariant" x="-246" y="-238">numberOfChainsDone &lt;= numberOfChains
            &amp;&amp; cost' == 1</label>
		</location>
		<location id="id1" x="331" y="-255">
			<name x="321" y="-289">Done</name>
		</location>
		<init ref="id0"/>
		<transition>
			<source ref="id0"/>
			<target ref="id1"/>
			<label kind="guard" x="-17" y="-289">numberOfChainsDone &gt;= numberOfChains</label>
		</transition>
	</template>
	<template>
		<name>Chain</name>
		<parameter>const chainId_t cid</parameter>
		<declaration>clock x;
const int chainSize = globalChainSize[cid];
int index = 0;

bool AllDependenciesDone()
{
    bool dependenciesDone = 1;
    int i;
    for (i = 0; i &lt; maxDependencies; i++)
    {
        int value = dependencies[globalChains[cid][index]][i];
        if (value == -1)
            return dependenciesDone;

        dependenciesDone &amp;= tasksDone[value];
    }
    return dependenciesDone;
}</declaration>
		<location id="id2" x="-68" y="-238">
			<name x="-78" y="-272">Idle</name>
		</location>
		<location id="id3" x="-76" y="51">
			<name x="-102" y="68">Running</name>
			<label kind="invariant" x="-178" y="85">x &lt;= durations[globalChains[cid][index]]</label>
		</location>
		<location id="id4" x="-450" y="-238">
			<name x="-460" y="-272">Done</name>
		</location>
		<init ref="id2"/>
		<transition>
			<source ref="id2"/>
			<target ref="id4"/>
			<label kind="guard" x="-399" y="-280">index &gt;= chainSize &amp;&amp;
x &gt;= durations[globalChains[cid][index - 1]]</label>
			<label kind="assignment" x="-399" y="-238">numberOfChainsDone++</label>
		</transition>
		<transition>
			<source ref="id3"/>
			<target ref="id2"/>
			<label kind="guard" x="-450" y="-127">x &gt;= durations[globalChains[cid][index]]</label>
			<label kind="assignment" x="-450" y="-110">availableMachines++,
tasksDone[globalChains[cid][index]] = 1,
index++</label>
			<nail x="-161" y="-85"/>
		</transition>
		<transition>
			<source ref="id2"/>
			<target ref="id3"/>
			<label kind="guard" x="34" y="-127">index &lt; chainSize &amp;&amp;
availableMachines &gt; 0 &amp;&amp; AllDependenciesDone()</label>
			<label kind="assignment" x="34" y="-85">availableMachines--,
x = 0</label>
			<nail x="17" y="-85"/>
		</transition>
	</template>
	<system>// Place template instantiations here.

// List one or more processes to be composed into a system.
system Composer, Chain;
    </system>
	<queries>
		<query>
			<formula>strategy TimeSchedule = minE (Composer.time) [&lt;=57] : &lt;&gt;Composer.Done</formula>
			<comment></comment>
		</query>
		<query>
			<formula>inf{Composer.Done} : Composer.time</formula>
			<comment></comment>
		</query>
		<query>
			<formula>A&lt;&gt; Composer.Done</formula>
			<comment></comment>
		</query>
		<query>
			<formula>E&lt;&gt; Composer.Done</formula>
			<comment></comment>
		</query>
	</queries>
</nta>
