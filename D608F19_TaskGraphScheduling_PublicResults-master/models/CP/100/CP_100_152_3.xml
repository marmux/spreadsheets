<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/researchgroup/darts/uppaal/flat-1_2.dtd'>
<nta>
<declaration>//Variables
const int numberOfChains = 45;
const int numberOfTasks = 100;
const int numberOfMachines = 3;
const int maxDependencies = 8;
const int longestChain = 6;
const int globalChainSize[numberOfChains] = {4,2,2,2,2,3,5,2,1,5,3,6,2,2,5,4,2,3,1,2,2,2,2,2,3,3,3,1,2,1,1,1,1,2,2,1,3,1,1,1,1,1,1,2,2};
const int globalChains[numberOfChains][longestChain] = {
{0,2,60,70,-1,-1},
{1,93,-1,-1,-1,-1},
{3,90,-1,-1,-1,-1},
{4,99,-1,-1,-1,-1},
{5,79,-1,-1,-1,-1},
{6,9,62,-1,-1,-1},
{7,31,45,77,87,-1},
{8,89,-1,-1,-1,-1},
{10,-1,-1,-1,-1,-1},
{11,14,30,56,61,-1},
{12,17,88,-1,-1,-1},
{13,41,71,80,84,96},
{15,97,-1,-1,-1,-1},
{16,86,-1,-1,-1,-1},
{18,19,25,54,74,-1},
{20,39,53,98,-1,-1},
{21,65,-1,-1,-1,-1},
{22,68,91,-1,-1,-1},
{23,-1,-1,-1,-1,-1},
{24,52,-1,-1,-1,-1},
{26,95,-1,-1,-1,-1},
{27,92,-1,-1,-1,-1},
{28,78,-1,-1,-1,-1},
{29,43,-1,-1,-1,-1},
{32,51,76,-1,-1,-1},
{33,40,94,-1,-1,-1},
{34,42,58,-1,-1,-1},
{35,-1,-1,-1,-1,-1},
{36,85,-1,-1,-1,-1},
{37,-1,-1,-1,-1,-1},
{38,-1,-1,-1,-1,-1},
{44,-1,-1,-1,-1,-1},
{46,-1,-1,-1,-1,-1},
{47,82,-1,-1,-1,-1},
{48,81,-1,-1,-1,-1},
{49,-1,-1,-1,-1,-1},
{50,57,83,-1,-1,-1},
{55,-1,-1,-1,-1,-1},
{59,-1,-1,-1,-1,-1},
{63,-1,-1,-1,-1,-1},
{64,-1,-1,-1,-1,-1},
{66,-1,-1,-1,-1,-1},
{67,-1,-1,-1,-1,-1},
{69,72,-1,-1,-1,-1},
{73,75,-1,-1,-1,-1}};
int chainDuration[numberOfChains] = {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1};
int durations[numberOfTasks] = {4,7,4,10,10,8,7,15,8,6,6,10,8,18,20,5,1,3,2,10,11,5,4,9,3,8,9,7,19,8,10,6,7,3,5,11,15,2,4,19,10,6,5,17,7,13,12,5,5,9,8,8,10,10,10,12,12,7,4,4,2,10,15,18,5,7,1,10,4,20,8,8,16,1,16,20,3,16,6,9,9,16,7,5,18,7,9,7,5,4,13,10,6,12,3,20,15,19,9,4};
const int dependencies[numberOfTasks][maxDependencies] = {
{-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1},
{5,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1},
{6,-1,-1,-1,-1,-1,-1,-1},
{7,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1},
{11,12,13,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1},
{12,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1},
{12,18,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1},
{4,15,19,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1},
{16,-1,-1,-1,-1,-1,-1,-1},
{24,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1},
{11,14,-1,-1,-1,-1,-1,-1},
{1,7,-1,-1,-1,-1,-1,-1},
{0,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1},
{32,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1},
{16,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1},
{20,-1,-1,-1,-1,-1,-1,-1},
{12,33,-1,-1,-1,-1,-1,-1},
{13,40,-1,-1,-1,-1,-1,-1},
{20,34,-1,-1,-1,-1,-1,-1},
{29,-1,-1,-1,-1,-1,-1,-1},
{28,-1,-1,-1,-1,-1,-1,-1},
{31,43,-1,-1,-1,-1,-1,-1},
{17,33,-1,-1,-1,-1,-1,-1},
{31,-1,-1,-1,-1,-1,-1,-1},
{8,-1,-1,-1,-1,-1,-1,-1},
{8,19,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1},
{20,32,-1,-1,-1,-1,-1,-1},
{13,24,35,-1,-1,-1,-1,-1},
{5,36,39,-1,-1,-1,-1,-1},
{8,25,27,47,-1,-1,-1,-1},
{31,32,-1,-1,-1,-1,-1,-1},
{13,14,27,28,30,35,50,53},
{50,-1,-1,-1,-1,-1,-1,-1},
{12,35,42,-1,-1,-1,-1,-1},
{21,-1,-1,-1,-1,-1,-1,-1},
{2,31,-1,-1,-1,-1,-1,-1},
{4,46,56,-1,-1,-1,-1,-1},
{9,28,42,-1,-1,-1,-1,-1},
{15,-1,-1,-1,-1,-1,-1,-1},
{41,51,-1,-1,-1,-1,-1,-1},
{5,21,55,-1,-1,-1,-1,-1},
{18,-1,-1,-1,-1,-1,-1,-1},
{8,15,-1,-1,-1,-1,-1,-1},
{18,22,44,-1,-1,-1,-1,-1},
{8,-1,-1,-1,-1,-1,-1,-1},
{12,36,47,50,60,-1,-1,-1},
{11,41,-1,-1,-1,-1,-1,-1},
{28,69,-1,-1,-1,-1,-1,-1},
{29,-1,-1,-1,-1,-1,-1,-1},
{54,56,-1,-1,-1,-1,-1,-1},
{29,73,-1,-1,-1,-1,-1,-1},
{15,39,51,55,69,-1,-1,-1},
{45,61,64,72,-1,-1,-1,-1},
{6,22,28,-1,-1,-1,-1,-1},
{0,5,63,64,-1,-1,-1,-1},
{11,37,57,71,-1,-1,-1,-1},
{2,48,49,56,59,-1,-1,-1},
{47,68,73,75,80,-1,-1,-1},
{53,57,-1,-1,-1,-1,-1,-1},
{5,7,16,29,50,80,-1,-1},
{28,36,-1,-1,-1,-1,-1,-1},
{0,16,22,32,69,-1,-1,-1},
{9,46,47,77,-1,-1,-1,-1},
{0,17,29,76,-1,-1,-1,-1},
{5,8,41,-1,-1,-1,-1,-1},
{3,35,45,-1,-1,-1,-1,-1},
{8,17,48,68,82,-1,-1,-1},
{27,-1,-1,-1,-1,-1,-1,-1},
{0,1,30,40,41,61,-1,-1},
{40,-1,-1,-1,-1,-1,-1,-1},
{26,54,82,-1,-1,-1,-1,-1},
{28,84,-1,-1,-1,-1,-1,-1},
{8,15,38,80,-1,-1,-1,-1},
{13,47,52,53,57,58,-1,-1},
{2,4,97,-1,-1,-1,-1,-1}};


// Typedefs
typedef int[0, numberOfChains - 1] chainId_t;

// Ints and Arrays
int numberOfChainsDone = 0;
int tasksDone[numberOfTasks];
bool runnableChains[numberOfChains];
int Machines = numberOfMachines;

// Channels
broadcast chan startMachines;
broadcast chan chainMachineChan[numberOfChains];
broadcast chan activateChains;
broadcast chan ChainDone[numberOfChains];</declaration><template><name x="5" y="5">Composer</name><declaration>// Place local declarations here.
clock time;</declaration><location id="id0" x="-102" y="-255"><name x="-112" y="-289">Init</name><label kind="invariant" x="-246" y="-238">numberOfChainsDone &lt;= numberOfChains
&amp;&amp; cost' == 1</label></location><location id="id1" x="331" y="-255"><name x="321" y="-289">Done</name></location><init ref="id0"/><transition><source ref="id0"/><target ref="id1"/><label kind="guard" x="-17" y="-289">numberOfChainsDone &gt;= numberOfChains</label></transition></template><template><name>Chain</name><parameter>const chainId_t cid</parameter><declaration>clock x;
const int chainSize = globalChainSize[cid];
int index = 0;
int TimeUnit = 2;

bool AllDependenciesDone()
{
    bool dependenciesDone = 1;
    int i;
    for (i = 0; i &lt; maxDependencies; i++)
    {
        int value = dependencies[globalChains[cid][index]][i];
        if (value == -1)
            return dependenciesDone;

        dependenciesDone &amp;= tasksDone[value];
    }
    return dependenciesDone;
}

void DecrementWork(int workDone)
{
    int currentDuration = durations[globalChains[cid][index]];

    if (workDone &gt; currentDuration)
        durations[globalChains[cid][index]] = 0;
    else
        durations[globalChains[cid][index]] -= workDone;
}</declaration><location id="id2" x="-68" y="-238"><name x="-78" y="-272">Idle</name></location><location id="id3" x="-68" y="51"><name x="-93" y="68">Running</name><label kind="invariant" x="-127" y="85">x &lt;= chainDuration[cid]</label></location><location id="id4" x="-399" y="-238"><name x="-409" y="-272">Done</name></location><init ref="id2"/><transition><source ref="id3"/><target ref="id2"/><label kind="select" x="-59" y="-119">chain_id : chainId_t</label><label kind="synchronisation" x="-59" y="-102">ChainDone[chain_id]?</label><label kind="assignment" x="-59" y="-85">DecrementWork(chainDuration[chain_id]),
Machines++</label></transition><transition><source ref="id2"/><target ref="id4"/><label kind="guard" x="-357" y="-280">index &gt;= chainSize</label><label kind="assignment" x="-357" y="-263">numberOfChainsDone++</label></transition><transition><source ref="id3"/><target ref="id2"/><label kind="guard" x="-433" y="-119">x &gt;= chainDuration[cid]</label><label kind="synchronisation" x="-433" y="-102">ChainDone[cid]!</label><label kind="assignment" x="-433" y="-85">Machines++,
tasksDone[globalChains[cid][index]] = 1,
index++</label><nail x="-170" y="-8"/><nail x="-170" y="-170"/></transition><transition><source ref="id2"/><target ref="id3"/><label kind="guard" x="136" y="-238">index &lt; chainSize &amp;&amp;
Machines &gt; 0 &amp;&amp; AllDependenciesDone()</label><label kind="assignment" x="136" y="-204">chainDuration[cid] = durations[globalChains[cid][index]],
Machines--,
x = 0</label><nail x="127" y="-238"/><nail x="127" y="51"/></transition></template><system>// Place template instantiations here.

// List one or more processes to be composed into a system.
system Composer, Chain;
    </system></nta>
