<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/researchgroup/darts/uppaal/flat-1_2.dtd'>
<nta>
<declaration>//Variables
const int numberOfChains = 30;
const int numberOfTasks = 100;
const int numberOfMachines = 11;
const int maxDependencies = 22;
const int longestChain = 10;
const int globalChainSize[numberOfChains] = {10,5,4,3,5,5,10,4,4,4,5,4,2,4,2,3,2,2,4,2,2,3,1,2,2,1,1,2,1,1};
const int globalChains[numberOfChains][longestChain] = {
{0,4,7,16,35,72,74,75,94,95},
{1,19,77,82,83,-1,-1,-1,-1,-1},
{2,33,85,99,-1,-1,-1,-1,-1,-1},
{3,45,98,-1,-1,-1,-1,-1,-1,-1},
{5,41,79,84,86,-1,-1,-1,-1,-1},
{6,64,87,90,96,-1,-1,-1,-1,-1},
{8,23,38,50,67,68,73,76,91,97},
{9,55,56,69,-1,-1,-1,-1,-1,-1},
{10,51,80,88,-1,-1,-1,-1,-1,-1},
{11,57,92,93,-1,-1,-1,-1,-1,-1},
{12,27,40,58,78,-1,-1,-1,-1,-1},
{13,18,53,81,-1,-1,-1,-1,-1,-1},
{14,63,-1,-1,-1,-1,-1,-1,-1,-1},
{15,49,62,71,-1,-1,-1,-1,-1,-1},
{17,66,-1,-1,-1,-1,-1,-1,-1,-1},
{20,26,65,-1,-1,-1,-1,-1,-1,-1},
{21,70,-1,-1,-1,-1,-1,-1,-1,-1},
{22,47,-1,-1,-1,-1,-1,-1,-1,-1},
{24,34,61,89,-1,-1,-1,-1,-1,-1},
{25,46,-1,-1,-1,-1,-1,-1,-1,-1},
{28,60,-1,-1,-1,-1,-1,-1,-1,-1},
{29,32,59,-1,-1,-1,-1,-1,-1,-1},
{30,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{31,54,-1,-1,-1,-1,-1,-1,-1,-1},
{36,52,-1,-1,-1,-1,-1,-1,-1,-1},
{37,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{39,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{42,43,-1,-1,-1,-1,-1,-1,-1,-1},
{44,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{48,-1,-1,-1,-1,-1,-1,-1,-1,-1}};
int chainDuration[numberOfChains] = {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1};
int durations[numberOfTasks] = {26,3,23,6,1,3,1,9,20,28,16,2,25,8,2,1,24,4,4,1,1,39,6,2,12,2,6,3,30,2,11,4,2,14,1,1,34,2,4,28,4,3,20,9,2,8,8,32,17,6,3,1,1,5,13,5,5,5,4,4,7,7,14,26,4,2,1,3,6,30,7,8,13,4,9,29,13,2,7,43,3,7,8,2,6,17,1,3,5,6,6,1,3,3,2,8,17,5,14,1};
const int dependencies[numberOfTasks][maxDependencies] = {
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,3,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,2,5,10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,10,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,3,4,7,13,15,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,8,9,13,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,4,8,16,17,18,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,3,14,15,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,3,9,11,14,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,11,17,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,2,5,8,9,18,22,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{18,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{19,23,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,7,12,20,23,25,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,5,10,12,17,22,23,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{15,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,19,28,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,18,29,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,8,17,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,13,17,23,29,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,9,14,16,17,19,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,5,10,14,20,24,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,2,7,9,13,16,25,27,31,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{9,12,22,31,35,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,3,9,12,31,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,2,14,19,23,26,31,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,6,14,19,20,32,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,7,11,20,21,24,27,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,5,12,16,26,32,35,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,12,14,19,21,33,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{11,27,35,40,42,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{10,18,34,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,7,16,18,22,30,36,44,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,17,19,25,26,28,31,42,45,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,9,18,22,24,25,29,34,37,45,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,7,16,23,24,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,5,7,15,33,37,48,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,5,8,15,17,21,27,30,38,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,10,16,31,37,38,45,49,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{26,27,31,33,36,41,43,44,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,12,13,16,18,28,42,48,49,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,2,10,25,31,36,38,48,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,6,9,25,40,41,42,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,9,13,24,34,35,41,47,51,55,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,7,11,13,26,30,37,38,39,41,43,44,46,47,49,-1,-1,-1,-1,-1,-1,-1},
{12,20,23,30,34,40,41,48,51,53,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,9,17,20,24,27,32,37,42,48,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,9,19,25,28,29,40,52,57,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,5,14,18,24,34,57,59,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,6,9,11,31,32,34,41,42,49,52,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,2,14,18,34,36,38,45,46,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,5,6,7,20,22,24,28,30,38,50,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{20,26,27,37,39,48,51,54,56,62,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{12,16,17,21,25,27,37,47,53,61,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,9,22,23,35,45,50,65,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,9,19,22,36,38,41,52,54,67,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,3,14,16,21,28,38,39,44,47,54,56,67,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,14,19,21,22,29,37,47,56,67,68,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,2,28,35,40,49,52,57,59,62,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,7,13,15,16,22,35,48,52,57,69,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,5,23,24,27,45,46,49,58,61,65,66,68,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,3,20,23,24,25,33,34,47,48,57,63,66,67,70,71,72,73,-1,-1,-1,-1},
{0,12,17,18,19,20,29,36,37,41,44,46,47,60,62,66,67,74,-1,-1,-1,-1},
{2,20,21,25,29,30,32,37,39,41,43,45,53,73,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,10,19,20,29,40,51,56,70,72,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,20,40,49,51,58,61,63,68,76,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,9,21,24,27,32,33,34,36,40,41,48,50,55,61,74,-1,-1,-1,-1,-1,-1},
{18,21,25,29,34,50,51,55,64,73,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{22,34,37,39,45,48,53,57,70,76,79,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,5,16,21,52,57,64,77,81,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,3,5,18,35,36,37,45,57,66,74,76,78,80,82,-1,-1,-1,-1,-1,-1,-1},
{1,4,6,15,20,28,40,51,52,53,57,60,68,79,80,-1,-1,-1,-1,-1,-1,-1},
{0,5,11,13,19,20,31,33,37,55,58,68,69,73,82,-1,-1,-1,-1,-1,-1,-1},
{12,17,27,33,37,41,42,43,48,51,53,61,62,63,66,67,73,79,84,-1,-1,-1},
{26,30,36,37,40,48,50,54,61,64,79,80,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{17,32,67,76,80,84,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,7,19,28,29,39,44,45,61,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,10,12,30,34,39,41,50,58,62,87,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,6,8,9,18,32,44,52,59,76,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,8,11,20,23,25,26,43,47,57,59,66,70,74,-1,-1,-1,-1,-1,-1,-1,-1},
{4,39,40,52,66,87,92,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{12,17,26,29,31,32,35,36,40,43,45,47,50,55,56,74,75,79,83,85,86,87},
{0,9,12,18,20,43,47,50,56,65,67,69,72,76,85,94,-1,-1,-1,-1,-1,-1},
{1,5,9,12,17,27,36,39,41,51,59,60,68,90,-1,-1,-1,-1,-1,-1,-1,-1},
{14,34,37,42,48,54,69,72,91,94,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,33,37,38,44,45,52,61,70,72,76,77,82,87,-1,-1,-1,-1,-1,-1,-1,-1},
{13,22,26,40,45,49,53,63,70,71,72,73,74,85,86,88,97,-1,-1,-1,-1,-1}};


// Typedefs
typedef int[0, numberOfChains - 1] chainId_t;

// Ints and Arrays
int numberOfChainsDone = 0;
int tasksDone[numberOfTasks];
bool runnableChains[numberOfChains];
int Machines = numberOfMachines;

// Channels
broadcast chan startMachines;
broadcast chan chainMachineChan[numberOfChains];
broadcast chan activateChains;
broadcast chan ChainDone[numberOfChains];</declaration><template><name x="5" y="5">Composer</name><declaration>// Place local declarations here.
clock time;</declaration><location id="id0" x="-102" y="-255"><name x="-112" y="-289">Init</name><label kind="invariant" x="-246" y="-238">numberOfChainsDone &lt;= numberOfChains
&amp;&amp; cost' == 1</label></location><location id="id1" x="331" y="-255"><name x="321" y="-289">Done</name></location><init ref="id0"/><transition><source ref="id0"/><target ref="id1"/><label kind="guard" x="-17" y="-289">numberOfChainsDone &gt;= numberOfChains</label></transition></template><template><name>Chain</name><parameter>const chainId_t cid</parameter><declaration>clock x;
const int chainSize = globalChainSize[cid];
int index = 0;
int TimeUnit = 2;

bool AllDependenciesDone()
{
    bool dependenciesDone = 1;
    int i;
    for (i = 0; i &lt; maxDependencies; i++)
    {
        int value = dependencies[globalChains[cid][index]][i];
        if (value == -1)
            return dependenciesDone;

        dependenciesDone &amp;= tasksDone[value];
    }
    return dependenciesDone;
}

void DecrementWork(int workDone)
{
    int currentDuration = durations[globalChains[cid][index]];

    if (workDone &gt; currentDuration)
        durations[globalChains[cid][index]] = 0;
    else
        durations[globalChains[cid][index]] -= workDone;
}</declaration><location id="id2" x="-68" y="-238"><name x="-78" y="-272">Idle</name></location><location id="id3" x="-68" y="51"><name x="-93" y="68">Running</name><label kind="invariant" x="-127" y="85">x &lt;= chainDuration[cid]</label></location><location id="id4" x="-399" y="-238"><name x="-409" y="-272">Done</name></location><init ref="id2"/><transition><source ref="id3"/><target ref="id2"/><label kind="select" x="-59" y="-119">chain_id : chainId_t</label><label kind="synchronisation" x="-59" y="-102">ChainDone[chain_id]?</label><label kind="assignment" x="-59" y="-85">DecrementWork(chainDuration[chain_id]),
Machines++</label></transition><transition><source ref="id2"/><target ref="id4"/><label kind="guard" x="-357" y="-280">index &gt;= chainSize</label><label kind="assignment" x="-357" y="-263">numberOfChainsDone++</label></transition><transition><source ref="id3"/><target ref="id2"/><label kind="guard" x="-433" y="-119">x &gt;= chainDuration[cid]</label><label kind="synchronisation" x="-433" y="-102">ChainDone[cid]!</label><label kind="assignment" x="-433" y="-85">Machines++,
tasksDone[globalChains[cid][index]] = 1,
index++</label><nail x="-170" y="-8"/><nail x="-170" y="-170"/></transition><transition><source ref="id2"/><target ref="id3"/><label kind="guard" x="136" y="-238">index &lt; chainSize &amp;&amp;
Machines &gt; 0 &amp;&amp; AllDependenciesDone()</label><label kind="assignment" x="136" y="-204">chainDuration[cid] = durations[globalChains[cid][index]],
Machines--,
x = 0</label><nail x="127" y="-238"/><nail x="127" y="51"/></transition></template><system>// Place template instantiations here.

// List one or more processes to be composed into a system.
system Composer, Chain;
    </system></nta>
