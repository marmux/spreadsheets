<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/researchgroup/darts/uppaal/flat-1_2.dtd'>
<nta>
<declaration>//Variables
const int numberOfChains = 33;
const int numberOfTasks = 100;
const int numberOfMachines = 6;
const int maxDependencies = 22;
const int longestChain = 6;
const int globalChainSize[numberOfChains] = {5,5,3,4,5,5,3,6,3,3,3,3,3,2,4,2,5,4,4,3,4,3,4,1,2,2,2,1,2,1,1,1,1};
const int globalChains[numberOfChains][longestChain] = {
{0,24,63,83,91,-1},
{1,26,35,60,95,-1},
{2,72,86,-1,-1,-1},
{3,70,79,89,-1,-1},
{4,30,54,57,96,-1},
{5,65,74,90,97,-1},
{6,62,99,-1,-1,-1},
{7,36,49,75,84,98},
{8,61,78,-1,-1,-1},
{9,64,93,-1,-1,-1},
{10,50,67,-1,-1,-1},
{11,66,85,-1,-1,-1},
{12,82,94,-1,-1,-1},
{13,53,-1,-1,-1,-1},
{14,43,52,92,-1,-1},
{15,73,-1,-1,-1,-1},
{16,40,51,58,68,-1},
{17,31,59,76,-1,-1},
{18,77,80,87,-1,-1},
{19,71,81,-1,-1,-1},
{20,44,47,88,-1,-1},
{21,45,69,-1,-1,-1},
{22,33,46,55,-1,-1},
{23,-1,-1,-1,-1,-1},
{25,41,-1,-1,-1,-1},
{27,42,-1,-1,-1,-1},
{28,56,-1,-1,-1,-1},
{29,-1,-1,-1,-1,-1},
{32,39,-1,-1,-1,-1},
{34,-1,-1,-1,-1,-1},
{37,-1,-1,-1,-1,-1},
{38,-1,-1,-1,-1,-1},
{48,-1,-1,-1,-1,-1}};
int chainDuration[numberOfChains] = {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1};
int durations[numberOfTasks] = {3,6,7,2,18,1,14,4,10,6,5,1,3,1,3,7,2,5,2,7,1,5,2,1,4,2,15,5,5,4,15,1,39,10,9,11,4,2,1,5,3,1,4,1,1,4,2,3,2,6,1,2,11,4,1,2,2,4,3,6,17,3,19,14,4,2,9,2,1,5,2,15,2,14,2,1,4,14,3,12,6,5,1,9,3,4,2,10,8,4,8,4,5,1,10,3,5,2,26,4};
const int dependencies[numberOfTasks][maxDependencies] = {
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,10,13,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,8,14,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,14,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,7,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{10,14,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,14,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,4,8,14,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,6,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,18,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,3,4,20,21,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,10,17,26,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,9,21,22,26,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,8,13,16,22,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,15,24,25,26,29,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,3,7,9,15,32,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{11,14,16,18,19,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,12,15,31,32,34,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,13,14,16,21,24,28,33,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,9,21,24,25,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{22,27,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,3,4,11,14,15,27,33,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,8,10,18,20,31,32,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,6,10,14,21,28,29,32,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{9,11,17,19,20,31,33,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,16,26,29,30,32,33,44,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,13,16,20,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,8,21,22,23,26,27,36,38,41,45,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,10,11,15,23,30,33,36,39,40,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,8,9,18,20,21,28,40,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,10,13,32,41,43,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,12,13,16,20,22,31,32,36,43,45,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,6,8,26,29,30,32,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{15,23,31,35,43,44,46,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,11,28,44,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,19,21,26,30,38,40,42,47,50,54,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,10,20,22,27,35,47,51,56,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,4,27,31,33,40,41,50,54,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,2,7,9,17,30,32,35,39,55,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,7,8,9,19,21,28,35,44,48,50,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,5,6,11,28,30,31,37,43,45,46,48,50,51,53,-1,-1,-1,-1,-1,-1,-1},
{0,10,12,22,24,33,38,44,51,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,4,8,9,11,20,21,25,27,28,32,35,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,3,4,5,6,22,23,25,27,29,39,46,52,54,-1,-1,-1,-1,-1,-1,-1,-1},
{8,9,11,17,29,32,38,39,54,61,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,7,10,16,17,20,25,36,37,39,43,50,53,58,-1,-1,-1,-1,-1,-1,-1,-1},
{0,10,17,37,44,55,58,59,60,64,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,10,28,29,39,43,45,52,55,61,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,7,9,13,15,16,25,26,30,34,35,55,62,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,6,19,31,33,40,41,45,65,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,3,14,24,25,26,45,47,49,51,52,54,61,65,-1,-1,-1,-1,-1,-1,-1,-1},
{2,15,17,19,39,42,47,52,54,60,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,5,18,19,23,24,25,44,56,65,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,5,8,10,12,13,19,30,35,46,48,49,50,61,-1,-1,-1,-1,-1,-1,-1,-1},
{5,19,21,25,34,59,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,12,15,18,20,23,24,25,32,33,46,50,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,8,39,41,43,50,52,57,61,68,71,72,73,77,-1,-1,-1,-1,-1,-1,-1,-1},
{1,2,8,14,15,16,20,22,27,31,33,36,40,44,48,51,54,67,70,76,-1,-1},
{0,2,3,15,22,31,33,49,77,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{18,23,25,28,33,34,38,41,50,56,57,61,71,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,4,12,17,19,27,32,42,56,61,63,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,8,9,12,13,24,25,35,51,52,58,60,62,63,64,-1,-1,-1,-1,-1,-1,-1},
{11,19,26,51,73,75,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,5,10,14,31,33,41,48,50,55,58,66,74,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,3,12,25,29,31,37,42,50,53,54,60,72,76,78,-1,-1,-1,-1,-1,-1,-1},
{13,23,25,32,47,55,69,72,77,80,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,5,6,29,34,47,52,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,11,12,21,26,28,30,32,55,57,60,68,77,78,79,81,-1,-1,-1,-1,-1,-1},
{1,5,7,11,13,25,33,34,42,43,52,57,63,64,69,73,74,76,85,-1,-1,-1},
{5,6,15,16,18,25,27,30,40,41,48,56,59,64,74,77,83,-1,-1,-1,-1,-1},
{1,11,15,17,21,23,31,36,44,46,47,52,60,61,66,73,-1,-1,-1,-1,-1,-1},
{2,18,39,43,47,48,63,64,65,66,68,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{13,21,27,28,29,42,48,50,52,53,69,71,74,82,87,-1,-1,-1,-1,-1,-1,-1},
{10,18,23,26,27,29,36,37,46,47,48,55,60,61,63,64,66,67,71,75,84,89},
{0,5,16,17,27,38,41,46,47,52,57,60,64,70,75,77,79,85,87,90,-1,-1},
{0,10,12,13,21,23,24,25,27,37,46,64,72,75,77,90,-1,-1,-1,-1,-1,-1},
{4,22,28,32,46,48,49,65,72,74,82,84,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,22,30,37,42,51,56,62,64,87,90,92,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1}};


// Typedefs
typedef int[0, numberOfChains - 1] chainId_t;

// Ints and Arrays
int numberOfChainsDone = 0;
int tasksDone[numberOfTasks];
bool runnableChains[numberOfChains];
int Machines = numberOfMachines;

// Channels
broadcast chan startMachines;
broadcast chan chainMachineChan[numberOfChains];
broadcast chan activateChains;
broadcast chan ChainDone[numberOfChains];</declaration><template><name x="5" y="5">Composer</name><declaration>// Place local declarations here.
clock time;</declaration><location id="id0" x="-102" y="-255"><name x="-112" y="-289">Init</name><label kind="invariant" x="-246" y="-238">numberOfChainsDone &lt;= numberOfChains
&amp;&amp; cost' == 1</label></location><location id="id1" x="331" y="-255"><name x="321" y="-289">Done</name></location><init ref="id0"/><transition><source ref="id0"/><target ref="id1"/><label kind="guard" x="-17" y="-289">numberOfChainsDone &gt;= numberOfChains</label></transition></template><template><name>Chain</name><parameter>const chainId_t cid</parameter><declaration>clock x;
const int chainSize = globalChainSize[cid];
int index = 0;
int TimeUnit = 2;

bool AllDependenciesDone()
{
    bool dependenciesDone = 1;
    int i;
    for (i = 0; i &lt; maxDependencies; i++)
    {
        int value = dependencies[globalChains[cid][index]][i];
        if (value == -1)
            return dependenciesDone;

        dependenciesDone &amp;= tasksDone[value];
    }
    return dependenciesDone;
}

void DecrementWork(int workDone)
{
    int currentDuration = durations[globalChains[cid][index]];

    if (workDone &gt; currentDuration)
        durations[globalChains[cid][index]] = 0;
    else
        durations[globalChains[cid][index]] -= workDone;
}</declaration><location id="id2" x="-68" y="-238"><name x="-78" y="-272">Idle</name></location><location id="id3" x="-68" y="51"><name x="-93" y="68">Running</name><label kind="invariant" x="-127" y="85">x &lt;= chainDuration[cid]</label></location><location id="id4" x="-399" y="-238"><name x="-409" y="-272">Done</name></location><init ref="id2"/><transition><source ref="id3"/><target ref="id2"/><label kind="select" x="-59" y="-119">chain_id : chainId_t</label><label kind="synchronisation" x="-59" y="-102">ChainDone[chain_id]?</label><label kind="assignment" x="-59" y="-85">DecrementWork(chainDuration[chain_id]),
Machines++</label></transition><transition><source ref="id2"/><target ref="id4"/><label kind="guard" x="-357" y="-280">index &gt;= chainSize</label><label kind="assignment" x="-357" y="-263">numberOfChainsDone++</label></transition><transition><source ref="id3"/><target ref="id2"/><label kind="guard" x="-433" y="-119">x &gt;= chainDuration[cid]</label><label kind="synchronisation" x="-433" y="-102">ChainDone[cid]!</label><label kind="assignment" x="-433" y="-85">Machines++,
tasksDone[globalChains[cid][index]] = 1,
index++</label><nail x="-170" y="-8"/><nail x="-170" y="-170"/></transition><transition><source ref="id2"/><target ref="id3"/><label kind="guard" x="136" y="-238">index &lt; chainSize &amp;&amp;
Machines &gt; 0 &amp;&amp; AllDependenciesDone()</label><label kind="assignment" x="136" y="-204">chainDuration[cid] = durations[globalChains[cid][index]],
Machines--,
x = 0</label><nail x="127" y="-238"/><nail x="127" y="51"/></transition></template><system>// Place template instantiations here.

// List one or more processes to be composed into a system.
system Composer, Chain;
    </system></nta>
