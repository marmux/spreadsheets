<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/researchgroup/darts/uppaal/flat-1_2.dtd'>
<nta>
<declaration>//Variables
const int numberOfChains = 38;
const int numberOfTasks = 100;
const int numberOfMachines = 6;
const int maxDependencies = 15;
const int longestChain = 7;
const int globalChainSize[numberOfChains] = {5,3,3,3,3,7,3,2,4,3,3,6,4,2,2,3,2,4,3,2,3,4,3,3,3,1,1,1,2,2,1,1,2,1,1,1,2,1};
const int globalChains[numberOfChains][longestChain] = {
{0,26,37,76,93,-1,-1},
{1,61,90,-1,-1,-1,-1},
{2,57,86,-1,-1,-1,-1},
{3,39,67,-1,-1,-1,-1},
{4,11,95,-1,-1,-1,-1},
{5,22,49,54,58,71,87},
{6,84,91,-1,-1,-1,-1},
{7,73,-1,-1,-1,-1,-1},
{8,21,78,99,-1,-1,-1},
{9,83,94,-1,-1,-1,-1},
{10,89,96,-1,-1,-1,-1},
{12,32,36,55,82,98,-1},
{13,28,59,97,-1,-1,-1},
{14,92,-1,-1,-1,-1,-1},
{15,79,-1,-1,-1,-1,-1},
{16,63,75,-1,-1,-1,-1},
{17,70,-1,-1,-1,-1,-1},
{18,29,46,72,-1,-1,-1},
{19,53,85,-1,-1,-1,-1},
{20,69,-1,-1,-1,-1,-1},
{23,35,52,-1,-1,-1,-1},
{24,45,51,60,-1,-1,-1},
{25,47,64,-1,-1,-1,-1},
{27,65,88,-1,-1,-1,-1},
{30,41,56,-1,-1,-1,-1},
{31,-1,-1,-1,-1,-1,-1},
{33,-1,-1,-1,-1,-1,-1},
{34,-1,-1,-1,-1,-1,-1},
{38,74,-1,-1,-1,-1,-1},
{40,68,-1,-1,-1,-1,-1},
{42,-1,-1,-1,-1,-1,-1},
{43,-1,-1,-1,-1,-1,-1},
{44,77,-1,-1,-1,-1,-1},
{48,-1,-1,-1,-1,-1,-1},
{50,-1,-1,-1,-1,-1,-1},
{62,-1,-1,-1,-1,-1,-1},
{66,80,-1,-1,-1,-1,-1},
{81,-1,-1,-1,-1,-1,-1}};
int chainDuration[numberOfChains] = {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1};
int durations[numberOfTasks] = {9,10,19,6,4,20,3,16,18,14,16,16,20,13,17,1,7,9,10,10,13,20,6,6,9,8,15,8,16,13,6,15,12,16,16,19,6,9,2,12,2,5,2,10,2,10,8,2,2,14,1,9,20,16,14,10,4,4,12,12,20,8,20,8,14,15,16,4,7,12,13,4,9,8,15,18,11,18,7,10,2,2,1,19,16,17,14,5,17,6,5,8,15,11,11,4,16,9,19,18};
const int dependencies[numberOfTasks][maxDependencies] = {
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,4,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,4,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,4,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{16,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{18,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{9,20,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,9,10,17,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{18,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,9,13,20,22,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,7,16,18,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,9,15,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,4,8,12,17,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,9,24,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,16,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{10,13,16,21,23,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{10,16,22,24,32,34,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,26,32,34,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{12,13,26,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,7,24,26,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{12,24,29,30,31,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{32,35,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,17,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{30,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{12,20,24,29,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{14,18,29,30,33,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,25,27,31,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,8,11,24,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,8,11,22,29,35,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{18,28,29,35,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{33,45,46,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,13,31,35,39,43,46,47,-1,-1,-1,-1,-1,-1,-1},
{19,21,25,26,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,7,19,21,29,30,38,49,-1,-1,-1,-1,-1,-1,-1},
{0,6,9,12,13,36,44,47,48,-1,-1,-1,-1,-1,-1},
{27,32,41,49,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,2,5,8,14,33,36,38,40,-1,-1,-1,-1,-1,-1},
{3,16,22,36,48,54,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,11,20,28,41,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,11,30,31,35,40,51,-1,-1,-1,-1,-1,-1,-1,-1},
{1,18,23,25,37,38,40,49,54,-1,-1,-1,-1,-1,-1},
{3,15,37,44,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{15,16,26,27,44,48,49,54,-1,-1,-1,-1,-1,-1,-1},
{32,43,47,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,27,35,36,38,40,46,48,62,-1,-1,-1,-1,-1,-1},
{2,5,37,44,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,16,39,55,62,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{10,30,40,41,47,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{10,16,20,25,28,40,44,55,60,-1,-1,-1,-1,-1,-1},
{1,10,13,17,35,42,51,-1,-1,-1,-1,-1,-1,-1,-1},
{8,16,22,27,32,39,43,48,54,56,58,-1,-1,-1,-1},
{13,17,24,34,36,39,44,46,53,62,-1,-1,-1,-1,-1},
{1,3,7,54,55,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{38,49,53,55,59,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{35,48,63,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,15,18,29,37,53,57,-1,-1,-1,-1,-1,-1,-1,-1},
{19,37,38,39,44,48,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,17,21,24,42,52,57,-1,-1,-1,-1,-1,-1,-1,-1},
{7,15,22,23,26,37,40,44,-1,-1,-1,-1,-1,-1,-1},
{1,9,28,66,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{41,57,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{16,19,24,25,54,55,69,78,-1,-1,-1,-1,-1,-1,-1},
{1,7,9,28,39,45,55,60,72,75,-1,-1,-1,-1,-1},
{6,18,21,34,39,42,45,57,60,64,-1,-1,-1,-1,-1},
{6,16,21,26,31,33,53,66,-1,-1,-1,-1,-1,-1,-1},
{0,9,25,28,52,57,67,73,-1,-1,-1,-1,-1,-1,-1},
{0,7,13,19,41,45,46,53,55,62,71,73,-1,-1,-1},
{4,21,38,65,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{10,24,34,49,54,70,79,-1,-1,-1,-1,-1,-1,-1,-1},
{0,2,9,10,22,25,49,55,61,66,67,-1,-1,-1,-1},
{1,7,10,16,23,28,29,48,53,60,80,84,85,-1,-1},
{3,14,18,36,38,40,43,49,74,75,-1,-1,-1,-1,-1},
{10,11,16,33,34,53,76,82,-1,-1,-1,-1,-1,-1,-1},
{2,4,8,17,33,34,46,50,56,68,83,-1,-1,-1,-1},
{6,9,11,16,19,32,33,55,57,58,61,77,81,84,85},
{18,24,49,57,64,70,77,85,89,-1,-1,-1,-1,-1,-1},
{26,27,29,31,43,46,48,54,59,61,77,80,-1,-1,-1},
{4,7,24,60,80,82,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,10,11,12,14,15,20,32,44,50,53,57,78,-1,-1}};


// Typedefs
typedef int[0, numberOfChains - 1] chainId_t;

// Ints and Arrays
int numberOfChainsDone = 0;
int tasksDone[numberOfTasks];
bool runnableChains[numberOfChains];
int Machines = numberOfMachines;

// Channels
broadcast chan startMachines;
broadcast chan chainMachineChan[numberOfChains];
broadcast chan activateChains;
broadcast chan ChainDone[numberOfChains];</declaration><template><name x="5" y="5">Composer</name><declaration>// Place local declarations here.
clock time;</declaration><location id="id0" x="-102" y="-255"><name x="-112" y="-289">Init</name><label kind="invariant" x="-246" y="-238">numberOfChainsDone &lt;= numberOfChains
&amp;&amp; cost' == 1</label></location><location id="id1" x="331" y="-255"><name x="321" y="-289">Done</name></location><init ref="id0"/><transition><source ref="id0"/><target ref="id1"/><label kind="guard" x="-17" y="-289">numberOfChainsDone &gt;= numberOfChains</label></transition></template><template><name>Chain</name><parameter>const chainId_t cid</parameter><declaration>clock x;
const int chainSize = globalChainSize[cid];
int index = 0;
int TimeUnit = 2;

bool AllDependenciesDone()
{
    bool dependenciesDone = 1;
    int i;
    for (i = 0; i &lt; maxDependencies; i++)
    {
        int value = dependencies[globalChains[cid][index]][i];
        if (value == -1)
            return dependenciesDone;

        dependenciesDone &amp;= tasksDone[value];
    }
    return dependenciesDone;
}

void DecrementWork(int workDone)
{
    int currentDuration = durations[globalChains[cid][index]];

    if (workDone &gt; currentDuration)
        durations[globalChains[cid][index]] = 0;
    else
        durations[globalChains[cid][index]] -= workDone;
}</declaration><location id="id2" x="-68" y="-238"><name x="-78" y="-272">Idle</name></location><location id="id3" x="-68" y="51"><name x="-93" y="68">Running</name><label kind="invariant" x="-127" y="85">x &lt;= chainDuration[cid]</label></location><location id="id4" x="-399" y="-238"><name x="-409" y="-272">Done</name></location><init ref="id2"/><transition><source ref="id3"/><target ref="id2"/><label kind="select" x="-59" y="-119">chain_id : chainId_t</label><label kind="synchronisation" x="-59" y="-102">ChainDone[chain_id]?</label><label kind="assignment" x="-59" y="-85">DecrementWork(chainDuration[chain_id]),
Machines++</label></transition><transition><source ref="id2"/><target ref="id4"/><label kind="guard" x="-357" y="-280">index &gt;= chainSize</label><label kind="assignment" x="-357" y="-263">numberOfChainsDone++</label></transition><transition><source ref="id3"/><target ref="id2"/><label kind="guard" x="-433" y="-119">x &gt;= chainDuration[cid]</label><label kind="synchronisation" x="-433" y="-102">ChainDone[cid]!</label><label kind="assignment" x="-433" y="-85">Machines++,
tasksDone[globalChains[cid][index]] = 1,
index++</label><nail x="-170" y="-8"/><nail x="-170" y="-170"/></transition><transition><source ref="id2"/><target ref="id3"/><label kind="guard" x="136" y="-238">index &lt; chainSize &amp;&amp;
Machines &gt; 0 &amp;&amp; AllDependenciesDone()</label><label kind="assignment" x="136" y="-204">chainDuration[cid] = durations[globalChains[cid][index]],
Machines--,
x = 0</label><nail x="127" y="-238"/><nail x="127" y="51"/></transition></template><system>// Place template instantiations here.

// List one or more processes to be composed into a system.
system Composer, Chain;
    </system></nta>
