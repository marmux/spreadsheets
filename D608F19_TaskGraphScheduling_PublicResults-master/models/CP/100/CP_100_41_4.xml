<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/researchgroup/darts/uppaal/flat-1_2.dtd'>
<nta>
<declaration>//Variables
const int numberOfChains = 37;
const int numberOfTasks = 100;
const int numberOfMachines = 4;
const int maxDependencies = 15;
const int longestChain = 5;
const int globalChainSize[numberOfChains] = {5,4,4,3,4,3,3,5,2,3,2,4,4,3,3,2,3,2,3,2,3,2,4,2,3,3,2,1,3,2,2,2,1,2,2,1,1};
const int globalChains[numberOfChains][longestChain] = {
{0,21,35,71,98},
{1,53,70,99,-1},
{2,31,81,90,-1},
{3,51,75,-1,-1},
{4,15,46,66,-1},
{5,38,84,-1,-1},
{6,40,50,-1,-1},
{7,59,67,80,96},
{8,95,-1,-1,-1},
{9,32,69,-1,-1},
{10,92,-1,-1,-1},
{11,37,79,93,-1},
{12,33,45,94,-1},
{13,63,87,-1,-1},
{14,19,82,-1,-1},
{16,83,-1,-1,-1},
{17,34,89,-1,-1},
{18,76,-1,-1,-1},
{20,73,86,-1,-1},
{22,68,-1,-1,-1},
{23,57,91,-1,-1},
{24,97,-1,-1,-1},
{25,54,61,78,-1},
{26,72,-1,-1,-1},
{27,44,52,-1,-1},
{28,49,88,-1,-1},
{29,60,-1,-1,-1},
{30,-1,-1,-1,-1},
{36,62,74,-1,-1},
{39,65,-1,-1,-1},
{41,56,-1,-1,-1},
{42,58,-1,-1,-1},
{43,-1,-1,-1,-1},
{47,48,-1,-1,-1},
{55,64,-1,-1,-1},
{77,-1,-1,-1,-1},
{85,-1,-1,-1,-1}};
int chainDuration[numberOfChains] = {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1};
int durations[numberOfTasks] = {2,7,5,14,1,4,4,1,7,2,2,6,6,4,4,1,1,1,5,2,12,13,1,11,14,5,8,5,8,20,5,5,8,6,5,2,9,1,7,1,1,6,3,11,6,14,5,1,35,2,7,1,2,1,14,1,1,12,8,2,3,2,16,1,1,9,1,1,2,6,7,32,4,1,6,5,4,3,2,5,5,3,1,2,1,1,5,3,1,3,2,4,2,21,1,7,2,5,4,2};
const int dependencies[numberOfTasks][maxDependencies] = {
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,4,10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,9,12,14,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,12,16,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,11,12,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{16,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,17,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,6,7,19,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,23,26,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,6,9,17,19,25,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,9,10,12,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,7,12,14,17,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,21,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{15,27,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,8,11,13,23,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,8,13,21,29,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{9,35,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,6,7,21,24,32,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{11,24,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,25,34,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{33,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,12,13,27,33,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,12,21,24,33,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,4,15,18,26,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,17,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{9,19,24,47,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{12,24,28,36,38,45,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,8,9,25,31,40,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,3,27,34,35,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{13,17,24,40,44,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,23,26,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{14,15,25,29,34,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{20,23,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,14,22,25,28,41,43,-1,-1,-1,-1,-1,-1,-1,-1},
{8,23,34,37,39,42,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{21,24,25,42,46,47,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,6,7,21,30,44,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,20,27,29,44,47,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{21,25,54,56,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,14,28,36,39,48,59,-1,-1,-1,-1,-1,-1,-1,-1},
{9,10,13,23,24,33,37,39,44,-1,-1,-1,-1,-1,-1},
{0,3,22,55,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{18,21,25,39,47,57,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,3,20,34,40,44,46,50,-1,-1,-1,-1,-1,-1,-1},
{2,7,22,26,30,31,33,48,49,55,59,60,-1,-1,-1},
{5,10,15,22,24,26,29,32,42,54,-1,-1,-1,-1,-1},
{1,4,25,30,32,37,59,61,67,-1,-1,-1,-1,-1,-1},
{24,34,35,36,41,43,53,58,62,-1,-1,-1,-1,-1,-1},
{8,21,28,34,35,42,49,50,51,60,-1,-1,-1,-1,-1},
{3,16,19,26,42,56,63,-1,-1,-1,-1,-1,-1,-1,-1},
{0,20,28,30,59,64,65,-1,-1,-1,-1,-1,-1,-1,-1},
{20,23,33,37,58,62,65,-1,-1,-1,-1,-1,-1,-1,-1},
{0,5,9,11,13,35,51,63,-1,-1,-1,-1,-1,-1,-1},
{5,18,25,33,46,59,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{27,34,45,51,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{13,39,53,56,61,67,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,10,14,19,20,37,45,53,64,-1,-1,-1,-1,-1,-1},
{4,8,17,21,30,40,54,56,59,67,-1,-1,-1,-1,-1},
{0,1,9,13,28,30,31,56,59,60,62,64,-1,-1,-1},
{1,13,15,19,26,32,49,56,-1,-1,-1,-1,-1,-1,-1},
{0,8,10,16,25,46,52,-1,-1,-1,-1,-1,-1,-1,-1},
{4,11,16,18,27,32,36,38,41,53,57,59,-1,-1,-1},
{6,46,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,18,23,24,25,28,30,37,53,54,65,67,73,-1,-1},
{8,11,19,27,29,56,63,67,74,-1,-1,-1,-1,-1,-1},
{15,16,28,37,47,49,65,77,80,-1,-1,-1,-1,-1,-1},
{1,25,26,34,38,51,52,62,-1,-1,-1,-1,-1,-1,-1},
{6,8,9,21,27,33,35,48,55,58,60,77,81,-1,-1},
{2,10,22,25,27,29,31,43,54,57,63,-1,-1,-1,-1},
{4,5,6,7,10,13,25,62,86,91,-1,-1,-1,-1,-1},
{4,8,13,26,32,34,36,52,58,62,64,71,79,-1,-1},
{2,45,51,81,82,83,85,86,89,-1,-1,-1,-1,-1,-1},
{2,8,16,25,28,35,41,59,64,81,-1,-1,-1,-1,-1},
{4,8,52,54,55,56,65,68,80,81,-1,-1,-1,-1,-1},
{7,8,16,17,21,24,52,72,73,74,78,-1,-1,-1,-1},
{0,1,3,4,17,28,45,54,58,68,70,71,73,81,83},
{2,4,7,8,10,25,41,46,66,70,72,-1,-1,-1,-1}};


// Typedefs
typedef int[0, numberOfChains - 1] chainId_t;

// Ints and Arrays
int numberOfChainsDone = 0;
int tasksDone[numberOfTasks];
bool runnableChains[numberOfChains];
int Machines = numberOfMachines;

// Channels
broadcast chan startMachines;
broadcast chan chainMachineChan[numberOfChains];
broadcast chan activateChains;
broadcast chan ChainDone[numberOfChains];</declaration><template><name x="5" y="5">Composer</name><declaration>// Place local declarations here.
clock time;</declaration><location id="id0" x="-102" y="-255"><name x="-112" y="-289">Init</name><label kind="invariant" x="-246" y="-238">numberOfChainsDone &lt;= numberOfChains
&amp;&amp; cost' == 1</label></location><location id="id1" x="331" y="-255"><name x="321" y="-289">Done</name></location><init ref="id0"/><transition><source ref="id0"/><target ref="id1"/><label kind="guard" x="-17" y="-289">numberOfChainsDone &gt;= numberOfChains</label></transition></template><template><name>Chain</name><parameter>const chainId_t cid</parameter><declaration>clock x;
const int chainSize = globalChainSize[cid];
int index = 0;
int TimeUnit = 2;

bool AllDependenciesDone()
{
    bool dependenciesDone = 1;
    int i;
    for (i = 0; i &lt; maxDependencies; i++)
    {
        int value = dependencies[globalChains[cid][index]][i];
        if (value == -1)
            return dependenciesDone;

        dependenciesDone &amp;= tasksDone[value];
    }
    return dependenciesDone;
}

void DecrementWork(int workDone)
{
    int currentDuration = durations[globalChains[cid][index]];

    if (workDone &gt; currentDuration)
        durations[globalChains[cid][index]] = 0;
    else
        durations[globalChains[cid][index]] -= workDone;
}</declaration><location id="id2" x="-68" y="-238"><name x="-78" y="-272">Idle</name></location><location id="id3" x="-68" y="51"><name x="-93" y="68">Running</name><label kind="invariant" x="-127" y="85">x &lt;= chainDuration[cid]</label></location><location id="id4" x="-399" y="-238"><name x="-409" y="-272">Done</name></location><init ref="id2"/><transition><source ref="id3"/><target ref="id2"/><label kind="select" x="-59" y="-119">chain_id : chainId_t</label><label kind="synchronisation" x="-59" y="-102">ChainDone[chain_id]?</label><label kind="assignment" x="-59" y="-85">DecrementWork(chainDuration[chain_id]),
Machines++</label></transition><transition><source ref="id2"/><target ref="id4"/><label kind="guard" x="-357" y="-280">index &gt;= chainSize</label><label kind="assignment" x="-357" y="-263">numberOfChainsDone++</label></transition><transition><source ref="id3"/><target ref="id2"/><label kind="guard" x="-433" y="-119">x &gt;= chainDuration[cid]</label><label kind="synchronisation" x="-433" y="-102">ChainDone[cid]!</label><label kind="assignment" x="-433" y="-85">Machines++,
tasksDone[globalChains[cid][index]] = 1,
index++</label><nail x="-170" y="-8"/><nail x="-170" y="-170"/></transition><transition><source ref="id2"/><target ref="id3"/><label kind="guard" x="136" y="-238">index &lt; chainSize &amp;&amp;
Machines &gt; 0 &amp;&amp; AllDependenciesDone()</label><label kind="assignment" x="136" y="-204">chainDuration[cid] = durations[globalChains[cid][index]],
Machines--,
x = 0</label><nail x="127" y="-238"/><nail x="127" y="51"/></transition></template><system>// Place template instantiations here.

// List one or more processes to be composed into a system.
system Composer, Chain;
    </system></nta>
