<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/researchgroup/darts/uppaal/flat-1_2.dtd'>
<nta>
<declaration>//Variables
const int numberOfChains = 38;
const int numberOfTasks = 100;
const int numberOfMachines = 7;
const int maxDependencies = 13;
const int longestChain = 6;
const int globalChainSize[numberOfChains] = {5,4,4,6,3,5,3,4,3,4,3,2,3,4,3,2,3,3,2,3,3,3,2,4,2,2,1,1,2,1,2,1,1,2,1,1,1,1};
const int globalChains[numberOfChains][longestChain] = {
{0,12,36,53,79,-1},
{1,33,45,94,-1,-1},
{2,13,61,82,-1,-1},
{3,16,25,46,55,98},
{4,69,86,-1,-1,-1},
{5,32,54,77,92,-1},
{6,76,99,-1,-1,-1},
{7,40,49,81,-1,-1},
{8,85,93,-1,-1,-1},
{9,35,65,89,-1,-1},
{10,71,95,-1,-1,-1},
{11,24,-1,-1,-1,-1},
{14,90,91,-1,-1,-1},
{15,75,78,97,-1,-1},
{17,47,73,-1,-1,-1},
{18,26,-1,-1,-1,-1},
{19,57,88,-1,-1,-1},
{20,66,87,-1,-1,-1},
{21,62,-1,-1,-1,-1},
{22,51,70,-1,-1,-1},
{23,38,63,-1,-1,-1},
{27,84,96,-1,-1,-1},
{28,83,-1,-1,-1,-1},
{29,41,52,68,-1,-1},
{30,59,-1,-1,-1,-1},
{31,74,-1,-1,-1,-1},
{34,-1,-1,-1,-1,-1},
{37,-1,-1,-1,-1,-1},
{39,58,-1,-1,-1,-1},
{42,-1,-1,-1,-1,-1},
{43,56,-1,-1,-1,-1},
{44,-1,-1,-1,-1,-1},
{48,-1,-1,-1,-1,-1},
{50,72,-1,-1,-1,-1},
{60,-1,-1,-1,-1,-1},
{64,-1,-1,-1,-1,-1},
{67,-1,-1,-1,-1,-1},
{80,-1,-1,-1,-1,-1}};
int chainDuration[numberOfChains] = {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1};
int durations[numberOfTasks] = {3,9,2,4,3,18,66,5,11,1,16,13,4,2,2,13,3,4,11,4,10,14,3,3,18,20,10,3,2,23,6,11,4,3,10,8,4,5,6,1,22,8,37,17,13,5,16,23,2,3,9,13,4,1,3,13,14,15,1,6,1,1,2,13,1,4,3,3,5,14,1,34,21,47,3,11,2,1,3,19,20,1,9,20,5,12,9,8,7,4,38,2,11,12,5,12,2,4,24,1};
const int dependencies[numberOfTasks][maxDependencies] = {
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,4,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,2,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,16,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,21,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{11,16,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,12,13,15,16,-1,-1,-1,-1,-1,-1,-1,-1},
{8,13,18,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{13,14,15,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{19,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{25,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{23,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,9,16,23,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,9,12,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{10,13,20,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,8,12,20,22,-1,-1,-1,-1,-1,-1,-1,-1},
{6,15,23,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,8,18,23,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,8,16,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,7,9,11,16,-1,-1,-1,-1,-1,-1,-1,-1},
{19,27,29,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{13,16,25,27,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{20,27,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,18,33,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{13,16,17,25,28,29,33,34,-1,-1,-1,-1,-1},
{17,20,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{10,20,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,11,13,22,37,40,-1,-1,-1,-1,-1,-1,-1},
{25,27,32,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,8,15,22,34,37,-1,-1,-1,-1,-1,-1,-1},
{22,28,41,49,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{13,15,20,26,36,-1,-1,-1,-1,-1,-1,-1,-1},
{0,7,17,32,42,46,-1,-1,-1,-1,-1,-1,-1},
{3,13,43,46,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,23,29,43,44,-1,-1,-1,-1,-1,-1,-1,-1},
{4,8,19,41,49,-1,-1,-1,-1,-1,-1,-1,-1},
{7,36,39,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,15,27,30,31,36,-1,-1,-1,-1,-1,-1,-1},
{10,41,45,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,11,13,19,33,48,-1,-1,-1,-1,-1,-1,-1},
{21,25,31,49,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{23,37,38,41,46,-1,-1,-1,-1,-1,-1,-1,-1},
{33,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{19,24,33,34,35,50,60,-1,-1,-1,-1,-1,-1},
{6,7,14,20,21,30,-1,-1,-1,-1,-1,-1,-1},
{5,22,57,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,10,52,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,8,11,21,53,-1,-1,-1,-1,-1,-1,-1,-1},
{7,14,37,51,58,60,-1,-1,-1,-1,-1,-1,-1},
{9,10,16,37,50,-1,-1,-1,-1,-1,-1,-1,-1},
{50,64,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{44,47,55,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{13,27,31,38,44,58,-1,-1,-1,-1,-1,-1,-1},
{1,14,15,37,40,42,52,-1,-1,-1,-1,-1,-1},
{6,15,16,36,46,65,-1,-1,-1,-1,-1,-1,-1},
{1,25,31,54,57,59,65,74,-1,-1,-1,-1,-1},
{8,58,60,71,75,-1,-1,-1,-1,-1,-1,-1,-1},
{12,20,27,28,49,51,53,57,70,-1,-1,-1,-1},
{10,29,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{10,13,18,45,46,49,52,-1,-1,-1,-1,-1,-1},
{0,4,17,18,24,25,35,50,52,57,58,61,65},
{23,28,40,69,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,10,19,27,34,49,67,-1,-1,-1,-1,-1,-1},
{7,8,29,30,32,61,62,-1,-1,-1,-1,-1,-1},
{25,33,59,69,71,-1,-1,-1,-1,-1,-1,-1,-1},
{0,4,27,30,66,70,-1,-1,-1,-1,-1,-1,-1},
{8,36,42,57,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{45,50,56,65,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,14,25,32,51,58,66,-1,-1,-1,-1,-1,-1},
{4,6,17,19,30,36,42,58,84,90,-1,-1,-1},
{33,49,55,56,65,77,-1,-1,-1,-1,-1,-1,-1},
{10,23,27,29,50,56,60,61,71,85,-1,-1,-1},
{22,36,38,43,45,48,56,60,65,70,78,89,-1},
{10,17,59,65,71,90,-1,-1,-1,-1,-1,-1,-1},
{1,32,37,60,69,84,-1,-1,-1,-1,-1,-1,-1},
{0,8,19,38,58,61,72,78,83,87,-1,-1,-1},
{1,36,55,59,85,88,-1,-1,-1,-1,-1,-1,-1},
{7,9,13,21,22,31,38,46,59,63,67,76,87}};


// Typedefs
typedef int[0, numberOfChains - 1] chainId_t;

// Ints and Arrays
int numberOfChainsDone = 0;
int tasksDone[numberOfTasks];
bool runnableChains[numberOfChains];
int Machines = numberOfMachines;

// Channels
broadcast chan startMachines;
broadcast chan chainMachineChan[numberOfChains];
broadcast chan activateChains;
broadcast chan ChainDone[numberOfChains];</declaration><template><name x="5" y="5">Composer</name><declaration>// Place local declarations here.
clock time;</declaration><location id="id0" x="-102" y="-255"><name x="-112" y="-289">Init</name><label kind="invariant" x="-246" y="-238">numberOfChainsDone &lt;= numberOfChains
&amp;&amp; cost' == 1</label></location><location id="id1" x="331" y="-255"><name x="321" y="-289">Done</name></location><init ref="id0"/><transition><source ref="id0"/><target ref="id1"/><label kind="guard" x="-17" y="-289">numberOfChainsDone &gt;= numberOfChains</label></transition></template><template><name>Chain</name><parameter>const chainId_t cid</parameter><declaration>clock x;
const int chainSize = globalChainSize[cid];
int index = 0;
int TimeUnit = 2;

bool AllDependenciesDone()
{
    bool dependenciesDone = 1;
    int i;
    for (i = 0; i &lt; maxDependencies; i++)
    {
        int value = dependencies[globalChains[cid][index]][i];
        if (value == -1)
            return dependenciesDone;

        dependenciesDone &amp;= tasksDone[value];
    }
    return dependenciesDone;
}

void DecrementWork(int workDone)
{
    int currentDuration = durations[globalChains[cid][index]];

    if (workDone &gt; currentDuration)
        durations[globalChains[cid][index]] = 0;
    else
        durations[globalChains[cid][index]] -= workDone;
}</declaration><location id="id2" x="-68" y="-238"><name x="-78" y="-272">Idle</name></location><location id="id3" x="-68" y="51"><name x="-93" y="68">Running</name><label kind="invariant" x="-127" y="85">x &lt;= chainDuration[cid]</label></location><location id="id4" x="-399" y="-238"><name x="-409" y="-272">Done</name></location><init ref="id2"/><transition><source ref="id3"/><target ref="id2"/><label kind="select" x="-59" y="-119">chain_id : chainId_t</label><label kind="synchronisation" x="-59" y="-102">ChainDone[chain_id]?</label><label kind="assignment" x="-59" y="-85">DecrementWork(chainDuration[chain_id]),
Machines++</label></transition><transition><source ref="id2"/><target ref="id4"/><label kind="guard" x="-357" y="-280">index &gt;= chainSize</label><label kind="assignment" x="-357" y="-263">numberOfChainsDone++</label></transition><transition><source ref="id3"/><target ref="id2"/><label kind="guard" x="-433" y="-119">x &gt;= chainDuration[cid]</label><label kind="synchronisation" x="-433" y="-102">ChainDone[cid]!</label><label kind="assignment" x="-433" y="-85">Machines++,
tasksDone[globalChains[cid][index]] = 1,
index++</label><nail x="-170" y="-8"/><nail x="-170" y="-170"/></transition><transition><source ref="id2"/><target ref="id3"/><label kind="guard" x="136" y="-238">index &lt; chainSize &amp;&amp;
Machines &gt; 0 &amp;&amp; AllDependenciesDone()</label><label kind="assignment" x="136" y="-204">chainDuration[cid] = durations[globalChains[cid][index]],
Machines--,
x = 0</label><nail x="127" y="-238"/><nail x="127" y="51"/></transition></template><system>// Place template instantiations here.

// List one or more processes to be composed into a system.
system Composer, Chain;
    </system></nta>
