<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/researchgroup/darts/uppaal/flat-1_2.dtd'>
<nta>
<declaration>//Variables
const int numberOfChains = 36;
const int numberOfTasks = 100;
const int numberOfMachines = 3;
const int maxDependencies = 12;
const int longestChain = 6;
const int globalChainSize[numberOfChains] = {3,3,4,5,4,2,5,3,4,6,2,3,2,4,2,3,3,3,2,3,3,4,3,2,2,1,2,4,2,2,1,2,2,1,2,1};
const int globalChains[numberOfChains][longestChain] = {
{0,34,91,-1,-1,-1},
{1,78,98,-1,-1,-1},
{2,26,65,79,-1,-1},
{3,50,57,89,92,-1},
{4,47,80,99,-1,-1},
{5,83,-1,-1,-1,-1},
{6,14,85,88,93,-1},
{7,67,90,-1,-1,-1},
{8,33,44,63,-1,-1},
{9,25,42,69,82,86},
{10,97,-1,-1,-1,-1},
{11,18,54,-1,-1,-1},
{12,95,-1,-1,-1,-1},
{13,20,75,94,-1,-1},
{15,81,-1,-1,-1,-1},
{16,68,73,-1,-1,-1},
{17,60,87,-1,-1,-1},
{19,35,71,-1,-1,-1},
{21,64,-1,-1,-1,-1},
{22,32,76,-1,-1,-1},
{23,70,77,-1,-1,-1},
{24,39,55,74,-1,-1},
{27,45,66,-1,-1,-1},
{28,49,-1,-1,-1,-1},
{29,53,-1,-1,-1,-1},
{30,-1,-1,-1,-1,-1},
{31,84,-1,-1,-1,-1},
{36,52,72,96,-1,-1},
{37,62,-1,-1,-1,-1},
{38,46,-1,-1,-1,-1},
{40,-1,-1,-1,-1,-1},
{41,56,-1,-1,-1,-1},
{43,59,-1,-1,-1,-1},
{48,-1,-1,-1,-1,-1},
{51,61,-1,-1,-1,-1},
{58,-1,-1,-1,-1,-1}};
int chainDuration[numberOfChains] = {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1};
int durations[numberOfTasks] = {3,7,2,11,1,5,6,9,10,9,15,2,1,14,4,6,4,16,7,6,8,11,10,4,5,20,8,7,9,7,9,8,16,5,8,3,1,18,18,7,11,19,9,12,2,20,3,5,2,2,4,3,6,2,20,16,9,13,11,17,8,2,13,12,6,6,9,5,2,18,7,20,14,4,7,2,1,12,14,9,6,7,7,5,5,9,6,8,4,9,7,3,1,8,4,2,2,19,4,20};
const int dependencies[numberOfTasks][maxDependencies] = {
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{10,13,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{12,17,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{15,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{23,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{22,23,25,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,8,17,23,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,10,16,-1,-1,-1,-1,-1,-1,-1,-1},
{13,19,25,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,22,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{23,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{12,24,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{16,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{22,33,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{25,33,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{26,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,11,14,22,33,-1,-1,-1,-1,-1,-1,-1},
{15,27,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,18,32,38,-1,-1,-1,-1,-1,-1,-1,-1},
{0,4,19,27,37,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,11,28,36,37,-1,-1,-1,-1,-1,-1,-1},
{1,3,13,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{31,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{15,19,36,44,-1,-1,-1,-1,-1,-1,-1,-1},
{6,26,29,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,18,22,42,-1,-1,-1,-1,-1,-1,-1,-1},
{22,32,39,41,49,51,-1,-1,-1,-1,-1,-1},
{9,38,41,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,21,22,45,50,-1,-1,-1,-1,-1,-1,-1},
{10,31,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,9,18,43,-1,-1,-1,-1,-1,-1,-1,-1},
{12,17,27,44,53,58,-1,-1,-1,-1,-1,-1},
{25,51,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{37,40,43,51,-1,-1,-1,-1,-1,-1,-1,-1},
{7,12,44,52,54,-1,-1,-1,-1,-1,-1,-1},
{13,21,27,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,3,4,7,9,26,37,41,-1,-1,-1,-1},
{24,41,45,47,52,-1,-1,-1,-1,-1,-1,-1},
{7,17,26,32,37,42,-1,-1,-1,-1,-1,-1},
{8,16,18,21,23,37,45,52,-1,-1,-1,-1},
{0,4,13,42,-1,-1,-1,-1,-1,-1,-1,-1},
{23,26,53,55,-1,-1,-1,-1,-1,-1,-1,-1},
{13,26,27,35,-1,-1,-1,-1,-1,-1,-1,-1},
{16,19,36,44,52,-1,-1,-1,-1,-1,-1,-1},
{68,69,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{19,42,46,55,62,-1,-1,-1,-1,-1,-1,-1},
{4,7,20,22,70,-1,-1,-1,-1,-1,-1,-1},
{12,17,30,31,32,44,61,-1,-1,-1,-1,-1},
{39,46,55,70,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,13,22,29,64,69,-1,-1,-1,-1,-1},
{23,31,41,44,54,63,64,65,69,-1,-1,-1},
{2,5,36,38,47,69,-1,-1,-1,-1,-1,-1},
{9,15,48,61,65,-1,-1,-1,-1,-1,-1,-1},
{0,28,29,32,39,46,49,59,69,-1,-1,-1},
{5,21,28,60,-1,-1,-1,-1,-1,-1,-1,-1},
{19,24,31,56,-1,-1,-1,-1,-1,-1,-1,-1},
{6,7,14,21,31,35,49,50,54,-1,-1,-1},
{25,53,77,81,82,-1,-1,-1,-1,-1,-1,-1},
{2,17,29,30,58,59,60,-1,-1,-1,-1,-1},
{20,49,56,85,-1,-1,-1,-1,-1,-1,-1,-1},
{1,6,11,29,33,49,56,57,60,70,74,76},
{2,20,22,49,67,71,-1,-1,-1,-1,-1,-1},
{13,15,34,46,66,79,-1,-1,-1,-1,-1,-1},
{0,32,42,89,-1,-1,-1,-1,-1,-1,-1,-1},
{9,39,41,43,54,73,88,-1,-1,-1,-1,-1},
{14,24,28,71,74,75,-1,-1,-1,-1,-1,-1},
{6,12,30,34,49,74,75,-1,-1,-1,-1,-1},
{27,46,56,58,72,-1,-1,-1,-1,-1,-1,-1},
{10,26,29,31,53,58,-1,-1,-1,-1,-1,-1},
{0,8,11,12,38,46,51,56,61,68,78,80},
{5,9,17,37,54,80,-1,-1,-1,-1,-1,-1}};


// Typedefs
typedef int[0, numberOfChains - 1] chainId_t;

// Ints and Arrays
int numberOfChainsDone = 0;
int tasksDone[numberOfTasks];
bool runnableChains[numberOfChains];
int Machines = numberOfMachines;

// Channels
broadcast chan startMachines;
broadcast chan chainMachineChan[numberOfChains];
broadcast chan activateChains;
broadcast chan ChainDone[numberOfChains];</declaration><template><name x="5" y="5">Composer</name><declaration>// Place local declarations here.
clock time;</declaration><location id="id0" x="-102" y="-255"><name x="-112" y="-289">Init</name><label kind="invariant" x="-246" y="-238">numberOfChainsDone &lt;= numberOfChains
&amp;&amp; cost' == 1</label></location><location id="id1" x="331" y="-255"><name x="321" y="-289">Done</name></location><init ref="id0"/><transition><source ref="id0"/><target ref="id1"/><label kind="guard" x="-17" y="-289">numberOfChainsDone &gt;= numberOfChains</label></transition></template><template><name>Chain</name><parameter>const chainId_t cid</parameter><declaration>clock x;
const int chainSize = globalChainSize[cid];
int index = 0;
int TimeUnit = 2;

bool AllDependenciesDone()
{
    bool dependenciesDone = 1;
    int i;
    for (i = 0; i &lt; maxDependencies; i++)
    {
        int value = dependencies[globalChains[cid][index]][i];
        if (value == -1)
            return dependenciesDone;

        dependenciesDone &amp;= tasksDone[value];
    }
    return dependenciesDone;
}

void DecrementWork(int workDone)
{
    int currentDuration = durations[globalChains[cid][index]];

    if (workDone &gt; currentDuration)
        durations[globalChains[cid][index]] = 0;
    else
        durations[globalChains[cid][index]] -= workDone;
}</declaration><location id="id2" x="-68" y="-238"><name x="-78" y="-272">Idle</name></location><location id="id3" x="-68" y="51"><name x="-93" y="68">Running</name><label kind="invariant" x="-127" y="85">x &lt;= chainDuration[cid]</label></location><location id="id4" x="-399" y="-238"><name x="-409" y="-272">Done</name></location><init ref="id2"/><transition><source ref="id3"/><target ref="id2"/><label kind="select" x="-59" y="-119">chain_id : chainId_t</label><label kind="synchronisation" x="-59" y="-102">ChainDone[chain_id]?</label><label kind="assignment" x="-59" y="-85">DecrementWork(chainDuration[chain_id]),
Machines++</label></transition><transition><source ref="id2"/><target ref="id4"/><label kind="guard" x="-357" y="-280">index &gt;= chainSize</label><label kind="assignment" x="-357" y="-263">numberOfChainsDone++</label></transition><transition><source ref="id3"/><target ref="id2"/><label kind="guard" x="-433" y="-119">x &gt;= chainDuration[cid]</label><label kind="synchronisation" x="-433" y="-102">ChainDone[cid]!</label><label kind="assignment" x="-433" y="-85">Machines++,
tasksDone[globalChains[cid][index]] = 1,
index++</label><nail x="-170" y="-8"/><nail x="-170" y="-170"/></transition><transition><source ref="id2"/><target ref="id3"/><label kind="guard" x="136" y="-238">index &lt; chainSize &amp;&amp;
Machines &gt; 0 &amp;&amp; AllDependenciesDone()</label><label kind="assignment" x="136" y="-204">chainDuration[cid] = durations[globalChains[cid][index]],
Machines--,
x = 0</label><nail x="127" y="-238"/><nail x="127" y="51"/></transition></template><system>// Place template instantiations here.

// List one or more processes to be composed into a system.
system Composer, Chain;
    </system></nta>
