<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/researchgroup/darts/uppaal/flat-1_2.dtd'>
<nta>
<declaration>//Variables
const int numberOfChains = 26;
const int numberOfTasks = 100;
const int numberOfMachines = 4;
const int maxDependencies = 19;
const int longestChain = 8;
const int globalChainSize[numberOfChains] = {8,4,7,3,5,4,6,3,4,5,6,5,3,3,2,3,4,2,3,3,2,4,3,4,3,1};
const int globalChains[numberOfChains][longestChain] = {
{0,5,59,64,68,71,98,99},
{1,20,58,95,-1,-1,-1,-1},
{2,21,30,75,76,78,93,-1},
{3,86,88,-1,-1,-1,-1,-1},
{4,61,77,83,96,-1,-1,-1},
{6,27,33,91,-1,-1,-1,-1},
{7,15,66,70,74,82,-1,-1},
{8,60,94,-1,-1,-1,-1,-1},
{9,44,47,80,-1,-1,-1,-1},
{10,29,45,63,79,-1,-1,-1},
{11,38,50,55,81,92,-1,-1},
{12,72,87,89,97,-1,-1,-1},
{13,84,85,-1,-1,-1,-1,-1},
{14,22,69,-1,-1,-1,-1,-1},
{16,57,-1,-1,-1,-1,-1,-1},
{17,23,90,-1,-1,-1,-1,-1},
{18,36,54,56,-1,-1,-1,-1},
{19,65,-1,-1,-1,-1,-1,-1},
{24,46,62,-1,-1,-1,-1,-1},
{25,42,51,-1,-1,-1,-1,-1},
{26,73,-1,-1,-1,-1,-1,-1},
{28,37,41,49,-1,-1,-1,-1},
{31,39,67,-1,-1,-1,-1,-1},
{32,43,48,52,-1,-1,-1,-1},
{34,40,53,-1,-1,-1,-1,-1},
{35,-1,-1,-1,-1,-1,-1,-1}};
int chainDuration[numberOfChains] = {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1};
int durations[numberOfTasks] = {9,7,11,8,11,6,9,10,7,15,11,13,12,10,8,8,16,6,9,15,9,10,11,10,8,12,13,12,12,14,9,16,12,11,8,7,10,3,10,8,12,12,7,12,8,3,10,13,10,11,8,10,12,9,19,4,11,11,11,10,10,11,10,13,6,9,9,8,6,14,10,10,10,8,10,11,5,11,7,12,8,13,12,7,5,8,11,11,10,6,17,15,8,6,11,9,7,3,8,7};
const int dependencies[numberOfTasks][maxDependencies] = {
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,8,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,4,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,4,10,16,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{15,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{12,16,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,14,17,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,7,8,20,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{11,14,21,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,11,12,15,17,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,9,17,23,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,15,24,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,6,15,16,20,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,12,21,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,6,8,10,19,23,28,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,6,21,22,24,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{9,27,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,13,19,23,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,6,16,27,29,30,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,16,29,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{13,17,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,18,26,27,30,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,19,22,24,28,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,2,8,11,23,37,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{16,23,31,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{9,10,30,34,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{37,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,3,19,25,35,40,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{24,27,32,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,6,8,9,13,18,19,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,15,29,31,38,40,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{12,15,16,24,31,35,40,45,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,18,27,44,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,9,22,28,43,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{9,14,18,25,41,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,3,10,23,37,38,47,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{13,16,37,42,43,45,49,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{39,40,48,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,40,45,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{17,18,33,34,36,43,47,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,15,35,36,38,42,43,44,50,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,9,16,25,30,31,36,42,54,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{13,16,33,38,41,42,46,48,53,55,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,4,9,10,15,20,30,44,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,4,5,7,10,16,26,35,53,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,6,8,18,23,24,33,54,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,4,14,24,30,35,40,42,45,48,52,-1,-1,-1,-1,-1,-1,-1,-1},
{5,25,26,32,46,60,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{20,28,33,36,41,44,45,54,55,56,57,-1,-1,-1,-1,-1,-1,-1,-1},
{8,9,12,14,19,20,25,28,45,53,58,59,-1,-1,-1,-1,-1,-1,-1},
{11,19,27,30,40,49,50,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,7,8,9,10,12,15,17,22,29,34,38,40,42,63,-1,-1,-1,-1},
{0,35,39,47,55,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,7,17,23,25,41,63,64,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,10,11,13,22,41,59,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,6,12,13,16,20,27,28,37,43,54,63,66,-1,-1,-1,-1,-1,-1},
{1,11,12,16,22,37,39,52,59,68,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,12,34,37,47,48,58,67,68,69,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{23,26,28,33,39,40,43,49,55,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,11,13,16,18,21,22,24,26,28,35,41,42,48,70,-1,-1,-1,-1},
{2,5,6,9,13,17,26,30,33,47,49,67,-1,-1,-1,-1,-1,-1,-1},
{0,4,5,12,33,34,35,38,46,53,61,62,75,-1,-1,-1,-1,-1,-1},
{18,26,32,37,38,44,61,74,75,76,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{11,18,21,25,35,37,66,67,68,76,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,17,28,37,48,53,54,55,58,63,67,-1,-1,-1,-1,-1,-1,-1,-1},
{2,6,8,17,25,29,35,45,47,48,62,66,72,-1,-1,-1,-1,-1,-1},
{1,9,17,33,36,37,38,50,55,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,21,25,34,36,41,50,55,74,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,9,14,26,27,30,38,39,44,47,54,62,70,74,75,77,80,-1,-1},
{12,13,45,54,55,58,81,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{13,46,49,54,74,81,83,84,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,8,13,21,24,27,31,52,64,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,17,21,22,27,37,61,65,69,72,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,11,18,27,33,35,39,67,79,81,82,86,-1,-1,-1,-1,-1,-1,-1},
{8,11,18,26,42,50,87,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,8,22,23,31,37,47,67,68,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,14,15,21,30,33,38,42,49,54,56,79,87,89,-1,-1,-1,-1,-1},
{9,20,35,41,52,64,65,78,81,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{15,17,23,25,30,41,43,45,50,51,55,56,58,64,72,74,78,-1,-1},
{6,16,25,28,35,40,41,47,51,60,62,63,67,79,80,83,89,-1,-1},
{0,1,9,16,19,29,35,36,37,49,57,58,66,90,-1,-1,-1,-1,-1},
{12,13,14,17,19,24,27,28,33,42,44,55,57,61,65,72,77,80,83},
{5,10,14,25,31,32,48,51,70,89,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,9,11,15,25,33,36,44,53,55,68,71,72,87,88,96,-1,-1,-1},
{1,2,12,13,23,31,34,43,55,60,62,81,88,94,98,-1,-1,-1,-1}};


// Typedefs
typedef int[0, numberOfChains - 1] chainId_t;

// Ints and Arrays
int numberOfChainsDone = 0;
int tasksDone[numberOfTasks];
bool runnableChains[numberOfChains];
int Machines = numberOfMachines;

// Channels
broadcast chan startMachines;
broadcast chan chainMachineChan[numberOfChains];
broadcast chan activateChains;
broadcast chan ChainDone[numberOfChains];</declaration><template><name x="5" y="5">Composer</name><declaration>// Place local declarations here.
clock time;</declaration><location id="id0" x="-102" y="-255"><name x="-112" y="-289">Init</name><label kind="invariant" x="-246" y="-238">numberOfChainsDone &lt;= numberOfChains
&amp;&amp; cost' == 1</label></location><location id="id1" x="331" y="-255"><name x="321" y="-289">Done</name></location><init ref="id0"/><transition><source ref="id0"/><target ref="id1"/><label kind="guard" x="-17" y="-289">numberOfChainsDone &gt;= numberOfChains</label></transition></template><template><name>Chain</name><parameter>const chainId_t cid</parameter><declaration>clock x;
const int chainSize = globalChainSize[cid];
int index = 0;
int TimeUnit = 2;

bool AllDependenciesDone()
{
    bool dependenciesDone = 1;
    int i;
    for (i = 0; i &lt; maxDependencies; i++)
    {
        int value = dependencies[globalChains[cid][index]][i];
        if (value == -1)
            return dependenciesDone;

        dependenciesDone &amp;= tasksDone[value];
    }
    return dependenciesDone;
}

void DecrementWork(int workDone)
{
    int currentDuration = durations[globalChains[cid][index]];

    if (workDone &gt; currentDuration)
        durations[globalChains[cid][index]] = 0;
    else
        durations[globalChains[cid][index]] -= workDone;
}</declaration><location id="id2" x="-68" y="-238"><name x="-78" y="-272">Idle</name></location><location id="id3" x="-68" y="51"><name x="-93" y="68">Running</name><label kind="invariant" x="-127" y="85">x &lt;= chainDuration[cid]</label></location><location id="id4" x="-399" y="-238"><name x="-409" y="-272">Done</name></location><init ref="id2"/><transition><source ref="id3"/><target ref="id2"/><label kind="select" x="-59" y="-119">chain_id : chainId_t</label><label kind="synchronisation" x="-59" y="-102">ChainDone[chain_id]?</label><label kind="assignment" x="-59" y="-85">DecrementWork(chainDuration[chain_id]),
Machines++</label></transition><transition><source ref="id2"/><target ref="id4"/><label kind="guard" x="-357" y="-280">index &gt;= chainSize</label><label kind="assignment" x="-357" y="-263">numberOfChainsDone++</label></transition><transition><source ref="id3"/><target ref="id2"/><label kind="guard" x="-433" y="-119">x &gt;= chainDuration[cid]</label><label kind="synchronisation" x="-433" y="-102">ChainDone[cid]!</label><label kind="assignment" x="-433" y="-85">Machines++,
tasksDone[globalChains[cid][index]] = 1,
index++</label><nail x="-170" y="-8"/><nail x="-170" y="-170"/></transition><transition><source ref="id2"/><target ref="id3"/><label kind="guard" x="136" y="-238">index &lt; chainSize &amp;&amp;
Machines &gt; 0 &amp;&amp; AllDependenciesDone()</label><label kind="assignment" x="136" y="-204">chainDuration[cid] = durations[globalChains[cid][index]],
Machines--,
x = 0</label><nail x="127" y="-238"/><nail x="127" y="51"/></transition></template><system>// Place template instantiations here.

// List one or more processes to be composed into a system.
system Composer, Chain;
    </system></nta>
