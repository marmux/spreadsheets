<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/researchgroup/darts/uppaal/flat-1_2.dtd'>
<nta>
<declaration>//Variables
const int numberOfChains = 32;
const int numberOfTasks = 100;
const int numberOfMachines = 8;
const int maxDependencies = 17;
const int longestChain = 7;
const int globalChainSize[numberOfChains] = {3,5,7,6,3,3,3,3,3,3,3,3,3,2,4,5,2,3,3,3,5,3,4,4,3,1,3,3,1,1,1,1};
const int globalChains[numberOfChains][longestChain] = {
{0,15,90,-1,-1,-1,-1},
{1,45,82,87,98,-1,-1},
{2,61,70,85,88,89,95},
{3,4,41,83,86,97,-1},
{5,47,94,-1,-1,-1,-1},
{6,69,91,-1,-1,-1,-1},
{7,43,84,-1,-1,-1,-1},
{8,52,96,-1,-1,-1,-1},
{9,79,81,-1,-1,-1,-1},
{10,51,77,-1,-1,-1,-1},
{11,25,60,-1,-1,-1,-1},
{12,59,75,-1,-1,-1,-1},
{13,71,80,-1,-1,-1,-1},
{14,93,-1,-1,-1,-1,-1},
{16,66,74,92,-1,-1,-1},
{17,28,48,55,64,-1,-1},
{18,33,-1,-1,-1,-1,-1},
{19,21,99,-1,-1,-1,-1},
{20,34,57,-1,-1,-1,-1},
{22,65,73,-1,-1,-1,-1},
{23,44,46,53,76,-1,-1},
{24,29,54,-1,-1,-1,-1},
{26,27,40,78,-1,-1,-1},
{30,39,62,67,-1,-1,-1},
{31,38,72,-1,-1,-1,-1},
{32,-1,-1,-1,-1,-1,-1},
{35,49,56,-1,-1,-1,-1},
{36,58,68,-1,-1,-1,-1},
{37,-1,-1,-1,-1,-1,-1},
{42,-1,-1,-1,-1,-1,-1},
{50,-1,-1,-1,-1,-1,-1},
{63,-1,-1,-1,-1,-1,-1}};
int chainDuration[numberOfChains] = {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1};
int durations[numberOfTasks] = {7,6,6,4,15,13,15,10,12,10,6,5,14,10,6,8,13,6,4,8,9,15,6,8,13,14,5,5,15,10,12,11,7,11,7,6,6,7,5,10,1,8,15,9,14,5,6,5,9,18,5,6,7,4,7,4,13,4,3,8,8,11,6,16,5,6,10,5,13,14,7,6,10,8,9,12,4,8,5,5,4,7,11,7,5,5,6,7,9,7,11,10,17,7,6,9,5,12,7,6};
const int dependencies[numberOfTasks][maxDependencies] = {
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{10,12,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,5,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{12,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,11,12,19,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,13,21,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{9,11,20,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,8,11,19,22,23,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{12,14,19,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,16,17,26,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,11,17,20,22,25,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,12,17,24,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{12,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,11,19,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,13,18,23,29,30,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{12,19,20,24,28,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,23,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{26,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,7,9,19,31,37,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{10,19,30,35,37,38,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,16,25,27,36,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,4,10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{10,19,30,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,6,7,11,13,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,12,23,29,34,42,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,5,9,15,16,17,20,21,40,-1,-1,-1,-1,-1,-1,-1,-1},
{14,15,19,44,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,5,9,18,20,28,32,43,44,-1,-1,-1,-1,-1,-1,-1},
{11,13,17,22,28,45,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,14,34,35,42,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,11,47,48,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{10,28,29,46,47,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,7,8,9,30,44,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{20,27,31,46,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,29,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,4,14,34,35,36,48,52,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,8,48,49,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{11,17,23,34,38,42,50,51,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{13,19,23,36,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{11,12,38,41,47,56,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,6,8,12,14,22,25,29,35,46,-1,-1,-1,-1,-1,-1,-1},
{1,2,9,13,29,32,39,48,58,-1,-1,-1,-1,-1,-1,-1,-1},
{0,11,23,24,39,56,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,9,34,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{23,27,34,45,55,56,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,7,19,22,28,37,39,44,46,-1,-1,-1,-1,-1,-1,-1,-1},
{16,21,22,25,37,40,51,52,55,-1,-1,-1,-1,-1,-1,-1,-1},
{13,27,34,56,62,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{23,25,42,55,58,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,4,6,8,11,24,37,40,62,63,67,-1,-1,-1,-1,-1,-1},
{4,19,22,26,31,34,35,36,39,45,49,61,65,68,-1,-1,-1},
{7,13,17,19,20,23,31,47,48,54,64,69,-1,-1,-1,-1,-1},
{35,38,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{26,56,65,68,71,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,8,14,18,21,24,47,53,57,66,-1,-1,-1,-1,-1,-1,-1},
{12,14,33,42,47,55,59,64,67,-1,-1,-1,-1,-1,-1,-1,-1},
{9,21,43,53,54,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,12,14,18,23,34,47,49,51,56,60,62,65,72,-1,-1,-1},
{6,27,30,40,52,56,69,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,9,13,15,20,32,39,42,51,69,76,-1,-1,-1,-1,-1,-1},
{0,20,21,24,25,26,33,40,51,66,71,76,-1,-1,-1,-1,-1},
{4,26,34,44,46,48,58,62,66,70,79,-1,-1,-1,-1,-1,-1},
{0,7,8,14,23,24,27,30,35,45,50,52,53,59,68,75,77},
{1,12,20,25,41,45,68,72,75,-1,-1,-1,-1,-1,-1,-1,-1},
{12,18,37,43,70,73,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,6,8,14,15,22,28,70,76,-1,-1,-1,-1,-1,-1,-1,-1},
{6,42,53,58,68,71,83,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,12,13,17,19,24,30,49,56,70,82,84,-1,-1,-1,-1},
{1,7,17,25,27,41,44,54,66,67,85,86,-1,-1,-1,-1,-1},
{10,11,27,29,36,38,49,55,56,73,75,78,79,85,88,-1,-1},
{0,2,8,15,28,31,37,45,60,64,74,-1,-1,-1,-1,-1,-1},
{2,5,30,34,69,88,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,18,39,41,49,68,74,78,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{12,14,19,38,45,51,61,65,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,12,18,24,25,27,47,61,68,74,81,92,-1,-1,-1,-1,-1},
{16,40,44,64,71,89,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,21,28,52,63,69,78,81,85,-1,-1,-1,-1,-1,-1,-1,-1},
{8,16,22,24,36,46,53,67,86,91,-1,-1,-1,-1,-1,-1,-1},
{13,29,33,56,59,81,83,87,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{21,39,41,43,79,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1}};


// Typedefs
typedef int[0, numberOfChains - 1] chainId_t;

// Ints and Arrays
int numberOfChainsDone = 0;
int tasksDone[numberOfTasks];
bool runnableChains[numberOfChains];
int Machines = numberOfMachines;

// Channels
broadcast chan startMachines;
broadcast chan chainMachineChan[numberOfChains];
broadcast chan activateChains;
broadcast chan ChainDone[numberOfChains];</declaration><template><name x="5" y="5">Composer</name><declaration>// Place local declarations here.
clock time;</declaration><location id="id0" x="-102" y="-255"><name x="-112" y="-289">Init</name><label kind="invariant" x="-246" y="-238">numberOfChainsDone &lt;= numberOfChains
&amp;&amp; cost' == 1</label></location><location id="id1" x="331" y="-255"><name x="321" y="-289">Done</name></location><init ref="id0"/><transition><source ref="id0"/><target ref="id1"/><label kind="guard" x="-17" y="-289">numberOfChainsDone &gt;= numberOfChains</label></transition></template><template><name>Chain</name><parameter>const chainId_t cid</parameter><declaration>clock x;
const int chainSize = globalChainSize[cid];
int index = 0;
int TimeUnit = 2;

bool AllDependenciesDone()
{
    bool dependenciesDone = 1;
    int i;
    for (i = 0; i &lt; maxDependencies; i++)
    {
        int value = dependencies[globalChains[cid][index]][i];
        if (value == -1)
            return dependenciesDone;

        dependenciesDone &amp;= tasksDone[value];
    }
    return dependenciesDone;
}

void DecrementWork(int workDone)
{
    int currentDuration = durations[globalChains[cid][index]];

    if (workDone &gt; currentDuration)
        durations[globalChains[cid][index]] = 0;
    else
        durations[globalChains[cid][index]] -= workDone;
}</declaration><location id="id2" x="-68" y="-238"><name x="-78" y="-272">Idle</name></location><location id="id3" x="-68" y="51"><name x="-93" y="68">Running</name><label kind="invariant" x="-127" y="85">x &lt;= chainDuration[cid]</label></location><location id="id4" x="-399" y="-238"><name x="-409" y="-272">Done</name></location><init ref="id2"/><transition><source ref="id3"/><target ref="id2"/><label kind="select" x="-59" y="-119">chain_id : chainId_t</label><label kind="synchronisation" x="-59" y="-102">ChainDone[chain_id]?</label><label kind="assignment" x="-59" y="-85">DecrementWork(chainDuration[chain_id]),
Machines++</label></transition><transition><source ref="id2"/><target ref="id4"/><label kind="guard" x="-357" y="-280">index &gt;= chainSize</label><label kind="assignment" x="-357" y="-263">numberOfChainsDone++</label></transition><transition><source ref="id3"/><target ref="id2"/><label kind="guard" x="-433" y="-119">x &gt;= chainDuration[cid]</label><label kind="synchronisation" x="-433" y="-102">ChainDone[cid]!</label><label kind="assignment" x="-433" y="-85">Machines++,
tasksDone[globalChains[cid][index]] = 1,
index++</label><nail x="-170" y="-8"/><nail x="-170" y="-170"/></transition><transition><source ref="id2"/><target ref="id3"/><label kind="guard" x="136" y="-238">index &lt; chainSize &amp;&amp;
Machines &gt; 0 &amp;&amp; AllDependenciesDone()</label><label kind="assignment" x="136" y="-204">chainDuration[cid] = durations[globalChains[cid][index]],
Machines--,
x = 0</label><nail x="127" y="-238"/><nail x="127" y="51"/></transition></template><system>// Place template instantiations here.

// List one or more processes to be composed into a system.
system Composer, Chain;
    </system></nta>
