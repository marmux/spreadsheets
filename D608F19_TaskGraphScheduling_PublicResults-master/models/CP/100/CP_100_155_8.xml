<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/researchgroup/darts/uppaal/flat-1_2.dtd'>
<nta>
<declaration>//Variables
const int numberOfChains = 33;
const int numberOfTasks = 100;
const int numberOfMachines = 8;
const int maxDependencies = 13;
const int longestChain = 8;
const int globalChainSize[numberOfChains] = {7,2,4,3,3,7,4,4,3,5,8,5,2,6,2,2,5,3,2,3,2,3,2,1,2,2,1,1,2,1,1,1,1};
const int globalChains[numberOfChains][longestChain] = {
{0,5,38,46,71,85,97,-1},
{1,96,-1,-1,-1,-1,-1,-1},
{2,49,57,72,-1,-1,-1,-1},
{3,74,91,-1,-1,-1,-1,-1},
{4,17,81,-1,-1,-1,-1,-1},
{6,19,21,27,39,66,86,-1},
{7,54,89,94,-1,-1,-1,-1},
{8,48,53,82,-1,-1,-1,-1},
{9,44,99,-1,-1,-1,-1,-1},
{10,43,52,73,95,-1,-1,-1},
{11,34,36,60,65,76,80,93},
{12,56,58,61,88,-1,-1,-1},
{13,98,-1,-1,-1,-1,-1,-1},
{14,28,59,78,84,87,-1,-1},
{15,79,-1,-1,-1,-1,-1,-1},
{16,69,-1,-1,-1,-1,-1,-1},
{18,25,33,62,75,-1,-1,-1},
{20,30,51,-1,-1,-1,-1,-1},
{22,90,-1,-1,-1,-1,-1,-1},
{23,70,92,-1,-1,-1,-1,-1},
{24,64,-1,-1,-1,-1,-1,-1},
{26,77,83,-1,-1,-1,-1,-1},
{29,42,-1,-1,-1,-1,-1,-1},
{31,-1,-1,-1,-1,-1,-1,-1},
{32,63,-1,-1,-1,-1,-1,-1},
{35,68,-1,-1,-1,-1,-1,-1},
{37,-1,-1,-1,-1,-1,-1,-1},
{40,-1,-1,-1,-1,-1,-1,-1},
{41,67,-1,-1,-1,-1,-1,-1},
{45,-1,-1,-1,-1,-1,-1,-1},
{47,-1,-1,-1,-1,-1,-1,-1},
{50,-1,-1,-1,-1,-1,-1,-1},
{55,-1,-1,-1,-1,-1,-1,-1}};
int chainDuration[numberOfChains] = {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1};
int durations[numberOfTasks] = {23,13,1,7,1,5,17,3,8,2,4,3,5,1,5,2,5,30,4,3,3,11,1,11,6,1,1,3,2,2,13,13,18,1,19,6,16,3,1,1,8,5,4,9,21,2,23,7,4,6,4,1,2,2,4,5,1,20,5,1,1,20,12,1,1,1,3,1,16,9,1,14,10,17,6,8,1,4,3,3,2,3,1,16,3,27,7,3,1,14,9,7,2,22,10,8,17,4,22,2};
const int dependencies[numberOfTasks][maxDependencies] = {
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{9,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,4,14,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,12,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,6,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,11,17,19,20,-1,-1,-1,-1,-1,-1,-1,-1},
{9,11,17,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,6,11,16,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,18,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,12,16,18,24,-1,-1,-1,-1,-1,-1,-1,-1},
{18,25,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,14,17,19,21,-1,-1,-1,-1,-1,-1,-1,-1},
{8,14,17,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,4,10,20,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{18,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{14,23,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,7,13,25,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{9,10,11,17,25,32,-1,-1,-1,-1,-1,-1,-1},
{2,26,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,11,13,16,17,28,30,34,-1,-1,-1,-1,-1},
{0,11,18,34,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,15,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{17,22,27,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{9,17,29,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,20,36,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,17,22,29,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,10,19,33,39,-1,-1,-1,-1,-1,-1,-1,-1},
{8,9,16,31,32,33,34,35,37,39,43,-1,-1},
{20,35,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{9,25,32,38,40,-1,-1,-1,-1,-1,-1,-1,-1},
{8,19,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,8,13,14,21,22,25,35,-1,-1,-1,-1,-1},
{0,2,28,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{12,13,30,38,42,48,-1,-1,-1,-1,-1,-1,-1},
{6,14,19,22,43,46,-1,-1,-1,-1,-1,-1,-1},
{6,14,38,48,50,-1,-1,-1,-1,-1,-1,-1,-1},
{2,5,7,11,19,26,31,36,-1,-1,-1,-1,-1},
{7,20,33,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{11,12,34,37,52,-1,-1,-1,-1,-1,-1,-1,-1},
{2,24,37,49,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{16,19,43,45,56,-1,-1,-1,-1,-1,-1,-1,-1},
{6,13,28,40,41,44,50,-1,-1,-1,-1,-1,-1},
{9,18,21,25,26,29,31,36,37,49,50,-1,-1},
{13,24,26,29,32,35,48,56,58,-1,-1,-1,-1},
{11,15,16,22,23,33,45,-1,-1,-1,-1,-1,-1},
{7,32,55,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{17,24,26,28,35,41,43,48,63,-1,-1,-1,-1},
{12,33,44,57,58,60,64,-1,-1,-1,-1,-1,-1},
{3,12,17,18,19,39,40,41,53,64,-1,-1,-1},
{6,24,41,48,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{15,33,35,53,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,16,29,33,36,37,39,48,62,68,-1,-1,-1},
{23,58,62,64,68,-1,-1,-1,-1,-1,-1,-1,-1},
{5,10,20,40,46,54,62,-1,-1,-1,-1,-1,-1},
{5,20,28,34,37,40,54,57,58,65,-1,-1,-1},
{9,41,51,52,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,19,27,48,57,68,-1,-1,-1,-1,-1,-1,-1},
{20,24,30,37,47,54,60,62,66,-1,-1,-1,-1},
{8,10,31,47,65,66,67,-1,-1,-1,-1,-1,-1},
{3,26,37,38,55,73,-1,-1,-1,-1,-1,-1,-1},
{1,28,47,54,59,65,-1,-1,-1,-1,-1,-1,-1},
{1,14,15,40,42,45,75,77,-1,-1,-1,-1,-1},
{1,6,9,20,28,56,62,76,78,-1,-1,-1,-1},
{3,5,7,17,34,40,76,-1,-1,-1,-1,-1,-1},
{7,13,29,53,64,73,80,-1,-1,-1,-1,-1,-1},
{2,22,68,77,78,-1,-1,-1,-1,-1,-1,-1,-1},
{10,14,20,30,33,36,64,78,-1,-1,-1,-1,-1},
{5,11,15,18,32,35,39,59,67,71,77,-1,-1},
{25,32,50,53,54,66,71,75,79,83,-1,-1,-1},
{11,21,22,26,31,36,52,64,69,84,-1,-1,-1},
{18,21,22,24,29,33,56,61,83,84,-1,-1,-1},
{6,8,12,21,24,38,40,54,79,88,-1,-1,-1},
{10,11,21,22,24,30,67,68,-1,-1,-1,-1,-1},
{3,16,32,44,48,56,74,76,-1,-1,-1,-1,-1},
{11,14,29,37,50,57,59,68,70,84,-1,-1,-1},
{0,15,49,61,64,70,80,87,88,-1,-1,-1,-1},
{11,12,14,16,21,22,32,50,55,59,89,-1,-1},
{8,10,11,24,36,38,45,65,73,74,75,83,-1},
{1,12,35,36,39,43,46,61,65,76,82,-1,-1},
{5,6,17,20,23,34,37,47,51,74,80,81,85},
{0,13,27,43,45,55,73,78,-1,-1,-1,-1,-1},
{7,31,32,33,39,44,46,57,65,70,98,-1,-1}};


// Typedefs
typedef int[0, numberOfChains - 1] chainId_t;

// Ints and Arrays
int numberOfChainsDone = 0;
int tasksDone[numberOfTasks];
bool runnableChains[numberOfChains];
int Machines = numberOfMachines;

// Channels
broadcast chan startMachines;
broadcast chan chainMachineChan[numberOfChains];
broadcast chan activateChains;
broadcast chan ChainDone[numberOfChains];</declaration><template><name x="5" y="5">Composer</name><declaration>// Place local declarations here.
clock time;</declaration><location id="id0" x="-102" y="-255"><name x="-112" y="-289">Init</name><label kind="invariant" x="-246" y="-238">numberOfChainsDone &lt;= numberOfChains
&amp;&amp; cost' == 1</label></location><location id="id1" x="331" y="-255"><name x="321" y="-289">Done</name></location><init ref="id0"/><transition><source ref="id0"/><target ref="id1"/><label kind="guard" x="-17" y="-289">numberOfChainsDone &gt;= numberOfChains</label></transition></template><template><name>Chain</name><parameter>const chainId_t cid</parameter><declaration>clock x;
const int chainSize = globalChainSize[cid];
int index = 0;
int TimeUnit = 2;

bool AllDependenciesDone()
{
    bool dependenciesDone = 1;
    int i;
    for (i = 0; i &lt; maxDependencies; i++)
    {
        int value = dependencies[globalChains[cid][index]][i];
        if (value == -1)
            return dependenciesDone;

        dependenciesDone &amp;= tasksDone[value];
    }
    return dependenciesDone;
}

void DecrementWork(int workDone)
{
    int currentDuration = durations[globalChains[cid][index]];

    if (workDone &gt; currentDuration)
        durations[globalChains[cid][index]] = 0;
    else
        durations[globalChains[cid][index]] -= workDone;
}</declaration><location id="id2" x="-68" y="-238"><name x="-78" y="-272">Idle</name></location><location id="id3" x="-68" y="51"><name x="-93" y="68">Running</name><label kind="invariant" x="-127" y="85">x &lt;= chainDuration[cid]</label></location><location id="id4" x="-399" y="-238"><name x="-409" y="-272">Done</name></location><init ref="id2"/><transition><source ref="id3"/><target ref="id2"/><label kind="select" x="-59" y="-119">chain_id : chainId_t</label><label kind="synchronisation" x="-59" y="-102">ChainDone[chain_id]?</label><label kind="assignment" x="-59" y="-85">DecrementWork(chainDuration[chain_id]),
Machines++</label></transition><transition><source ref="id2"/><target ref="id4"/><label kind="guard" x="-357" y="-280">index &gt;= chainSize</label><label kind="assignment" x="-357" y="-263">numberOfChainsDone++</label></transition><transition><source ref="id3"/><target ref="id2"/><label kind="guard" x="-433" y="-119">x &gt;= chainDuration[cid]</label><label kind="synchronisation" x="-433" y="-102">ChainDone[cid]!</label><label kind="assignment" x="-433" y="-85">Machines++,
tasksDone[globalChains[cid][index]] = 1,
index++</label><nail x="-170" y="-8"/><nail x="-170" y="-170"/></transition><transition><source ref="id2"/><target ref="id3"/><label kind="guard" x="136" y="-238">index &lt; chainSize &amp;&amp;
Machines &gt; 0 &amp;&amp; AllDependenciesDone()</label><label kind="assignment" x="136" y="-204">chainDuration[cid] = durations[globalChains[cid][index]],
Machines--,
x = 0</label><nail x="127" y="-238"/><nail x="127" y="51"/></transition></template><system>// Place template instantiations here.

// List one or more processes to be composed into a system.
system Composer, Chain;
    </system></nta>
