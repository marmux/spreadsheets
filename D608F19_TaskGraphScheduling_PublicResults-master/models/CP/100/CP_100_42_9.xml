<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/researchgroup/darts/uppaal/flat-1_2.dtd'>
<nta>
<declaration>//Variables
const int numberOfChains = 41;
const int numberOfTasks = 100;
const int numberOfMachines = 9;
const int maxDependencies = 14;
const int longestChain = 7;
const int globalChainSize[numberOfChains] = {7,4,2,4,4,2,5,2,4,4,3,3,5,5,3,4,4,1,1,1,2,2,2,1,3,1,1,2,1,1,3,2,1,2,1,1,1,1,2,1,1};
const int globalChains[numberOfChains][longestChain] = {
{0,13,23,36,52,57,96},
{1,62,68,95,-1,-1,-1},
{2,89,-1,-1,-1,-1,-1},
{3,18,30,83,-1,-1,-1},
{4,70,85,88,-1,-1,-1},
{5,90,-1,-1,-1,-1,-1},
{6,40,48,69,80,-1,-1},
{7,75,-1,-1,-1,-1,-1},
{8,45,51,79,-1,-1,-1},
{9,53,58,77,-1,-1,-1},
{10,74,99,-1,-1,-1,-1},
{11,84,92,-1,-1,-1,-1},
{12,20,39,86,93,-1,-1},
{14,22,27,44,59,-1,-1},
{15,46,81,-1,-1,-1,-1},
{16,50,63,91,-1,-1,-1},
{17,33,38,97,-1,-1,-1},
{19,-1,-1,-1,-1,-1,-1},
{21,-1,-1,-1,-1,-1,-1},
{24,-1,-1,-1,-1,-1,-1},
{25,49,-1,-1,-1,-1,-1},
{26,61,-1,-1,-1,-1,-1},
{28,64,-1,-1,-1,-1,-1},
{29,-1,-1,-1,-1,-1,-1},
{31,41,82,-1,-1,-1,-1},
{32,-1,-1,-1,-1,-1,-1},
{34,-1,-1,-1,-1,-1,-1},
{35,56,-1,-1,-1,-1,-1},
{37,-1,-1,-1,-1,-1,-1},
{42,-1,-1,-1,-1,-1,-1},
{43,65,94,-1,-1,-1,-1},
{47,72,-1,-1,-1,-1,-1},
{54,-1,-1,-1,-1,-1,-1},
{55,67,-1,-1,-1,-1,-1},
{60,-1,-1,-1,-1,-1,-1},
{66,-1,-1,-1,-1,-1,-1},
{71,-1,-1,-1,-1,-1,-1},
{73,-1,-1,-1,-1,-1,-1},
{76,98,-1,-1,-1,-1,-1},
{78,-1,-1,-1,-1,-1,-1},
{87,-1,-1,-1,-1,-1,-1}};
int chainDuration[numberOfChains] = {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1};
int durations[numberOfTasks] = {2,8,3,6,1,33,1,9,5,15,11,1,10,10,5,3,18,6,16,12,7,2,9,5,3,16,5,5,16,4,1,1,5,4,3,6,1,10,2,6,9,2,1,6,2,3,13,8,6,17,2,10,6,8,9,20,7,2,2,12,12,1,14,2,6,2,3,8,3,8,2,1,9,2,1,1,4,7,1,2,4,2,1,5,6,8,1,17,3,2,9,3,15,9,2,1,30,11,13,12};
const int dependencies[numberOfTasks][maxDependencies] = {
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,12,16,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,3,14,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{13,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,14,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,14,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,6,16,22,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{20,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{18,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{12,13,14,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,5,17,19,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{17,20,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{11,17,23,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{20,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,12,14,25,33,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{16,18,20,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,5,6,11,15,31,-1,-1,-1,-1,-1,-1,-1,-1},
{2,31,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,15,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{25,27,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,15,30,33,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,39,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{17,27,40,45,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,5,25,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{11,16,24,44,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,6,38,45,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{36,42,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{9,13,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{12,22,46,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{14,45,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,15,16,35,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,8,52,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{40,47,53,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,5,26,29,44,49,-1,-1,-1,-1,-1,-1,-1,-1},
{47,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,13,26,44,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,4,12,28,32,36,49,50,-1,-1,-1,-1,-1,-1},
{20,28,45,47,50,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{28,44,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{15,33,35,43,55,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{25,38,55,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{34,46,62,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{21,22,41,46,48,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,8,13,26,28,44,48,50,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{12,25,47,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{15,45,55,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{10,20,38,57,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,7,19,25,39,41,57,-1,-1,-1,-1,-1,-1,-1},
{48,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{24,27,29,42,52,58,65,-1,-1,-1,-1,-1,-1,-1},
{8,25,44,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{10,51,52,63,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{11,33,47,53,69,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{12,22,29,46,69,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,41,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,3,15,30,44,60,67,-1,-1,-1,-1,-1,-1,-1},
{3,11,37,44,46,58,-1,-1,-1,-1,-1,-1,-1,-1},
{2,9,14,21,40,70,-1,-1,-1,-1,-1,-1,-1,-1},
{7,15,39,52,66,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{52,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{62,71,85,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,23,29,41,50,55,76,-1,-1,-1,-1,-1,-1,-1},
{4,5,9,11,15,18,43,63,81,-1,-1,-1,-1,-1},
{20,22,63,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,12,15,53,81,84,-1,-1,-1,-1,-1,-1,-1,-1},
{35,45,56,62,86,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,15,16,54,65,78,-1,-1,-1,-1,-1,-1,-1,-1},
{28,40,49,52,68,69,84,86,-1,-1,-1,-1,-1,-1},
{1,2,8,11,24,35,36,48,50,51,57,67,76,77},
{10,15,31,32,38,41,54,64,71,-1,-1,-1,-1,-1},
{8,14,76,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,15,40,46,65,74,-1,-1,-1,-1,-1,-1,-1,-1}};


// Typedefs
typedef int[0, numberOfChains - 1] chainId_t;

// Ints and Arrays
int numberOfChainsDone = 0;
int tasksDone[numberOfTasks];
bool runnableChains[numberOfChains];
int Machines = numberOfMachines;

// Channels
broadcast chan startMachines;
broadcast chan chainMachineChan[numberOfChains];
broadcast chan activateChains;
broadcast chan ChainDone[numberOfChains];</declaration><template><name x="5" y="5">Composer</name><declaration>// Place local declarations here.
clock time;</declaration><location id="id0" x="-102" y="-255"><name x="-112" y="-289">Init</name><label kind="invariant" x="-246" y="-238">numberOfChainsDone &lt;= numberOfChains
&amp;&amp; cost' == 1</label></location><location id="id1" x="331" y="-255"><name x="321" y="-289">Done</name></location><init ref="id0"/><transition><source ref="id0"/><target ref="id1"/><label kind="guard" x="-17" y="-289">numberOfChainsDone &gt;= numberOfChains</label></transition></template><template><name>Chain</name><parameter>const chainId_t cid</parameter><declaration>clock x;
const int chainSize = globalChainSize[cid];
int index = 0;
int TimeUnit = 2;

bool AllDependenciesDone()
{
    bool dependenciesDone = 1;
    int i;
    for (i = 0; i &lt; maxDependencies; i++)
    {
        int value = dependencies[globalChains[cid][index]][i];
        if (value == -1)
            return dependenciesDone;

        dependenciesDone &amp;= tasksDone[value];
    }
    return dependenciesDone;
}

void DecrementWork(int workDone)
{
    int currentDuration = durations[globalChains[cid][index]];

    if (workDone &gt; currentDuration)
        durations[globalChains[cid][index]] = 0;
    else
        durations[globalChains[cid][index]] -= workDone;
}</declaration><location id="id2" x="-68" y="-238"><name x="-78" y="-272">Idle</name></location><location id="id3" x="-68" y="51"><name x="-93" y="68">Running</name><label kind="invariant" x="-127" y="85">x &lt;= chainDuration[cid]</label></location><location id="id4" x="-399" y="-238"><name x="-409" y="-272">Done</name></location><init ref="id2"/><transition><source ref="id3"/><target ref="id2"/><label kind="select" x="-59" y="-119">chain_id : chainId_t</label><label kind="synchronisation" x="-59" y="-102">ChainDone[chain_id]?</label><label kind="assignment" x="-59" y="-85">DecrementWork(chainDuration[chain_id]),
Machines++</label></transition><transition><source ref="id2"/><target ref="id4"/><label kind="guard" x="-357" y="-280">index &gt;= chainSize</label><label kind="assignment" x="-357" y="-263">numberOfChainsDone++</label></transition><transition><source ref="id3"/><target ref="id2"/><label kind="guard" x="-433" y="-119">x &gt;= chainDuration[cid]</label><label kind="synchronisation" x="-433" y="-102">ChainDone[cid]!</label><label kind="assignment" x="-433" y="-85">Machines++,
tasksDone[globalChains[cid][index]] = 1,
index++</label><nail x="-170" y="-8"/><nail x="-170" y="-170"/></transition><transition><source ref="id2"/><target ref="id3"/><label kind="guard" x="136" y="-238">index &lt; chainSize &amp;&amp;
Machines &gt; 0 &amp;&amp; AllDependenciesDone()</label><label kind="assignment" x="136" y="-204">chainDuration[cid] = durations[globalChains[cid][index]],
Machines--,
x = 0</label><nail x="127" y="-238"/><nail x="127" y="51"/></transition></template><system>// Place template instantiations here.

// List one or more processes to be composed into a system.
system Composer, Chain;
    </system></nta>
