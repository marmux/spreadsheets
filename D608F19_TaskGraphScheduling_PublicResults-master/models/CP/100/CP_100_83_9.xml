<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/researchgroup/darts/uppaal/flat-1_2.dtd'>
<nta>
<declaration>//Variables
const int numberOfChains = 37;
const int numberOfTasks = 100;
const int numberOfMachines = 9;
const int maxDependencies = 12;
const int longestChain = 7;
const int globalChainSize[numberOfChains] = {7,5,4,3,3,2,3,3,3,4,4,6,3,5,3,2,2,3,2,3,2,3,3,2,2,1,2,2,2,2,2,1,2,1,1,1,1};
const int globalChains[numberOfChains][longestChain] = {
{0,17,23,47,55,72,78},
{1,77,87,90,93,-1,-1},
{2,6,24,82,-1,-1,-1},
{3,75,99,-1,-1,-1,-1},
{4,76,79,-1,-1,-1,-1},
{5,92,-1,-1,-1,-1,-1},
{7,32,67,-1,-1,-1,-1},
{8,46,95,-1,-1,-1,-1},
{9,52,66,-1,-1,-1,-1},
{10,59,86,91,-1,-1,-1},
{11,40,85,88,-1,-1,-1},
{12,19,57,84,89,98,-1},
{13,49,96,-1,-1,-1,-1},
{14,48,54,62,80,-1,-1},
{15,51,65,-1,-1,-1,-1},
{16,73,-1,-1,-1,-1,-1},
{18,83,-1,-1,-1,-1,-1},
{20,33,61,-1,-1,-1,-1},
{21,29,-1,-1,-1,-1,-1},
{22,60,70,-1,-1,-1,-1},
{25,81,-1,-1,-1,-1,-1},
{26,27,71,-1,-1,-1,-1},
{28,56,68,-1,-1,-1,-1},
{30,64,-1,-1,-1,-1,-1},
{31,36,-1,-1,-1,-1,-1},
{34,-1,-1,-1,-1,-1,-1},
{35,63,-1,-1,-1,-1,-1},
{37,38,-1,-1,-1,-1,-1},
{39,97,-1,-1,-1,-1,-1},
{41,45,-1,-1,-1,-1,-1},
{42,44,-1,-1,-1,-1,-1},
{43,-1,-1,-1,-1,-1,-1},
{50,58,-1,-1,-1,-1,-1},
{53,-1,-1,-1,-1,-1,-1},
{69,-1,-1,-1,-1,-1,-1},
{74,-1,-1,-1,-1,-1,-1},
{94,-1,-1,-1,-1,-1,-1}};
int chainDuration[numberOfChains] = {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1};
int durations[numberOfTasks] = {8,7,4,6,5,5,6,6,5,7,4,7,4,5,6,8,5,4,6,6,6,6,5,6,6,5,6,4,7,5,5,7,6,5,6,6,5,5,5,4,8,5,6,5,5,7,5,7,5,6,6,4,7,5,6,5,7,4,7,6,7,5,6,7,6,6,5,6,6,5,5,3,7,6,6,6,5,5,5,5,5,6,4,6,5,6,6,6,6,6,6,6,6,7,4,6,8,8,7,3};
const int dependencies[numberOfTasks][maxDependencies] = {
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{11,15,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{12,17,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,19,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,15,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,17,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,3,4,5,6,10,13,15,22,-1,-1,-1},
{8,19,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{12,26,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,6,21,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{13,25,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,14,21,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{10,12,20,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,19,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{10,12,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,16,21,31,-1,-1,-1,-1,-1,-1,-1,-1},
{30,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{14,37,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{14,33,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,11,32,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{35,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{10,39,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,15,20,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{20,42,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{17,25,41,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,8,26,31,36,-1,-1,-1,-1,-1,-1,-1},
{2,7,23,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,14,47,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{10,13,26,47,-1,-1,-1,-1,-1,-1,-1,-1},
{9,21,22,32,-1,-1,-1,-1,-1,-1,-1,-1},
{0,13,15,25,32,36,-1,-1,-1,-1,-1,-1},
{0,6,9,12,25,39,49,51,-1,-1,-1,-1},
{11,13,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,14,17,27,48,50,-1,-1,-1,-1,-1,-1},
{23,42,45,47,51,52,-1,-1,-1,-1,-1,-1},
{9,22,28,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{19,47,52,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,11,33,50,-1,-1,-1,-1,-1,-1,-1,-1},
{6,10,24,41,53,56,-1,-1,-1,-1,-1,-1},
{9,16,22,24,33,41,-1,-1,-1,-1,-1,-1},
{11,14,32,33,39,48,-1,-1,-1,-1,-1,-1},
{12,18,27,36,39,54,58,-1,-1,-1,-1,-1},
{13,23,35,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,17,19,30,36,39,48,-1,-1,-1,-1,-1},
{51,58,64,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,28,46,48,51,52,-1,-1,-1,-1,-1,-1},
{3,17,32,33,35,40,58,65,-1,-1,-1,-1},
{31,35,55,56,62,-1,-1,-1,-1,-1,-1,-1},
{14,56,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{27,52,60,69,-1,-1,-1,-1,-1,-1,-1,-1},
{12,20,27,35,40,43,-1,-1,-1,-1,-1,-1},
{0,1,7,14,40,43,55,67,68,70,-1,-1},
{15,16,25,57,62,71,-1,-1,-1,-1,-1,-1},
{21,22,23,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,6,18,22,38,55,58,62,-1,-1,-1,-1},
{3,4,6,7,12,20,24,-1,-1,-1,-1,-1},
{1,2,11,14,22,25,32,42,55,63,71,-1},
{4,17,20,25,36,42,45,55,61,67,72,-1},
{0,4,13,40,52,67,76,-1,-1,-1,-1,-1},
{36,52,62,75,-1,-1,-1,-1,-1,-1,-1,-1},
{6,25,31,33,38,64,76,-1,-1,-1,-1,-1},
{0,4,7,10,17,18,24,26,48,51,58,61},
{0,11,18,46,56,63,-1,-1,-1,-1,-1,-1},
{2,22,23,57,62,71,74,-1,-1,-1,-1,-1},
{9,15,18,29,34,40,73,76,-1,-1,-1,-1},
{6,8,9,18,20,59,-1,-1,-1,-1,-1,-1},
{2,4,17,18,20,33,58,77,83,86,-1,-1},
{1,15,19,38,44,45,48,69,85,86,-1,-1},
{11,42,60,84,-1,-1,-1,-1,-1,-1,-1,-1},
{15,23,56,68,69,87,88,-1,-1,-1,-1,-1},
{12,16,17,32,40,53,63,75,83,86,-1,-1},
{5,9,11,24,33,41,48,66,-1,-1,-1,-1},
{0,5,27,34,38,52,64,65,90,-1,-1,-1},
{7,57,76,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,8,26,46,57,68,73,81,89,-1,-1,-1},
{11,21,24,25,44,49,61,-1,-1,-1,-1,-1},
{9,31,39,90,-1,-1,-1,-1,-1,-1,-1,-1},
{40,43,44,47,74,89,-1,-1,-1,-1,-1,-1},
{19,20,29,43,57,62,72,75,77,88,98,-1}};


// Typedefs
typedef int[0, numberOfChains - 1] chainId_t;

// Ints and Arrays
int numberOfChainsDone = 0;
int tasksDone[numberOfTasks];
bool runnableChains[numberOfChains];
int Machines = numberOfMachines;

// Channels
broadcast chan startMachines;
broadcast chan chainMachineChan[numberOfChains];
broadcast chan activateChains;
broadcast chan ChainDone[numberOfChains];</declaration><template><name x="5" y="5">Composer</name><declaration>// Place local declarations here.
clock time;</declaration><location id="id0" x="-102" y="-255"><name x="-112" y="-289">Init</name><label kind="invariant" x="-246" y="-238">numberOfChainsDone &lt;= numberOfChains
&amp;&amp; cost' == 1</label></location><location id="id1" x="331" y="-255"><name x="321" y="-289">Done</name></location><init ref="id0"/><transition><source ref="id0"/><target ref="id1"/><label kind="guard" x="-17" y="-289">numberOfChainsDone &gt;= numberOfChains</label></transition></template><template><name>Chain</name><parameter>const chainId_t cid</parameter><declaration>clock x;
const int chainSize = globalChainSize[cid];
int index = 0;
int TimeUnit = 2;

bool AllDependenciesDone()
{
    bool dependenciesDone = 1;
    int i;
    for (i = 0; i &lt; maxDependencies; i++)
    {
        int value = dependencies[globalChains[cid][index]][i];
        if (value == -1)
            return dependenciesDone;

        dependenciesDone &amp;= tasksDone[value];
    }
    return dependenciesDone;
}

void DecrementWork(int workDone)
{
    int currentDuration = durations[globalChains[cid][index]];

    if (workDone &gt; currentDuration)
        durations[globalChains[cid][index]] = 0;
    else
        durations[globalChains[cid][index]] -= workDone;
}</declaration><location id="id2" x="-68" y="-238"><name x="-78" y="-272">Idle</name></location><location id="id3" x="-68" y="51"><name x="-93" y="68">Running</name><label kind="invariant" x="-127" y="85">x &lt;= chainDuration[cid]</label></location><location id="id4" x="-399" y="-238"><name x="-409" y="-272">Done</name></location><init ref="id2"/><transition><source ref="id3"/><target ref="id2"/><label kind="select" x="-59" y="-119">chain_id : chainId_t</label><label kind="synchronisation" x="-59" y="-102">ChainDone[chain_id]?</label><label kind="assignment" x="-59" y="-85">DecrementWork(chainDuration[chain_id]),
Machines++</label></transition><transition><source ref="id2"/><target ref="id4"/><label kind="guard" x="-357" y="-280">index &gt;= chainSize</label><label kind="assignment" x="-357" y="-263">numberOfChainsDone++</label></transition><transition><source ref="id3"/><target ref="id2"/><label kind="guard" x="-433" y="-119">x &gt;= chainDuration[cid]</label><label kind="synchronisation" x="-433" y="-102">ChainDone[cid]!</label><label kind="assignment" x="-433" y="-85">Machines++,
tasksDone[globalChains[cid][index]] = 1,
index++</label><nail x="-170" y="-8"/><nail x="-170" y="-170"/></transition><transition><source ref="id2"/><target ref="id3"/><label kind="guard" x="136" y="-238">index &lt; chainSize &amp;&amp;
Machines &gt; 0 &amp;&amp; AllDependenciesDone()</label><label kind="assignment" x="136" y="-204">chainDuration[cid] = durations[globalChains[cid][index]],
Machines--,
x = 0</label><nail x="127" y="-238"/><nail x="127" y="51"/></transition></template><system>// Place template instantiations here.

// List one or more processes to be composed into a system.
system Composer, Chain;
    </system></nta>
