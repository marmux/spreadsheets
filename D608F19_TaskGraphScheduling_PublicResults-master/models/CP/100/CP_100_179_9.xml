<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/researchgroup/darts/uppaal/flat-1_2.dtd'>
<nta>
<declaration>//Variables
const int numberOfChains = 37;
const int numberOfTasks = 100;
const int numberOfMachines = 9;
const int maxDependencies = 16;
const int longestChain = 6;
const int globalChainSize[numberOfChains] = {5,6,3,5,5,2,6,2,4,3,3,3,3,3,3,4,3,4,4,1,3,3,3,1,2,3,1,2,1,2,1,1,1,1,1,1,1};
const int globalChains[numberOfChains][longestChain] = {
{0,10,22,95,96,-1},
{1,29,49,55,82,97},
{2,48,77,-1,-1,-1},
{3,14,53,67,87,-1},
{4,60,68,80,98,-1},
{5,93,-1,-1,-1,-1},
{6,17,58,79,92,99},
{7,74,-1,-1,-1,-1},
{8,42,81,89,-1,-1},
{9,71,78,-1,-1,-1},
{11,38,85,-1,-1,-1},
{12,61,86,-1,-1,-1},
{13,64,91,-1,-1,-1},
{15,33,63,-1,-1,-1},
{16,32,69,-1,-1,-1},
{18,31,50,83,-1,-1},
{19,54,70,-1,-1,-1},
{20,27,62,73,-1,-1},
{21,37,65,75,-1,-1},
{23,-1,-1,-1,-1,-1},
{24,40,52,-1,-1,-1},
{25,66,72,-1,-1,-1},
{26,45,88,-1,-1,-1},
{28,-1,-1,-1,-1,-1},
{30,46,-1,-1,-1,-1},
{34,44,94,-1,-1,-1},
{35,-1,-1,-1,-1,-1},
{36,84,-1,-1,-1,-1},
{39,-1,-1,-1,-1,-1},
{41,76,-1,-1,-1,-1},
{43,-1,-1,-1,-1,-1},
{47,-1,-1,-1,-1,-1},
{51,-1,-1,-1,-1,-1},
{56,-1,-1,-1,-1,-1},
{57,-1,-1,-1,-1,-1},
{59,-1,-1,-1,-1,-1},
{90,-1,-1,-1,-1,-1}};
int chainDuration[numberOfChains] = {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1};
int durations[numberOfTasks] = {5,6,6,5,6,4,5,11,7,4,10,6,6,4,4,5,4,9,8,6,5,14,5,5,5,6,6,6,12,13,5,5,7,12,5,5,6,6,7,5,10,6,5,12,5,12,8,9,8,5,5,4,5,9,7,8,10,4,6,5,5,3,6,4,13,7,6,8,6,13,15,5,6,4,9,12,8,7,6,7,10,6,7,7,12,3,6,7,4,9,9,13,10,11,14,10,5,3,16,10};
const int dependencies[numberOfTasks][maxDependencies] = {
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,3,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,7,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,4,6,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{10,12,15,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{18,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{17,20,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,9,20,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,14,19,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,14,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,7,16,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{9,10,14,18,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,5,7,16,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,4,12,15,21,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{16,17,24,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,19,21,26,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{9,13,20,21,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,11,17,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{10,21,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{15,17,24,25,26,37,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{10,32,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,8,14,16,28,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{25,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{17,25,30,34,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,16,22,26,38,39,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,6,18,21,30,35,36,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{9,21,22,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,8,25,39,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{10,19,24,29,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{9,17,31,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,13,15,16,36,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,15,24,40,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,10,13,14,35,40,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,6,18,19,28,37,40,43,44,-1,-1,-1,-1,-1,-1,-1},
{1,20,22,49,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{12,37,42,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,5,13,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,6,7,15,17,42,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,4,9,10,21,26,36,38,-1,-1,-1,-1,-1,-1,-1,-1},
{8,12,15,17,37,40,48,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,14,24,27,31,52,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{10,11,30,33,41,46,58,59,-1,-1,-1,-1,-1,-1,-1,-1},
{0,7,13,16,35,38,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,22,27,37,46,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,25,30,33,41,50,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,30,31,33,43,44,53,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,14,17,18,30,32,44,45,47,60,-1,-1,-1,-1,-1,-1},
{14,32,33,34,38,41,46,58,-1,-1,-1,-1,-1,-1,-1,-1},
{12,20,41,54,57,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{9,10,21,26,29,32,36,60,-1,-1,-1,-1,-1,-1,-1,-1},
{41,66,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{16,30,32,37,44,50,56,62,-1,-1,-1,-1,-1,-1,-1,-1},
{0,5,7,8,15,26,27,41,44,53,61,62,-1,-1,-1,-1},
{8,9,33,34,38,39,51,56,65,-1,-1,-1,-1,-1,-1,-1},
{15,19,32,41,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,7,34,37,39,43,44,48,55,63,-1,-1,-1,-1,-1,-1},
{8,11,12,15,22,24,25,33,44,53,61,69,70,71,-1,-1},
{4,5,19,25,27,58,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{11,22,32,33,48,52,64,68,-1,-1,-1,-1,-1,-1,-1,-1},
{13,24,26,28,36,38,42,48,50,52,63,70,-1,-1,-1,-1},
{7,15,17,22,23,31,34,39,41,55,61,-1,-1,-1,-1,-1},
{12,14,19,39,40,50,53,68,-1,-1,-1,-1,-1,-1,-1,-1},
{5,30,36,42,50,71,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,8,12,13,21,22,24,35,38,51,59,-1,-1,-1,-1,-1},
{9,15,20,26,27,28,29,30,38,42,54,59,61,66,69,75},
{9,24,31,54,65,67,80,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{21,31,34,35,39,41,45,53,-1,-1,-1,-1,-1,-1,-1,-1},
{9,21,24,68,76,81,83,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,5,7,27,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,6,17,19,34,38,39,57,64,69,-1,-1,-1,-1,-1,-1},
{10,14,23,29,31,34,39,41,61,65,70,72,79,-1,-1,-1},
{0,5,13,26,29,33,36,41,45,60,65,73,75,78,-1,-1},
{13,44,55,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,8,10,22,25,44,51,52,53,57,71,83,-1,-1,-1,-1},
{1,2,29,44,69,71,72,88,93,95,-1,-1,-1,-1,-1,-1},
{7,21,23,30,31,36,64,70,82,-1,-1,-1,-1,-1,-1,-1},
{8,40,41,43,47,58,65,73,80,82,85,92,94,-1,-1,-1},
{4,44,51,66,82,86,89,92,-1,-1,-1,-1,-1,-1,-1,-1}};


// Typedefs
typedef int[0, numberOfChains - 1] chainId_t;

// Ints and Arrays
int numberOfChainsDone = 0;
int tasksDone[numberOfTasks];
bool runnableChains[numberOfChains];
int Machines = numberOfMachines;

// Channels
broadcast chan startMachines;
broadcast chan chainMachineChan[numberOfChains];
broadcast chan activateChains;
broadcast chan ChainDone[numberOfChains];</declaration><template><name x="5" y="5">Composer</name><declaration>// Place local declarations here.
clock time;</declaration><location id="id0" x="-102" y="-255"><name x="-112" y="-289">Init</name><label kind="invariant" x="-246" y="-238">numberOfChainsDone &lt;= numberOfChains
&amp;&amp; cost' == 1</label></location><location id="id1" x="331" y="-255"><name x="321" y="-289">Done</name></location><init ref="id0"/><transition><source ref="id0"/><target ref="id1"/><label kind="guard" x="-17" y="-289">numberOfChainsDone &gt;= numberOfChains</label></transition></template><template><name>Chain</name><parameter>const chainId_t cid</parameter><declaration>clock x;
const int chainSize = globalChainSize[cid];
int index = 0;
int TimeUnit = 2;

bool AllDependenciesDone()
{
    bool dependenciesDone = 1;
    int i;
    for (i = 0; i &lt; maxDependencies; i++)
    {
        int value = dependencies[globalChains[cid][index]][i];
        if (value == -1)
            return dependenciesDone;

        dependenciesDone &amp;= tasksDone[value];
    }
    return dependenciesDone;
}

void DecrementWork(int workDone)
{
    int currentDuration = durations[globalChains[cid][index]];

    if (workDone &gt; currentDuration)
        durations[globalChains[cid][index]] = 0;
    else
        durations[globalChains[cid][index]] -= workDone;
}</declaration><location id="id2" x="-68" y="-238"><name x="-78" y="-272">Idle</name></location><location id="id3" x="-68" y="51"><name x="-93" y="68">Running</name><label kind="invariant" x="-127" y="85">x &lt;= chainDuration[cid]</label></location><location id="id4" x="-399" y="-238"><name x="-409" y="-272">Done</name></location><init ref="id2"/><transition><source ref="id3"/><target ref="id2"/><label kind="select" x="-59" y="-119">chain_id : chainId_t</label><label kind="synchronisation" x="-59" y="-102">ChainDone[chain_id]?</label><label kind="assignment" x="-59" y="-85">DecrementWork(chainDuration[chain_id]),
Machines++</label></transition><transition><source ref="id2"/><target ref="id4"/><label kind="guard" x="-357" y="-280">index &gt;= chainSize</label><label kind="assignment" x="-357" y="-263">numberOfChainsDone++</label></transition><transition><source ref="id3"/><target ref="id2"/><label kind="guard" x="-433" y="-119">x &gt;= chainDuration[cid]</label><label kind="synchronisation" x="-433" y="-102">ChainDone[cid]!</label><label kind="assignment" x="-433" y="-85">Machines++,
tasksDone[globalChains[cid][index]] = 1,
index++</label><nail x="-170" y="-8"/><nail x="-170" y="-170"/></transition><transition><source ref="id2"/><target ref="id3"/><label kind="guard" x="136" y="-238">index &lt; chainSize &amp;&amp;
Machines &gt; 0 &amp;&amp; AllDependenciesDone()</label><label kind="assignment" x="136" y="-204">chainDuration[cid] = durations[globalChains[cid][index]],
Machines--,
x = 0</label><nail x="127" y="-238"/><nail x="127" y="51"/></transition></template><system>// Place template instantiations here.

// List one or more processes to be composed into a system.
system Composer, Chain;
    </system></nta>
