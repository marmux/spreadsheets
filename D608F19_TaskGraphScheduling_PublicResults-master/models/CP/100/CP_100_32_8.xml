<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/researchgroup/darts/uppaal/flat-1_2.dtd'>
<nta>
<declaration>//Variables
const int numberOfChains = 37;
const int numberOfTasks = 100;
const int numberOfMachines = 8;
const int maxDependencies = 11;
const int longestChain = 6;
const int globalChainSize[numberOfChains] = {5,2,5,6,5,4,3,3,3,2,4,5,3,3,4,3,3,4,3,2,2,2,1,3,2,3,1,3,1,2,1,1,2,1,1,1,1};
const int globalChains[numberOfChains][longestChain] = {
{0,17,36,73,83,-1},
{1,88,-1,-1,-1,-1},
{2,9,67,85,95,-1},
{3,11,31,55,71,84},
{4,12,58,70,90,-1},
{5,51,68,98,-1,-1},
{6,33,82,-1,-1,-1},
{7,34,89,-1,-1,-1},
{8,47,97,-1,-1,-1},
{10,50,-1,-1,-1,-1},
{13,61,69,86,-1,-1},
{14,60,74,79,99,-1},
{15,40,81,-1,-1,-1},
{16,52,76,-1,-1,-1},
{18,37,63,92,-1,-1},
{19,32,96,-1,-1,-1},
{20,29,54,-1,-1,-1},
{21,46,53,94,-1,-1},
{22,35,62,-1,-1,-1},
{23,93,-1,-1,-1,-1},
{24,78,-1,-1,-1,-1},
{25,64,-1,-1,-1,-1},
{26,-1,-1,-1,-1,-1},
{27,39,87,-1,-1,-1},
{28,48,-1,-1,-1,-1},
{30,77,80,-1,-1,-1},
{38,-1,-1,-1,-1,-1},
{41,57,75,-1,-1,-1},
{42,-1,-1,-1,-1,-1},
{43,65,-1,-1,-1,-1},
{44,-1,-1,-1,-1,-1},
{45,-1,-1,-1,-1,-1},
{49,66,-1,-1,-1,-1},
{56,-1,-1,-1,-1,-1},
{59,-1,-1,-1,-1,-1},
{72,-1,-1,-1,-1,-1},
{91,-1,-1,-1,-1,-1}};
int chainDuration[numberOfChains] = {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1};
int durations[numberOfTasks] = {9,10,10,8,7,9,4,7,1,6,8,6,2,9,5,3,3,6,7,1,7,8,9,7,2,4,8,3,9,8,9,5,4,7,6,3,5,4,7,9,4,1,10,3,6,4,4,3,3,6,5,4,5,6,10,7,6,3,4,3,8,8,9,4,3,8,7,6,5,2,5,6,3,4,5,9,6,4,6,7,5,1,3,3,5,7,4,6,7,6,3,2,7,6,7,1,9,5,8,1};
const int dependencies[numberOfTasks][maxDependencies] = {
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,3,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,9,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{22,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,14,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{22,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,20,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{23,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{9,11,13,-1,-1,-1,-1,-1,-1,-1,-1},
{14,19,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,6,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,7,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,22,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{17,27,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{18,25,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,19,27,-1,-1,-1,-1,-1,-1,-1,-1},
{6,15,24,-1,-1,-1,-1,-1,-1,-1,-1},
{4,20,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,22,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{29,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{18,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{30,36,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{10,21,26,-1,-1,-1,-1,-1,-1,-1,-1},
{8,27,38,-1,-1,-1,-1,-1,-1,-1,-1},
{17,28,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{14,19,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,10,32,-1,-1,-1,-1,-1,-1,-1,-1},
{5,11,42,-1,-1,-1,-1,-1,-1,-1,-1},
{4,7,16,19,20,-1,-1,-1,-1,-1,-1},
{5,22,30,46,52,-1,-1,-1,-1,-1,-1},
{14,29,42,-1,-1,-1,-1,-1,-1,-1,-1},
{10,21,31,34,37,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{14,22,41,49,-1,-1,-1,-1,-1,-1,-1},
{8,12,15,28,-1,-1,-1,-1,-1,-1,-1},
{27,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,6,14,29,-1,-1,-1,-1,-1,-1,-1},
{6,13,15,30,31,-1,-1,-1,-1,-1,-1},
{19,35,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,16,17,26,30,37,48,-1,-1,-1,-1},
{25,30,31,-1,-1,-1,-1,-1,-1,-1,-1},
{34,43,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{49,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,9,19,24,28,45,56,-1,-1,-1,-1},
{30,40,42,51,54,55,56,-1,-1,-1,-1},
{10,42,61,-1,-1,-1,-1,-1,-1,-1,-1},
{6,58,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{31,46,55,57,58,-1,-1,-1,-1,-1,-1},
{22,41,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,31,36,53,-1,-1,-1,-1,-1,-1,-1},
{13,41,60,-1,-1,-1,-1,-1,-1,-1,-1},
{43,57,58,-1,-1,-1,-1,-1,-1,-1,-1},
{7,25,41,51,52,-1,-1,-1,-1,-1,-1},
{6,11,30,-1,-1,-1,-1,-1,-1,-1,-1},
{13,24,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,74,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,29,77,-1,-1,-1,-1,-1,-1,-1,-1},
{0,40,43,-1,-1,-1,-1,-1,-1,-1,-1},
{7,33,39,46,60,76,-1,-1,-1,-1,-1},
{0,10,20,34,65,73,75,78,-1,-1,-1},
{36,38,55,71,75,-1,-1,-1,-1,-1,-1},
{13,30,44,52,67,73,-1,-1,-1,-1,-1},
{0,7,16,28,37,45,66,69,78,-1,-1},
{7,17,30,39,-1,-1,-1,-1,-1,-1,-1},
{0,1,5,7,8,10,21,61,-1,-1,-1},
{22,24,34,58,62,-1,-1,-1,-1,-1,-1},
{39,46,55,56,64,70,-1,-1,-1,-1,-1},
{0,61,63,-1,-1,-1,-1,-1,-1,-1,-1},
{1,7,53,63,69,-1,-1,-1,-1,-1,-1},
{23,53,85,-1,-1,-1,-1,-1,-1,-1,-1},
{5,53,66,67,-1,-1,-1,-1,-1,-1,-1},
{13,27,56,63,72,73,79,80,84,85,86},
{16,19,32,64,91,-1,-1,-1,-1,-1,-1},
{8,42,47,-1,-1,-1,-1,-1,-1,-1,-1},
{9,19,24,28,45,49,65,68,80,-1,-1},
{30,68,74,75,79,-1,-1,-1,-1,-1,-1}};


// Typedefs
typedef int[0, numberOfChains - 1] chainId_t;

// Ints and Arrays
int numberOfChainsDone = 0;
int tasksDone[numberOfTasks];
bool runnableChains[numberOfChains];
int Machines = numberOfMachines;

// Channels
broadcast chan startMachines;
broadcast chan chainMachineChan[numberOfChains];
broadcast chan activateChains;
broadcast chan ChainDone[numberOfChains];</declaration><template><name x="5" y="5">Composer</name><declaration>// Place local declarations here.
clock time;</declaration><location id="id0" x="-102" y="-255"><name x="-112" y="-289">Init</name><label kind="invariant" x="-246" y="-238">numberOfChainsDone &lt;= numberOfChains
&amp;&amp; cost' == 1</label></location><location id="id1" x="331" y="-255"><name x="321" y="-289">Done</name></location><init ref="id0"/><transition><source ref="id0"/><target ref="id1"/><label kind="guard" x="-17" y="-289">numberOfChainsDone &gt;= numberOfChains</label></transition></template><template><name>Chain</name><parameter>const chainId_t cid</parameter><declaration>clock x;
const int chainSize = globalChainSize[cid];
int index = 0;
int TimeUnit = 2;

bool AllDependenciesDone()
{
    bool dependenciesDone = 1;
    int i;
    for (i = 0; i &lt; maxDependencies; i++)
    {
        int value = dependencies[globalChains[cid][index]][i];
        if (value == -1)
            return dependenciesDone;

        dependenciesDone &amp;= tasksDone[value];
    }
    return dependenciesDone;
}

void DecrementWork(int workDone)
{
    int currentDuration = durations[globalChains[cid][index]];

    if (workDone &gt; currentDuration)
        durations[globalChains[cid][index]] = 0;
    else
        durations[globalChains[cid][index]] -= workDone;
}</declaration><location id="id2" x="-68" y="-238"><name x="-78" y="-272">Idle</name></location><location id="id3" x="-68" y="51"><name x="-93" y="68">Running</name><label kind="invariant" x="-127" y="85">x &lt;= chainDuration[cid]</label></location><location id="id4" x="-399" y="-238"><name x="-409" y="-272">Done</name></location><init ref="id2"/><transition><source ref="id3"/><target ref="id2"/><label kind="select" x="-59" y="-119">chain_id : chainId_t</label><label kind="synchronisation" x="-59" y="-102">ChainDone[chain_id]?</label><label kind="assignment" x="-59" y="-85">DecrementWork(chainDuration[chain_id]),
Machines++</label></transition><transition><source ref="id2"/><target ref="id4"/><label kind="guard" x="-357" y="-280">index &gt;= chainSize</label><label kind="assignment" x="-357" y="-263">numberOfChainsDone++</label></transition><transition><source ref="id3"/><target ref="id2"/><label kind="guard" x="-433" y="-119">x &gt;= chainDuration[cid]</label><label kind="synchronisation" x="-433" y="-102">ChainDone[cid]!</label><label kind="assignment" x="-433" y="-85">Machines++,
tasksDone[globalChains[cid][index]] = 1,
index++</label><nail x="-170" y="-8"/><nail x="-170" y="-170"/></transition><transition><source ref="id2"/><target ref="id3"/><label kind="guard" x="136" y="-238">index &lt; chainSize &amp;&amp;
Machines &gt; 0 &amp;&amp; AllDependenciesDone()</label><label kind="assignment" x="136" y="-204">chainDuration[cid] = durations[globalChains[cid][index]],
Machines--,
x = 0</label><nail x="127" y="-238"/><nail x="127" y="51"/></transition></template><system>// Place template instantiations here.

// List one or more processes to be composed into a system.
system Composer, Chain;
    </system></nta>
