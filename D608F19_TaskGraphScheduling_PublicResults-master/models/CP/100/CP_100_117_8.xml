<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/researchgroup/darts/uppaal/flat-1_2.dtd'>
<nta>
<declaration>//Variables
const int numberOfChains = 35;
const int numberOfTasks = 100;
const int numberOfMachines = 8;
const int maxDependencies = 20;
const int longestChain = 6;
const int globalChainSize[numberOfChains] = {3,5,3,6,4,2,2,5,3,5,5,2,3,2,2,2,3,3,3,4,3,2,4,3,3,2,2,4,3,1,2,1,1,1,1};
const int globalChains[numberOfChains][longestChain] = {
{0,16,93,-1,-1,-1},
{1,53,61,75,96,-1},
{2,8,67,-1,-1,-1},
{3,21,33,63,77,89},
{4,23,85,87,-1,-1},
{5,95,-1,-1,-1,-1},
{6,91,-1,-1,-1,-1},
{7,22,62,66,90,-1},
{9,46,81,-1,-1,-1},
{10,39,52,84,88,-1},
{11,29,72,76,92,-1},
{12,98,-1,-1,-1,-1},
{13,55,69,-1,-1,-1},
{14,56,-1,-1,-1,-1},
{15,83,-1,-1,-1,-1},
{17,94,-1,-1,-1,-1},
{18,27,99,-1,-1,-1},
{19,36,86,-1,-1,-1},
{20,80,97,-1,-1,-1},
{24,32,43,79,-1,-1},
{25,31,60,-1,-1,-1},
{26,59,-1,-1,-1,-1},
{28,44,65,68,-1,-1},
{30,57,78,-1,-1,-1},
{34,58,71,-1,-1,-1},
{35,54,-1,-1,-1,-1},
{37,51,-1,-1,-1,-1},
{38,40,50,70,-1,-1},
{41,48,82,-1,-1,-1},
{42,-1,-1,-1,-1,-1},
{45,73,-1,-1,-1,-1},
{47,-1,-1,-1,-1,-1},
{49,-1,-1,-1,-1,-1},
{64,-1,-1,-1,-1,-1},
{74,-1,-1,-1,-1,-1}};
int chainDuration[numberOfChains] = {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1};
int durations[numberOfTasks] = {9,9,9,9,11,12,7,16,11,3,10,9,11,10,16,9,10,10,12,12,14,14,12,13,13,7,10,9,7,10,11,6,13,12,13,12,13,7,15,12,16,15,9,6,10,11,9,10,18,8,8,7,13,8,11,11,10,13,14,8,6,14,5,12,6,8,10,11,5,13,14,13,9,6,10,14,13,11,15,14,15,11,9,6,11,12,14,14,9,3,9,9,7,8,11,10,11,10,7,12};
const int dependencies[numberOfTasks][maxDependencies] = {
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,2,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,2,3,4,10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,9,12,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,3,4,5,8,14,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,5,6,7,12,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,4,8,12,15,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,15,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,3,13,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,11,15,18,21,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,7,14,18,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,9,11,17,20,23,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,3,12,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,6,16,18,25,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,2,12,15,24,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,3,18,21,24,26,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,6,19,24,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{9,10,26,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{14,15,19,21,23,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,3,9,12,19,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,3,10,11,24,26,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,9,21,38,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{11,19,25,33,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{22,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{12,16,18,21,26,32,38,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,11,12,26,28,29,34,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,18,23,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,3,5,9,12,15,18,31,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{18,28,34,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,2,7,41,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{12,20,34,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{12,33,37,40,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{10,17,21,25,37,38,47,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,11,15,21,38,39,40,45,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,3,6,27,41,47,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,7,9,35,41,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,7,13,14,15,40,42,49,51,52,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,12,14,26,33,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,6,19,30,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,24,25,28,34,36,37,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,4,13,14,26,32,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,13,15,31,39,44,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,3,4,6,7,16,19,22,53,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,8,10,11,22,28,29,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,4,6,8,14,15,18,19,32,33,41,43,51,-1,-1,-1,-1,-1,-1,-1},
{5,18,26,40,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,37,38,39,44,48,53,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,12,18,22,30,35,51,55,61,62,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,2,8,18,32,36,42,46,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,38,42,54,65,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{11,20,41,42,55,61,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,10,40,43,48,50,64,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{15,24,32,34,41,49,54,58,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,9,10,14,24,28,29,32,34,41,59,64,65,-1,-1,-1,-1,-1,-1,-1},
{12,16,21,36,45,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{12,27,28,36,43,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{10,15,16,25,30,54,55,60,61,66,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,12,19,25,36,37,38,43,47,49,52,53,54,56,58,65,71,72,73,74},
{11,12,16,23,24,29,34,36,44,48,54,61,63,65,-1,-1,-1,-1,-1,-1},
{10,13,26,35,37,41,45,51,52,54,57,58,74,-1,-1,-1,-1,-1,-1,-1},
{4,10,16,29,37,40,43,48,51,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{20,25,26,39,41,42,62,64,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,5,7,19,24,35,46,48,58,59,63,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,24,42,48,64,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,6,14,15,17,18,20,25,31,51,72,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,8,9,11,20,28,35,52,56,62,68,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,2,9,23,32,47,49,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{13,25,30,32,36,38,44,53,61,62,64,68,-1,-1,-1,-1,-1,-1,-1,-1},
{6,9,19,23,25,40,42,43,48,49,63,83,85,-1,-1,-1,-1,-1,-1,-1},
{30,59,61,65,78,84,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{13,30,32,33,45,51,53,63,64,77,79,84,85,-1,-1,-1,-1,-1,-1,-1},
{13,23,28,37,38,42,44,50,52,64,66,68,71,77,84,-1,-1,-1,-1,-1},
{0,6,8,29,34,47,62,65,79,82,85,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,15,22,24,28,32,47,56,65,76,78,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,3,7,9,13,14,16,30,35,44,59,63,67,69,73,-1,-1,-1,-1,-1},
{1,15,17,30,38,41,57,62,64,79,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,3,4,5,9,22,24,31,45,51,60,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{13,19,26,41,46,48,50,53,54,70,75,77,83,84,-1,-1,-1,-1,-1,-1},
{15,16,22,35,48,49,54,55,78,80,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,6,12,13,21,41,64,77,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{13,17,19,24,27,29,36,61,71,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1}};


// Typedefs
typedef int[0, numberOfChains - 1] chainId_t;

// Ints and Arrays
int numberOfChainsDone = 0;
int tasksDone[numberOfTasks];
bool runnableChains[numberOfChains];
int Machines = numberOfMachines;

// Channels
broadcast chan startMachines;
broadcast chan chainMachineChan[numberOfChains];
broadcast chan activateChains;
broadcast chan ChainDone[numberOfChains];</declaration><template><name x="5" y="5">Composer</name><declaration>// Place local declarations here.
clock time;</declaration><location id="id0" x="-102" y="-255"><name x="-112" y="-289">Init</name><label kind="invariant" x="-246" y="-238">numberOfChainsDone &lt;= numberOfChains
&amp;&amp; cost' == 1</label></location><location id="id1" x="331" y="-255"><name x="321" y="-289">Done</name></location><init ref="id0"/><transition><source ref="id0"/><target ref="id1"/><label kind="guard" x="-17" y="-289">numberOfChainsDone &gt;= numberOfChains</label></transition></template><template><name>Chain</name><parameter>const chainId_t cid</parameter><declaration>clock x;
const int chainSize = globalChainSize[cid];
int index = 0;
int TimeUnit = 2;

bool AllDependenciesDone()
{
    bool dependenciesDone = 1;
    int i;
    for (i = 0; i &lt; maxDependencies; i++)
    {
        int value = dependencies[globalChains[cid][index]][i];
        if (value == -1)
            return dependenciesDone;

        dependenciesDone &amp;= tasksDone[value];
    }
    return dependenciesDone;
}

void DecrementWork(int workDone)
{
    int currentDuration = durations[globalChains[cid][index]];

    if (workDone &gt; currentDuration)
        durations[globalChains[cid][index]] = 0;
    else
        durations[globalChains[cid][index]] -= workDone;
}</declaration><location id="id2" x="-68" y="-238"><name x="-78" y="-272">Idle</name></location><location id="id3" x="-68" y="51"><name x="-93" y="68">Running</name><label kind="invariant" x="-127" y="85">x &lt;= chainDuration[cid]</label></location><location id="id4" x="-399" y="-238"><name x="-409" y="-272">Done</name></location><init ref="id2"/><transition><source ref="id3"/><target ref="id2"/><label kind="select" x="-59" y="-119">chain_id : chainId_t</label><label kind="synchronisation" x="-59" y="-102">ChainDone[chain_id]?</label><label kind="assignment" x="-59" y="-85">DecrementWork(chainDuration[chain_id]),
Machines++</label></transition><transition><source ref="id2"/><target ref="id4"/><label kind="guard" x="-357" y="-280">index &gt;= chainSize</label><label kind="assignment" x="-357" y="-263">numberOfChainsDone++</label></transition><transition><source ref="id3"/><target ref="id2"/><label kind="guard" x="-433" y="-119">x &gt;= chainDuration[cid]</label><label kind="synchronisation" x="-433" y="-102">ChainDone[cid]!</label><label kind="assignment" x="-433" y="-85">Machines++,
tasksDone[globalChains[cid][index]] = 1,
index++</label><nail x="-170" y="-8"/><nail x="-170" y="-170"/></transition><transition><source ref="id2"/><target ref="id3"/><label kind="guard" x="136" y="-238">index &lt; chainSize &amp;&amp;
Machines &gt; 0 &amp;&amp; AllDependenciesDone()</label><label kind="assignment" x="136" y="-204">chainDuration[cid] = durations[globalChains[cid][index]],
Machines--,
x = 0</label><nail x="127" y="-238"/><nail x="127" y="51"/></transition></template><system>// Place template instantiations here.

// List one or more processes to be composed into a system.
system Composer, Chain;
    </system></nta>
