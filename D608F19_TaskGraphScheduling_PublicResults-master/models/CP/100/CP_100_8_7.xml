<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/researchgroup/darts/uppaal/flat-1_2.dtd'>
<nta>
<declaration>//Variables
const int numberOfChains = 38;
const int numberOfTasks = 100;
const int numberOfMachines = 7;
const int maxDependencies = 10;
const int longestChain = 9;
const int globalChainSize[numberOfChains] = {9,4,2,5,3,5,3,5,3,3,3,5,2,5,3,3,4,2,2,3,1,4,2,1,2,1,3,1,1,1,2,1,1,1,1,1,1,1};
const int globalChains[numberOfChains][longestChain] = {
{0,30,33,38,48,49,57,78,88},
{1,81,89,98,-1,-1,-1,-1,-1},
{2,56,-1,-1,-1,-1,-1,-1,-1},
{3,54,71,74,97,-1,-1,-1,-1},
{4,44,79,-1,-1,-1,-1,-1,-1},
{5,41,59,61,64,-1,-1,-1,-1},
{6,36,93,-1,-1,-1,-1,-1,-1},
{7,76,82,91,95,-1,-1,-1,-1},
{8,80,92,-1,-1,-1,-1,-1,-1},
{9,94,96,-1,-1,-1,-1,-1,-1},
{10,60,87,-1,-1,-1,-1,-1,-1},
{11,18,66,85,90,-1,-1,-1,-1},
{12,86,-1,-1,-1,-1,-1,-1,-1},
{13,34,39,68,75,-1,-1,-1,-1},
{14,43,55,-1,-1,-1,-1,-1,-1},
{15,26,63,-1,-1,-1,-1,-1,-1},
{16,28,46,72,-1,-1,-1,-1,-1},
{17,65,-1,-1,-1,-1,-1,-1,-1},
{19,84,-1,-1,-1,-1,-1,-1,-1},
{20,22,45,-1,-1,-1,-1,-1,-1},
{21,-1,-1,-1,-1,-1,-1,-1,-1},
{23,51,70,99,-1,-1,-1,-1,-1},
{24,50,-1,-1,-1,-1,-1,-1,-1},
{25,-1,-1,-1,-1,-1,-1,-1,-1},
{27,31,-1,-1,-1,-1,-1,-1,-1},
{29,-1,-1,-1,-1,-1,-1,-1,-1},
{32,67,73,-1,-1,-1,-1,-1,-1},
{35,-1,-1,-1,-1,-1,-1,-1,-1},
{37,-1,-1,-1,-1,-1,-1,-1,-1},
{40,-1,-1,-1,-1,-1,-1,-1,-1},
{42,58,-1,-1,-1,-1,-1,-1,-1},
{47,-1,-1,-1,-1,-1,-1,-1,-1},
{52,-1,-1,-1,-1,-1,-1,-1,-1},
{53,-1,-1,-1,-1,-1,-1,-1,-1},
{62,-1,-1,-1,-1,-1,-1,-1,-1},
{69,-1,-1,-1,-1,-1,-1,-1,-1},
{77,-1,-1,-1,-1,-1,-1,-1,-1},
{83,-1,-1,-1,-1,-1,-1,-1,-1}};
int chainDuration[numberOfChains] = {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1};
int durations[numberOfTasks] = {12,11,17,11,14,13,2,5,16,5,14,13,20,17,20,19,1,18,8,9,15,16,8,19,20,7,17,19,3,9,8,6,5,1,16,16,3,3,20,5,13,4,10,4,7,14,5,4,1,6,6,4,5,15,20,5,1,14,9,1,17,3,8,3,7,19,20,5,19,8,9,18,13,8,6,9,9,2,12,8,17,18,20,11,3,3,18,17,1,17,9,2,13,10,6,5,9,7,18,17};
const int dependencies[numberOfTasks][maxDependencies] = {
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,11,-1,-1,-1,-1,-1,-1,-1,-1},
{2,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,12,20,-1,-1,-1,-1,-1,-1,-1},
{5,17,-1,-1,-1,-1,-1,-1,-1,-1},
{6,17,-1,-1,-1,-1,-1,-1,-1,-1},
{1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,15,20,22,-1,-1,-1,-1,-1,-1},
{14,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{13,16,-1,-1,-1,-1,-1,-1,-1,-1},
{11,19,20,-1,-1,-1,-1,-1,-1,-1},
{0,3,23,26,-1,-1,-1,-1,-1,-1},
{7,27,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{16,17,22,30,-1,-1,-1,-1,-1,-1},
{2,13,-1,-1,-1,-1,-1,-1,-1,-1},
{5,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,6,31,-1,-1,-1,-1,-1,-1,-1},
{7,23,-1,-1,-1,-1,-1,-1,-1,-1},
{33,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{11,16,20,34,35,36,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,33,-1,-1,-1,-1,-1,-1,-1,-1},
{13,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,14,-1,-1,-1,-1,-1,-1,-1,-1},
{2,4,21,27,29,-1,-1,-1,-1,-1},
{8,22,34,42,-1,-1,-1,-1,-1,-1},
{7,27,28,-1,-1,-1,-1,-1,-1,-1},
{4,11,22,-1,-1,-1,-1,-1,-1,-1},
{19,28,30,38,40,-1,-1,-1,-1,-1},
{7,16,30,35,38,48,-1,-1,-1,-1},
{0,24,36,-1,-1,-1,-1,-1,-1,-1},
{2,17,23,-1,-1,-1,-1,-1,-1,-1},
{10,20,48,-1,-1,-1,-1,-1,-1,-1},
{19,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,5,18,38,39,40,46,-1,-1,-1},
{43,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,7,43,44,49,-1,-1,-1,-1,-1},
{0,19,20,24,28,31,36,39,44,49},
{42,46,-1,-1,-1,-1,-1,-1,-1,-1},
{8,19,23,41,52,-1,-1,-1,-1,-1},
{2,10,15,18,30,-1,-1,-1,-1,-1},
{35,36,39,59,-1,-1,-1,-1,-1,-1},
{6,26,-1,-1,-1,-1,-1,-1,-1,-1},
{4,13,16,25,26,-1,-1,-1,-1,-1},
{9,13,16,29,61,-1,-1,-1,-1,-1},
{2,3,12,17,32,-1,-1,-1,-1,-1},
{18,29,41,-1,-1,-1,-1,-1,-1,-1},
{14,32,49,-1,-1,-1,-1,-1,-1,-1},
{13,39,42,61,65,-1,-1,-1,-1,-1},
{49,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{30,51,53,-1,-1,-1,-1,-1,-1,-1},
{21,35,52,54,-1,-1,-1,-1,-1,-1},
{39,42,46,54,-1,-1,-1,-1,-1,-1},
{10,19,52,67,-1,-1,-1,-1,-1,-1},
{15,30,44,47,64,71,-1,-1,-1,-1},
{0,20,22,27,31,39,50,51,68,-1},
{4,6,7,17,32,58,-1,-1,-1,-1},
{33,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,21,25,35,36,57,-1,-1,-1,-1},
{6,19,33,44,59,-1,-1,-1,-1,-1},
{0,8,23,29,38,-1,-1,-1,-1,-1},
{1,25,47,57,-1,-1,-1,-1,-1,-1},
{4,23,65,72,76,-1,-1,-1,-1,-1},
{5,57,-1,-1,-1,-1,-1,-1,-1,-1},
{2,19,36,40,46,-1,-1,-1,-1,-1},
{2,6,12,23,25,32,35,47,66,-1},
{9,10,12,62,78,83,-1,-1,-1,-1},
{10,13,24,51,60,62,63,-1,-1,-1},
{0,28,67,75,77,78,84,-1,-1,-1},
{8,14,18,53,56,61,81,-1,-1,-1},
{16,31,34,53,85,-1,-1,-1,-1,-1},
{2,12,21,32,33,39,82,-1,-1,-1},
{38,52,80,-1,-1,-1,-1,-1,-1,-1},
{1,11,27,33,36,-1,-1,-1,-1,-1},
{8,9,11,13,40,41,-1,-1,-1,-1},
{15,33,65,78,84,87,91,94,-1,-1},
{24,37,51,54,55,94,-1,-1,-1,-1},
{13,28,36,57,74,84,-1,-1,-1,-1},
{23,47,52,54,86,89,91,95,-1,-1},
{4,13,17,70,-1,-1,-1,-1,-1,-1}};


// Typedefs
typedef int[0, numberOfChains - 1] chainId_t;

// Ints and Arrays
int numberOfChainsDone = 0;
int tasksDone[numberOfTasks];
bool runnableChains[numberOfChains];
int Machines = numberOfMachines;

// Channels
broadcast chan startMachines;
broadcast chan chainMachineChan[numberOfChains];
broadcast chan activateChains;
broadcast chan ChainDone[numberOfChains];</declaration><template><name x="5" y="5">Composer</name><declaration>// Place local declarations here.
clock time;</declaration><location id="id0" x="-102" y="-255"><name x="-112" y="-289">Init</name><label kind="invariant" x="-246" y="-238">numberOfChainsDone &lt;= numberOfChains
&amp;&amp; cost' == 1</label></location><location id="id1" x="331" y="-255"><name x="321" y="-289">Done</name></location><init ref="id0"/><transition><source ref="id0"/><target ref="id1"/><label kind="guard" x="-17" y="-289">numberOfChainsDone &gt;= numberOfChains</label></transition></template><template><name>Chain</name><parameter>const chainId_t cid</parameter><declaration>clock x;
const int chainSize = globalChainSize[cid];
int index = 0;
int TimeUnit = 2;

bool AllDependenciesDone()
{
    bool dependenciesDone = 1;
    int i;
    for (i = 0; i &lt; maxDependencies; i++)
    {
        int value = dependencies[globalChains[cid][index]][i];
        if (value == -1)
            return dependenciesDone;

        dependenciesDone &amp;= tasksDone[value];
    }
    return dependenciesDone;
}

void DecrementWork(int workDone)
{
    int currentDuration = durations[globalChains[cid][index]];

    if (workDone &gt; currentDuration)
        durations[globalChains[cid][index]] = 0;
    else
        durations[globalChains[cid][index]] -= workDone;
}</declaration><location id="id2" x="-68" y="-238"><name x="-78" y="-272">Idle</name></location><location id="id3" x="-68" y="51"><name x="-93" y="68">Running</name><label kind="invariant" x="-127" y="85">x &lt;= chainDuration[cid]</label></location><location id="id4" x="-399" y="-238"><name x="-409" y="-272">Done</name></location><init ref="id2"/><transition><source ref="id3"/><target ref="id2"/><label kind="select" x="-59" y="-119">chain_id : chainId_t</label><label kind="synchronisation" x="-59" y="-102">ChainDone[chain_id]?</label><label kind="assignment" x="-59" y="-85">DecrementWork(chainDuration[chain_id]),
Machines++</label></transition><transition><source ref="id2"/><target ref="id4"/><label kind="guard" x="-357" y="-280">index &gt;= chainSize</label><label kind="assignment" x="-357" y="-263">numberOfChainsDone++</label></transition><transition><source ref="id3"/><target ref="id2"/><label kind="guard" x="-433" y="-119">x &gt;= chainDuration[cid]</label><label kind="synchronisation" x="-433" y="-102">ChainDone[cid]!</label><label kind="assignment" x="-433" y="-85">Machines++,
tasksDone[globalChains[cid][index]] = 1,
index++</label><nail x="-170" y="-8"/><nail x="-170" y="-170"/></transition><transition><source ref="id2"/><target ref="id3"/><label kind="guard" x="136" y="-238">index &lt; chainSize &amp;&amp;
Machines &gt; 0 &amp;&amp; AllDependenciesDone()</label><label kind="assignment" x="136" y="-204">chainDuration[cid] = durations[globalChains[cid][index]],
Machines--,
x = 0</label><nail x="127" y="-238"/><nail x="127" y="51"/></transition></template><system>// Place template instantiations here.

// List one or more processes to be composed into a system.
system Composer, Chain;
    </system></nta>
