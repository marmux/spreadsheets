<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/researchgroup/darts/uppaal/flat-1_2.dtd'>
<nta>
<declaration>//Variables
const int numberOfChains = 25;
const int numberOfTasks = 100;
const int numberOfMachines = 16;
const int maxDependencies = 26;
const int longestChain = 9;
const int globalChainSize[numberOfChains] = {4,4,5,3,9,4,5,5,2,5,6,2,6,3,4,6,6,4,3,5,4,1,2,1,1};
const int globalChains[numberOfChains][longestChain] = {
{0,3,72,97,-1,-1,-1,-1,-1},
{1,35,94,99,-1,-1,-1,-1,-1},
{2,34,51,69,85,-1,-1,-1,-1},
{4,89,98,-1,-1,-1,-1,-1,-1},
{5,41,56,70,76,83,84,90,92},
{6,67,78,95,-1,-1,-1,-1,-1},
{7,42,81,91,96,-1,-1,-1,-1},
{8,40,46,62,80,-1,-1,-1,-1},
{9,86,-1,-1,-1,-1,-1,-1,-1},
{10,50,63,82,93,-1,-1,-1,-1},
{11,60,65,68,71,79,-1,-1,-1},
{12,77,-1,-1,-1,-1,-1,-1,-1},
{13,21,44,59,66,74,-1,-1,-1},
{14,43,88,-1,-1,-1,-1,-1,-1},
{15,29,45,73,-1,-1,-1,-1,-1},
{16,31,49,52,57,58,-1,-1,-1},
{17,20,48,53,61,87,-1,-1,-1},
{18,30,47,54,-1,-1,-1,-1,-1},
{19,55,64,-1,-1,-1,-1,-1,-1},
{22,24,27,33,37,-1,-1,-1,-1},
{23,28,39,75,-1,-1,-1,-1,-1},
{25,-1,-1,-1,-1,-1,-1,-1,-1},
{26,36,-1,-1,-1,-1,-1,-1,-1},
{32,-1,-1,-1,-1,-1,-1,-1,-1},
{38,-1,-1,-1,-1,-1,-1,-1,-1}};
int chainDuration[numberOfChains] = {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1};
int durations[numberOfTasks] = {16,13,10,12,9,12,9,11,9,8,12,9,12,10,12,18,17,15,8,14,11,11,13,11,8,9,12,17,10,15,10,11,14,8,14,5,11,17,10,9,9,10,13,13,8,10,12,12,15,6,10,15,10,15,14,13,15,8,9,14,13,10,8,9,12,14,13,12,13,8,12,11,12,8,8,3,12,10,15,14,14,9,8,9,13,12,8,12,9,7,6,9,9,10,14,3,12,13,8,7};
const int dependencies[numberOfTasks][maxDependencies] = {
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,8,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,6,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,6,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,13,14,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,13,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,14,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{12,14,16,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,11,13,15,17,18,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,5,10,13,17,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,9,13,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,7,9,21,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,8,17,19,20,22,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,10,11,17,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,6,14,20,22,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,7,11,17,21,22,23,24,25,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,9,11,15,23,25,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,10,12,14,15,18,27,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,12,18,22,23,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,7,8,9,12,16,22,24,25,28,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{13,17,19,30,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{12,16,21,27,32,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,3,5,7,14,17,24,25,33,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,14,19,22,31,32,33,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,8,10,19,23,26,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{17,22,33,34,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,4,10,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,10,14,20,21,22,25,26,28,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,6,8,9,17,19,22,25,26,28,35,39,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,5,10,12,16,18,21,25,26,27,35,36,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,3,6,7,10,14,24,30,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{11,12,13,14,18,19,23,30,37,42,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,9,11,12,18,20,21,24,25,31,43,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,11,19,22,24,26,29,31,40,42,43,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,4,10,11,13,20,40,41,44,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,6,15,30,31,40,46,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,19,20,25,26,29,38,41,45,46,47,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,5,15,16,28,31,34,38,39,44,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,7,10,14,16,23,28,36,40,46,47,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,14,17,20,21,22,25,31,33,34,37,39,42,43,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,13,16,21,24,25,38,40,42,49,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{13,21,29,33,37,43,48,49,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,9,16,20,22,29,34,47,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,2,10,19,23,42,44,45,47,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,2,15,18,23,34,41,44,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,13,20,21,36,37,38,45,47,52,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,9,12,17,22,26,33,45,48,50,51,57,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,2,7,32,38,40,43,44,45,50,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,6,8,11,13,15,16,19,25,31,36,37,42,48,49,54,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,6,8,13,20,22,26,37,38,47,48,53,54,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,2,6,7,10,19,21,24,25,37,46,49,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,5,7,14,17,19,30,38,40,50,53,55,61,62,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,7,19,24,26,28,31,36,52,53,55,60,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,9,15,28,42,51,52,55,56,59,60,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,8,18,27,29,48,49,50,52,53,55,56,59,60,62,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,13,22,24,26,28,29,34,40,41,49,54,56,62,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,11,14,18,25,28,46,55,65,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,8,20,27,33,34,39,44,50,51,55,65,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,9,12,22,32,40,41,43,44,46,48,54,56,66,67,69,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,14,31,32,35,37,39,40,42,44,46,54,68,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,3,19,24,25,37,50,56,59,62,64,65,66,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,10,11,17,25,30,33,44,45,49,53,61,68,69,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,6,8,16,22,25,28,43,48,66,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{22,26,39,42,50,56,70,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,9,11,17,19,23,28,34,37,39,42,49,54,56,57,65,70,71,75,-1,-1,-1,-1,-1,-1,-1},
{1,4,12,17,19,22,25,29,32,38,39,43,44,45,48,50,60,66,68,70,73,-1,-1,-1,-1,-1},
{3,8,9,13,21,24,39,40,42,51,55,65,67,68,71,76,77,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,4,9,14,15,20,22,24,25,32,36,38,45,47,71,73,74,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{18,19,30,31,39,40,46,62,65,66,67,70,73,74,76,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,5,13,18,25,30,42,47,51,56,64,68,71,74,79,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,22,24,26,27,28,33,40,45,47,48,61,63,69,70,74,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,8,11,13,16,19,20,22,26,30,33,34,37,39,42,61,64,65,66,70,72,73,76,78,-1,-1},
{3,7,11,12,14,15,18,21,23,25,36,47,56,62,64,66,78,83,-1,-1,-1,-1,-1,-1,-1,-1},
{3,9,21,22,23,31,33,34,35,50,66,69,71,76,79,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,9,16,17,25,37,39,46,48,49,51,55,56,59,60,65,66,68,75,77,78,-1,-1,-1,-1,-1},
{0,7,18,20,25,27,37,39,40,61,63,75,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,15,16,22,38,42,43,57,60,72,83,87,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,4,7,8,10,13,18,22,26,30,34,53,57,60,62,63,68,73,78,81,83,-1,-1,-1,-1,-1},
{8,11,15,16,18,25,29,37,46,47,53,54,60,62,63,66,67,73,77,84,-1,-1,-1,-1,-1,-1},
{8,19,25,27,29,39,58,59,61,63,64,68,81,90,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,8,14,21,22,27,29,35,39,41,48,57,63,64,65,67,75,78,81,88,90,91,-1,-1,-1,-1},
{11,16,26,28,49,57,66,68,82,83,87,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,14,21,27,29,32,35,37,42,44,50,62,64,72,74,89,90,92,-1,-1,-1,-1,-1,-1,-1,-1},
{3,5,36,46,49,50,55,75,76,78,79,88,89,93,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,11,21,24,25,36,38,42,46,49,52,53,55,63,65,68,88,90,91,93,-1,-1,-1,-1,-1,-1},
{0,3,5,10,11,13,15,16,21,23,32,37,40,42,46,47,58,60,66,72,73,80,91,92,93,-1},
{1,2,5,6,7,13,17,19,31,36,38,60,61,80,81,89,90,95,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,4,15,22,27,30,31,37,40,42,47,51,57,58,60,61,63,75,78,84,85,92,93,94,98}};


// Typedefs
typedef int[0, numberOfChains - 1] chainId_t;

// Ints and Arrays
int numberOfChainsDone = 0;
int tasksDone[numberOfTasks];
bool runnableChains[numberOfChains];
int Machines = numberOfMachines;

// Channels
broadcast chan startMachines;
broadcast chan chainMachineChan[numberOfChains];
broadcast chan activateChains;
broadcast chan ChainDone[numberOfChains];</declaration><template><name x="5" y="5">Composer</name><declaration>// Place local declarations here.
clock time;</declaration><location id="id0" x="-102" y="-255"><name x="-112" y="-289">Init</name><label kind="invariant" x="-246" y="-238">numberOfChainsDone &lt;= numberOfChains
&amp;&amp; cost' == 1</label></location><location id="id1" x="331" y="-255"><name x="321" y="-289">Done</name></location><init ref="id0"/><transition><source ref="id0"/><target ref="id1"/><label kind="guard" x="-17" y="-289">numberOfChainsDone &gt;= numberOfChains</label></transition></template><template><name>Chain</name><parameter>const chainId_t cid</parameter><declaration>clock x;
const int chainSize = globalChainSize[cid];
int index = 0;
int TimeUnit = 2;

bool AllDependenciesDone()
{
    bool dependenciesDone = 1;
    int i;
    for (i = 0; i &lt; maxDependencies; i++)
    {
        int value = dependencies[globalChains[cid][index]][i];
        if (value == -1)
            return dependenciesDone;

        dependenciesDone &amp;= tasksDone[value];
    }
    return dependenciesDone;
}

void DecrementWork(int workDone)
{
    int currentDuration = durations[globalChains[cid][index]];

    if (workDone &gt; currentDuration)
        durations[globalChains[cid][index]] = 0;
    else
        durations[globalChains[cid][index]] -= workDone;
}</declaration><location id="id2" x="-68" y="-238"><name x="-78" y="-272">Idle</name></location><location id="id3" x="-68" y="51"><name x="-93" y="68">Running</name><label kind="invariant" x="-127" y="85">x &lt;= chainDuration[cid]</label></location><location id="id4" x="-399" y="-238"><name x="-409" y="-272">Done</name></location><init ref="id2"/><transition><source ref="id3"/><target ref="id2"/><label kind="select" x="-59" y="-119">chain_id : chainId_t</label><label kind="synchronisation" x="-59" y="-102">ChainDone[chain_id]?</label><label kind="assignment" x="-59" y="-85">DecrementWork(chainDuration[chain_id]),
Machines++</label></transition><transition><source ref="id2"/><target ref="id4"/><label kind="guard" x="-357" y="-280">index &gt;= chainSize</label><label kind="assignment" x="-357" y="-263">numberOfChainsDone++</label></transition><transition><source ref="id3"/><target ref="id2"/><label kind="guard" x="-433" y="-119">x &gt;= chainDuration[cid]</label><label kind="synchronisation" x="-433" y="-102">ChainDone[cid]!</label><label kind="assignment" x="-433" y="-85">Machines++,
tasksDone[globalChains[cid][index]] = 1,
index++</label><nail x="-170" y="-8"/><nail x="-170" y="-170"/></transition><transition><source ref="id2"/><target ref="id3"/><label kind="guard" x="136" y="-238">index &lt; chainSize &amp;&amp;
Machines &gt; 0 &amp;&amp; AllDependenciesDone()</label><label kind="assignment" x="136" y="-204">chainDuration[cid] = durations[globalChains[cid][index]],
Machines--,
x = 0</label><nail x="127" y="-238"/><nail x="127" y="51"/></transition></template><system>// Place template instantiations here.

// List one or more processes to be composed into a system.
system Composer, Chain;
    </system></nta>
