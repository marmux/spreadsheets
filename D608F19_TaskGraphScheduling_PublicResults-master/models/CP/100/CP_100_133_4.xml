<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/researchgroup/darts/uppaal/flat-1_2.dtd'>
<nta>
<declaration>//Variables
const int numberOfChains = 28;
const int numberOfTasks = 100;
const int numberOfMachines = 4;
const int maxDependencies = 20;
const int longestChain = 8;
const int globalChainSize[numberOfChains] = {6,3,5,3,6,4,5,7,7,2,4,4,8,3,4,4,2,2,6,2,3,1,3,1,2,1,1,1};
const int globalChains[numberOfChains][longestChain] = {
{0,3,76,87,89,94,-1,-1},
{1,11,84,-1,-1,-1,-1,-1},
{2,6,52,55,97,-1,-1,-1},
{4,83,95,-1,-1,-1,-1,-1},
{5,40,61,80,88,98,-1,-1},
{7,91,96,99,-1,-1,-1,-1},
{8,20,41,68,92,-1,-1,-1},
{9,38,47,48,50,70,85,-1},
{10,60,65,66,71,79,90,-1},
{12,86,-1,-1,-1,-1,-1,-1},
{13,77,78,82,-1,-1,-1,-1},
{14,56,74,81,-1,-1,-1,-1},
{15,43,44,45,51,59,72,75},
{16,24,67,-1,-1,-1,-1,-1},
{17,19,36,57,-1,-1,-1,-1},
{18,23,25,93,-1,-1,-1,-1},
{21,58,-1,-1,-1,-1,-1,-1},
{22,54,-1,-1,-1,-1,-1,-1},
{26,34,42,53,63,73,-1,-1},
{27,37,-1,-1,-1,-1,-1,-1},
{28,29,69,-1,-1,-1,-1,-1},
{30,-1,-1,-1,-1,-1,-1,-1},
{31,39,49,-1,-1,-1,-1,-1},
{32,-1,-1,-1,-1,-1,-1,-1},
{33,62,-1,-1,-1,-1,-1,-1},
{35,-1,-1,-1,-1,-1,-1,-1},
{46,-1,-1,-1,-1,-1,-1,-1},
{64,-1,-1,-1,-1,-1,-1,-1}};
int chainDuration[numberOfChains] = {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1};
int durations[numberOfTasks] = {10,5,11,7,7,5,8,10,3,10,10,5,13,5,11,13,6,13,6,6,7,5,5,9,5,15,16,6,5,10,7,12,10,14,15,6,6,6,7,13,13,6,4,5,7,11,6,9,10,7,16,5,6,4,6,6,5,6,6,5,10,9,7,6,8,9,10,10,6,11,7,5,10,10,5,3,7,12,13,17,12,5,13,7,8,7,9,11,7,5,6,6,6,3,7,5,5,5,7,10};
const int dependencies[numberOfTasks][maxDependencies] = {
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,6,12,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,11,12,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,12,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,15,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,14,17,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,4,8,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,6,16,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,9,18,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,12,13,16,18,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,11,18,23,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,4,6,25,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{9,12,15,23,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,13,17,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{12,16,22,28,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{9,14,21,28,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{18,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{15,19,21,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{16,19,28,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{10,18,26,28,31,33,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{19,21,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,16,18,19,24,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,12,16,27,28,32,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,6,7,8,9,21,27,30,34,35,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{13,17,25,31,33,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,6,7,9,11,15,29,33,37,38,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,8,12,13,20,36,37,38,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,3,7,23,27,28,31,34,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,8,15,17,23,40,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,13,16,18,22,25,29,31,41,43,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,13,24,33,39,41,43,44,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,39,41,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,9,26,29,34,37,38,40,45,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,10,15,18,20,24,29,30,31,47,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,15,21,39,41,46,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,6,9,10,14,34,48,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,5,13,33,42,45,49,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,3,6,9,15,23,27,42,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{13,25,30,35,40,42,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,3,10,13,22,44,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,9,20,22,32,52,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,10,13,14,30,33,36,48,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,7,10,15,18,25,36,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,11,21,26,27,35,36,46,55,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,21,31,35,45,51,53,56,58,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,8,10,19,23,36,40,42,45,56,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,5,30,35,40,49,55,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,21,23,33,41,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{24,28,33,40,45,48,53,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,16,47,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,8,12,15,17,23,29,40,49,53,55,57,60,-1,-1,-1,-1,-1,-1,-1},
{4,12,21,47,65,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{10,13,16,24,31,34,43,54,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,8,10,25,27,36,37,39,41,42,55,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,29,56,63,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,4,13,14,15,19,20,50,56,62,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{9,16,17,19,30,33,43,46,53,54,65,66,70,-1,-1,-1,-1,-1,-1,-1},
{7,15,19,24,30,31,35,52,59,67,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{21,44,59,63,69,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,19,28,35,36,42,43,44,45,47,56,58,65,67,-1,-1,-1,-1,-1,-1},
{6,18,22,35,41,42,46,54,60,62,63,72,-1,-1,-1,-1,-1,-1,-1,-1},
{0,3,7,8,18,26,38,39,46,48,56,61,63,73,-1,-1,-1,-1,-1,-1},
{10,13,16,29,44,48,50,54,58,70,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,15,18,22,32,33,34,37,48,50,56,59,63,74,77,-1,-1,-1,-1,-1},
{1,3,17,25,26,28,34,35,57,68,69,71,73,-1,-1,-1,-1,-1,-1,-1},
{5,30,35,37,41,44,61,64,72,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,9,22,32,49,51,59,67,69,70,74,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,7,29,47,51,60,75,78,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,3,4,5,14,15,24,38,39,40,52,59,61,63,66,72,-1,-1,-1,-1},
{0,1,11,13,15,23,29,33,35,39,43,46,66,81,83,-1,-1,-1,-1,-1},
{6,9,19,22,29,32,35,37,47,70,75,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,12,19,24,26,27,32,33,34,43,45,52,56,66,67,-1,-1,-1,-1,-1},
{6,14,18,20,30,32,36,38,50,53,56,58,76,-1,-1,-1,-1,-1,-1,-1},
{12,15,20,32,33,35,36,38,44,48,50,57,58,60,63,66,73,80,87,-1},
{4,6,11,20,41,60,72,73,76,87,88,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{14,21,25,30,37,38,39,42,75,79,82,86,-1,-1,-1,-1,-1,-1,-1,-1},
{5,7,11,39,43,52,54,58,60,65,67,68,71,75,88,-1,-1,-1,-1,-1},
{2,15,25,31,38,44,52,53,57,65,66,68,70,76,81,85,-1,-1,-1,-1},
{25,39,50,64,69,72,74,88,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,11,16,17,25,28,40,78,81,87,89,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,10,11,19,29,32,41,44,47,58,73,83,90,-1,-1,-1,-1,-1,-1,-1},
{7,9,13,19,32,40,43,49,60,64,74,77,80,91,-1,-1,-1,-1,-1,-1},
{2,5,8,12,15,17,19,29,30,33,38,45,50,52,55,65,75,81,86,87},
{11,20,26,34,35,40,45,65,70,72,76,79,86,88,89,92,93,-1,-1,-1},
{12,16,19,20,21,34,40,42,59,67,70,74,79,81,87,96,-1,-1,-1,-1}};


// Typedefs
typedef int[0, numberOfChains - 1] chainId_t;

// Ints and Arrays
int numberOfChainsDone = 0;
int tasksDone[numberOfTasks];
bool runnableChains[numberOfChains];
int Machines = numberOfMachines;

// Channels
broadcast chan startMachines;
broadcast chan chainMachineChan[numberOfChains];
broadcast chan activateChains;
broadcast chan ChainDone[numberOfChains];</declaration><template><name x="5" y="5">Composer</name><declaration>// Place local declarations here.
clock time;</declaration><location id="id0" x="-102" y="-255"><name x="-112" y="-289">Init</name><label kind="invariant" x="-246" y="-238">numberOfChainsDone &lt;= numberOfChains
&amp;&amp; cost' == 1</label></location><location id="id1" x="331" y="-255"><name x="321" y="-289">Done</name></location><init ref="id0"/><transition><source ref="id0"/><target ref="id1"/><label kind="guard" x="-17" y="-289">numberOfChainsDone &gt;= numberOfChains</label></transition></template><template><name>Chain</name><parameter>const chainId_t cid</parameter><declaration>clock x;
const int chainSize = globalChainSize[cid];
int index = 0;
int TimeUnit = 2;

bool AllDependenciesDone()
{
    bool dependenciesDone = 1;
    int i;
    for (i = 0; i &lt; maxDependencies; i++)
    {
        int value = dependencies[globalChains[cid][index]][i];
        if (value == -1)
            return dependenciesDone;

        dependenciesDone &amp;= tasksDone[value];
    }
    return dependenciesDone;
}

void DecrementWork(int workDone)
{
    int currentDuration = durations[globalChains[cid][index]];

    if (workDone &gt; currentDuration)
        durations[globalChains[cid][index]] = 0;
    else
        durations[globalChains[cid][index]] -= workDone;
}</declaration><location id="id2" x="-68" y="-238"><name x="-78" y="-272">Idle</name></location><location id="id3" x="-68" y="51"><name x="-93" y="68">Running</name><label kind="invariant" x="-127" y="85">x &lt;= chainDuration[cid]</label></location><location id="id4" x="-399" y="-238"><name x="-409" y="-272">Done</name></location><init ref="id2"/><transition><source ref="id3"/><target ref="id2"/><label kind="select" x="-59" y="-119">chain_id : chainId_t</label><label kind="synchronisation" x="-59" y="-102">ChainDone[chain_id]?</label><label kind="assignment" x="-59" y="-85">DecrementWork(chainDuration[chain_id]),
Machines++</label></transition><transition><source ref="id2"/><target ref="id4"/><label kind="guard" x="-357" y="-280">index &gt;= chainSize</label><label kind="assignment" x="-357" y="-263">numberOfChainsDone++</label></transition><transition><source ref="id3"/><target ref="id2"/><label kind="guard" x="-433" y="-119">x &gt;= chainDuration[cid]</label><label kind="synchronisation" x="-433" y="-102">ChainDone[cid]!</label><label kind="assignment" x="-433" y="-85">Machines++,
tasksDone[globalChains[cid][index]] = 1,
index++</label><nail x="-170" y="-8"/><nail x="-170" y="-170"/></transition><transition><source ref="id2"/><target ref="id3"/><label kind="guard" x="136" y="-238">index &lt; chainSize &amp;&amp;
Machines &gt; 0 &amp;&amp; AllDependenciesDone()</label><label kind="assignment" x="136" y="-204">chainDuration[cid] = durations[globalChains[cid][index]],
Machines--,
x = 0</label><nail x="127" y="-238"/><nail x="127" y="51"/></transition></template><system>// Place template instantiations here.

// List one or more processes to be composed into a system.
system Composer, Chain;
    </system></nta>
