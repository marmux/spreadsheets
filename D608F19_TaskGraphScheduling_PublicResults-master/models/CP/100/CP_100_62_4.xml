<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/researchgroup/darts/uppaal/flat-1_2.dtd'>
<nta>
<declaration>//Variables
const int numberOfChains = 30;
const int numberOfTasks = 100;
const int numberOfMachines = 4;
const int maxDependencies = 19;
const int longestChain = 7;
const int globalChainSize[numberOfChains] = {7,6,4,4,3,5,7,2,2,5,2,4,3,3,4,2,3,3,3,3,2,3,3,5,2,3,1,2,3,1};
const int globalChains[numberOfChains][longestChain] = {
{0,9,62,76,77,87,92},
{1,22,35,64,85,97,-1},
{2,24,41,95,-1,-1,-1},
{3,29,83,96,-1,-1,-1},
{4,54,90,-1,-1,-1,-1},
{5,65,69,74,86,-1,-1},
{6,40,68,71,78,82,89},
{7,98,-1,-1,-1,-1,-1},
{8,66,-1,-1,-1,-1,-1},
{10,28,37,52,93,-1,-1},
{11,99,-1,-1,-1,-1,-1},
{12,45,55,88,-1,-1,-1},
{13,60,84,-1,-1,-1,-1},
{14,80,91,-1,-1,-1,-1},
{15,33,73,81,-1,-1,-1},
{16,63,-1,-1,-1,-1,-1},
{17,42,72,-1,-1,-1,-1},
{18,50,79,-1,-1,-1,-1},
{19,25,94,-1,-1,-1,-1},
{20,53,56,-1,-1,-1,-1},
{21,67,-1,-1,-1,-1,-1},
{23,49,57,-1,-1,-1,-1},
{26,48,61,-1,-1,-1,-1},
{27,39,46,47,59,-1,-1},
{30,31,-1,-1,-1,-1,-1},
{32,44,58,-1,-1,-1,-1},
{34,-1,-1,-1,-1,-1,-1},
{36,51,-1,-1,-1,-1,-1},
{38,43,75,-1,-1,-1,-1},
{70,-1,-1,-1,-1,-1,-1}};
int chainDuration[numberOfChains] = {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1};
int durations[numberOfTasks] = {8,9,10,5,3,3,4,3,2,1,9,7,2,8,4,4,6,1,8,2,6,10,8,10,6,5,7,8,5,10,8,10,7,4,7,5,6,7,8,3,9,1,6,6,3,2,6,2,4,10,3,7,2,6,7,9,8,8,6,8,9,1,5,6,6,6,5,6,9,4,7,9,1,5,9,3,7,2,4,8,7,3,4,7,2,4,2,1,6,1,1,5,8,6,10,10,3,6,8,2};
const int dependencies[numberOfTasks][maxDependencies] = {
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{9,13,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,7,11,12,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,11,14,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,9,12,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,12,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,12,13,14,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,4,16,20,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,2,5,19,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,16,19,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,8,25,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,21,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,9,10,22,26,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,3,8,17,21,23,24,27,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{12,14,19,25,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{14,20,21,24,30,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,11,26,29,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,7,8,15,19,25,30,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,5,13,22,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,9,10,22,23,30,32,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,5,7,24,28,33,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{11,15,29,30,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{9,13,19,27,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,17,18,20,22,24,26,37,38,39,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,9,24,27,28,35,40,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,12,17,18,22,26,28,36,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,24,37,38,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{27,32,42,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,7,12,22,29,34,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,10,14,18,39,41,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,3,4,14,46,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,8,12,26,44,45,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,8,9,16,17,23,32,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,4,14,16,18,20,42,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,3,10,14,26,36,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,10,11,13,14,16,17,19,24,31,37,38,51,-1,-1,-1,-1,-1,-1},
{13,15,17,18,20,23,30,39,44,48,50,-1,-1,-1,-1,-1,-1,-1,-1},
{1,2,4,6,14,17,29,40,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{11,12,14,22,44,45,54,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,5,10,30,36,43,50,53,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,7,27,34,49,50,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,15,18,41,44,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{22,28,34,41,47,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,13,14,20,24,30,33,35,48,50,52,-1,-1,-1,-1,-1,-1,-1,-1},
{4,8,9,12,27,31,32,43,44,48,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,3,9,12,22,24,27,30,38,47,55,56,57,58,-1,-1,-1,-1,-1},
{6,16,20,34,39,41,51,54,60,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,15,22,27,35,49,50,53,59,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,5,8,9,10,11,13,34,35,36,63,-1,-1,-1,-1,-1,-1,-1,-1},
{1,2,8,19,24,28,34,38,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,15,21,25,28,39,46,47,51,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,26,27,35,36,40,51,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,19,21,26,41,53,57,60,65,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,18,24,50,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,5,12,16,20,31,32,33,41,45,47,50,57,59,68,-1,-1,-1,-1},
{3,7,11,19,20,21,23,42,47,51,55,60,-1,-1,-1,-1,-1,-1,-1},
{2,3,6,8,13,20,31,33,36,42,43,-1,-1,-1,-1,-1,-1,-1,-1},
{1,12,15,20,33,40,42,57,59,60,62,69,71,-1,-1,-1,-1,-1,-1},
{22,28,43,46,68,70,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,13,17,18,30,37,38,39,44,49,50,52,60,62,67,68,69,70,72},
{7,10,21,23,30,50,52,55,68,70,72,76,-1,-1,-1,-1,-1,-1,-1},
{0,8,13,15,16,18,39,52,61,65,71,73,75,-1,-1,-1,-1,-1,-1},
{2,3,20,28,30,31,33,39,50,57,58,59,62,-1,-1,-1,-1,-1,-1},
{1,6,12,14,39,41,56,58,61,73,79,-1,-1,-1,-1,-1,-1,-1,-1},
{24,31,37,44,49,56,58,73,75,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,10,18,23,26,38,49,54,56,57,59,60,65,77,78,-1,-1,-1,-1},
{8,17,23,24,29,32,38,41,43,45,54,62,63,65,66,67,79,-1,-1},
{10,13,19,29,37,41,43,60,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,7,10,15,20,21,22,25,28,29,37,40,45,64,66,-1,-1,-1,-1},
{3,4,9,12,15,32,43,48,51,52,61,63,71,73,74,-1,-1,-1,-1},
{1,10,16,22,33,35,44,51,52,58,62,68,71,77,-1,-1,-1,-1,-1},
{6,7,16,39,47,51,55,61,65,67,77,79,-1,-1,-1,-1,-1,-1,-1},
{0,20,25,39,40,47,53,61,78,82,88,-1,-1,-1,-1,-1,-1,-1,-1},
{17,29,32,41,42,49,54,61,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,4,11,19,39,51,73,80,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,12,20,22,28,30,60,62,74,82,86,87,88,-1,-1,-1,-1,-1,-1},
{3,14,16,26,27,33,39,41,42,52,59,67,70,74,85,91,-1,-1,-1},
{9,25,31,42,45,49,60,69,74,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,11,24,25,27,28,29,39,40,41,43,44,60,64,71,81,94,-1,-1},
{1,5,12,24,26,27,33,34,56,60,62,81,83,88,90,91,-1,-1,-1},
{4,6,14,16,17,26,35,38,53,65,78,81,85,88,-1,-1,-1,-1,-1},
{0,7,15,27,34,36,47,64,70,74,75,82,-1,-1,-1,-1,-1,-1,-1},
{11,15,20,28,31,37,40,47,48,73,-1,-1,-1,-1,-1,-1,-1,-1,-1}};


// Typedefs
typedef int[0, numberOfChains - 1] chainId_t;

// Ints and Arrays
int numberOfChainsDone = 0;
int tasksDone[numberOfTasks];
bool runnableChains[numberOfChains];
int Machines = numberOfMachines;

// Channels
broadcast chan startMachines;
broadcast chan chainMachineChan[numberOfChains];
broadcast chan activateChains;
broadcast chan ChainDone[numberOfChains];</declaration><template><name x="5" y="5">Composer</name><declaration>// Place local declarations here.
clock time;</declaration><location id="id0" x="-102" y="-255"><name x="-112" y="-289">Init</name><label kind="invariant" x="-246" y="-238">numberOfChainsDone &lt;= numberOfChains
&amp;&amp; cost' == 1</label></location><location id="id1" x="331" y="-255"><name x="321" y="-289">Done</name></location><init ref="id0"/><transition><source ref="id0"/><target ref="id1"/><label kind="guard" x="-17" y="-289">numberOfChainsDone &gt;= numberOfChains</label></transition></template><template><name>Chain</name><parameter>const chainId_t cid</parameter><declaration>clock x;
const int chainSize = globalChainSize[cid];
int index = 0;
int TimeUnit = 2;

bool AllDependenciesDone()
{
    bool dependenciesDone = 1;
    int i;
    for (i = 0; i &lt; maxDependencies; i++)
    {
        int value = dependencies[globalChains[cid][index]][i];
        if (value == -1)
            return dependenciesDone;

        dependenciesDone &amp;= tasksDone[value];
    }
    return dependenciesDone;
}

void DecrementWork(int workDone)
{
    int currentDuration = durations[globalChains[cid][index]];

    if (workDone &gt; currentDuration)
        durations[globalChains[cid][index]] = 0;
    else
        durations[globalChains[cid][index]] -= workDone;
}</declaration><location id="id2" x="-68" y="-238"><name x="-78" y="-272">Idle</name></location><location id="id3" x="-68" y="51"><name x="-93" y="68">Running</name><label kind="invariant" x="-127" y="85">x &lt;= chainDuration[cid]</label></location><location id="id4" x="-399" y="-238"><name x="-409" y="-272">Done</name></location><init ref="id2"/><transition><source ref="id3"/><target ref="id2"/><label kind="select" x="-59" y="-119">chain_id : chainId_t</label><label kind="synchronisation" x="-59" y="-102">ChainDone[chain_id]?</label><label kind="assignment" x="-59" y="-85">DecrementWork(chainDuration[chain_id]),
Machines++</label></transition><transition><source ref="id2"/><target ref="id4"/><label kind="guard" x="-357" y="-280">index &gt;= chainSize</label><label kind="assignment" x="-357" y="-263">numberOfChainsDone++</label></transition><transition><source ref="id3"/><target ref="id2"/><label kind="guard" x="-433" y="-119">x &gt;= chainDuration[cid]</label><label kind="synchronisation" x="-433" y="-102">ChainDone[cid]!</label><label kind="assignment" x="-433" y="-85">Machines++,
tasksDone[globalChains[cid][index]] = 1,
index++</label><nail x="-170" y="-8"/><nail x="-170" y="-170"/></transition><transition><source ref="id2"/><target ref="id3"/><label kind="guard" x="136" y="-238">index &lt; chainSize &amp;&amp;
Machines &gt; 0 &amp;&amp; AllDependenciesDone()</label><label kind="assignment" x="136" y="-204">chainDuration[cid] = durations[globalChains[cid][index]],
Machines--,
x = 0</label><nail x="127" y="-238"/><nail x="127" y="51"/></transition></template><system>// Place template instantiations here.

// List one or more processes to be composed into a system.
system Composer, Chain;
    </system></nta>
