<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/researchgroup/darts/uppaal/flat-1_2.dtd'>
<nta>
<declaration>//Variables
const int numberOfChains = 39;
const int numberOfTasks = 100;
const int numberOfMachines = 3;
const int maxDependencies = 7;
const int longestChain = 6;
const int globalChainSize[numberOfChains] = {6,3,2,4,4,4,3,3,3,3,2,3,3,5,3,2,2,2,3,3,5,1,3,3,3,1,2,3,3,1,2,1,1,1,3,1,1,1,1};
const int globalChains[numberOfChains][longestChain] = {
{0,29,42,65,79,96},
{1,53,64,-1,-1,-1},
{2,92,-1,-1,-1,-1},
{3,55,88,93,-1,-1},
{4,20,91,94,-1,-1},
{5,12,84,95,-1,-1},
{6,28,70,-1,-1,-1},
{7,58,76,-1,-1,-1},
{8,13,38,-1,-1,-1},
{9,35,46,-1,-1,-1},
{10,72,-1,-1,-1,-1},
{11,66,78,-1,-1,-1},
{14,47,71,-1,-1,-1},
{15,19,59,63,77,-1},
{16,57,89,-1,-1,-1},
{17,98,-1,-1,-1,-1},
{18,39,-1,-1,-1,-1},
{21,87,-1,-1,-1,-1},
{22,56,83,-1,-1,-1},
{23,69,90,-1,-1,-1},
{24,54,62,80,82,-1},
{25,-1,-1,-1,-1,-1},
{26,51,61,-1,-1,-1},
{27,43,86,-1,-1,-1},
{30,36,97,-1,-1,-1},
{31,-1,-1,-1,-1,-1},
{32,81,-1,-1,-1,-1},
{33,49,68,-1,-1,-1},
{34,45,99,-1,-1,-1},
{37,-1,-1,-1,-1,-1},
{40,85,-1,-1,-1,-1},
{41,-1,-1,-1,-1,-1},
{44,-1,-1,-1,-1,-1},
{48,-1,-1,-1,-1,-1},
{50,60,75,-1,-1,-1},
{52,-1,-1,-1,-1,-1},
{67,-1,-1,-1,-1,-1},
{73,-1,-1,-1,-1,-1},
{74,-1,-1,-1,-1,-1}};
int chainDuration[numberOfChains] = {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1};
int durations[numberOfTasks] = {11,9,2,11,3,10,12,3,1,1,3,6,16,6,15,14,11,19,3,18,16,14,10,12,20,1,18,8,12,2,14,6,16,19,20,11,19,13,10,1,7,12,6,14,10,1,2,8,8,20,9,13,11,3,17,12,9,17,3,19,10,11,1,5,3,5,10,9,3,10,4,3,3,5,6,9,11,10,10,16,4,6,1,12,4,4,5,14,11,8,15,9,1,14,7,18,2,3,10,4};
const int dependencies[numberOfTasks][maxDependencies] = {
{-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1},
{5,-1,-1,-1,-1,-1,-1},
{2,8,-1,-1,-1,-1,-1},
{11,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1},
{7,15,-1,-1,-1,-1,-1},
{1,4,9,16,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1},
{15,-1,-1,-1,-1,-1,-1},
{6,-1,-1,-1,-1,-1,-1},
{9,-1,-1,-1,-1,-1,-1},
{18,-1,-1,-1,-1,-1,-1},
{15,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1},
{1,6,13,-1,-1,-1,-1},
{0,2,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1},
{2,19,-1,-1,-1,-1,-1},
{18,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1},
{7,9,-1,-1,-1,-1,-1},
{8,16,30,-1,-1,-1,-1},
{30,-1,-1,-1,-1,-1,-1},
{5,11,13,-1,-1,-1,-1},
{8,18,-1,-1,-1,-1,-1},
{5,16,-1,-1,-1,-1,-1},
{5,30,-1,-1,-1,-1,-1},
{29,-1,-1,-1,-1,-1,-1},
{8,27,-1,-1,-1,-1,-1},
{16,30,-1,-1,-1,-1,-1},
{34,-1,-1,-1,-1,-1,-1},
{23,35,-1,-1,-1,-1,-1},
{12,14,16,19,23,-1,-1},
{32,-1,-1,-1,-1,-1,-1},
{24,33,-1,-1,-1,-1,-1},
{21,-1,-1,-1,-1,-1,-1},
{26,-1,-1,-1,-1,-1,-1},
{9,21,-1,-1,-1,-1,-1},
{0,1,6,39,48,-1,-1},
{18,24,25,43,44,-1,-1},
{3,33,39,-1,-1,-1,-1},
{22,-1,-1,-1,-1,-1,-1},
{2,13,16,17,45,-1,-1},
{1,6,7,24,38,-1,-1},
{11,14,19,-1,-1,-1,-1},
{23,32,50,-1,-1,-1,-1},
{11,19,51,-1,-1,-1,-1},
{16,54,-1,-1,-1,-1,-1},
{45,59,-1,-1,-1,-1,-1},
{4,25,28,49,53,-1,-1},
{8,16,22,23,30,34,42},
{10,11,39,-1,-1,-1,-1},
{12,-1,-1,-1,-1,-1,-1},
{26,27,45,49,-1,-1,-1},
{10,23,49,51,66,-1,-1},
{11,28,50,-1,-1,-1,-1},
{0,4,47,54,57,-1,-1},
{10,15,29,32,61,-1,-1},
{-1,-1,-1,-1,-1,-1,-1},
{10,-1,-1,-1,-1,-1,-1},
{13,17,60,-1,-1,-1,-1},
{50,52,55,58,61,-1,-1},
{51,59,63,-1,-1,-1,-1},
{8,22,42,59,66,-1,-1},
{10,16,17,45,47,65,-1},
{18,40,60,62,-1,-1,-1},
{32,35,51,56,-1,-1,-1},
{16,20,26,31,40,49,80},
{7,17,40,54,56,-1,-1},
{12,29,33,69,-1,-1,-1},
{40,53,-1,-1,-1,-1,-1},
{43,58,-1,-1,-1,-1,-1},
{16,17,21,36,-1,-1,-1},
{29,35,55,-1,-1,-1,-1},
{16,21,57,58,-1,-1,-1},
{31,44,69,73,75,-1,-1},
{20,23,29,39,43,-1,-1},
{0,2,30,58,69,71,-1},
{11,16,17,41,88,90,91},
{75,87,91,-1,-1,-1,-1},
{44,49,54,78,84,-1,-1},
{61,71,77,79,-1,-1,-1},
{36,37,49,52,54,56,85},
{17,28,63,82,86,-1,-1},
{17,45,-1,-1,-1,-1,-1}};


// Typedefs
typedef int[0, numberOfChains - 1] chainId_t;

// Ints and Arrays
int numberOfChainsDone = 0;
int tasksDone[numberOfTasks];
bool runnableChains[numberOfChains];
int Machines = numberOfMachines;

// Channels
broadcast chan startMachines;
broadcast chan chainMachineChan[numberOfChains];
broadcast chan activateChains;
broadcast chan ChainDone[numberOfChains];</declaration><template><name x="5" y="5">Composer</name><declaration>// Place local declarations here.
clock time;</declaration><location id="id0" x="-102" y="-255"><name x="-112" y="-289">Init</name><label kind="invariant" x="-246" y="-238">numberOfChainsDone &lt;= numberOfChains
&amp;&amp; cost' == 1</label></location><location id="id1" x="331" y="-255"><name x="321" y="-289">Done</name></location><init ref="id0"/><transition><source ref="id0"/><target ref="id1"/><label kind="guard" x="-17" y="-289">numberOfChainsDone &gt;= numberOfChains</label></transition></template><template><name>Chain</name><parameter>const chainId_t cid</parameter><declaration>clock x;
const int chainSize = globalChainSize[cid];
int index = 0;
int TimeUnit = 2;

bool AllDependenciesDone()
{
    bool dependenciesDone = 1;
    int i;
    for (i = 0; i &lt; maxDependencies; i++)
    {
        int value = dependencies[globalChains[cid][index]][i];
        if (value == -1)
            return dependenciesDone;

        dependenciesDone &amp;= tasksDone[value];
    }
    return dependenciesDone;
}

void DecrementWork(int workDone)
{
    int currentDuration = durations[globalChains[cid][index]];

    if (workDone &gt; currentDuration)
        durations[globalChains[cid][index]] = 0;
    else
        durations[globalChains[cid][index]] -= workDone;
}</declaration><location id="id2" x="-68" y="-238"><name x="-78" y="-272">Idle</name></location><location id="id3" x="-68" y="51"><name x="-93" y="68">Running</name><label kind="invariant" x="-127" y="85">x &lt;= chainDuration[cid]</label></location><location id="id4" x="-399" y="-238"><name x="-409" y="-272">Done</name></location><init ref="id2"/><transition><source ref="id3"/><target ref="id2"/><label kind="select" x="-59" y="-119">chain_id : chainId_t</label><label kind="synchronisation" x="-59" y="-102">ChainDone[chain_id]?</label><label kind="assignment" x="-59" y="-85">DecrementWork(chainDuration[chain_id]),
Machines++</label></transition><transition><source ref="id2"/><target ref="id4"/><label kind="guard" x="-357" y="-280">index &gt;= chainSize</label><label kind="assignment" x="-357" y="-263">numberOfChainsDone++</label></transition><transition><source ref="id3"/><target ref="id2"/><label kind="guard" x="-433" y="-119">x &gt;= chainDuration[cid]</label><label kind="synchronisation" x="-433" y="-102">ChainDone[cid]!</label><label kind="assignment" x="-433" y="-85">Machines++,
tasksDone[globalChains[cid][index]] = 1,
index++</label><nail x="-170" y="-8"/><nail x="-170" y="-170"/></transition><transition><source ref="id2"/><target ref="id3"/><label kind="guard" x="136" y="-238">index &lt; chainSize &amp;&amp;
Machines &gt; 0 &amp;&amp; AllDependenciesDone()</label><label kind="assignment" x="136" y="-204">chainDuration[cid] = durations[globalChains[cid][index]],
Machines--,
x = 0</label><nail x="127" y="-238"/><nail x="127" y="51"/></transition></template><system>// Place template instantiations here.

// List one or more processes to be composed into a system.
system Composer, Chain;
    </system></nta>
