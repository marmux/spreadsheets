<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/researchgroup/darts/uppaal/flat-1_2.dtd'>
<nta>
<declaration>//Variables
const int numberOfChains = 27;
const int numberOfTasks = 100;
const int numberOfMachines = 11;
const int maxDependencies = 22;
const int longestChain = 7;
const int globalChainSize[numberOfChains] = {6,7,7,3,3,5,5,3,4,2,5,6,2,5,4,6,4,5,4,1,3,4,1,2,1,1,1};
const int globalChains[numberOfChains][longestChain] = {
{0,5,25,84,96,99,-1},
{1,8,52,77,80,86,93},
{2,15,19,24,75,91,98},
{3,89,90,-1,-1,-1,-1},
{4,79,88,-1,-1,-1,-1},
{6,43,49,55,87,-1,-1},
{7,12,36,76,92,-1,-1},
{9,34,85,-1,-1,-1,-1},
{10,70,74,97,-1,-1,-1},
{11,95,-1,-1,-1,-1,-1},
{13,29,66,82,83,-1,-1},
{14,30,65,67,78,81,-1},
{16,71,-1,-1,-1,-1,-1},
{17,45,54,57,68,-1,-1},
{18,63,64,73,-1,-1,-1},
{20,59,60,62,72,94,-1},
{21,23,56,58,-1,-1,-1},
{22,27,41,50,53,-1,-1},
{26,40,51,61,-1,-1,-1},
{28,-1,-1,-1,-1,-1,-1},
{31,47,48,-1,-1,-1,-1},
{32,39,42,46,-1,-1,-1},
{33,-1,-1,-1,-1,-1,-1},
{35,38,-1,-1,-1,-1,-1},
{37,-1,-1,-1,-1,-1,-1},
{44,-1,-1,-1,-1,-1,-1},
{69,-1,-1,-1,-1,-1,-1}};
int chainDuration[numberOfChains] = {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1};
int durations[numberOfTasks] = {10,10,9,10,2,6,3,2,10,2,7,5,2,1,6,1,10,10,6,1,8,6,10,3,7,3,9,9,2,6,10,10,10,9,6,2,3,1,6,6,10,10,4,10,8,6,3,5,3,3,8,2,7,6,3,4,4,8,2,7,7,5,3,1,9,10,9,7,1,10,2,2,5,4,10,4,5,5,9,6,3,9,2,9,9,10,6,2,9,2,5,8,7,5,4,1,6,4,7,1};
const int dependencies[numberOfTasks][maxDependencies] = {
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,5,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,5,6,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,7,12,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,2,4,6,9,10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,3,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,15,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,14,19,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,11,14,18,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,12,19,21,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,5,7,8,21,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,3,15,17,19,20,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,5,7,12,17,23,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,7,13,17,19,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,14,22,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{10,13,27,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,9,10,11,13,16,24,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,9,11,14,19,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,14,17,20,21,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,13,24,27,31,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,7,13,19,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,3,5,9,12,18,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{19,21,22,32,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,6,7,12,19,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{14,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,10,29,32,35,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,4,6,16,32,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,6,9,18,24,26,28,30,37,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,18,20,24,27,28,30,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{10,30,36,39,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,4,5,6,8,9,12,22,23,27,41,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,8,17,26,31,41,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,3,13,17,20,21,27,34,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,16,18,36,42,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,7,12,21,23,31,37,41,46,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,13,19,27,38,40,45,47,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,8,9,14,17,24,26,28,29,30,38,43,47,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,11,15,23,27,41,42,45,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,9,15,18,36,37,40,41,42,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,5,7,8,11,19,25,26,32,33,42,49,50,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,8,10,12,20,24,33,50,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{19,21,25,26,27,30,31,35,40,45,49,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,9,18,24,29,30,33,47,49,52,54,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,2,5,6,18,23,28,47,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,7,11,28,30,39,40,48,54,55,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,6,9,21,26,30,39,50,53,56,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,3,9,17,20,22,24,30,32,46,51,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,11,13,19,30,38,48,50,59,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,10,12,14,17,19,31,33,41,42,51,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,8,11,22,23,25,26,32,49,57,60,61,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{10,16,17,18,26,28,36,38,39,44,51,55,57,60,61,-1,-1,-1,-1,-1,-1,-1},
{6,12,13,18,22,23,32,38,49,50,56,61,63,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,10,12,13,16,30,35,38,39,44,45,48,52,54,55,62,-1,-1,-1,-1,-1,-1},
{8,11,16,17,29,30,31,33,42,44,47,49,50,51,53,63,-1,-1,-1,-1,-1,-1},
{5,8,12,20,30,31,44,50,51,63,65,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,6,10,13,17,19,31,46,51,53,57,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,25,47,50,52,54,56,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,10,20,21,24,32,34,40,47,52,55,57,63,69,-1,-1,-1,-1,-1,-1,-1,-1},
{16,19,42,44,47,49,50,51,61,66,70,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{10,17,23,26,28,32,33,36,40,45,46,47,50,57,58,62,-1,-1,-1,-1,-1,-1},
{1,4,5,16,20,26,32,33,42,43,47,58,59,64,-1,-1,-1,-1,-1,-1,-1,-1},
{1,3,4,10,20,23,24,26,30,32,47,51,54,64,70,73,-1,-1,-1,-1,-1,-1},
{1,2,7,9,17,19,20,23,24,30,34,45,51,54,55,57,60,67,72,-1,-1,-1},
{0,2,9,16,24,27,35,36,41,44,49,56,61,63,-1,-1,-1,-1,-1,-1,-1,-1},
{1,2,3,5,8,16,23,31,32,52,67,70,73,76,-1,-1,-1,-1,-1,-1,-1,-1},
{13,30,38,39,46,53,55,57,58,61,62,64,67,69,-1,-1,-1,-1,-1,-1,-1,-1},
{3,4,9,19,24,27,36,39,40,44,54,60,70,74,75,76,-1,-1,-1,-1,-1,-1},
{10,19,22,23,24,29,32,33,38,48,64,67,77,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,17,19,27,30,31,32,37,54,56,60,63,65,73,78,-1,-1,-1,-1,-1,-1,-1},
{0,1,7,16,17,27,30,35,37,51,66,67,69,70,72,73,80,-1,-1,-1,-1,-1},
{2,3,11,15,17,22,30,31,35,36,39,47,56,68,69,73,82,-1,-1,-1,-1,-1},
{0,5,6,10,11,12,20,21,23,25,26,38,44,48,53,57,61,68,71,76,-1,-1},
{2,4,8,16,17,21,22,24,25,34,35,38,39,41,45,57,59,62,67,68,74,81},
{4,6,8,15,17,18,25,26,29,32,33,35,40,47,52,61,62,67,69,76,80,-1},
{4,18,19,21,22,24,32,36,37,45,47,55,56,59,61,65,76,77,81,85,-1,-1},
{7,29,38,44,55,56,70,71,73,74,76,78,79,80,87,-1,-1,-1,-1,-1,-1,-1},
{3,6,12,13,19,23,25,29,30,38,47,53,55,57,63,66,75,80,82,85,-1,-1},
{6,11,22,26,31,34,39,43,46,48,50,55,71,75,77,79,89,-1,-1,-1,-1,-1},
{1,3,8,12,22,30,46,48,52,59,62,65,67,73,74,75,80,83,88,-1,-1,-1},
{1,9,13,17,24,46,70,73,76,80,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,9,16,20,28,32,33,39,57,58,63,67,69,74,86,87,91,-1,-1,-1,-1,-1},
{6,17,23,25,43,50,54,72,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,11,12,15,17,30,38,41,43,47,51,56,67,68,70,72,81,91,-1,-1,-1,-1},
{13,21,24,27,31,35,41,45,55,58,65,66,68,71,75,84,89,91,92,-1,-1,-1},
{13,22,41,44,54,59,62,64,68,72,74,84,89,95,-1,-1,-1,-1,-1,-1,-1,-1},
{1,10,13,16,17,22,28,33,39,44,45,69,72,75,84,85,87,91,-1,-1,-1,-1},
{5,12,30,37,46,51,53,67,74,75,79,88,89,93,95,96,-1,-1,-1,-1,-1,-1}};


// Typedefs
typedef int[0, numberOfChains - 1] chainId_t;

// Ints and Arrays
int numberOfChainsDone = 0;
int tasksDone[numberOfTasks];
bool runnableChains[numberOfChains];
int Machines = numberOfMachines;

// Channels
broadcast chan startMachines;
broadcast chan chainMachineChan[numberOfChains];
broadcast chan activateChains;
broadcast chan ChainDone[numberOfChains];</declaration><template><name x="5" y="5">Composer</name><declaration>// Place local declarations here.
clock time;</declaration><location id="id0" x="-102" y="-255"><name x="-112" y="-289">Init</name><label kind="invariant" x="-246" y="-238">numberOfChainsDone &lt;= numberOfChains
&amp;&amp; cost' == 1</label></location><location id="id1" x="331" y="-255"><name x="321" y="-289">Done</name></location><init ref="id0"/><transition><source ref="id0"/><target ref="id1"/><label kind="guard" x="-17" y="-289">numberOfChainsDone &gt;= numberOfChains</label></transition></template><template><name>Chain</name><parameter>const chainId_t cid</parameter><declaration>clock x;
const int chainSize = globalChainSize[cid];
int index = 0;
int TimeUnit = 2;

bool AllDependenciesDone()
{
    bool dependenciesDone = 1;
    int i;
    for (i = 0; i &lt; maxDependencies; i++)
    {
        int value = dependencies[globalChains[cid][index]][i];
        if (value == -1)
            return dependenciesDone;

        dependenciesDone &amp;= tasksDone[value];
    }
    return dependenciesDone;
}

void DecrementWork(int workDone)
{
    int currentDuration = durations[globalChains[cid][index]];

    if (workDone &gt; currentDuration)
        durations[globalChains[cid][index]] = 0;
    else
        durations[globalChains[cid][index]] -= workDone;
}</declaration><location id="id2" x="-68" y="-238"><name x="-78" y="-272">Idle</name></location><location id="id3" x="-68" y="51"><name x="-93" y="68">Running</name><label kind="invariant" x="-127" y="85">x &lt;= chainDuration[cid]</label></location><location id="id4" x="-399" y="-238"><name x="-409" y="-272">Done</name></location><init ref="id2"/><transition><source ref="id3"/><target ref="id2"/><label kind="select" x="-59" y="-119">chain_id : chainId_t</label><label kind="synchronisation" x="-59" y="-102">ChainDone[chain_id]?</label><label kind="assignment" x="-59" y="-85">DecrementWork(chainDuration[chain_id]),
Machines++</label></transition><transition><source ref="id2"/><target ref="id4"/><label kind="guard" x="-357" y="-280">index &gt;= chainSize</label><label kind="assignment" x="-357" y="-263">numberOfChainsDone++</label></transition><transition><source ref="id3"/><target ref="id2"/><label kind="guard" x="-433" y="-119">x &gt;= chainDuration[cid]</label><label kind="synchronisation" x="-433" y="-102">ChainDone[cid]!</label><label kind="assignment" x="-433" y="-85">Machines++,
tasksDone[globalChains[cid][index]] = 1,
index++</label><nail x="-170" y="-8"/><nail x="-170" y="-170"/></transition><transition><source ref="id2"/><target ref="id3"/><label kind="guard" x="136" y="-238">index &lt; chainSize &amp;&amp;
Machines &gt; 0 &amp;&amp; AllDependenciesDone()</label><label kind="assignment" x="136" y="-204">chainDuration[cid] = durations[globalChains[cid][index]],
Machines--,
x = 0</label><nail x="127" y="-238"/><nail x="127" y="51"/></transition></template><system>// Place template instantiations here.

// List one or more processes to be composed into a system.
system Composer, Chain;
    </system></nta>
