<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/researchgroup/darts/uppaal/flat-1_2.dtd'>
<nta>
<declaration>//Variables
const int numberOfChains = 34;
const int numberOfTasks = 100;
const int numberOfMachines = 2;
const int maxDependencies = 30;
const int longestChain = 7;
const int globalChainSize[numberOfChains] = {7,3,3,3,5,2,2,3,3,3,3,5,4,3,5,3,2,6,2,2,3,5,3,2,1,2,3,2,2,2,1,3,1,1};
const int globalChains[numberOfChains][longestChain] = {
{0,9,29,53,68,81,87},
{1,84,95,-1,-1,-1,-1},
{2,64,97,-1,-1,-1,-1},
{3,83,94,-1,-1,-1,-1},
{4,49,69,71,89,-1,-1},
{5,98,-1,-1,-1,-1,-1},
{6,93,-1,-1,-1,-1,-1},
{7,65,96,-1,-1,-1,-1},
{8,52,80,-1,-1,-1,-1},
{10,44,92,-1,-1,-1,-1},
{11,86,90,-1,-1,-1,-1},
{12,27,39,70,91,-1,-1},
{13,62,73,79,-1,-1,-1},
{14,82,99,-1,-1,-1,-1},
{15,40,59,63,88,-1,-1},
{16,54,74,-1,-1,-1,-1},
{17,58,-1,-1,-1,-1,-1},
{18,30,45,55,72,85,-1},
{19,77,-1,-1,-1,-1,-1},
{20,66,-1,-1,-1,-1,-1},
{21,67,75,-1,-1,-1,-1},
{22,37,47,60,76,-1,-1},
{23,26,50,-1,-1,-1,-1},
{24,78,-1,-1,-1,-1,-1},
{25,-1,-1,-1,-1,-1,-1},
{28,46,-1,-1,-1,-1,-1},
{31,42,51,-1,-1,-1,-1},
{32,48,-1,-1,-1,-1,-1},
{33,56,-1,-1,-1,-1,-1},
{34,57,-1,-1,-1,-1,-1},
{35,-1,-1,-1,-1,-1,-1},
{36,43,61,-1,-1,-1,-1},
{38,-1,-1,-1,-1,-1,-1},
{41,-1,-1,-1,-1,-1,-1}};
int chainDuration[numberOfChains] = {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1};
int durations[numberOfTasks] = {2,3,2,24,7,1,9,1,15,6,1,1,4,6,2,1,2,6,1,4,14,5,8,1,6,3,4,5,5,1,7,8,10,9,6,3,8,1,1,7,20,2,5,3,11,8,1,4,4,2,3,8,12,2,4,1,2,1,8,2,15,5,4,5,2,6,5,9,6,1,2,15,13,1,3,5,1,10,13,2,2,3,6,5,4,3,4,3,4,2,1,4,12,7,5,2,2,2,3,3};
const int dependencies[numberOfTasks][maxDependencies] = {
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,6,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,2,3,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,3,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,2,3,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,6,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,6,13,16,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,8,10,12,13,17,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,8,9,12,14,16,17,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,7,12,15,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,2,7,15,17,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,2,5,12,16,17,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,10,17,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,9,13,16,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,2,3,5,8,11,16,19,20,23,24,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,6,7,10,11,12,15,23,25,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,4,5,11,17,18,22,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,2,3,5,9,13,15,17,19,21,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,2,7,11,12,16,17,18,20,21,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,9,14,24,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,7,8,9,14,16,21,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,10,11,23,24,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,5,9,12,15,20,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,6,7,14,15,18,23,24,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,2,5,15,21,22,23,24,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,2,9,13,15,19,20,22,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,3,11,21,22,31,34,37,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,6,10,11,12,15,18,23,24,27,29,35,37,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,4,5,11,12,13,14,15,16,18,19,23,24,25,29,30,35,37,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,2,5,8,14,20,21,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,3,7,20,21,28,29,31,34,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,5,10,11,26,29,32,33,36,37,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,4,6,8,9,10,22,24,34,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,7,9,11,13,15,18,20,24,27,30,35,36,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,3,7,12,19,20,22,24,28,31,37,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,7,9,15,16,20,22,23,28,30,35,36,37,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,3,8,19,22,24,28,29,32,33,34,35,37,45,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,2,3,4,6,7,12,19,22,25,26,30,33,35,39,40,41,42,47,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,5,9,11,22,25,26,30,33,37,39,41,43,45,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,14,32,39,42,44,45,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,2,3,4,8,12,21,24,28,29,35,44,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,3,4,6,8,9,16,22,25,27,29,30,36,41,42,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,5,6,7,10,15,16,17,19,24,35,37,43,44,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,6,8,10,14,15,18,24,26,27,30,35,37,42,45,46,47,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,7,14,15,20,26,29,32,33,34,37,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,4,21,27,28,30,33,34,36,38,39,43,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,7,8,10,11,14,15,16,17,23,28,33,34,36,45,46,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,2,6,9,20,21,26,28,31,32,35,36,40,43,45,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,6,19,24,29,30,36,45,46,47,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{9,11,16,18,20,22,31,33,39,43,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,4,5,8,10,13,14,17,22,26,33,37,39,44,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,2,8,14,15,16,17,19,20,26,28,31,42,49,50,54,56,58,59,61,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,2,5,8,9,10,17,29,33,34,37,39,42,44,51,54,55,57,59,61,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,4,6,7,8,13,14,17,24,28,35,41,42,45,46,48,49,51,53,55,57,61,62,-1,-1,-1,-1,-1,-1,-1},
{0,2,3,11,18,20,24,30,32,33,37,38,41,45,52,54,57,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,10,14,18,21,23,24,37,38,52,53,54,61,62,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,3,4,6,9,10,19,23,24,25,29,33,34,35,36,37,38,39,43,44,47,48,49,50,53,57,-1,-1,-1,-1},
{2,4,7,9,10,15,24,28,29,34,38,43,46,49,55,57,58,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,5,12,17,19,20,21,24,26,27,32,36,37,38,39,43,44,45,47,48,49,51,58,65,-1,-1,-1,-1,-1,-1},
{1,7,9,11,13,14,16,21,30,32,36,42,43,44,46,49,58,61,62,64,69,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,7,8,9,16,17,24,25,26,27,28,34,42,45,51,55,59,65,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,9,10,12,15,16,20,22,23,26,27,28,37,38,40,42,46,49,50,51,52,54,57,58,61,62,66,-1,-1,-1},
{4,5,6,13,15,18,20,23,28,30,32,34,36,38,39,41,42,44,49,53,54,57,67,-1,-1,-1,-1,-1,-1,-1},
{1,6,8,9,19,20,21,24,25,34,36,37,38,41,53,62,67,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,10,14,25,26,28,31,32,35,37,41,48,54,59,60,68,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,3,13,17,19,26,28,29,32,33,35,41,45,46,55,60,61,62,68,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,7,9,11,19,24,28,31,35,36,37,38,42,54,56,62,67,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,12,13,15,17,19,21,24,27,38,41,53,55,57,59,68,70,73,77,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,2,6,10,12,16,17,25,31,37,38,41,45,49,52,55,58,59,61,70,77,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,4,7,9,10,15,18,19,21,25,31,32,34,37,49,51,55,57,59,68,74,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,4,8,12,14,15,23,29,31,36,37,39,41,47,48,50,53,54,56,58,59,63,66,67,73,74,-1,-1,-1,-1},
{2,3,7,10,13,17,21,23,24,25,27,30,32,39,44,48,49,52,53,56,57,58,59,64,67,68,73,75,76,78},
{0,1,4,8,9,11,14,15,21,22,29,30,40,44,46,52,54,57,58,61,64,75,-1,-1,-1,-1,-1,-1,-1,-1},
{0,8,16,19,22,28,30,31,33,34,37,44,45,47,49,54,55,56,59,66,72,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,3,11,12,14,16,19,20,24,25,44,45,52,57,65,68,74,76,77,78,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,2,5,6,11,17,19,23,27,33,34,35,38,42,43,44,52,63,65,66,68,69,70,73,76,80,81,85,-1,-1},
{1,4,6,17,18,19,21,23,24,31,39,43,51,62,63,67,71,77,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,4,5,6,15,21,23,25,27,32,36,37,44,52,53,54,56,58,59,61,64,71,79,81,85,-1,-1,-1,-1,-1},
{4,14,15,16,17,20,25,26,27,28,32,34,41,49,50,54,59,62,64,71,72,74,77,78,79,83,86,-1,-1,-1},
{2,16,17,19,20,25,27,33,43,45,48,49,50,60,61,63,64,65,69,70,71,73,-1,-1,-1,-1,-1,-1,-1,-1},
{2,4,7,9,12,15,17,18,19,22,26,27,28,37,40,42,44,49,56,59,62,66,68,70,73,74,75,77,79,-1},
{4,5,6,7,9,10,22,23,27,28,31,33,35,37,38,40,41,47,58,61,63,69,71,75,78,85,-1,-1,-1,-1},
{1,3,6,7,11,13,14,15,19,20,23,27,30,35,41,42,43,44,52,57,58,67,73,75,80,81,83,85,86,-1},
{3,5,8,10,15,19,20,21,23,24,29,38,39,42,49,55,65,67,73,75,81,84,86,-1,-1,-1,-1,-1,-1,-1},
{0,4,6,7,10,13,17,25,27,30,36,44,45,52,54,56,58,62,65,69,74,80,83,-1,-1,-1,-1,-1,-1,-1},
{1,10,13,17,19,22,29,35,37,39,42,44,48,49,54,56,58,61,62,64,66,67,68,72,74,80,81,82,85,-1},
{2,5,6,9,14,21,22,30,37,38,40,42,45,47,50,51,53,54,56,66,69,72,74,76,84,85,-1,-1,-1,-1},
{2,5,7,15,16,18,21,25,30,45,46,47,51,55,56,60,62,63,64,66,74,77,82,-1,-1,-1,-1,-1,-1,-1}};


// Typedefs
typedef int[0, numberOfChains - 1] chainId_t;

// Ints and Arrays
int numberOfChainsDone = 0;
int tasksDone[numberOfTasks];
bool runnableChains[numberOfChains];
int Machines = numberOfMachines;

// Channels
broadcast chan startMachines;
broadcast chan chainMachineChan[numberOfChains];
broadcast chan activateChains;
broadcast chan ChainDone[numberOfChains];</declaration><template><name x="5" y="5">Composer</name><declaration>// Place local declarations here.
clock time;</declaration><location id="id0" x="-102" y="-255"><name x="-112" y="-289">Init</name><label kind="invariant" x="-246" y="-238">numberOfChainsDone &lt;= numberOfChains
&amp;&amp; cost' == 1</label></location><location id="id1" x="331" y="-255"><name x="321" y="-289">Done</name></location><init ref="id0"/><transition><source ref="id0"/><target ref="id1"/><label kind="guard" x="-17" y="-289">numberOfChainsDone &gt;= numberOfChains</label></transition></template><template><name>Chain</name><parameter>const chainId_t cid</parameter><declaration>clock x;
const int chainSize = globalChainSize[cid];
int index = 0;
int TimeUnit = 2;

bool AllDependenciesDone()
{
    bool dependenciesDone = 1;
    int i;
    for (i = 0; i &lt; maxDependencies; i++)
    {
        int value = dependencies[globalChains[cid][index]][i];
        if (value == -1)
            return dependenciesDone;

        dependenciesDone &amp;= tasksDone[value];
    }
    return dependenciesDone;
}

void DecrementWork(int workDone)
{
    int currentDuration = durations[globalChains[cid][index]];

    if (workDone &gt; currentDuration)
        durations[globalChains[cid][index]] = 0;
    else
        durations[globalChains[cid][index]] -= workDone;
}</declaration><location id="id2" x="-68" y="-238"><name x="-78" y="-272">Idle</name></location><location id="id3" x="-68" y="51"><name x="-93" y="68">Running</name><label kind="invariant" x="-127" y="85">x &lt;= chainDuration[cid]</label></location><location id="id4" x="-399" y="-238"><name x="-409" y="-272">Done</name></location><init ref="id2"/><transition><source ref="id3"/><target ref="id2"/><label kind="select" x="-59" y="-119">chain_id : chainId_t</label><label kind="synchronisation" x="-59" y="-102">ChainDone[chain_id]?</label><label kind="assignment" x="-59" y="-85">DecrementWork(chainDuration[chain_id]),
Machines++</label></transition><transition><source ref="id2"/><target ref="id4"/><label kind="guard" x="-357" y="-280">index &gt;= chainSize</label><label kind="assignment" x="-357" y="-263">numberOfChainsDone++</label></transition><transition><source ref="id3"/><target ref="id2"/><label kind="guard" x="-433" y="-119">x &gt;= chainDuration[cid]</label><label kind="synchronisation" x="-433" y="-102">ChainDone[cid]!</label><label kind="assignment" x="-433" y="-85">Machines++,
tasksDone[globalChains[cid][index]] = 1,
index++</label><nail x="-170" y="-8"/><nail x="-170" y="-170"/></transition><transition><source ref="id2"/><target ref="id3"/><label kind="guard" x="136" y="-238">index &lt; chainSize &amp;&amp;
Machines &gt; 0 &amp;&amp; AllDependenciesDone()</label><label kind="assignment" x="136" y="-204">chainDuration[cid] = durations[globalChains[cid][index]],
Machines--,
x = 0</label><nail x="127" y="-238"/><nail x="127" y="51"/></transition></template><system>// Place template instantiations here.

// List one or more processes to be composed into a system.
system Composer, Chain;
    </system></nta>
