<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/researchgroup/darts/uppaal/flat-1_2.dtd'>
<nta>
<declaration>//Variables
const int numberOfChains = 34;
const int numberOfTasks = 100;
const int numberOfMachines = 11;
const int maxDependencies = 19;
const int longestChain = 5;
const int globalChainSize[numberOfChains] = {4,5,3,4,4,3,5,4,5,3,5,3,2,3,3,5,3,3,1,4,3,3,4,3,3,1,3,1,1,1,1,2,1,1};
const int globalChains[numberOfChains][longestChain] = {
{0,16,84,90,-1},
{1,43,70,87,93},
{2,37,92,-1,-1},
{3,57,77,85,-1},
{4,22,72,96,-1},
{5,71,98,-1,-1},
{6,25,76,80,99},
{7,79,83,95,-1},
{8,46,49,63,97},
{9,51,81,-1,-1},
{10,56,61,75,89},
{11,69,94,-1,-1},
{12,88,-1,-1,-1},
{13,26,68,-1,-1},
{14,54,86,-1,-1},
{15,45,52,64,74},
{17,78,82,-1,-1},
{18,41,91,-1,-1},
{19,-1,-1,-1,-1},
{20,31,59,67,-1},
{21,28,60,-1,-1},
{23,34,65,-1,-1},
{24,35,47,58,-1},
{27,42,73,-1,-1},
{29,48,50,-1,-1},
{30,-1,-1,-1,-1},
{32,53,66,-1,-1},
{33,-1,-1,-1,-1},
{36,-1,-1,-1,-1},
{38,-1,-1,-1,-1},
{39,-1,-1,-1,-1},
{40,55,-1,-1,-1},
{44,-1,-1,-1,-1},
{62,-1,-1,-1,-1}};
int chainDuration[numberOfChains] = {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1};
int durations[numberOfTasks] = {7,6,4,7,7,5,6,5,6,4,6,5,5,7,6,6,6,6,6,5,8,5,5,4,5,5,5,6,4,5,6,7,4,6,6,5,5,5,5,5,8,6,7,4,7,5,4,4,6,5,3,4,5,7,4,6,5,6,6,6,5,5,4,4,4,5,5,6,5,6,5,7,5,6,7,6,5,6,5,6,7,6,5,6,5,6,6,6,4,7,7,3,6,6,5,6,5,5,6,4};
const int dependencies[numberOfTasks][maxDependencies] = {
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,3,5,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,4,8,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,3,4,5,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{15,17,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,16,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,15,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,3,4,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,10,14,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,3,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,3,4,6,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,9,10,11,13,15,21,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,4,12,21,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,11,14,17,21,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,20,23,25,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,12,14,23,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,8,10,16,20,23,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{24,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,5,6,18,21,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,7,10,16,20,23,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,9,10,18,20,24,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,21,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,16,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,15,22,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,8,14,23,37,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,17,22,27,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,10,12,18,19,27,30,36,37,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,9,26,27,30,37,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,6,11,14,15,27,29,30,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{10,13,16,24,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{12,15,16,20,22,26,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,4,8,13,16,20,27,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,8,23,24,35,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,15,27,29,32,36,37,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,8,12,15,18,23,26,27,37,43,46,-1,-1,-1,-1,-1,-1,-1,-1},
{4,9,29,30,37,44,46,48,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,5,6,9,12,14,22,23,27,35,47,-1,-1,-1,-1,-1,-1,-1,-1},
{14,22,34,45,48,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,17,18,27,32,47,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,4,14,26,31,35,41,43,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,9,11,14,25,40,47,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,5,6,10,18,27,28,36,46,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,2,3,11,36,39,45,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,13,15,16,23,33,41,47,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,4,14,31,47,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,2,6,26,28,48,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{11,23,28,30,32,46,49,54,56,57,58,-1,-1,-1,-1,-1,-1,-1,-1},
{0,4,6,23,24,34,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,23,36,37,38,40,43,46,49,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,14,22,25,30,33,40,48,50,52,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{11,21,22,24,25,27,31,34,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,5,25,26,34,40,53,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,9,23,33,34,36,41,59,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,7,12,16,26,42,58,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,3,4,6,11,19,24,27,32,33,40,41,45,47,58,-1,-1,-1,-1},
{8,10,11,16,22,38,41,42,43,44,46,47,51,64,-1,-1,-1,-1,-1},
{3,5,11,13,16,19,38,44,46,48,57,-1,-1,-1,-1,-1,-1,-1,-1},
{4,22,29,37,43,48,67,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,6,7,18,33,42,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{9,11,15,22,23,42,54,64,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,6,15,21,50,51,54,55,59,61,68,-1,-1,-1,-1,-1,-1,-1,-1},
{4,7,16,25,27,32,34,39,41,57,61,69,-1,-1,-1,-1,-1,-1,-1},
{1,3,5,32,38,43,44,54,57,58,66,-1,-1,-1,-1,-1,-1,-1,-1},
{4,13,17,26,27,28,31,33,35,41,50,52,63,65,-1,-1,-1,-1,-1},
{7,11,21,25,32,42,43,44,48,57,61,-1,-1,-1,-1,-1,-1,-1,-1},
{9,16,26,29,41,61,73,74,75,76,78,-1,-1,-1,-1,-1,-1,-1,-1},
{1,6,8,14,19,39,40,49,51,53,61,-1,-1,-1,-1,-1,-1,-1,-1},
{12,33,65,78,79,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,4,6,34,36,37,56,62,66,79,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,7,12,16,18,19,21,22,29,31,36,40,47,61,70,76,-1,-1,-1},
{0,52,55,58,77,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{14,20,32,49,54,56,63,71,74,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,30,41,44,70,71,77,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{12,19,37,42,44,54,55,56,58,62,63,66,75,-1,-1,-1,-1,-1,-1},
{5,10,13,18,20,30,31,35,38,39,42,45,46,51,52,75,80,-1,-1},
{8,9,10,16,28,47,56,67,71,77,80,84,-1,-1,-1,-1,-1,-1,-1},
{8,10,17,23,33,41,64,66,70,72,73,-1,-1,-1,-1,-1,-1,-1,-1},
{2,8,11,13,14,18,21,29,37,38,42,62,63,69,70,76,79,86,-1},
{1,3,9,13,19,21,25,27,34,37,40,48,56,59,62,85,86,87,-1},
{0,15,16,18,19,29,51,54,64,69,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,9,17,18,25,27,30,35,43,46,51,52,53,54,59,63,75,78,83},
{5,9,11,16,25,34,38,41,47,53,65,72,78,84,88,-1,-1,-1,-1},
{7,12,15,40,46,58,61,63,68,81,82,83,-1,-1,-1,-1,-1,-1,-1},
{39,44,47,55,65,71,72,78,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,9,10,25,28,43,45,59,63,80,82,-1,-1,-1,-1,-1,-1,-1,-1}};


// Typedefs
typedef int[0, numberOfChains - 1] chainId_t;

// Ints and Arrays
int numberOfChainsDone = 0;
int tasksDone[numberOfTasks];
bool runnableChains[numberOfChains];
int Machines = numberOfMachines;

// Channels
broadcast chan startMachines;
broadcast chan chainMachineChan[numberOfChains];
broadcast chan activateChains;
broadcast chan ChainDone[numberOfChains];</declaration><template><name x="5" y="5">Composer</name><declaration>// Place local declarations here.
clock time;</declaration><location id="id0" x="-102" y="-255"><name x="-112" y="-289">Init</name><label kind="invariant" x="-246" y="-238">numberOfChainsDone &lt;= numberOfChains
&amp;&amp; cost' == 1</label></location><location id="id1" x="331" y="-255"><name x="321" y="-289">Done</name></location><init ref="id0"/><transition><source ref="id0"/><target ref="id1"/><label kind="guard" x="-17" y="-289">numberOfChainsDone &gt;= numberOfChains</label></transition></template><template><name>Chain</name><parameter>const chainId_t cid</parameter><declaration>clock x;
const int chainSize = globalChainSize[cid];
int index = 0;
int TimeUnit = 2;

bool AllDependenciesDone()
{
    bool dependenciesDone = 1;
    int i;
    for (i = 0; i &lt; maxDependencies; i++)
    {
        int value = dependencies[globalChains[cid][index]][i];
        if (value == -1)
            return dependenciesDone;

        dependenciesDone &amp;= tasksDone[value];
    }
    return dependenciesDone;
}

void DecrementWork(int workDone)
{
    int currentDuration = durations[globalChains[cid][index]];

    if (workDone &gt; currentDuration)
        durations[globalChains[cid][index]] = 0;
    else
        durations[globalChains[cid][index]] -= workDone;
}</declaration><location id="id2" x="-68" y="-238"><name x="-78" y="-272">Idle</name></location><location id="id3" x="-68" y="51"><name x="-93" y="68">Running</name><label kind="invariant" x="-127" y="85">x &lt;= chainDuration[cid]</label></location><location id="id4" x="-399" y="-238"><name x="-409" y="-272">Done</name></location><init ref="id2"/><transition><source ref="id3"/><target ref="id2"/><label kind="select" x="-59" y="-119">chain_id : chainId_t</label><label kind="synchronisation" x="-59" y="-102">ChainDone[chain_id]?</label><label kind="assignment" x="-59" y="-85">DecrementWork(chainDuration[chain_id]),
Machines++</label></transition><transition><source ref="id2"/><target ref="id4"/><label kind="guard" x="-357" y="-280">index &gt;= chainSize</label><label kind="assignment" x="-357" y="-263">numberOfChainsDone++</label></transition><transition><source ref="id3"/><target ref="id2"/><label kind="guard" x="-433" y="-119">x &gt;= chainDuration[cid]</label><label kind="synchronisation" x="-433" y="-102">ChainDone[cid]!</label><label kind="assignment" x="-433" y="-85">Machines++,
tasksDone[globalChains[cid][index]] = 1,
index++</label><nail x="-170" y="-8"/><nail x="-170" y="-170"/></transition><transition><source ref="id2"/><target ref="id3"/><label kind="guard" x="136" y="-238">index &lt; chainSize &amp;&amp;
Machines &gt; 0 &amp;&amp; AllDependenciesDone()</label><label kind="assignment" x="136" y="-204">chainDuration[cid] = durations[globalChains[cid][index]],
Machines--,
x = 0</label><nail x="127" y="-238"/><nail x="127" y="51"/></transition></template><system>// Place template instantiations here.

// List one or more processes to be composed into a system.
system Composer, Chain;
    </system></nta>
