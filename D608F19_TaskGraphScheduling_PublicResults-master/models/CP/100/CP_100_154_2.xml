<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/researchgroup/darts/uppaal/flat-1_2.dtd'>
<nta>
<declaration>//Variables
const int numberOfChains = 29;
const int numberOfTasks = 100;
const int numberOfMachines = 2;
const int maxDependencies = 27;
const int longestChain = 11;
const int globalChainSize[numberOfChains] = {11,5,4,5,6,2,4,2,3,4,5,4,2,4,4,5,5,4,3,2,1,3,5,1,1,1,1,2,1};
const int globalChains[numberOfChains][longestChain] = {
{0,5,11,12,48,49,62,83,96,98,99},
{1,32,44,87,95,-1,-1,-1,-1,-1,-1},
{2,51,76,90,-1,-1,-1,-1,-1,-1,-1},
{3,63,70,79,93,-1,-1,-1,-1,-1,-1},
{4,73,81,82,85,92,-1,-1,-1,-1,-1},
{6,97,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,27,86,94,-1,-1,-1,-1,-1,-1,-1},
{8,78,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{9,40,89,-1,-1,-1,-1,-1,-1,-1,-1},
{10,21,71,88,-1,-1,-1,-1,-1,-1,-1},
{13,42,64,80,84,-1,-1,-1,-1,-1,-1},
{14,34,75,77,-1,-1,-1,-1,-1,-1,-1},
{15,68,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{16,28,52,74,-1,-1,-1,-1,-1,-1,-1},
{17,59,69,72,-1,-1,-1,-1,-1,-1,-1},
{18,35,53,54,91,-1,-1,-1,-1,-1,-1},
{19,43,50,56,60,-1,-1,-1,-1,-1,-1},
{20,46,58,67,-1,-1,-1,-1,-1,-1,-1},
{22,39,47,-1,-1,-1,-1,-1,-1,-1,-1},
{23,57,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{24,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{25,31,45,-1,-1,-1,-1,-1,-1,-1,-1},
{26,33,41,61,65,-1,-1,-1,-1,-1,-1},
{29,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{30,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{36,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{37,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{38,66,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{55,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1}};
int chainDuration[numberOfChains] = {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1};
int durations[numberOfTasks] = {4,17,4,2,7,9,6,1,15,7,1,11,15,9,10,4,9,9,6,4,3,19,8,1,10,15,13,13,3,5,2,3,7,7,3,8,4,4,8,6,4,8,3,15,19,14,19,6,17,1,8,16,11,4,2,10,3,13,10,8,4,3,5,13,5,15,3,7,19,3,14,3,6,2,3,16,6,5,3,20,2,7,4,2,4,10,4,7,15,2,4,7,9,6,7,8,8,7,4,8};
const int dependencies[numberOfTasks][maxDependencies] = {
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,3,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,4,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,5,6,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,6,7,10,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,7,8,12,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,9,13,14,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,6,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,3,6,11,16,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,9,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,4,5,16,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,2,7,8,10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,7,13,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,9,11,16,21,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,12,13,18,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,3,6,15,16,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,2,4,7,12,14,18,23,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,5,12,14,16,17,21,25,26,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,11,14,16,26,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{13,17,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,6,10,12,25,27,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,5,20,22,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,4,19,20,22,26,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,5,9,10,13,14,19,23,26,30,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,14,17,18,19,20,21,22,28,34,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,7,17,23,34,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,12,13,14,19,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,7,27,33,34,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,6,10,14,18,22,25,26,28,29,31,33,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,8,9,11,15,20,26,31,33,39,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,14,25,27,32,33,34,37,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,4,9,10,13,14,21,28,37,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,7,19,21,27,38,39,40,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,4,8,11,14,32,35,36,39,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,11,30,31,37,38,42,44,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,17,20,28,33,38,42,45,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,8,22,23,30,34,37,38,39,43,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,10,11,12,20,26,29,32,37,39,41,42,45,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,10,11,12,37,44,48,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,8,9,19,20,22,23,29,33,43,45,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,11,16,19,32,42,48,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,8,10,23,24,28,34,39,48,49,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,9,10,14,22,23,26,35,49,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{10,21,28,32,33,46,47,49,53,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{9,34,41,42,43,50,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,8,13,18,24,29,34,35,39,50,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,19,21,23,25,26,31,34,36,48,51,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,7,10,20,41,46,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,8,12,17,23,24,25,26,27,32,34,36,37,45,57,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,5,12,18,24,25,26,37,40,46,47,53,56,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,5,17,39,41,53,56,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,5,23,26,27,33,35,41,44,47,49,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,6,10,14,15,17,19,21,31,39,44,51,57,58,62,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,11,17,27,28,29,33,34,35,37,38,41,42,43,48,50,59,61,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{15,28,29,40,61,63,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,8,22,38,48,53,56,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,11,13,21,31,37,39,58,66,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{14,15,33,34,40,41,48,49,53,54,56,63,65,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,13,28,37,45,50,51,56,59,60,61,67,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,7,13,15,20,30,44,48,52,54,56,59,63,65,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,3,7,13,17,21,23,26,41,47,49,51,53,54,59,67,68,69,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,4,7,8,15,25,26,28,37,43,46,47,56,57,61,69,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,4,7,12,14,20,31,33,49,52,54,63,64,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{18,19,22,25,32,34,46,50,52,54,55,61,63,69,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,3,11,13,16,19,22,23,30,33,34,41,43,44,45,55,58,60,69,73,-1,-1,-1,-1,-1,-1,-1},
{4,5,6,19,22,24,26,32,33,37,40,43,45,49,50,51,52,57,72,73,-1,-1,-1,-1,-1,-1,-1},
{4,8,15,16,18,19,23,29,34,45,53,54,62,68,73,75,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,3,4,8,23,27,28,37,48,55,57,70,77,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,8,10,11,12,34,35,49,50,51,55,60,65,67,70,73,75,77,78,-1,-1,-1,-1,-1,-1,-1,-1},
{0,5,6,13,16,19,29,31,32,36,38,39,41,45,60,64,74,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,4,15,16,22,30,45,48,58,59,61,62,71,73,79,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,7,8,17,19,21,22,29,37,38,51,55,69,70,72,73,77,79,80,81,-1,-1,-1,-1,-1,-1,-1},
{8,23,31,42,46,48,49,55,58,62,67,73,76,77,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,15,18,19,21,34,50,58,59,61,64,69,72,73,75,80,82,83,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,7,11,21,24,27,28,29,34,35,38,59,72,74,77,79,81,82,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,10,12,18,27,31,33,37,41,43,45,46,50,64,65,69,72,73,77,79,81,83,-1,-1,-1,-1,-1},
{1,3,4,7,8,10,11,14,17,20,25,30,32,33,37,44,56,57,58,59,72,73,75,79,80,83,-1},
{3,6,8,19,25,28,29,31,37,46,48,59,65,69,71,75,79,80,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,8,16,17,18,33,37,40,46,51,64,67,71,72,73,74,88,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,17,26,32,33,36,38,51,54,56,62,64,65,66,67,69,76,86,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{12,13,16,31,34,38,41,47,54,60,73,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{9,13,22,28,29,30,32,36,40,44,50,55,59,68,71,72,85,89,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,16,17,21,25,26,32,39,49,58,67,70,78,79,80,81,83,85,86,89,-1,-1,-1,-1,-1,-1,-1},
{2,6,8,12,21,24,38,50,57,58,59,61,66,69,78,81,82,86,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,16,22,26,31,43,46,47,64,65,71,76,80,87,89,91,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,6,21,31,45,47,48,52,53,55,56,62,63,71,73,77,79,83,86,88,90,95,-1,-1,-1,-1,-1},
{3,6,8,15,24,31,38,40,43,51,60,67,70,73,75,80,84,94,96,-1,-1,-1,-1,-1,-1,-1,-1},
{5,11,19,22,26,39,42,49,53,55,60,63,65,66,69,70,79,80,81,89,91,96,-1,-1,-1,-1,-1},
{5,8,13,14,16,20,22,24,27,34,35,36,42,43,45,54,55,58,72,73,74,77,82,84,86,88,98}};


// Typedefs
typedef int[0, numberOfChains - 1] chainId_t;

// Ints and Arrays
int numberOfChainsDone = 0;
int tasksDone[numberOfTasks];
bool runnableChains[numberOfChains];
int Machines = numberOfMachines;

// Channels
broadcast chan startMachines;
broadcast chan chainMachineChan[numberOfChains];
broadcast chan activateChains;
broadcast chan ChainDone[numberOfChains];</declaration><template><name x="5" y="5">Composer</name><declaration>// Place local declarations here.
clock time;</declaration><location id="id0" x="-102" y="-255"><name x="-112" y="-289">Init</name><label kind="invariant" x="-246" y="-238">numberOfChainsDone &lt;= numberOfChains
&amp;&amp; cost' == 1</label></location><location id="id1" x="331" y="-255"><name x="321" y="-289">Done</name></location><init ref="id0"/><transition><source ref="id0"/><target ref="id1"/><label kind="guard" x="-17" y="-289">numberOfChainsDone &gt;= numberOfChains</label></transition></template><template><name>Chain</name><parameter>const chainId_t cid</parameter><declaration>clock x;
const int chainSize = globalChainSize[cid];
int index = 0;
int TimeUnit = 2;

bool AllDependenciesDone()
{
    bool dependenciesDone = 1;
    int i;
    for (i = 0; i &lt; maxDependencies; i++)
    {
        int value = dependencies[globalChains[cid][index]][i];
        if (value == -1)
            return dependenciesDone;

        dependenciesDone &amp;= tasksDone[value];
    }
    return dependenciesDone;
}

void DecrementWork(int workDone)
{
    int currentDuration = durations[globalChains[cid][index]];

    if (workDone &gt; currentDuration)
        durations[globalChains[cid][index]] = 0;
    else
        durations[globalChains[cid][index]] -= workDone;
}</declaration><location id="id2" x="-68" y="-238"><name x="-78" y="-272">Idle</name></location><location id="id3" x="-68" y="51"><name x="-93" y="68">Running</name><label kind="invariant" x="-127" y="85">x &lt;= chainDuration[cid]</label></location><location id="id4" x="-399" y="-238"><name x="-409" y="-272">Done</name></location><init ref="id2"/><transition><source ref="id3"/><target ref="id2"/><label kind="select" x="-59" y="-119">chain_id : chainId_t</label><label kind="synchronisation" x="-59" y="-102">ChainDone[chain_id]?</label><label kind="assignment" x="-59" y="-85">DecrementWork(chainDuration[chain_id]),
Machines++</label></transition><transition><source ref="id2"/><target ref="id4"/><label kind="guard" x="-357" y="-280">index &gt;= chainSize</label><label kind="assignment" x="-357" y="-263">numberOfChainsDone++</label></transition><transition><source ref="id3"/><target ref="id2"/><label kind="guard" x="-433" y="-119">x &gt;= chainDuration[cid]</label><label kind="synchronisation" x="-433" y="-102">ChainDone[cid]!</label><label kind="assignment" x="-433" y="-85">Machines++,
tasksDone[globalChains[cid][index]] = 1,
index++</label><nail x="-170" y="-8"/><nail x="-170" y="-170"/></transition><transition><source ref="id2"/><target ref="id3"/><label kind="guard" x="136" y="-238">index &lt; chainSize &amp;&amp;
Machines &gt; 0 &amp;&amp; AllDependenciesDone()</label><label kind="assignment" x="136" y="-204">chainDuration[cid] = durations[globalChains[cid][index]],
Machines--,
x = 0</label><nail x="127" y="-238"/><nail x="127" y="51"/></transition></template><system>// Place template instantiations here.

// List one or more processes to be composed into a system.
system Composer, Chain;
    </system></nta>
