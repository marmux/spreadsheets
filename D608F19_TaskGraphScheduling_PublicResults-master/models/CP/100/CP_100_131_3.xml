<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/researchgroup/darts/uppaal/flat-1_2.dtd'>
<nta>
<declaration>//Variables
const int numberOfChains = 38;
const int numberOfTasks = 100;
const int numberOfMachines = 3;
const int maxDependencies = 12;
const int longestChain = 8;
const int globalChainSize[numberOfChains] = {4,3,4,5,2,4,3,2,5,3,5,5,2,5,8,2,2,3,2,3,3,3,2,1,1,1,2,1,1,3,1,2,2,1,1,1,1,1};
const int globalChains[numberOfChains][longestChain] = {
{0,5,38,90,-1,-1,-1,-1},
{1,13,97,-1,-1,-1,-1,-1},
{2,26,45,53,-1,-1,-1,-1},
{3,35,72,85,91,-1,-1,-1},
{4,99,-1,-1,-1,-1,-1,-1},
{6,27,73,98,-1,-1,-1,-1},
{7,49,87,-1,-1,-1,-1,-1},
{8,58,-1,-1,-1,-1,-1,-1},
{9,47,61,63,96,-1,-1,-1},
{10,23,76,-1,-1,-1,-1,-1},
{11,44,75,89,94,-1,-1,-1},
{12,43,68,74,82,-1,-1,-1},
{14,93,-1,-1,-1,-1,-1,-1},
{15,40,70,81,83,-1,-1,-1},
{16,17,48,66,71,77,84,95},
{18,92,-1,-1,-1,-1,-1,-1},
{19,64,-1,-1,-1,-1,-1,-1},
{20,69,88,-1,-1,-1,-1,-1},
{21,86,-1,-1,-1,-1,-1,-1},
{22,59,80,-1,-1,-1,-1,-1},
{24,55,78,-1,-1,-1,-1,-1},
{25,32,65,-1,-1,-1,-1,-1},
{28,67,-1,-1,-1,-1,-1,-1},
{29,-1,-1,-1,-1,-1,-1,-1},
{30,-1,-1,-1,-1,-1,-1,-1},
{31,-1,-1,-1,-1,-1,-1,-1},
{33,62,-1,-1,-1,-1,-1,-1},
{34,-1,-1,-1,-1,-1,-1,-1},
{36,-1,-1,-1,-1,-1,-1,-1},
{37,39,60,-1,-1,-1,-1,-1},
{41,-1,-1,-1,-1,-1,-1,-1},
{42,51,-1,-1,-1,-1,-1,-1},
{46,56,-1,-1,-1,-1,-1,-1},
{50,-1,-1,-1,-1,-1,-1,-1},
{52,-1,-1,-1,-1,-1,-1,-1},
{54,-1,-1,-1,-1,-1,-1,-1},
{57,-1,-1,-1,-1,-1,-1,-1},
{79,-1,-1,-1,-1,-1,-1,-1}};
int chainDuration[numberOfChains] = {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1};
int durations[numberOfTasks] = {6,5,7,4,12,5,6,11,7,14,5,5,6,15,7,19,6,15,11,6,11,6,6,12,5,6,5,7,4,5,5,16,6,15,11,7,4,6,4,4,5,9,10,3,5,4,11,13,6,12,6,5,9,13,6,11,10,8,11,10,7,6,7,9,5,9,6,6,13,14,9,8,19,14,4,7,8,7,6,14,14,11,6,5,5,6,5,14,9,8,5,15,5,11,7,11,4,4,5,12};
const int dependencies[numberOfTasks][maxDependencies] = {
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{15,16,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,4,13,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{12,14,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,13,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,7,10,16,-1,-1,-1,-1,-1,-1,-1,-1},
{12,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,11,13,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,20,26,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{15,18,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,10,19,25,-1,-1,-1,-1,-1,-1,-1,-1},
{2,27,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,3,10,13,31,-1,-1,-1,-1,-1,-1,-1},
{25,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{10,14,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,5,20,33,-1,-1,-1,-1,-1,-1,-1,-1},
{8,37,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{9,12,14,15,-1,-1,-1,-1,-1,-1,-1,-1},
{5,27,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{26,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,10,12,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,11,38,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,26,28,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,5,9,24,-1,-1,-1,-1,-1,-1,-1,-1},
{3,5,17,32,33,-1,-1,-1,-1,-1,-1,-1},
{1,3,7,23,42,-1,-1,-1,-1,-1,-1,-1},
{20,25,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{23,42,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,47,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,29,38,45,52,-1,-1,-1,-1,-1,-1,-1},
{42,48,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,14,24,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{19,42,46,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{28,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,20,30,44,49,52,55,57,-1,-1,-1,-1},
{6,20,22,25,33,51,55,56,57,-1,-1,-1},
{20,24,39,50,-1,-1,-1,-1,-1,-1,-1,-1},
{3,10,19,28,37,38,47,55,-1,-1,-1,-1},
{22,33,61,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,5,9,17,60,61,-1,-1,-1,-1,-1,-1},
{4,11,19,20,24,38,54,-1,-1,-1,-1,-1},
{27,32,43,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,9,19,20,36,40,48,52,-1,-1,-1,-1},
{28,32,33,48,55,-1,-1,-1,-1,-1,-1,-1},
{6,23,25,28,34,43,46,54,65,67,-1,-1},
{20,26,27,28,65,-1,-1,-1,-1,-1,-1,-1},
{3,16,19,38,40,51,57,61,67,-1,-1,-1},
{15,19,29,32,47,61,65,66,-1,-1,-1,-1},
{10,14,34,35,42,44,48,54,-1,-1,-1,-1},
{4,6,24,27,30,63,66,-1,-1,-1,-1,-1},
{11,20,28,31,47,68,-1,-1,-1,-1,-1,-1},
{5,23,31,44,72,-1,-1,-1,-1,-1,-1,-1},
{0,2,4,11,18,23,70,-1,-1,-1,-1,-1},
{15,47,52,66,71,-1,-1,-1,-1,-1,-1,-1},
{3,13,30,38,55,62,-1,-1,-1,-1,-1,-1},
{16,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{20,59,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,12,16,21,70,-1,-1,-1,-1,-1,-1,-1},
{8,14,22,29,33,40,62,71,74,78,-1,-1},
{12,17,25,28,51,54,81,-1,-1,-1,-1,-1},
{27,38,60,68,77,-1,-1,-1,-1,-1,-1,-1},
{13,26,27,30,33,52,58,67,71,72,79,-1},
{21,34,78,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,11,17,19,30,39,45,49,56,65,70,-1},
{18,40,56,69,-1,-1,-1,-1,-1,-1,-1,-1},
{22,33,36,63,74,75,77,-1,-1,-1,-1,-1},
{5,17,37,38,59,72,73,74,78,84,-1,-1},
{4,5,10,12,23,33,49,61,77,85,-1,-1},
{6,8,18,39,55,-1,-1,-1,-1,-1,-1,-1},
{7,9,13,14,19,-1,-1,-1,-1,-1,-1,-1},
{27,43,60,66,89,-1,-1,-1,-1,-1,-1,-1},
{18,32,84,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,31,33,39,51,63,69,72,82,-1,-1,-1},
{2,5,13,19,38,39,62,68,71,75,77,79},
{3,13,24,30,37,47,68,73,79,-1,-1,-1},
{3,4,7,25,33,38,44,51,62,72,84,93}};


// Typedefs
typedef int[0, numberOfChains - 1] chainId_t;

// Ints and Arrays
int numberOfChainsDone = 0;
int tasksDone[numberOfTasks];
bool runnableChains[numberOfChains];
int Machines = numberOfMachines;

// Channels
broadcast chan startMachines;
broadcast chan chainMachineChan[numberOfChains];
broadcast chan activateChains;
broadcast chan ChainDone[numberOfChains];</declaration><template><name x="5" y="5">Composer</name><declaration>// Place local declarations here.
clock time;</declaration><location id="id0" x="-102" y="-255"><name x="-112" y="-289">Init</name><label kind="invariant" x="-246" y="-238">numberOfChainsDone &lt;= numberOfChains
&amp;&amp; cost' == 1</label></location><location id="id1" x="331" y="-255"><name x="321" y="-289">Done</name></location><init ref="id0"/><transition><source ref="id0"/><target ref="id1"/><label kind="guard" x="-17" y="-289">numberOfChainsDone &gt;= numberOfChains</label></transition></template><template><name>Chain</name><parameter>const chainId_t cid</parameter><declaration>clock x;
const int chainSize = globalChainSize[cid];
int index = 0;
int TimeUnit = 2;

bool AllDependenciesDone()
{
    bool dependenciesDone = 1;
    int i;
    for (i = 0; i &lt; maxDependencies; i++)
    {
        int value = dependencies[globalChains[cid][index]][i];
        if (value == -1)
            return dependenciesDone;

        dependenciesDone &amp;= tasksDone[value];
    }
    return dependenciesDone;
}

void DecrementWork(int workDone)
{
    int currentDuration = durations[globalChains[cid][index]];

    if (workDone &gt; currentDuration)
        durations[globalChains[cid][index]] = 0;
    else
        durations[globalChains[cid][index]] -= workDone;
}</declaration><location id="id2" x="-68" y="-238"><name x="-78" y="-272">Idle</name></location><location id="id3" x="-68" y="51"><name x="-93" y="68">Running</name><label kind="invariant" x="-127" y="85">x &lt;= chainDuration[cid]</label></location><location id="id4" x="-399" y="-238"><name x="-409" y="-272">Done</name></location><init ref="id2"/><transition><source ref="id3"/><target ref="id2"/><label kind="select" x="-59" y="-119">chain_id : chainId_t</label><label kind="synchronisation" x="-59" y="-102">ChainDone[chain_id]?</label><label kind="assignment" x="-59" y="-85">DecrementWork(chainDuration[chain_id]),
Machines++</label></transition><transition><source ref="id2"/><target ref="id4"/><label kind="guard" x="-357" y="-280">index &gt;= chainSize</label><label kind="assignment" x="-357" y="-263">numberOfChainsDone++</label></transition><transition><source ref="id3"/><target ref="id2"/><label kind="guard" x="-433" y="-119">x &gt;= chainDuration[cid]</label><label kind="synchronisation" x="-433" y="-102">ChainDone[cid]!</label><label kind="assignment" x="-433" y="-85">Machines++,
tasksDone[globalChains[cid][index]] = 1,
index++</label><nail x="-170" y="-8"/><nail x="-170" y="-170"/></transition><transition><source ref="id2"/><target ref="id3"/><label kind="guard" x="136" y="-238">index &lt; chainSize &amp;&amp;
Machines &gt; 0 &amp;&amp; AllDependenciesDone()</label><label kind="assignment" x="136" y="-204">chainDuration[cid] = durations[globalChains[cid][index]],
Machines--,
x = 0</label><nail x="127" y="-238"/><nail x="127" y="51"/></transition></template><system>// Place template instantiations here.

// List one or more processes to be composed into a system.
system Composer, Chain;
    </system></nta>
