<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/researchgroup/darts/uppaal/flat-1_2.dtd'>
<nta>
<declaration>//Variables
const int numberOfChains = 33;
const int numberOfTasks = 100;
const int numberOfMachines = 11;
const int maxDependencies = 15;
const int longestChain = 9;
const int globalChainSize[numberOfChains] = {9,4,4,2,7,3,4,3,4,6,4,4,3,2,5,2,2,2,3,2,2,3,2,2,3,2,3,1,1,1,2,2,1};
const int globalChains[numberOfChains][longestChain] = {
{0,8,29,30,43,61,64,91,96},
{1,67,88,94,-1,-1,-1,-1,-1},
{2,44,69,92,-1,-1,-1,-1,-1},
{3,95,-1,-1,-1,-1,-1,-1,-1},
{4,23,62,65,77,86,87,-1,-1},
{5,63,98,-1,-1,-1,-1,-1,-1},
{6,10,78,89,-1,-1,-1,-1,-1},
{7,54,82,-1,-1,-1,-1,-1,-1},
{9,34,39,97,-1,-1,-1,-1,-1},
{11,31,36,51,72,80,-1,-1,-1},
{12,81,84,90,-1,-1,-1,-1,-1},
{13,46,75,93,-1,-1,-1,-1,-1},
{14,56,66,-1,-1,-1,-1,-1,-1},
{15,73,-1,-1,-1,-1,-1,-1,-1},
{16,49,53,57,83,-1,-1,-1,-1},
{17,55,-1,-1,-1,-1,-1,-1,-1},
{18,85,-1,-1,-1,-1,-1,-1,-1},
{19,99,-1,-1,-1,-1,-1,-1,-1},
{20,35,79,-1,-1,-1,-1,-1,-1},
{21,41,-1,-1,-1,-1,-1,-1,-1},
{22,48,-1,-1,-1,-1,-1,-1,-1},
{24,32,37,-1,-1,-1,-1,-1,-1},
{25,71,-1,-1,-1,-1,-1,-1,-1},
{26,70,-1,-1,-1,-1,-1,-1,-1},
{27,42,74,-1,-1,-1,-1,-1,-1},
{28,76,-1,-1,-1,-1,-1,-1,-1},
{33,60,68,-1,-1,-1,-1,-1,-1},
{38,-1,-1,-1,-1,-1,-1,-1,-1},
{40,-1,-1,-1,-1,-1,-1,-1,-1},
{45,-1,-1,-1,-1,-1,-1,-1,-1},
{47,52,-1,-1,-1,-1,-1,-1,-1},
{50,59,-1,-1,-1,-1,-1,-1,-1},
{58,-1,-1,-1,-1,-1,-1,-1,-1}};
int chainDuration[numberOfChains] = {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1};
int durations[numberOfTasks] = {8,1,5,5,4,6,4,5,7,5,1,4,6,8,9,9,6,10,4,3,4,2,6,8,6,10,6,8,6,7,2,9,6,5,2,10,1,8,8,7,4,3,10,5,10,5,9,9,7,6,9,8,6,8,10,1,9,5,1,10,6,3,3,5,1,10,5,2,5,2,2,4,1,8,9,3,5,4,6,10,10,6,3,7,1,3,4,3,5,9,5,7,10,2,8,7,10,10,6,5};
const int dependencies[numberOfTasks][maxDependencies] = {
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,5,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{11,12,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{9,15,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{17,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,15,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{13,20,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,12,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,4,18,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{14,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{14,17,20,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,13,15,19,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,8,10,18,24,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,5,7,10,13,17,23,29,-1,-1,-1,-1,-1,-1,-1},
{4,6,11,23,26,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,15,22,24,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{9,10,15,19,22,30,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,11,12,18,20,24,33,-1,-1,-1,-1,-1,-1,-1,-1},
{2,17,22,31,32,34,35,-1,-1,-1,-1,-1,-1,-1,-1},
{0,6,11,23,25,32,35,-1,-1,-1,-1,-1,-1,-1,-1},
{8,9,15,27,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,8,28,33,34,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{13,26,33,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,21,25,27,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,10,18,20,27,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,8,30,35,41,42,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,2,7,15,16,37,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{10,14,15,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,11,13,27,34,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,20,24,30,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,12,15,22,34,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,12,16,19,28,30,37,-1,-1,-1,-1,-1,-1,-1,-1},
{16,39,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,9,11,13,27,36,37,44,-1,-1,-1,-1,-1,-1,-1},
{6,16,47,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{20,25,30,38,48,49,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,7,13,14,16,26,30,40,51,-1,-1,-1,-1,-1,-1},
{1,17,18,28,36,37,51,-1,-1,-1,-1,-1,-1,-1,-1},
{2,14,33,34,36,37,38,39,52,-1,-1,-1,-1,-1,-1},
{1,7,18,24,36,37,38,46,50,53,-1,-1,-1,-1,-1},
{7,13,19,33,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{29,35,50,51,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{21,28,30,33,42,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,2,3,4,10,18,25,28,43,46,49,58,-1,-1,-1},
{2,10,19,23,33,40,43,47,56,58,-1,-1,-1,-1,-1},
{5,19,23,29,46,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{18,20,22,24,25,28,43,61,-1,-1,-1,-1,-1,-1,-1},
{0,1,5,21,59,62,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,9,15,28,36,40,41,50,51,56,-1,-1,-1,-1,-1},
{1,14,16,22,37,43,52,61,-1,-1,-1,-1,-1,-1,-1},
{4,7,13,30,60,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,5,6,26,31,34,39,44,45,47,50,51,52,53,68},
{7,11,26,28,51,52,67,-1,-1,-1,-1,-1,-1,-1,-1},
{22,25,28,40,56,67,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,8,11,15,20,28,51,56,69,-1,-1,-1,-1,-1,-1},
{5,6,15,19,24,33,36,40,46,58,-1,-1,-1,-1,-1},
{19,23,36,42,47,59,72,-1,-1,-1,-1,-1,-1,-1,-1},
{4,11,25,34,36,39,41,46,52,53,57,-1,-1,-1,-1},
{0,13,20,22,28,30,33,-1,-1,-1,-1,-1,-1,-1,-1},
{2,5,14,18,27,32,37,39,42,46,54,65,66,67,68},
{3,10,43,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,3,16,17,19,35,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,3,25,31,38,46,68,70,72,74,76,-1,-1,-1,-1},
{2,7,12,44,60,76,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{13,18,21,22,23,38,51,54,66,71,73,76,-1,-1,-1},
{6,9,25,44,50,56,57,74,-1,-1,-1,-1,-1,-1,-1},
{18,37,45,49,52,53,60,67,75,81,83,-1,-1,-1,-1},
{0,2,13,18,22,24,27,32,51,52,68,-1,-1,-1,-1},
{20,26,50,55,63,65,70,77,-1,-1,-1,-1,-1,-1,-1},
{1,15,37,50,51,56,60,69,70,75,86,-1,-1,-1,-1},
{9,12,13,25,29,34,44,45,62,67,-1,-1,-1,-1,-1},
{24,34,41,47,51,62,78,79,-1,-1,-1,-1,-1,-1,-1},
{18,27,44,46,51,84,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{25,31,41,46,56,64,66,68,71,72,73,88,-1,-1,-1},
{5,10,30,41,44,50,55,57,69,75,77,82,-1,-1,-1},
{1,2,32,55,66,71,75,84,85,-1,-1,-1,-1,-1,-1},
{2,3,12,16,22,23,54,57,79,83,88,91,-1,-1,-1},
{3,9,12,13,14,21,39,43,67,-1,-1,-1,-1,-1,-1},
{2,14,19,24,26,29,34,37,60,62,63,88,90,91,95},
{17,25,27,37,39,44,62,66,69,70,84,-1,-1,-1,-1},
{14,19,31,43,55,57,60,62,63,68,70,80,-1,-1,-1},
{19,34,36,38,42,44,50,53,57,-1,-1,-1,-1,-1,-1}};


// Typedefs
typedef int[0, numberOfChains - 1] chainId_t;

// Ints and Arrays
int numberOfChainsDone = 0;
int tasksDone[numberOfTasks];
bool runnableChains[numberOfChains];
int Machines = numberOfMachines;

// Channels
broadcast chan startMachines;
broadcast chan chainMachineChan[numberOfChains];
broadcast chan activateChains;
broadcast chan ChainDone[numberOfChains];</declaration><template><name x="5" y="5">Composer</name><declaration>// Place local declarations here.
clock time;</declaration><location id="id0" x="-102" y="-255"><name x="-112" y="-289">Init</name><label kind="invariant" x="-246" y="-238">numberOfChainsDone &lt;= numberOfChains
&amp;&amp; cost' == 1</label></location><location id="id1" x="331" y="-255"><name x="321" y="-289">Done</name></location><init ref="id0"/><transition><source ref="id0"/><target ref="id1"/><label kind="guard" x="-17" y="-289">numberOfChainsDone &gt;= numberOfChains</label></transition></template><template><name>Chain</name><parameter>const chainId_t cid</parameter><declaration>clock x;
const int chainSize = globalChainSize[cid];
int index = 0;
int TimeUnit = 2;

bool AllDependenciesDone()
{
    bool dependenciesDone = 1;
    int i;
    for (i = 0; i &lt; maxDependencies; i++)
    {
        int value = dependencies[globalChains[cid][index]][i];
        if (value == -1)
            return dependenciesDone;

        dependenciesDone &amp;= tasksDone[value];
    }
    return dependenciesDone;
}

void DecrementWork(int workDone)
{
    int currentDuration = durations[globalChains[cid][index]];

    if (workDone &gt; currentDuration)
        durations[globalChains[cid][index]] = 0;
    else
        durations[globalChains[cid][index]] -= workDone;
}</declaration><location id="id2" x="-68" y="-238"><name x="-78" y="-272">Idle</name></location><location id="id3" x="-68" y="51"><name x="-93" y="68">Running</name><label kind="invariant" x="-127" y="85">x &lt;= chainDuration[cid]</label></location><location id="id4" x="-399" y="-238"><name x="-409" y="-272">Done</name></location><init ref="id2"/><transition><source ref="id3"/><target ref="id2"/><label kind="select" x="-59" y="-119">chain_id : chainId_t</label><label kind="synchronisation" x="-59" y="-102">ChainDone[chain_id]?</label><label kind="assignment" x="-59" y="-85">DecrementWork(chainDuration[chain_id]),
Machines++</label></transition><transition><source ref="id2"/><target ref="id4"/><label kind="guard" x="-357" y="-280">index &gt;= chainSize</label><label kind="assignment" x="-357" y="-263">numberOfChainsDone++</label></transition><transition><source ref="id3"/><target ref="id2"/><label kind="guard" x="-433" y="-119">x &gt;= chainDuration[cid]</label><label kind="synchronisation" x="-433" y="-102">ChainDone[cid]!</label><label kind="assignment" x="-433" y="-85">Machines++,
tasksDone[globalChains[cid][index]] = 1,
index++</label><nail x="-170" y="-8"/><nail x="-170" y="-170"/></transition><transition><source ref="id2"/><target ref="id3"/><label kind="guard" x="136" y="-238">index &lt; chainSize &amp;&amp;
Machines &gt; 0 &amp;&amp; AllDependenciesDone()</label><label kind="assignment" x="136" y="-204">chainDuration[cid] = durations[globalChains[cid][index]],
Machines--,
x = 0</label><nail x="127" y="-238"/><nail x="127" y="51"/></transition></template><system>// Place template instantiations here.

// List one or more processes to be composed into a system.
system Composer, Chain;
    </system></nta>
