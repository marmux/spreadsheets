<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/researchgroup/darts/uppaal/flat-1_2.dtd'>
<nta>
<declaration>//Variables
const int numberOfChains = 27;
const int numberOfTasks = 100;
const int numberOfMachines = 11;
const int maxDependencies = 22;
const int longestChain = 8;
const int globalChainSize[numberOfChains] = {5,2,3,8,3,4,7,7,4,6,6,6,3,3,2,7,3,2,4,3,3,2,1,2,2,1,1};
const int globalChains[numberOfChains][longestChain] = {
{0,9,91,92,99,-1,-1,-1},
{1,97,-1,-1,-1,-1,-1,-1},
{2,89,93,-1,-1,-1,-1,-1},
{3,21,35,41,49,63,84,95},
{4,87,98,-1,-1,-1,-1,-1},
{5,36,94,96,-1,-1,-1,-1},
{6,47,52,81,82,86,88,-1},
{7,10,40,55,57,69,76,-1},
{8,71,79,85,-1,-1,-1,-1},
{11,58,62,64,74,90,-1,-1},
{12,16,67,75,77,83,-1,-1},
{13,30,45,59,68,72,-1,-1},
{14,29,78,-1,-1,-1,-1,-1},
{15,65,73,-1,-1,-1,-1,-1},
{17,70,-1,-1,-1,-1,-1,-1},
{18,46,48,50,53,54,56,-1},
{19,26,80,-1,-1,-1,-1,-1},
{20,61,-1,-1,-1,-1,-1,-1},
{22,39,51,66,-1,-1,-1,-1},
{23,27,37,-1,-1,-1,-1,-1},
{24,42,44,-1,-1,-1,-1,-1},
{25,43,-1,-1,-1,-1,-1,-1},
{28,-1,-1,-1,-1,-1,-1,-1},
{31,38,-1,-1,-1,-1,-1,-1},
{32,33,-1,-1,-1,-1,-1,-1},
{34,-1,-1,-1,-1,-1,-1,-1},
{60,-1,-1,-1,-1,-1,-1,-1}};
int chainDuration[numberOfChains] = {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1};
int durations[numberOfTasks] = {5,3,4,10,3,15,15,22,13,32,10,7,3,4,2,1,1,17,10,2,7,7,2,46,1,5,5,26,20,5,4,12,6,21,1,9,20,28,9,21,4,16,7,8,1,8,5,9,11,26,1,22,4,3,12,3,1,3,11,15,3,12,6,10,2,11,6,21,2,11,10,15,14,6,13,24,8,6,1,4,34,3,5,13,9,33,33,4,5,26,2,7,12,12,19,1,2,4,3,19};
const int dependencies[numberOfTasks][maxDependencies] = {
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,6,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,4,6,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,3,4,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,10,12,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,3,6,7,12,13,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,8,12,16,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{12,13,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,13,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,7,15,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,3,9,14,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{9,10,12,15,19,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,6,14,21,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,11,17,18,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,4,10,14,18,19,25,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{10,11,19,23,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,7,22,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,7,9,11,14,19,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,9,12,13,19,20,28,29,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,10,16,27,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,10,17,18,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{13,17,32,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,3,4,20,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,2,10,17,18,20,21,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,4,5,7,15,23,28,34,35,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,5,11,14,27,30,32,34,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,6,11,22,24,31,33,34,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,4,8,18,22,35,37,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,3,6,8,10,14,17,28,30,33,36,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,3,5,9,15,16,29,32,35,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,12,19,24,27,33,35,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,23,24,25,34,40,42,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,9,21,22,25,33,38,39,42,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,4,11,12,14,16,19,22,24,30,38,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{12,13,14,18,21,39,40,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,6,8,9,18,21,36,42,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,6,12,15,20,30,32,33,40,44,46,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,22,23,32,41,47,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{12,14,30,48,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,11,12,24,39,40,44,50,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,4,5,12,19,22,29,30,38,40,47,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,11,14,26,30,44,46,49,50,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,6,9,10,16,20,30,53,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,8,9,10,14,24,36,38,40,42,50,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,7,11,22,28,30,31,37,44,53,54,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,5,10,22,23,37,39,55,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,10,11,15,28,29,31,34,36,40,43,52,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{23,29,32,33,45,46,52,53,55,56,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,15,22,39,46,50,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,4,10,16,20,27,33,44,54,59,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,17,28,36,39,40,45,49,52,58,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,2,5,10,29,31,32,33,49,50,51,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{13,15,27,32,39,44,60,62,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,15,16,22,27,29,32,40,42,43,46,47,59,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,13,17,51,65,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,8,15,16,17,21,25,29,39,42,45,55,60,64,-1,-1,-1,-1,-1,-1,-1,-1},
{1,5,6,12,14,15,16,24,33,40,44,51,59,66,-1,-1,-1,-1,-1,-1,-1,-1},
{3,6,9,14,18,26,30,33,36,45,57,62,66,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{16,17,20,32,37,40,42,43,50,54,57,61,63,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,8,10,11,17,18,31,34,35,37,39,57,60,65,67,-1,-1,-1,-1,-1,-1,-1},
{8,9,12,24,27,34,43,49,51,53,54,59,61,65,68,-1,-1,-1,-1,-1,-1,-1},
{9,15,21,29,31,53,56,59,65,66,69,70,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,4,23,35,37,38,42,51,55,58,64,67,68,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,8,11,15,18,22,23,31,32,33,35,36,45,46,47,53,54,59,67,-1,-1,-1},
{5,25,36,38,40,42,44,53,55,57,61,69,73,74,75,-1,-1,-1,-1,-1,-1,-1},
{1,13,14,16,20,25,27,31,36,42,45,48,49,52,54,56,58,60,68,75,-1,-1},
{5,7,18,20,26,29,37,41,48,49,57,65,69,73,75,-1,-1,-1,-1,-1,-1,-1},
{8,17,27,40,42,57,60,71,73,77,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,16,18,22,24,25,26,30,31,49,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,3,4,11,18,26,28,29,36,46,50,52,54,55,58,72,-1,-1,-1,-1,-1,-1},
{14,16,19,25,30,35,36,44,51,58,59,66,69,73,79,81,-1,-1,-1,-1,-1,-1},
{0,1,16,28,31,48,73,77,78,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,4,5,17,25,27,30,32,37,49,53,59,63,64,67,77,82,-1,-1,-1,-1,-1},
{4,6,7,10,12,16,20,43,45,51,52,53,60,64,65,67,79,-1,-1,-1,-1,-1},
{4,8,11,24,35,50,51,64,65,69,75,82,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,4,10,11,16,20,29,34,35,39,46,47,50,60,65,67,80,83,84,86,-1,-1},
{20,38,48,54,55,62,69,74,77,86,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,2,3,4,8,22,25,26,30,39,41,42,44,45,46,50,55,59,68,70,88},
{11,13,21,28,30,41,43,51,57,67,70,74,79,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,3,9,14,22,25,26,41,44,54,58,64,65,67,75,83,-1,-1,-1,-1,-1},
{4,11,19,26,29,40,47,59,61,62,64,73,77,90,91,-1,-1,-1,-1,-1,-1,-1},
{8,16,17,19,48,52,54,55,62,69,74,75,87,88,89,91,-1,-1,-1,-1,-1,-1},
{0,4,8,13,25,33,36,47,49,57,77,85,88,89,-1,-1,-1,-1,-1,-1,-1,-1},
{1,3,4,7,13,14,28,29,33,35,43,58,60,62,83,84,85,87,89,-1,-1,-1},
{3,6,8,15,16,18,19,24,38,42,43,44,45,47,52,57,59,64,81,85,88,94},
{0,1,2,3,9,11,13,20,34,37,40,46,51,55,62,77,82,83,89,-1,-1,-1},
{5,12,15,19,21,24,27,31,32,36,52,54,58,59,79,80,85,87,-1,-1,-1,-1},
{12,16,33,38,39,47,49,57,59,64,71,76,79,81,88,92,-1,-1,-1,-1,-1,-1}};


// Typedefs
typedef int[0, numberOfChains - 1] chainId_t;

// Ints and Arrays
int numberOfChainsDone = 0;
int tasksDone[numberOfTasks];
bool runnableChains[numberOfChains];
int Machines = numberOfMachines;

// Channels
broadcast chan startMachines;
broadcast chan chainMachineChan[numberOfChains];
broadcast chan activateChains;
broadcast chan ChainDone[numberOfChains];</declaration><template><name x="5" y="5">Composer</name><declaration>// Place local declarations here.
clock time;</declaration><location id="id0" x="-102" y="-255"><name x="-112" y="-289">Init</name><label kind="invariant" x="-246" y="-238">numberOfChainsDone &lt;= numberOfChains
&amp;&amp; cost' == 1</label></location><location id="id1" x="331" y="-255"><name x="321" y="-289">Done</name></location><init ref="id0"/><transition><source ref="id0"/><target ref="id1"/><label kind="guard" x="-17" y="-289">numberOfChainsDone &gt;= numberOfChains</label></transition></template><template><name>Chain</name><parameter>const chainId_t cid</parameter><declaration>clock x;
const int chainSize = globalChainSize[cid];
int index = 0;
int TimeUnit = 2;

bool AllDependenciesDone()
{
    bool dependenciesDone = 1;
    int i;
    for (i = 0; i &lt; maxDependencies; i++)
    {
        int value = dependencies[globalChains[cid][index]][i];
        if (value == -1)
            return dependenciesDone;

        dependenciesDone &amp;= tasksDone[value];
    }
    return dependenciesDone;
}

void DecrementWork(int workDone)
{
    int currentDuration = durations[globalChains[cid][index]];

    if (workDone &gt; currentDuration)
        durations[globalChains[cid][index]] = 0;
    else
        durations[globalChains[cid][index]] -= workDone;
}</declaration><location id="id2" x="-68" y="-238"><name x="-78" y="-272">Idle</name></location><location id="id3" x="-68" y="51"><name x="-93" y="68">Running</name><label kind="invariant" x="-127" y="85">x &lt;= chainDuration[cid]</label></location><location id="id4" x="-399" y="-238"><name x="-409" y="-272">Done</name></location><init ref="id2"/><transition><source ref="id3"/><target ref="id2"/><label kind="select" x="-59" y="-119">chain_id : chainId_t</label><label kind="synchronisation" x="-59" y="-102">ChainDone[chain_id]?</label><label kind="assignment" x="-59" y="-85">DecrementWork(chainDuration[chain_id]),
Machines++</label></transition><transition><source ref="id2"/><target ref="id4"/><label kind="guard" x="-357" y="-280">index &gt;= chainSize</label><label kind="assignment" x="-357" y="-263">numberOfChainsDone++</label></transition><transition><source ref="id3"/><target ref="id2"/><label kind="guard" x="-433" y="-119">x &gt;= chainDuration[cid]</label><label kind="synchronisation" x="-433" y="-102">ChainDone[cid]!</label><label kind="assignment" x="-433" y="-85">Machines++,
tasksDone[globalChains[cid][index]] = 1,
index++</label><nail x="-170" y="-8"/><nail x="-170" y="-170"/></transition><transition><source ref="id2"/><target ref="id3"/><label kind="guard" x="136" y="-238">index &lt; chainSize &amp;&amp;
Machines &gt; 0 &amp;&amp; AllDependenciesDone()</label><label kind="assignment" x="136" y="-204">chainDuration[cid] = durations[globalChains[cid][index]],
Machines--,
x = 0</label><nail x="127" y="-238"/><nail x="127" y="51"/></transition></template><system>// Place template instantiations here.

// List one or more processes to be composed into a system.
system Composer, Chain;
    </system></nta>
