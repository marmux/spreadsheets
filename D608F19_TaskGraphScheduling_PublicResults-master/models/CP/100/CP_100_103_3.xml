<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/researchgroup/darts/uppaal/flat-1_2.dtd'>
<nta>
<declaration>//Variables
const int numberOfChains = 33;
const int numberOfTasks = 100;
const int numberOfMachines = 3;
const int maxDependencies = 19;
const int longestChain = 7;
const int globalChainSize[numberOfChains] = {7,6,4,2,4,4,5,2,5,5,3,3,3,4,2,3,5,2,2,2,3,2,2,2,3,3,3,2,1,1,2,2,1};
const int globalChains[numberOfChains][longestChain] = {
{0,14,47,54,72,81,92},
{1,27,56,62,79,97,-1},
{2,55,77,87,-1,-1,-1},
{3,94,-1,-1,-1,-1,-1},
{4,57,66,99,-1,-1,-1},
{5,38,53,90,-1,-1,-1},
{6,25,71,78,98,-1,-1},
{7,93,-1,-1,-1,-1,-1},
{8,48,58,83,89,-1,-1},
{9,35,73,80,95,-1,-1},
{10,59,67,-1,-1,-1,-1},
{11,85,86,-1,-1,-1,-1},
{12,41,91,-1,-1,-1,-1},
{13,34,75,82,-1,-1,-1},
{15,61,-1,-1,-1,-1,-1},
{16,70,96,-1,-1,-1,-1},
{17,26,30,50,65,-1,-1},
{18,84,-1,-1,-1,-1,-1},
{19,76,-1,-1,-1,-1,-1},
{20,40,-1,-1,-1,-1,-1},
{21,36,63,-1,-1,-1,-1},
{22,88,-1,-1,-1,-1,-1},
{23,64,-1,-1,-1,-1,-1},
{24,43,-1,-1,-1,-1,-1},
{28,42,69,-1,-1,-1,-1},
{29,33,68,-1,-1,-1,-1},
{31,44,52,-1,-1,-1,-1},
{32,45,-1,-1,-1,-1,-1},
{37,-1,-1,-1,-1,-1,-1},
{39,-1,-1,-1,-1,-1,-1},
{46,60,-1,-1,-1,-1,-1},
{49,74,-1,-1,-1,-1,-1},
{51,-1,-1,-1,-1,-1,-1}};
int chainDuration[numberOfChains] = {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1};
int durations[numberOfTasks] = {2,3,1,7,9,4,3,6,9,3,10,4,6,1,3,3,1,1,4,1,8,11,5,11,1,6,3,5,8,7,3,2,5,5,4,8,1,10,8,2,6,10,3,1,4,2,4,2,1,12,1,5,2,9,3,12,14,3,2,9,3,4,4,7,10,1,11,4,9,2,7,1,2,2,9,1,1,2,8,12,2,2,7,33,1,19,12,15,9,1,5,4,5,5,9,4,18,4,10,1};
const int dependencies[numberOfTasks][maxDependencies] = {
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{11,14,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,16,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,6,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{10,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,8,12,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,4,5,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,6,17,18,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,2,5,14,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,4,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,10,14,26,28,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{15,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,5,16,18,22,29,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,3,10,13,18,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,7,9,17,25,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,10,14,21,25,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,5,7,13,33,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,3,5,10,13,14,16,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,5,7,12,20,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,8,10,18,20,27,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,9,11,12,14,18,19,28,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,28,29,32,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,13,24,33,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,12,20,26,29,31,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{10,21,22,32,34,36,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{9,11,16,23,33,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,6,10,14,16,20,27,41,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,7,8,17,20,27,28,32,34,38,39,40,-1,-1,-1,-1,-1,-1,-1},
{14,15,24,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,16,20,21,27,30,31,34,40,46,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{13,16,21,46,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,15,25,29,34,44,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,2,3,9,12,19,22,32,37,38,43,45,-1,-1,-1,-1,-1,-1,-1},
{1,3,5,18,21,22,26,30,32,33,37,44,47,-1,-1,-1,-1,-1,-1},
{0,2,5,9,10,14,22,26,40,46,52,-1,-1,-1,-1,-1,-1,-1,-1},
{1,5,14,17,24,27,30,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,4,10,14,15,19,22,35,48,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,14,24,29,30,31,41,48,50,53,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,3,6,10,15,27,49,51,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,36,42,44,46,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{4,15,20,21,25,28,29,31,41,44,53,-1,-1,-1,-1,-1,-1,-1,-1},
{8,21,28,30,35,38,39,52,54,56,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,10,11,23,24,36,37,39,42,58,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{9,10,15,18,23,52,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{27,39,50,54,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,9,16,18,29,31,39,41,42,48,51,56,57,61,-1,-1,-1,-1,-1},
{2,6,10,15,23,25,30,32,33,36,46,49,59,-1,-1,-1,-1,-1,-1},
{4,16,22,33,37,47,48,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{5,15,23,31,42,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,9,16,18,22,24,25,36,44,55,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,16,20,25,27,45,54,60,61,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{10,12,18,22,23,28,36,37,39,47,54,-1,-1,-1,-1,-1,-1,-1,-1},
{15,25,29,35,38,40,42,51,54,55,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{30,49,53,58,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,10,15,19,25,26,31,34,37,40,46,49,56,-1,-1,-1,-1,-1,-1},
{9,13,19,21,22,25,36,39,57,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,5,15,22,25,27,29,40,48,55,57,-1,-1,-1,-1,-1,-1,-1,-1},
{7,11,12,18,23,35,38,42,45,54,65,71,75,76,-1,-1,-1,-1,-1},
{5,12,25,33,43,47,48,52,54,60,62,68,75,77,-1,-1,-1,-1,-1},
{6,9,14,17,20,23,24,35,60,63,73,77,-1,-1,-1,-1,-1,-1,-1},
{3,5,6,12,15,16,17,18,27,33,59,68,72,-1,-1,-1,-1,-1,-1},
{1,3,17,21,23,35,38,43,46,59,61,70,75,-1,-1,-1,-1,-1,-1},
{0,2,4,7,8,9,11,15,18,39,42,46,51,52,58,64,67,69,-1},
{0,4,8,18,31,34,36,41,45,68,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,11,38,40,54,55,65,73,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,16,20,29,31,33,39,44,46,54,58,70,80,82,85,-1,-1,-1,-1},
{0,12,14,18,23,26,27,37,39,41,66,77,82,-1,-1,-1,-1,-1,-1},
{6,12,15,22,28,31,42,48,70,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{24,26,32,34,41,47,51,52,77,83,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,4,6,17,22,23,25,26,29,30,32,38,40,49,52,53,56,59,83},
{5,7,35,41,63,64,70,80,81,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{21,34,46,53,55,72,73,78,81,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,7,14,20,31,36,40,52,53,56,76,-1,-1,-1,-1,-1,-1,-1,-1},
{3,4,14,22,25,46,62,64,66,77,84,-1,-1,-1,-1,-1,-1,-1,-1},
{1,3,5,7,12,19,25,36,42,58,60,64,69,76,80,-1,-1,-1,-1},
{7,11,21,30,33,55,64,70,73,80,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{8,11,12,25,43,46,53,56,69,70,79,-1,-1,-1,-1,-1,-1,-1,-1},
{7,26,37,51,53,55,58,59,65,73,78,80,85,-1,-1,-1,-1,-1,-1},
{4,5,9,12,16,22,32,33,40,41,48,51,63,65,66,69,81,84,-1}};


// Typedefs
typedef int[0, numberOfChains - 1] chainId_t;

// Ints and Arrays
int numberOfChainsDone = 0;
int tasksDone[numberOfTasks];
bool runnableChains[numberOfChains];
int Machines = numberOfMachines;

// Channels
broadcast chan startMachines;
broadcast chan chainMachineChan[numberOfChains];
broadcast chan activateChains;
broadcast chan ChainDone[numberOfChains];</declaration><template><name x="5" y="5">Composer</name><declaration>// Place local declarations here.
clock time;</declaration><location id="id0" x="-102" y="-255"><name x="-112" y="-289">Init</name><label kind="invariant" x="-246" y="-238">numberOfChainsDone &lt;= numberOfChains
&amp;&amp; cost' == 1</label></location><location id="id1" x="331" y="-255"><name x="321" y="-289">Done</name></location><init ref="id0"/><transition><source ref="id0"/><target ref="id1"/><label kind="guard" x="-17" y="-289">numberOfChainsDone &gt;= numberOfChains</label></transition></template><template><name>Chain</name><parameter>const chainId_t cid</parameter><declaration>clock x;
const int chainSize = globalChainSize[cid];
int index = 0;
int TimeUnit = 2;

bool AllDependenciesDone()
{
    bool dependenciesDone = 1;
    int i;
    for (i = 0; i &lt; maxDependencies; i++)
    {
        int value = dependencies[globalChains[cid][index]][i];
        if (value == -1)
            return dependenciesDone;

        dependenciesDone &amp;= tasksDone[value];
    }
    return dependenciesDone;
}

void DecrementWork(int workDone)
{
    int currentDuration = durations[globalChains[cid][index]];

    if (workDone &gt; currentDuration)
        durations[globalChains[cid][index]] = 0;
    else
        durations[globalChains[cid][index]] -= workDone;
}</declaration><location id="id2" x="-68" y="-238"><name x="-78" y="-272">Idle</name></location><location id="id3" x="-68" y="51"><name x="-93" y="68">Running</name><label kind="invariant" x="-127" y="85">x &lt;= chainDuration[cid]</label></location><location id="id4" x="-399" y="-238"><name x="-409" y="-272">Done</name></location><init ref="id2"/><transition><source ref="id3"/><target ref="id2"/><label kind="select" x="-59" y="-119">chain_id : chainId_t</label><label kind="synchronisation" x="-59" y="-102">ChainDone[chain_id]?</label><label kind="assignment" x="-59" y="-85">DecrementWork(chainDuration[chain_id]),
Machines++</label></transition><transition><source ref="id2"/><target ref="id4"/><label kind="guard" x="-357" y="-280">index &gt;= chainSize</label><label kind="assignment" x="-357" y="-263">numberOfChainsDone++</label></transition><transition><source ref="id3"/><target ref="id2"/><label kind="guard" x="-433" y="-119">x &gt;= chainDuration[cid]</label><label kind="synchronisation" x="-433" y="-102">ChainDone[cid]!</label><label kind="assignment" x="-433" y="-85">Machines++,
tasksDone[globalChains[cid][index]] = 1,
index++</label><nail x="-170" y="-8"/><nail x="-170" y="-170"/></transition><transition><source ref="id2"/><target ref="id3"/><label kind="guard" x="136" y="-238">index &lt; chainSize &amp;&amp;
Machines &gt; 0 &amp;&amp; AllDependenciesDone()</label><label kind="assignment" x="136" y="-204">chainDuration[cid] = durations[globalChains[cid][index]],
Machines--,
x = 0</label><nail x="127" y="-238"/><nail x="127" y="51"/></transition></template><system>// Place template instantiations here.

// List one or more processes to be composed into a system.
system Composer, Chain;
    </system></nta>
