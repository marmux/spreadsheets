<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/researchgroup/darts/uppaal/flat-1_2.dtd'>
<nta>
<declaration>//Variables
const int numberOfChains = 13;
const int numberOfTasks = 50;
const int numberOfMachines = 10;
const int maxDependencies = 21;
const int longestChain = 10;
const int globalChainSize[numberOfChains] = {10,3,3,3,5,5,6,4,2,3,2,3,1};
const int globalChains[numberOfChains][longestChain] = {
{0,5,14,18,26,27,37,43,47,48},
{1,34,45,-1,-1,-1,-1,-1,-1,-1},
{2,46,49,-1,-1,-1,-1,-1,-1,-1},
{3,36,42,-1,-1,-1,-1,-1,-1,-1},
{4,28,32,38,44,-1,-1,-1,-1,-1},
{6,23,33,39,41,-1,-1,-1,-1,-1},
{7,8,10,24,25,40,-1,-1,-1,-1},
{9,13,21,30,-1,-1,-1,-1,-1,-1},
{11,29,-1,-1,-1,-1,-1,-1,-1,-1},
{12,17,35,-1,-1,-1,-1,-1,-1,-1},
{15,31,-1,-1,-1,-1,-1,-1,-1,-1},
{16,20,22,-1,-1,-1,-1,-1,-1,-1},
{19,-1,-1,-1,-1,-1,-1,-1,-1,-1}};
int chainDuration[numberOfChains] = {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1};
int durations[numberOfTasks] = {10,1,1,2,1,10,2,3,6,5,6,4,2,5,5,7,7,3,3,5,6,2,9,5,4,10,3,3,1,7,10,10,1,3,8,4,10,5,6,9,1,1,10,1,8,3,6,2,3,1};
const int dependencies[numberOfTasks][maxDependencies] = {
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,3,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,3,4,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,3,4,5,6,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,5,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,2,6,7,8,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,4,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{7,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,2,4,8,9,10,12,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,3,4,5,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,5,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,5,6,7,12,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,4,6,7,9,12,13,15,16,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,5,12,14,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{6,7,9,12,14,15,17,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,2,5,11,14,15,16,17,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,5,7,8,9,10,12,13,17,20,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,11,15,16,18,20,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,2,3,6,7,8,10,15,16,17,18,19,22,-1,-1,-1,-1,-1,-1,-1},
{1,2,4,7,10,13,16,17,19,23,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{2,4,7,8,10,16,17,20,21,24,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,2,6,7,8,9,11,13,14,17,18,21,23,24,25,-1,-1,-1,-1,-1},
{0,4,13,14,16,18,21,24,26,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,3,4,5,8,10,13,26,27,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,3,11,14,15,17,21,22,23,25,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,6,12,13,16,17,18,19,21,25,29,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{3,4,5,7,9,15,21,27,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,4,7,14,16,18,23,24,27,28,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,2,3,8,10,17,21,23,24,25,28,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,1,2,4,7,9,10,12,14,17,18,21,22,24,26,29,31,32,-1,-1,-1},
{3,9,11,12,15,17,20,22,24,27,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,2,3,8,9,10,11,12,14,17,18,24,25,26,33,35,-1,-1,-1,-1,-1},
{0,1,2,3,10,14,16,17,18,20,27,28,35,-1,-1,-1,-1,-1,-1,-1,-1},
{0,8,9,12,15,16,21,22,25,27,28,31,32,35,37,-1,-1,-1,-1,-1,-1},
{2,3,6,10,11,12,13,17,18,19,20,22,23,26,29,33,-1,-1,-1,-1,-1},
{2,7,8,9,12,17,19,20,23,25,30,31,34,35,39,-1,-1,-1,-1,-1,-1},
{2,6,8,9,10,13,14,18,19,20,21,26,30,34,39,-1,-1,-1,-1,-1,-1},
{1,3,6,7,10,14,17,25,28,33,35,36,37,41,-1,-1,-1,-1,-1,-1,-1},
{1,3,5,8,11,12,14,18,22,23,27,33,36,37,42,-1,-1,-1,-1,-1,-1},
{0,1,5,6,13,15,25,28,30,31,38,39,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,3,5,18,19,23,24,27,28,31,32,34,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{0,2,3,5,15,18,19,22,23,25,27,28,29,30,31,34,35,36,40,42,44},
{0,1,8,13,15,16,18,22,23,24,26,29,38,41,43,44,46,-1,-1,-1,-1},
{0,4,9,10,12,24,27,30,37,39,41,42,47,-1,-1,-1,-1,-1,-1,-1,-1},
{2,4,10,13,15,19,20,26,29,32,34,35,36,37,38,39,40,46,-1,-1,-1}};


// Typedefs
typedef int[0, numberOfChains - 1] chainId_t;

// Ints and Arrays
int numberOfChainsDone = 0;
int tasksDone[numberOfTasks];
bool runnableChains[numberOfChains];
int Machines = numberOfMachines;

// Channels
broadcast chan startMachines;
broadcast chan chainMachineChan[numberOfChains];
broadcast chan activateChains;
broadcast chan ChainDone[numberOfChains];</declaration><template><name x="5" y="5">Composer</name><declaration>// Place local declarations here.
clock time;</declaration><location id="id0" x="-102" y="-255"><name x="-112" y="-289">Init</name><label kind="invariant" x="-246" y="-238">numberOfChainsDone &lt;= numberOfChains
&amp;&amp; cost' == 1</label></location><location id="id1" x="331" y="-255"><name x="321" y="-289">Done</name></location><init ref="id0"/><transition><source ref="id0"/><target ref="id1"/><label kind="guard" x="-17" y="-289">numberOfChainsDone &gt;= numberOfChains</label></transition></template><template><name>Chain</name><parameter>const chainId_t cid</parameter><declaration>clock x;
const int chainSize = globalChainSize[cid];
int index = 0;
int TimeUnit = 2;

bool AllDependenciesDone()
{
    bool dependenciesDone = 1;
    int i;
    for (i = 0; i &lt; maxDependencies; i++)
    {
        int value = dependencies[globalChains[cid][index]][i];
        if (value == -1)
            return dependenciesDone;

        dependenciesDone &amp;= tasksDone[value];
    }
    return dependenciesDone;
}

void DecrementWork(int workDone)
{
    int currentDuration = durations[globalChains[cid][index]];

    if (workDone &gt; currentDuration)
        durations[globalChains[cid][index]] = 0;
    else
        durations[globalChains[cid][index]] -= workDone;
}</declaration><location id="id2" x="-68" y="-238"><name x="-78" y="-272">Idle</name></location><location id="id3" x="-68" y="51"><name x="-93" y="68">Running</name><label kind="invariant" x="-127" y="85">x &lt;= chainDuration[cid]</label></location><location id="id4" x="-399" y="-238"><name x="-409" y="-272">Done</name></location><init ref="id2"/><transition><source ref="id3"/><target ref="id2"/><label kind="select" x="-59" y="-119">chain_id : chainId_t</label><label kind="synchronisation" x="-59" y="-102">ChainDone[chain_id]?</label><label kind="assignment" x="-59" y="-85">DecrementWork(chainDuration[chain_id]),
Machines++</label></transition><transition><source ref="id2"/><target ref="id4"/><label kind="guard" x="-357" y="-280">index &gt;= chainSize</label><label kind="assignment" x="-357" y="-263">numberOfChainsDone++</label></transition><transition><source ref="id3"/><target ref="id2"/><label kind="guard" x="-433" y="-119">x &gt;= chainDuration[cid]</label><label kind="synchronisation" x="-433" y="-102">ChainDone[cid]!</label><label kind="assignment" x="-433" y="-85">Machines++,
tasksDone[globalChains[cid][index]] = 1,
index++</label><nail x="-170" y="-8"/><nail x="-170" y="-170"/></transition><transition><source ref="id2"/><target ref="id3"/><label kind="guard" x="136" y="-238">index &lt; chainSize &amp;&amp;
Machines &gt; 0 &amp;&amp; AllDependenciesDone()</label><label kind="assignment" x="136" y="-204">chainDuration[cid] = durations[globalChains[cid][index]],
Machines--,
x = 0</label><nail x="127" y="-238"/><nail x="127" y="51"/></transition></template><system>// Place template instantiations here.

// List one or more processes to be composed into a system.
system Composer, Chain;
    </system></nta>
